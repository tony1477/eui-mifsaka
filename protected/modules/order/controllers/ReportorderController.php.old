<?php
class ReportorderController extends Controller
{
	public $menuname = 'reportorder';
	public function actionIndex()
	{
		$this->renderPartial('index',array());
	}
	
	public function actionDownPDF()
	{
	  parent::actionDownload();
		if (isset($_GET['lro']) && isset($_GET['company']) && isset($_GET['sloc']) && isset($_GET['materialgroup']) && isset($_GET['customer']) && isset($_GET['sales']) && isset($_GET['spvid']) && isset($_GET['product']) && isset($_GET['salesarea']) && isset($_GET['isdisplay']) && isset($_GET['startdate']) && isset($_GET['enddate']) && isset($_GET['per']))
		{
			if ($_GET['lro'] == 1)
			{
				$this->RincianPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 2)
			{
				$this->RekapPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 3)
			{
				$this->RekapPenjualanPerCustomer($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 4)
			{
				$this->RekapPenjualanPerSales($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 5)
			{
				$this->RekapPenjualanPerBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 6)
			{
				$this->RekapPenjualanPerArea($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 7)
			{
				$this->RekapPenjualanPerCustomerPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 8)
			{
				$this->RekapPenjualanPerCustomerPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 9)
			{
				$this->RekapPenjualanPerSalesPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 10)
			{
				$this->RekapPenjualanPerSalesPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 11)
			{
				$this->RekapPenjualanPerAreaPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 12)
			{
				$this->RekapPenjualanPerAreaPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 13)
			{
				$this->RincianReturPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 14)
			{
				$this->RekapReturPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 15)
			{
				$this->RekapReturPenjualanPerCustomer($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 16)
			{
				$this->RekapReturPenjualanPerSales($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 17)
			{
				$this->RekapReturPenjualanPerBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 18)
			{
				$this->RekapReturPenjualanPerArea($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 19)
			{
				$this->RekapReturPenjualanPerCustomerPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 20)
			{
				$this->RekapReturPenjualanPerCustomerPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 21)
			{
				$this->RekapReturPenjualanPerSalesPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 22)
			{
				$this->RekapReturPenjualanPerSalesPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 23)
			{
				$this->RekapReturPenjualanPerAreaPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 24)
			{
				$this->RekapReturPenjualanPerAreaPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 25)
			{
				$this->RincianPenjualanReturPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 26)
			{
				$this->RekapPenjualanReturPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 27)
			{
				$this->RekapPenjualanReturPenjualanPerCustomer($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 28)
			{
				$this->RekapPenjualanReturPenjualanPerSales($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 29)
			{
				$this->RekapPenjualanReturPenjualanPerBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 30)
			{
				$this->RekapPenjualanReturPenjualanPerArea($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 31)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 32)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 33)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 34)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 35)
			{
				$this->RekapPenjualanReturPenjualanPerAreaPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 36)
			{
				$this->RekapPenjualanReturPenjualanPerAreaPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 37)
			{
				$this->RincianSalesOrderPerDokumen($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
						else
			if ($_GET['lro'] == 38)
			{
				$this->RincianSalesOrderOutstanding($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
						else
			if ($_GET['lro'] == 39)
			{
				$this->RekapSuratJalanBelumDibuatkanFaktur($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 40)
			{
				$this->RekapPenjualanPerCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 41)
			{
				$this->RekapReturPenjualanPerCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 42)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 43)
			{
				$this->RekapPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 44)
			{
				$this->RekapReturPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 45)
			{
				$this->RekapPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 46)
			{
				$this->RekapTotalPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 47)
			{
				$this->RekapTotalReturPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 48)
			{
				$this->RekapTotalPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 49)
			{
				$this->RekapPenjualanPerBarangPerBulanQty($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 50)
			{
				$this->RekapPenjualanPerBarangPerBulanNilai($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 51)
			{
				$this->RekapPenjualanPerBarangPerBulanQtydanNilai($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 52)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalNilai($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 53)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianNilai($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 54)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalQty($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 55)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianQty($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 56)
			{
				$this->RekapSalesOrderOutstandingPerBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 57)
			{
				$this->RekapSOPerDokumentBelumStatusMax($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 58)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBulanPerTahunTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 59)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBarangBulanPerTahunTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
            }
			else
			if($_GET['lro'] == 60)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerCustomerBulanPerTahunTotal($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
            }
			else
			if ($_GET['lro'] == 61)
			{
				$this->RekapPenjualanReturAreaCustomerBarangPerBulanPerTahunRincianNilai($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 62)
			{
				$this->RekapPenjualanReturAreaCustomerBarangPerBulanPerTahunRincianQty($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 63)
			{
				$this->LaporanLatLng($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 64)
			{
				$this->LaporanFoto($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 65)
			{
				$this->LaporanCustomerBelumAdaKTP($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 66)
			{
				$this->LaporanCustomerBelumAdaNPWP($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 67)
			{
				$this->LaporanCustomerSudahLengkapLokasi($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 68)
			{
				$this->LaporanSudahFoto($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 69)
			{
				$this->LaporanCustomerSudahAdaKTP($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			} 
			else
			if($_GET['lro'] == 70)
			{
				$this->LaporanCustomerSudahAdaNPWP($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 71)
			{
				$this->RekapRealisasiPenjualanPerSalesPerGroupMaterial($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 72)
			{
				$this->RincianRealisasiPenjualanPerSalesPerGroupMaterial($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 73)
			{
				$this->RekapPenjualanVSProduksiVSSaldoAkhir($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 74)
			{
				$this->RekapTTNTPerDokumenStatusBelumMax($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 75)
			{
				$this->RekapTTFPerDokumenStatusBelumMax($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 76)
			{
				$this->RekapSkalaKomisiPenjualanPerDokumenStatusBelumMax($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 77)
			{
				$this->RekapTargetPenjualanPerDokumenStatusBelumMax($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 78)
			{
				$this->RekapPerubahanPlafonPerDokumenStatusBelumMax($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 79)
			{
				$this->RekapRealisasiPenjualanPerSPVSalesPerGroupMaterial($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 80)
			{
				$this->MonitoringReport($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 81)
			{
				$this->LaporanCustomerBelumAdaKategori($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 82)
			{
				$this->LaporanCustomerSudahAdaKategori($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 83)
			{
				$this->LaporanCustomerBelumAdaGrade($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 84)
			{
				$this->LaporanCustomerSudahAdaGrade($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 85)
			{
				$this->LaporanPenjualanReturPenjulanPerCabangPerSalesPerMaterialgroup($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 86)
			{
				$this->RekapRealisasiPenjualanPerSPVSalesPerGroupMaterial1($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 87)
			{
				$this->MonitoringReport1($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 88)
			{
				$this->LaporanRekapSalesTargetPerBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 89)
			{
				$this->RincianDataCustomer($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 90)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerJenisMaterialPerBulanPerTahunTotalNilai($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 91)
			{
				$this->RekapSalesOrderOutstandingPerTanggalKirimPerBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 999)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerJenisMaterialPerBulanPerTahunTotalNilaiCabang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			{
				echo getCatalog('reportdoesnotexist');
			}
		}
	}
	//1
	public function RincianPenjualanPerDokumen($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$total1=0;$totaldisc1=0;$totalnetto1=0;$disc= 0;
       
		$sql = "select a.invoiceid, if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno, b.gino, a.invoicedate, d.fullname as customer,h.fullname as sales, e.paydays,     c.shipto, a.headernote
				from invoice a
				join giheader b on b.giheaderid = a.giheaderid
				join soheader c on c.soheaderid = b.soheaderid
				join addressbook d on d.addressbookid = c.addressbookid
				join paymentmethod e on e.paymentmethodid = c.paymentmethodid
				join gidetail f on f.giheaderid = b.giheaderid
				join sloc g on g.slocid = f.slocid
				join employee h on h.employeeid = c.employeeid
				join product i on i.productid = f.productid
				join salesarea j on j.salesareaid = d.salesareaid
				where a.recordstatus = 3 and c.companyid = ".$companyid." and g.sloccode like '%".$sloc."%'
				and d.fullname like '%".$customer."%'  and h.fullname like '%".$employee."%'   and i.productname like '%".$product."%'
				and j.areaname like '%".$salesarea."%' and b.gino is not null
				and invoiceno not like '%-%-%' and a.invoicedate between 
					'".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
		";
		if(isset($spv) && ($spv != ''))
		{
			$where .= " and (c.spvid = '".$spv."' or c.employeeid ='".$spv."') ";
		}
		if(isset($isdisplay) && ($isdisplay != ''))
		{
			$where .= " and c.isdisplay = ".$isdisplay." ";
		}
		$where .= " group by invoiceno order by invoicedate";
		$dataReader=Yii::app()->db->createCommand($sql.$where)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Penjualan Per Dokumen';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
					
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'No Bukti');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['invoiceno']);
			$this->pdf->text(10,$this->pdf->gety()+20,'No SJ');$this->pdf->text(30,$this->pdf->gety()+20,': '.$row['gino']);
			$this->pdf->text(10,$this->pdf->gety()+15,'Sales');$this->pdf->text(30,$this->pdf->gety()+15,': '.$row['sales']);
			$this->pdf->text(10,$this->pdf->gety()+25,'T.O.P');$this->pdf->text(30,$this->pdf->gety()+25,': '.$row['paydays'].' HARI');
			$this->pdf->text(100,$this->pdf->gety()+10,''.date(Yii::app()->params['dateviewfromdb'], strtotime($row['invoicedate'])));
			$this->pdf->text(100,$this->pdf->gety()+15,'Kepada YTH');
			$this->pdf->text(100,$this->pdf->gety()+20,''.$row['customer']);
			$this->pdf->text(100,$this->pdf->gety()+25,''.$row['shipto']);
			$sql1 = "select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,i.productname,k.uomcode,ss.qty,
						(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
						(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nominal,
						(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						 from gidetail zzb 
						 join sodetail zza on zza.sodetailid = zzb.sodetailid
						 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
						from invoice a 
						join giheader b on b.giheaderid = a.giheaderid
						join soheader c on c.soheaderid = b.soheaderid
						join addressbook d on d.addressbookid = c.addressbookid
						join employee e on e.employeeid = c.employeeid
						join salesarea f on f.salesareaid = d.salesareaid
						join sodetail g on g.soheaderid = b.soheaderid
						join gidetail ss on ss.giheaderid = b.giheaderid
						join sloc h on h.slocid = ss.slocid
						join product i on i.productid = ss.productid
						join productplant j on j.productid = i.productid
						join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
						where a.recordstatus = 3 and c.companyid = ".$companyid." 
						and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' 
							and e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' 
							and i.productname like '%".$product."%' and a.invoiceid = ".$row['invoiceid']." 
							and invoiceno not like '%-%-%' and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							order by ss.sodetailid";
		
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$total = 0;$i=0;$totalqty=0;
			$this->pdf->sety($this->pdf->gety()+27);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,85,20,15,30,30));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Unit','Price','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','L','R','R');
			$this->pdf->setFont('Arial','',8);
			$total = 0;
			$totalqty = 0;
			$diskon =0;
			$netto = 0;
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['productname'],
					Yii::app()->format->formatNumber($row1['qty']),$row1['uomcode'],
					Yii::app()->format->formatCurrency($row1['price']/$per),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
				));
				$totalqty += $row1['qty'];
				$total += $row1['nominal']/$per;
				$netto += $row1['nett']/$per;
				$diskon = $total - $netto ;
				$bilangan = explode(".",$netto);
			}
			$this->pdf->row(array(
					'','Total',
					Yii::app()->format->formatNumber($totalqty),'',
					'Nominal',
					Yii::app()->format->formatCurrency($total),
				));
			$this->pdf->row(array(
					'','',
					'',
					'',
					'Diskon',
					Yii::app()->format->formatCurrency($diskon),
				));
			$this->pdf->row(array(
					'',
					'Terbilang : '.eja($bilangan[0]),
					'',
					'',
					'Netto',
					Yii::app()->format->formatCurrency($netto),
				));
				$this->pdf->row(array(
					'',
					'Note : '.$row['headernote'],
					'',
					'',
					'',
					'',
				));
				$total1 += $total;
				$totaldisc1 += $diskon;
				$totalnetto1 += $netto;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('C','C','C','R');
		$this->pdf->setwidths(array(40,40,20,40));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
				'GRAND TOTAL  '.Yii::app()->format->formatCurrency($total1),
					'TOTAL DISCOUNT  '.Yii::app()->format->formatCurrency($totaldisc1),'',
					'TOTAL NETTO  '.Yii::app()->format->formatCurrency($totalnetto1),
					
		));
		$this->pdf->Output();
	}
	//2
	public function RekapPenjualanPerDokumen($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		if(isset($spv) && $spv!='')
		{
			$spvid = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay = "";
		}
		$sql = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as           netto from
                (select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,c.spvid,a.headernote,
                (select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
                (ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
                (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
                from gidetail zzb 
                join sodetail zza on zza.sodetailid = zzb.sodetailid
                where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
                from invoice a 
                join giheader b on b.giheaderid = a.giheaderid
                join soheader c on c.soheaderid = b.soheaderid
                join addressbook d on d.addressbookid = c.addressbookid
                join employee e on e.employeeid = c.employeeid
                join salesarea f on f.salesareaid = d.salesareaid
                join sodetail g on g.soheaderid = b.soheaderid
                join gidetail ss on ss.giheaderid = b.giheaderid
                join sloc h on h.slocid = ss.slocid
                join product i on i.productid = ss.productid
                join productplant j on j.productid = i.productid
                join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid                                
                where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
                c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' ".$spvid." ".$isdisplay." and d.fullname like '%".$customer."%' and e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoicedate between 
                '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
                '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'  ) z group by invoiceno order by invoiceno "; 
		    
      
            
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Dokumen';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
            
			if(isset($spv) && $spv!='')
			{                
				$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
				$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
				$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
				$this->pdf->sety($this->pdf->gety()+5);
			}
			
			$this->pdf->setFont('Arial','B',8);
            $this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,22,20,40,30,25,25,25));
			$this->pdf->colheader = array('No','No Bukti','Tanggal','Customer','Nominal','Disc','Netto','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','L','L','R','R','R','L');		
			$totalnominal1=0;$i=0;$totaldisc1=0;$totaljumlah1=0;
			foreach($dataReader as $row)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',7);
				$this->pdf->row(array(
					$i,$row['invoiceno'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row['invoicedate'])),
					$row['fullname'],
					Yii::app()->format->formatCurrency($row['nominal']/$per),
					Yii::app()->format->formatCurrency($row['disc']/$per),
					Yii::app()->format->formatCurrency($row['netto']/$per),
					$row['headernote']
				));
                $totalnominal1 += $row['nominal']/$per;
                $totaldisc1 += $row['disc']/$per;
                $totaljumlah1 += $row['netto']/$per;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->colalign = array('C','C','C','C');
			$this->pdf->setwidths(array(40,50,40,40));
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
					'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
						'NETTO : '.Yii::app()->format->formatCurrency($totaljumlah1),
			));
			$this->pdf->Output();
	}
	//3
	public function RekapPenjualanPerCustomer($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
			$spvid2 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
		$sql = "select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
                join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1."
                and e.productname like '%".$product."%' and k.areaname like '%".$salesarea."%'
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Customer';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
      
			if(isset($spv) && $spv!='')
			{                
				$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
				$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
				$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
				$this->pdf->sety($this->pdf->gety()+5);
			}
            
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
				$sql1 = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						  from gidetail zzb 
						  join sodetail zza on zza.sodetailid = zzb.sodetailid
						  where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							left join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%'  and i.productname like '%".$product."%' and a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'  ".$spvid2." ".$isdisplay2."
							and d.addressbookid = ".$row['addressbookid']." order by invoiceno)z group by invoiceno"; 
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,24,20,25,25,25,55));
				$this->pdf->colheader = array('No','No Dokumen','Tanggal','Nominal','Disc','Netto','Keterangan');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','L');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totaldisc = 0;
				$total = 0;
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['invoiceno'],
						date(Yii::app()->params['dateviewfromdb'], strtotime($row1['invoicedate'])),
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
						Yii::app()->format->formatCurrency($row1['disc']/$per),
						Yii::app()->format->formatCurrency($row1['netto']/$per),$row1['headernote']
					));
					$totalnominal += $row1['nominal']/$per;
					$totaldisc += $row1['disc']/$per;
					$total += $row1['netto']/$per;
				}
				$this->pdf->row(array(
						'','Total ','',
						Yii::app()->format->formatCurrency($totalnominal),
						Yii::app()->format->formatCurrency($totaldisc),
						Yii::app()->format->formatCurrency($total),
					));
					$totalnominal1 += $totalnominal;
					$totaldisc1 += $totaldisc;
					$totaljumlah1 += $total;
				$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('C','C','C','C');
				$this->pdf->setwidths(array(40,40,50,40));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
						'NETTO : '.Yii::app()->format->formatCurrency($totaljumlah1),
					));
					
			$this->pdf->Output();
	}
	//4
	public function RekapPenjualanPerSales($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
			$spvid2 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}   
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
		$sql = "select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid1."".$isdisplay1."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname
		";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan Per Sales';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
					
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(20,$this->pdf->gety()+5,': '.$row['fullname']);
			$sql1 = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as                       disc,sum(nett) as netto from 
												(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
												(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
												(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
												(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
												 from gidetail zzb 
												 join sodetail zza on zza.sodetailid = zzb.sodetailid
						 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
												from invoice a 
												join giheader b on b.giheaderid = a.giheaderid
												join soheader c on c.soheaderid = b.soheaderid
												join addressbook d on d.addressbookid = c.addressbookid
												join employee e on e.employeeid = c.employeeid
												join salesarea f on f.salesareaid = d.salesareaid
												join sodetail g on g.soheaderid = b.soheaderid
												join gidetail ss on ss.giheaderid = b.giheaderid
												join sloc h on h.slocid = ss.slocid
												join product i on i.productid = ss.productid
												join productplant j on j.productid = i.productid
												join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
												where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
												c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
												e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoicedate between 
												'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
												'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
												and e.employeeid = ".$row['employeeid']." order by fullname
												)z group by fullname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,80,30,30,30,30));
			$this->pdf->colheader = array('No','Nama Customer','Nominal','Disc','Netto');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totalnominal = 0;
			$totaldisc = 0;
			$total = 0;
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['fullname'],
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency($row1['disc']/$per),
					Yii::app()->format->formatCurrency($row1['netto']/$per),
				));
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += $row1['disc']/$per;
				$total += $row1['netto']/$per;
			}
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
					'','TOTAL SALES',
					Yii::app()->format->formatCurrency($totalnominal),
					Yii::app()->format->formatCurrency($totaldisc),
					Yii::app()->format->formatCurrency($total),
				));
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totaljumlah1 += $total;
			$this->pdf->sety($this->pdf->gety()+5);	
			$this->pdf->checkPageBreak(20);
		}
			$this->pdf->colalign = array('C','C','C','C');
			$this->pdf->setwidths(array(30,50,50,50));
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
					'TOTAL',
					'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
					'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
					'NETTO : '.Yii::app()->format->formatCurrency($totaljumlah1),
				));
		$this->pdf->Output();
	}
	//5
	public function RekapPenjualanPerBarang($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
			$spvid2 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
				from soheader za 
				join giheader zb on zb.soheaderid = za.soheaderid
				join gidetail zc on zc.giheaderid = zb.giheaderid
				join sodetail zs on zs.sodetailid = zc.sodetailid
				left join employee zd on zd.employeeid = za.employeeid
				join product ze on ze.productid = zs.productid
				left join addressbook zf on zf.addressbookid = za.addressbookid
				left join salesarea zg on zg.salesareaid = zf.salesareaid
				join sloc zh on zh.slocid = zc.slocid
				join invoice zi on zi.giheaderid = zc.giheaderid
				join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
				join materialgroup zk on zk.materialgroupid=zj.materialgroupid
				where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
				zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and ze.productname like '%".$product."%' and zg.areaname like '%".$salesarea."%' and zk.description like '%".$materialgroup."%' and zh.sloccode like '%".$sloc."%'
				and zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Barang';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			if(isset($spv) && $spv!='')
			{                
				$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
				$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
				$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
				$this->pdf->sety($this->pdf->gety()+5);
			}
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Material Group');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['description']);
				$sql1 = "select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and j.materialgroupid = ".$row['materialgroupid']."
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
						)zz group by productname order by productname";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totalqty=0;$totalnetto=0;$totaldisc=0;$totalnominal=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,15,20,30,25,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totalqty = 0;
				$totalnetto = 0;
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatNumber($row1['qty']),
						Yii::app()->format->formatCurrency($row1['harga']/$per),
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
						Yii::app()->format->formatCurrency(($row1['nominal']/$per)-($row1['netto']/$per)),
						Yii::app()->format->formatCurrency($row1['netto']/$per),
					));
					$totalnominal += $row1['nominal']/$per;
					$totalqty += $row1['qty'];
					$totaldisc += ($row1['nominal']/$per)-($row1['netto']/$per);
					$totalnetto += $row1['netto']/$per;
					
				}
				$this->pdf->row(array(
						'','Total '.$row['description'],
						Yii::app()->format->formatNumber($totalqty),'',
						Yii::app()->format->formatCurrency($totalnominal),
						Yii::app()->format->formatCurrency($totaldisc),
						Yii::app()->format->formatCurrency($totalnetto),
					));					
					$totalqty1 += $totalqty;					
					$totalnominal1 += $totalnominal;
					$totaldisc1 += $totaldisc;
					$totalnetto1 += $totalnetto;
					
				$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('C','C','C','C');
				$this->pdf->setwidths(array(40,40,40,40));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
						'JUMLAH : '.Yii::app()->format->formatCurrency($totalnetto1),
					));
			$this->pdf->Output();
	}
	//6
	public function RekapPenjualanPerArea($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
			$spvid2 = " and (g.spvid='".$spv."' or g.employeeid='".$spv."')";
			$spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and g.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totaljumlah2=0;
		$sql = "select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%' ".$spvid1." ".$isdisplay1."
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
          group by zg.areaname order by areaname";
				
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan Per Area';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
        
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Area');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['areaname']);
			$this->pdf->text(10,$this->pdf->gety()+10,'Area');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['areaname']);
			
			$sql1 = "select distinct a.materialgroupid,a.description,b.productid
				from materialgroup a
				join productplant b on b.materialgroupid = a.materialgroupid
				join product c on c.productid = b.productid
				join sloc d on d.slocid = b.slocid
				join gidetail e on e.productid = c.productid
				join giheader f on f.giheaderid = e.giheaderid
				join soheader g on g.soheaderid = f.soheaderid
				join addressbook h on h.addressbookid = g.addressbookid
				join salesarea i on i.salesareaid = h.salesareaid
				join invoice j on j.giheaderid = f.giheaderid
				join employee k on k.employeeid = g.employeeid
				where j.recordstatus = 3 and g.companyid = ".$companyid." and i.salesareaid = ".$row['salesareaid']." and k.fullname like '%".$employee."%' and c.productname like '%".$product."%' and d.sloccode like '%".$sloc."%' and h.fullname like '%".$customer."%' 
				and j.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
				group by a.description
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
			$totalqty1 = 0;
			$totalnominal1 = 0;
			$totaldisc1 = 0;
			$totaljumlah1 = 0;
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
				$sql2 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
					(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
						(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
						(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
						(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						 from gidetail zzb 
						 join sodetail zza on zza.sodetailid = zzb.sodetailid
						 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
						from invoice a 
						join giheader b on b.giheaderid = a.giheaderid
						join soheader c on c.soheaderid = b.soheaderid
						join addressbook d on d.addressbookid = c.addressbookid
						join employee e on e.employeeid = c.employeeid
						join salesarea f on f.salesareaid = d.salesareaid
						join sodetail g on g.soheaderid = b.soheaderid
						join gidetail ss on ss.giheaderid = b.giheaderid
						join sloc h on h.slocid = ss.slocid
						join product i on i.productid = ss.productid
						join productplant j on j.productid = i.productid and j.slocid=g.slocid
						join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
						where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
									 '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']."
						) zz group by productid";
				
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				$totalgrupdisc = 0;$totalgrupnominal=0;$totalgrup=0;$i=0;$totalgrupqty=0;
				$this->pdf->sety($this->pdf->gety()+18);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,30,30,30,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Disc','Netto');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalgrupqty =0;
				$totalgrupnominal =0;
				$totalgrupdisc =0;
				$totalgrup =0;
				foreach($dataReader2 as $row2)
				{
											$i+=1;
					$this->pdf->row(array(
						$i,$row2['productname'],
						Yii::app()->format->formatNumber($row2['giqty']),
						Yii::app()->format->formatCurrency($row2['nominal']/$per),
						Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
						Yii::app()->format->formatCurrency($row2['netto']/$per),
					));
					$totalgrupqty += $row2['giqty'];
					$totalgrupnominal += $row2['nominal']/$per;
					$totalgrupdisc += (($row2['nominal']/$per) - ($row2['netto']/$per));
					$totalgrup += $row2['netto']/$per;
					
				}
				$this->pdf->setFont('Arial','BI',8);
				$this->pdf->row(array(
					'','TOTAL '.$row1['description'],
					Yii::app()->format->formatNumber($totalgrupqty),
					Yii::app()->format->formatCurrency($totalgrupnominal),
					Yii::app()->format->formatCurrency($totalgrupdisc),
					Yii::app()->format->formatCurrency($totalgrup),
				));
					
				$totalqty1 += $totalgrupqty;
				$totalnominal1 += $totalgrupnominal;
				$totaldisc1 += $totalgrupdisc;
				$totaljumlah1 += $totalgrup;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'','TOTAL '.$row['areaname'],
				Yii::app()->format->formatNumber($totalqty1),
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totaljumlah1),
				));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totaljumlah2 += $totaljumlah1;
		}
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(40,50,40,40));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'TOTAL',
			'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal2),
			'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc2),
			'NETTO : '.Yii::app()->format->formatCurrency($totaljumlah2),
		));
		$this->pdf->Output();
	}
	//7
	public function RekapPenjualanPerCustomerPerBarangTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		} 
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	           join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid."
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Customer Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
      
			if(isset($spv) && $spv!='')
			{                
				$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
				$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
				$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
				$this->pdf->sety($this->pdf->gety()+5);
			}
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select barang,sum(qty) as giqty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)zz group by barang";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatNumber($row1['giqty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['giqty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL CUSTOMER '.$row['fullname'],
							Yii::app()->format->formatNumber($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatNumber($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//8
	public function RekapPenjualanPerCustomerPerBarangRincian($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		} 
		$sql = "select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid."
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Customer Per Barang (Rincian)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P'); 
      
			if(isset($spv) && $spv!='')
			{                
				$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
				$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
				$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
				$this->pdf->sety($this->pdf->gety()+5);
			}
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'CUSTOMER');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['fullname']);
				$this->pdf->sety($this->pdf->gety()+8);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,15,20,30,25,30));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
				$sql1 = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
				from soheader za 
				join giheader zb on zb.soheaderid = za.soheaderid
				join gidetail zc on zc.giheaderid = zb.giheaderid
				join sodetail zs on zs.sodetailid = zc.sodetailid
				left join employee zd on zd.employeeid = za.employeeid
				join product ze on ze.productid = zs.productid
				left join addressbook zf on zf.addressbookid = za.addressbookid
				left join salesarea zg on zg.salesareaid = zf.salesareaid
				join sloc zh on zh.slocid = zc.slocid
				join invoice zi on zi.giheaderid = zc.giheaderid
				join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
				join materialgroup zk on zk.materialgroupid=zj.materialgroupid
				where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
				zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
				zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and
				zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'	order by description";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','B',9);
					$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
					$sql2 = "select productid,productname,sum(qty) as giqty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+7);
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatNumber($row2['giqty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['giqty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;						
					}
					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatNumber($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
										
				}
			
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL CUSTOMER '.$row['fullname'],
				Yii::app()->format->formatNumber($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
			
			}
			
				$this->pdf->colalign = array('C','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatNumber($totalqty2),
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totaldisc2),
						Yii::app()->format->formatCurrency($totalnetto2),
					));
			$this->pdf->Output();
	}
	//9
	public function RekapPenjualanPerSalesPerBarangTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		} 
		$sql = "select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Sales Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P'); 
      
			if(isset($spv) && $spv!='')
			{                
				$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
				$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
				$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
				$this->pdf->sety($this->pdf->gety()+5);
			}
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select productid,productname,description as barang,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,l.description,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and 
						  e.employeeid = ".$row['employeeid']." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by barang";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatNumber($row1['giqty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['giqty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL SALES '.$row['fullname'],
							Yii::app()->format->formatNumber($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatNumber($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//10
	public function RekapPenjualanPerSalesPerBarangRincian($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Sales Per Barang (Rincian)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');

			if(isset($spv) && $spv!='')
			{                
				$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
				$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
				$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
				$this->pdf->sety($this->pdf->gety()+5);
			}
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['fullname']);
				$this->pdf->sety($this->pdf->gety()+8);
					
					$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
				$sql1 = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
				from soheader za 
				join giheader zb on zb.soheaderid = za.soheaderid
				join gidetail zc on zc.giheaderid = zb.giheaderid
				join sodetail zs on zs.sodetailid = zc.sodetailid
				left join employee zd on zd.employeeid = za.employeeid
				join product ze on ze.productid = zs.productid
				left join addressbook zf on zf.addressbookid = za.addressbookid
				left join salesarea zg on zg.salesareaid = zf.salesareaid
				join sloc zh on zh.slocid = zc.slocid
				join invoice zi on zi.giheaderid = zc.giheaderid
				join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
				join materialgroup zk on zk.materialgroupid=zj.materialgroupid
				where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
				zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
				zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zd.employeeid = ".$row['employeeid']." and
				zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'	order by description";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','B',9);
					$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
					$sql2 = "select productid,productname,sum(qty) as giqty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.employeeid = ".$row['employeeid']." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+7);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,15,20,30,25,30));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$this->pdf->setFont('Arial','',8);
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatNumber($row2['giqty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['giqty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;						
					}
					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatNumber($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
										
				}
			
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL SALES '.$row['fullname'],
				Yii::app()->format->formatNumber($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
			
			}
			
				$this->pdf->colalign = array('C','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatNumber($totalqty2),
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totaldisc2),
						Yii::app()->format->formatCurrency($totalnetto2),
					));
			$this->pdf->Output();
	}
	//11
	public function RekapPenjualanPerAreaPerBarangTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct zg.salesareaid,zg.areaname
				   from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				   join addressbook zf on zf.addressbookid = za.addressbookid
				   left join salesarea zg on zg.salesareaid = zf.salesareaid
				   join product zh on zh.productid = zc.productid
				   join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%' ".$spvid."
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                group by zg.areaname order by zg.areaname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Area Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P'); 
      
			if(isset($spv) && $spv!='')
			{                
				$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
				$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
				$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
				$this->pdf->sety($this->pdf->gety()+5);
			}
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['areaname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select productid,productname,description as barang,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,l.description,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and 
						  e.fullname like '%".$employee."%' and f.salesareaid = ".$row['salesareaid']." and i.productname like '%".$product."%' 
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz group by barang";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatNumber($row1['giqty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['giqty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL AREA '.$row['areaname'],
							Yii::app()->format->formatNumber($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatNumber($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//12
	public function RekapPenjualanPerAreaPerBarangRincian($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
        if(isset($spv)&& $spv!='')
        {
          $spvid = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }
        else
        {
          $spvid = "";
        } 
		$sql = "select distinct zg.salesareaid,zg.areaname
				   from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				   join addressbook zf on zf.addressbookid = za.addressbookid
				   left join salesarea zg on zg.salesareaid = zf.salesareaid
				   join product zh on zh.productid = zc.productid
				   join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%' ".$spvid."
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                group by zg.areaname order by zg.areaname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Area Per Barang (Rincian)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P'); 
      
			if(isset($spv) && $spv!='')
			{                
				$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
				$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
				$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
				$this->pdf->sety($this->pdf->gety()+5);
			}
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['areaname']);
				$this->pdf->sety($this->pdf->gety()+8);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,15,20,30,25,30));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
				$sql1 = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
				from soheader za 
				join giheader zb on zb.soheaderid = za.soheaderid
				join gidetail zc on zc.giheaderid = zb.giheaderid
				join sodetail zs on zs.sodetailid = zc.sodetailid
				left join employee zd on zd.employeeid = za.employeeid
				join product ze on ze.productid = zs.productid
				left join addressbook zf on zf.addressbookid = za.addressbookid
				left join salesarea zg on zg.salesareaid = zf.salesareaid
				join sloc zh on zh.slocid = zc.slocid
				join invoice zi on zi.giheaderid = zc.giheaderid
				join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
				join materialgroup zk on zk.materialgroupid=zj.materialgroupid
				where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
				zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
				zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and
				zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'	order by description";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','B',9);
					$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
					$sql2 = "select productid,productname,sum(qty) as giqty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.salesareaid = ".$row['salesareaid']." and i.productname like '%".$product."%' 
							and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+7);
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatNumber($row2['giqty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['giqty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;						
					}
					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatNumber($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
										
				}
			
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL AREA '.$row['areaname'],
				Yii::app()->format->formatNumber($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
			
			}
			
				$this->pdf->colalign = array('C','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatNumber($totalqty2),
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totaldisc2),
						Yii::app()->format->formatCurrency($totalnetto2),
					));
			$this->pdf->Output();
	}
	//13	
	public function RincianReturPenjualanPerDokumen($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct b.notagirid,b.notagirno,i.fullname as customer,d.gireturdate,j.paycode,h.taxid,b.headernote
						from notagirpro a
						left join notagir b on b.notagirid=a.notagirid
						left join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						left join giretur d on d.gireturid=b.gireturid
						left join product e on e.productid=a.productid
						left join gidetail f on f.gidetailid=c.gidetailid
						left join giheader g on g.giheaderid=d.giheaderid
						left join soheader h on h.soheaderid=g.soheaderid
						left join addressbook i on i.addressbookid=h.addressbookid
						left join paymentmethod j on j.paymentmethodid=h.paymentmethodid
						left join sloc k on k.slocid=a.slocid
						left join employee l on l.employeeid = h.employeeid
						where k.sloccode like '%".$sloc."%' and b.recordstatus = 3 and i.fullname like '%".$customer."%' and 
						h.companyid = ".$companyid." and e.productname like '%".$product."%' and l.fullname like '%".$employee."%' ".$spvid." and
						d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Retur Penjualan Per Dokumen';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');    
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
		$this->pdf->sety($this->pdf->gety()+5);
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+0,'Dokumen');$this->pdf->text(40,$this->pdf->gety()+0,': '.$row['notagirno']);
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['customer']);
			$this->pdf->text(130,$this->pdf->gety()+0,'Tanggal');$this->pdf->text(160,$this->pdf->gety()+0,': '.date(Yii::app()->params['dateviewfromdb'], strtotime($row['gireturdate'])));
			$this->pdf->text(130,$this->pdf->gety()+5,'T.O.P');$this->pdf->text(160,$this->pdf->gety()+5,': '.$row['paycode'].' HARI');                
			$sql1 = "select *,(nominal-netto) as disc from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and b.notagirid = ".$row['notagirid']." 
							and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)z order by notagirno,notagirproid";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$i=0;$totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,20,20,30,50));
				$this->pdf->coldetailalign = array('L','L','R','R','R','L');
			$this->pdf->colheader = array('No','Nama Barang','Qty','Harga','Jumlah','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['productname'],
					Yii::app()->format->formatNumber($row1['qty']),
					Yii::app()->format->formatCurrency($row1['price']/$per),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					$row1['headernote'],
				));
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;

			}
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','Keterangan : '.$row['headernote'],
				Yii::app()->format->formatNumber($totalqty),
				'','Nominal',
				Yii::app()->format->formatCurrency($totalnominal),
			));
			
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','','',
				'','Diskon',
				Yii::app()->format->formatCurrency($totaldiskon),
			));
			
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','','',
				'','Netto',
				Yii::app()->format->formatCurrency($totalnetto),
			));
						
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$this->pdf->sety($this->pdf->gety()+15);
			$this->pdf->checkPageBreak(20);
		}

		$this->pdf->colalign = array('R','R','R');
		$this->pdf->setwidths(array(60,60,60));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL  '.Yii::app()->format->formatCurrency($totalnominal1),
			'TOTAL DISCOUNT  '.Yii::app()->format->formatCurrency($totaldiskon1),
			'TOTAL NETTO  '.Yii::app()->format->formatCurrency($totalnetto1),
		));
		$this->pdf->Output();
	}
	//14
	public function RekapReturPenjualanPerDokumen($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid."and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		
		$this->pdf->title='Rekap Retur Penjualan Per Dokumen';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		$i=0;$nominal=0;$diskon=0;$netto=0;

		$this->pdf->sety($this->pdf->gety()+10);
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,24,18,58,30,25,30));
		$this->pdf->colheader = array('No','Dokumen','Tanggal','Customer','Nominal','Diskon','Netto');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('R','L','L','L','R','R','R');
		
		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->SetFont('Arial','',8);
			$this->pdf->row(array(
				$i,$row['notagirno'],
				date(Yii::app()->params['dateviewfromdb'], strtotime($row['gireturdate'])),
				$row['fullname'],
				Yii::app()->format->formatCurrency($row['nominal']/$per),
				Yii::app()->format->formatCurrency(($row['nominal']/$per) - ($row['netto']/$per)),
				Yii::app()->format->formatCurrency($row['netto']/$per),
			));
			$nominal += $row['nominal']/$per;
			$diskon += ($row['nominal']/$per) - ($row['netto']/$per);
			$netto += $row['netto']/$per;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->setFont('Arial','B',10);
		$this->pdf->row(array(
			'','','','GRAND TOTAL',
				Yii::app()->format->formatCurrency($nominal),
				Yii::app()->format->formatCurrency($diskon),
				Yii::app()->format->formatCurrency($netto),
		));
		$this->pdf->Output();
	}
	//15
	public function RekapReturPenjualanPerCustomer($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;$totalnominal2=0;$totaldiskon2=0;$totalnetto2=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
				
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
            
		$this->pdf->title='Rekap Retur Penjualan Per Customer';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 

		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
    foreach($dataReader as $row) 
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
			$sql1 = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,a.qty,
							(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
				
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$totalppn = 0;$totalnominal=0;$total=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+15);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,24,20,25,25,25,55));
			$this->pdf->colheader = array('No','No Dokumen','Tanggal','Nominal','Diskon','Netto','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','L');
			$this->pdf->setFont('Arial','',8);
			$totalnominal = 0;
			$totaldiskon = 0;
			$totalnetto = 0;
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['notagirno'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row1['gireturdate'])),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
					Yii::app()->format->formatCurrency($row1['netto']/$per),$row1['headernote']
				));
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;
			}
			$this->pdf->row(array(
				'','Total ','',
				Yii::app()->format->formatCurrency($totalnominal),
				Yii::app()->format->formatCurrency($totaldiskon),
				Yii::app()->format->formatCurrency($totalnetto),
			));
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(40,40,50,40));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'TOTAL',
			'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
			'DISKON : '.Yii::app()->format->formatCurrency($totaldiskon1),
			'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1),
		));
				
		$this->pdf->Output();
  }
	//16
	public function RekapReturPenjualanPerSales($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totaldiskon1=0;$totalnominal1=0;$totalnetto1=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
		
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Retur Penjualan Per Sales';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P'); 
      
			if(isset($spv) && $spv!='')
			{                
				$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
				$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
				$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
				$this->pdf->sety($this->pdf->gety()+5);
			}
						
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Sales');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
				$sql1 = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
				
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totaldiskon = 0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,80,30,25,30,30));
				$this->pdf->colheader = array('No','Nama Customer','Nominal','Diskon','Netto');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);

				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['fullname'],
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
						Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
						Yii::app()->format->formatCurrency($row1['netto']/$per),
					));
					$totalnominal += $row1['nominal']/$per;
					$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
					$totalnetto += $row1['netto']/$per;
				}
				$this->pdf->row(array(
						'','Total Sales',
						Yii::app()->format->formatCurrency($totalnominal),
						Yii::app()->format->formatCurrency($totaldiskon),
						Yii::app()->format->formatCurrency($totalnetto),
					));
					$totalnominal1 += $totalnominal;
					$totaldiskon1 += $totaldiskon;
					$totalnetto1 += $totalnetto;
				$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('C','C','C','C');
				$this->pdf->setwidths(array(40,40,50,40));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISKON : '.Yii::app()->format->formatCurrency($totaldiskon1),
						'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//17
	public function RekapReturPenjualanPerBarang($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1 = 0;$totaldiskon1 = 0;$totalnetto1 = 0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct o.materialgroupid,o.materialgroupcode,o.description
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				join productplant n on n.productid=a.productid and n.slocid=a.slocid
				join materialgroup o on o.materialgroupid=n.materialgroupid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%' and o.description like '%".$materialgroup."%'	and i.productname like '%".$product."%'
				and d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
			
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		
		$this->pdf->title='Rekap Retur Penjualan Per Barang';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');

		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}

		$this->pdf->sety($this->pdf->gety()+0);
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Divisi');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['description']);
			$sql1 = "select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
				(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
			(a.qty*g.price) as nom,a.price,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
			from notagirpro a
			join notagir b on b.notagirid=a.notagirid
			join gireturdetail c on c.gireturdetailid=a.gireturdetailid
			join giretur d on d.gireturid=b.gireturid
			join gidetail e on e.gidetailid=c.gidetailid
			join giheader f on f.giheaderid=d.giheaderid
			join sodetail g on g.sodetailid=e.sodetailid
			join soheader h on h.soheaderid=f.soheaderid
			join product i on i.productid = a.productid
			join sloc j on j.slocid = a.slocid
			join addressbook k on k.addressbookid = h.addressbookid
			join employee l on l.employeeid = h.employeeid
			join salesarea m on m.salesareaid = k.salesareaid
			join productplant n on n.productid=a.productid and n.slocid=a.slocid
			where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
			and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
			and i.productname like '%".$product."%' and n.materialgroupid = ".$row['materialgroupid']." and d.gireturdate between 
			'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
			and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+15);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,15,20,30,25,30));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
		 
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['productname'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qty']),
					Yii::app()->format->formatCurrency($row1['harga']/$per),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
					Yii::app()->format->formatCurrency($row1['netto']/$per),
				));
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;
			}
			$this->pdf->row(array(
				'','Total : '.$row['description'],
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty),'',
				Yii::app()->format->formatCurrency($totalnominal),
				Yii::app()->format->formatCurrency($totaldiskon),
				Yii::app()->format->formatCurrency($totalnetto),
			));
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$this->pdf->checkPageBreak(20);
		}			
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(40,40,50,40));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
			'DISKON : '.Yii::app()->format->formatCurrency($totaldiskon1),
			'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1),
		));
					
		$this->pdf->Output();
  }
	//18
	public function RekapReturPenjualanPerArea($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1 = 0;$totalnominal1 = 0;$totaldiskon1 = 0;$totalnetto1 = 0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Retur Penjualan Per Area';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');                             
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Area');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['areaname']);
			$sql1 = "select distinct a.materialgroupid,a.description,f.productid
					from materialgroup a
					join productplant b on b.materialgroupid = a.materialgroupid
					join gireturdetail e on e.productid = b.productid
					join gidetail c on c.gidetailid = e.gidetailid
					join product f on f.productid = e.productid
					join giheader g on g.giheaderid = c.giheaderid
					join soheader h on h.soheaderid = g.soheaderid
					join addressbook i on i.addressbookid = h.addressbookid
					join salesarea j on j.salesareaid = i.salesareaid
					join giretur k on k.gireturid = e.gireturid
					where k.recordstatus = 3 and h.companyid = ".$companyid." and f.productname like '%".$product."%'
					and j.salesareaid = ".$row['salesareaid']."
					and k.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					group by description";
			
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			foreach($dataReader1 as $row1)
			{
				$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
				$sql2 = "select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
						g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
						and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid";
				
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				$totalnetto = 0;$totalnominal=0;$totaldiskon=0;$i=0;$totalqty=0;
				$this->pdf->sety($this->pdf->gety()+20);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,80,20,30,20,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Diskon','Netto');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				foreach($dataReader2 as $row2)
				{
											$i+=1;
					$this->pdf->row(array(
						$i,$row2['productname'],
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qty']),
						Yii::app()->format->formatCurrency($row2['nominal']/$per),
						Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
						Yii::app()->format->formatCurrency($row2['netto']/$per),
					));
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldiskon += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;
				}
				$this->pdf->row(array(
					'','Total '.$row1['description'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty),
					Yii::app()->format->formatCurrency($totalnominal),
					Yii::app()->format->formatCurrency($totaldiskon),
					Yii::app()->format->formatCurrency($totalnetto),
				));
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldiskon1 += $totaldiskon;
				$totalnetto1 += $totalnetto;
				$this->pdf->checkPageBreak(20);
			}
		}
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(50,40,40,40));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'TOTAL :',
			'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
			'DISKON : '.Yii::app()->format->formatCurrency($totaldiskon1),
			'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1),
		));
		$this->pdf->Output();
	}
	//19
	public function RekapReturPenjualanPerCustomerPerBarangTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct k.addressbookid,k.fullname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Retur Penjualan Per Customer Per Barang - Total';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');   
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,20,35,30,35));
			$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
			$this->pdf->RowHeader();
			
			$sql1 = "select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from 
						(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						join materialgroup o on o.materialgroupid=n.materialgroupid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
						group by barang order by barang";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
				
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['barang'],
					Yii::app()->format->formatNumber($row1['qty']),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
					Yii::app()->format->formatCurrency($row1['netto']/$per),
				));
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;						
			}
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'','TOTAL CUSTOMER '.$row['fullname'],
				Yii::app()->format->formatNumber($totalqty),
				Yii::app()->format->formatCurrency($totalnominal),
				Yii::app()->format->formatCurrency($totaldisc),
				Yii::app()->format->formatCurrency($totalnetto),
			));
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			$this->pdf->sety($this->pdf->gety()+3);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('L','R','R','R','R');
		$this->pdf->setwidths(array(70,20,35,30,35));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			Yii::app()->format->formatNumber($totalqty1),
			Yii::app()->format->formatCurrency($totalnominal1),
			Yii::app()->format->formatCurrency($totaldisc1),
			Yii::app()->format->formatCurrency($totalnetto1),
		));
				
		$this->pdf->Output();
	}
	//20
	public function RekapReturPenjualanPerCustomerPerBarangRincian($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct k.addressbookid,k.fullname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Retur Penjualan Per Customer Per Barang (Rincian)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'CUSTOMER');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['fullname']);
			$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,15,20,30,25,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
				$this->pdf->RowHeader();
				$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
			$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						join materialgroup o on o.materialgroupid=n.materialgroupid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
						and m.areaname like '%".$salesarea."%' and k.addressbookid = ".$row['addressbookid']."
						and i.productname like '%".$product."%' and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','B',9);
				$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
				$sql2 = "select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct a.notagirproid,i.productname,a.qty,g.price,(a.qty*g.price) as nom,(a.qty*a.price) as nett
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']."
						and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname order by productname";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+7);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totalqty = 0;
				$totaldisc = 0;
				$totalnetto = 0;
				
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row2['productname'],
						Yii::app()->format->formatNumber($row2['qty']),
						Yii::app()->format->formatCurrency($row2['harga']/$per),
						Yii::app()->format->formatCurrency($row2['nominal']/$per),
						Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
						Yii::app()->format->formatCurrency($row2['netto']/$per),
					));
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;						
				}
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row1['description'],
					Yii::app()->format->formatNumber($totalqty),'',
					Yii::app()->format->formatCurrency($totalnominal),
					Yii::app()->format->formatCurrency($totaldisc),
					Yii::app()->format->formatCurrency($totalnetto),
				));
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totalnetto1 += $totalnetto;
			}
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL CUSTOMER '.$row['fullname'],
				Yii::app()->format->formatNumber($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
		
		}
		$this->pdf->colalign = array('C','R','R','R','R');
		$this->pdf->setwidths(array(70,20,35,30,35));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			Yii::app()->format->formatNumber($totalqty2),
			Yii::app()->format->formatCurrency($totalnominal2),
			Yii::app()->format->formatCurrency($totaldisc2),
			Yii::app()->format->formatCurrency($totalnetto2),
		));
		$this->pdf->Output();
	}
	//21
	public function RekapReturPenjualanPerSalesPerBarangTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Retur Penjualan Per Sales Per Barang - Total';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}    
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,20,35,30,35));
			$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
			$this->pdf->RowHeader();
			
			$sql1 = "select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from 
						(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						join materialgroup o on o.materialgroupid=n.materialgroupid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
						group by barang order by barang";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
				
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['barang'],
					Yii::app()->format->formatNumber($row1['qty']),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
					Yii::app()->format->formatCurrency($row1['netto']/$per),
				));
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;						
			}
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'','TOTAL SALES '.$row['fullname'],
				Yii::app()->format->formatNumber($totalqty),
				Yii::app()->format->formatCurrency($totalnominal),
				Yii::app()->format->formatCurrency($totaldisc),
				Yii::app()->format->formatCurrency($totalnetto),
			));
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			$this->pdf->sety($this->pdf->gety()+3);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('L','R','R','R','R');
		$this->pdf->setwidths(array(70,20,35,30,35));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			Yii::app()->format->formatNumber($totalqty1),
			Yii::app()->format->formatCurrency($totalnominal1),
			Yii::app()->format->formatCurrency($totaldisc1),
			Yii::app()->format->formatCurrency($totalnetto1),
		));
				
		$this->pdf->Output();
	}
	//22
	public function RekapReturPenjualanPerSalesPerBarangRincian($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct l.employeeid,l.fullname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Retur Penjualan Per Sales Per Barang (Rincian)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['fullname']);
			$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,15,20,30,25,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
				$this->pdf->RowHeader();
				$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
			$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						join materialgroup o on o.materialgroupid=n.materialgroupid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
						and m.areaname like '%".$salesarea."%' and l.employeeid = ".$row['employeeid']."
						and i.productname like '%".$product."%' and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','B',9);
				$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
				$sql2 = "select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct a.notagirproid,i.productname,a.qty,g.price,(a.qty*g.price) as nom,(a.qty*a.price) as nett
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']."
						and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname order by productname";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+7);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
				
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row2['productname'],
						Yii::app()->format->formatNumber($row2['qty']),
						Yii::app()->format->formatCurrency($row2['harga']/$per),
						Yii::app()->format->formatCurrency($row2['nominal']/$per),
						Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
						Yii::app()->format->formatCurrency($row2['netto']/$per),
					));
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;						
				}
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row1['description'],
					Yii::app()->format->formatNumber($totalqty),'',
					Yii::app()->format->formatCurrency($totalnominal),
					Yii::app()->format->formatCurrency($totaldisc),
					Yii::app()->format->formatCurrency($totalnetto),
				));
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totalnetto1 += $totalnetto;
			}
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL SALES '.$row['fullname'],
				Yii::app()->format->formatNumber($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
			));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('C','R','R','R','R');
		$this->pdf->setwidths(array(70,20,35,30,35));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			Yii::app()->format->formatNumber($totalqty2),
			Yii::app()->format->formatCurrency($totalnominal2),
			Yii::app()->format->formatCurrency($totaldisc2),
			Yii::app()->format->formatCurrency($totalnetto2),
		));
		$this->pdf->Output();
	}
	//23
	public function RekapReturPenjualanPerAreaPerBarangTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Retur Penjualan Per Area Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
      
			if(isset($spv) && $spv!='')
			{                
				$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
				$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
				$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
				$this->pdf->sety($this->pdf->gety()+5);
			}
      
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['areaname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by barang order by barang";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['barang'],
						Yii::app()->format->formatNumber($row1['qty']),
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
						Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
						Yii::app()->format->formatCurrency($row1['netto']/$per),
					));
					$totalqty += $row1['qty'];
					$totalnominal += $row1['nominal']/$per;
					$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
					$totalnetto += $row1['netto']/$per;						
				}
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
					'','TOTAL AREA '.$row['areaname'],
					Yii::app()->format->formatNumber($totalqty),
					Yii::app()->format->formatCurrency($totalnominal),
					Yii::app()->format->formatCurrency($totaldisc),
					Yii::app()->format->formatCurrency($totalnetto),
				));
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totalnetto1 += $totalnetto;
				$this->pdf->sety($this->pdf->gety()+3);	
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->colalign = array('L','R','R','R','R');
			$this->pdf->setwidths(array(70,20,35,30,35));
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'GRAND TOTAL',
				Yii::app()->format->formatNumber($totalqty1),
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
			));
					
			$this->pdf->Output();
	}
	//24
	public function RekapReturPenjualanPerAreaPerBarangRincian($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		if(isset($spv)&& $spv!='')
		{
			$spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		} 
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Retur Penjualan Per Area Per Barang (Rincian)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');  
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['areaname']);
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,15,20,30,25,30));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
			$this->pdf->RowHeader();
			$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
			$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						join materialgroup o on o.materialgroupid=n.materialgroupid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
						and m.areaname like '%".$salesarea."%' and m.salesareaid = ".$row['salesareaid']."
						and i.productname like '%".$product."%' and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','B',9);
				$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
				$sql2 = "select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct a.notagirproid,i.productname,a.qty,g.price,(a.qty*g.price) as nom,(a.qty*a.price) as nett
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']."
						and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname order by productname";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+7);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totalqty = 0;
				$totaldisc = 0;
				$totalnetto = 0;
				
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row2['productname'],
						Yii::app()->format->formatNumber($row2['qty']),
						Yii::app()->format->formatCurrency($row2['harga']/$per),
						Yii::app()->format->formatCurrency($row2['nominal']/$per),
						Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
						Yii::app()->format->formatCurrency($row2['netto']/$per),
					));
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;						
				}
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row1['description'],
					Yii::app()->format->formatNumber($totalqty),'',
					Yii::app()->format->formatCurrency($totalnominal),
					Yii::app()->format->formatCurrency($totaldisc),
					Yii::app()->format->formatCurrency($totalnetto),
				));
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totalnetto1 += $totalnetto;
			}
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL AREA '.$row['areaname'],
				Yii::app()->format->formatNumber($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('C','R','R','R','R');
		$this->pdf->setwidths(array(70,20,35,30,35));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			Yii::app()->format->formatNumber($totalqty2),
			Yii::app()->format->formatCurrency($totalnominal2),
			Yii::app()->format->formatCurrency($totaldisc2),
			Yii::app()->format->formatCurrency($totalnetto2),
		));
		$this->pdf->Output();
	}
	//25
	public function RincianPenjualanReturPenjualanPerDokumen($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$total1=0;$totaldisc1=0;$totalnetto1=0;$disc= 0;
		if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."')";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."')";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and c.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$sql = "select a.invoiceid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno, b.gino, a.invoicedate, d.fullname as customer,h.fullname as sales, e.paydays, c.shipto, a.headernote
				from invoice a
				join giheader b on b.giheaderid = a.giheaderid
				join soheader c on c.soheaderid = b.soheaderid
				join addressbook d on d.addressbookid = c.addressbookid
				join paymentmethod e on e.paymentmethodid = c.paymentmethodid
				join gidetail f on f.giheaderid = b.giheaderid
				join sloc g on g.slocid = f.slocid
				join employee h on h.employeeid = c.employeeid
				join product i on i.productid = f.productid
				join salesarea j on j.salesareaid = d.salesareaid
				where a.recordstatus = 3 and c.companyid = ".$companyid." and g.sloccode like '%".$sloc."%'
				and d.fullname like '%".$customer."%' and h.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and i.productname like '%".$product."%'
				and j.areaname like '%".$salesarea."%' and b.gino is not null
				and invoiceno not like '%-%-%' and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by invoiceno order by invoicedate";
		
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Penjualan - Retur Per Dokumen';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'No Bukti');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['invoiceno']);
			$this->pdf->text(10,$this->pdf->gety()+20,'No SJ');$this->pdf->text(30,$this->pdf->gety()+20,': '.$row['gino']);
			$this->pdf->text(10,$this->pdf->gety()+15,'Sales');$this->pdf->text(30,$this->pdf->gety()+15,': '.$row['sales']);
			$this->pdf->text(10,$this->pdf->gety()+25,'T.O.P');$this->pdf->text(30,$this->pdf->gety()+25,': '.$row['paydays'].' HARI');
			$this->pdf->text(100,$this->pdf->gety()+10,''.date(Yii::app()->params['dateviewfromdb'], strtotime($row['invoicedate'])));
			$this->pdf->text(100,$this->pdf->gety()+15,'Kepada YTH');
			$this->pdf->text(100,$this->pdf->gety()+20,''.$row['customer']);
			$this->pdf->text(100,$this->pdf->gety()+25,''.$row['shipto']);
			$sql1 = "select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,i.productname,k.uomcode,ss.qty,
						(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
						(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nominal,
						(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						 from gidetail zzb 
						 join sodetail zza on zza.sodetailid = zzb.sodetailid
						 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
						from invoice a 
						join giheader b on b.giheaderid = a.giheaderid
						join soheader c on c.soheaderid = b.soheaderid
						join addressbook d on d.addressbookid = c.addressbookid
						join employee e on e.employeeid = c.employeeid
						join salesarea f on f.salesareaid = d.salesareaid
						join sodetail g on g.soheaderid = b.soheaderid
						join gidetail ss on ss.giheaderid = b.giheaderid
						join sloc h on h.slocid = ss.slocid
						join product i on i.productid = ss.productid
						join productplant j on j.productid = i.productid
						join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
						where a.recordstatus = 3 and c.companyid = ".$companyid." 
						and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' 
							and e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' 
							and i.productname like '%".$product."%' and a.invoiceid = ".$row['invoiceid']." 
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'";
		
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$total = 0;$i=0;$totalqty=0;
			$this->pdf->sety($this->pdf->gety()+27);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,85,20,15,30,30));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Unit','Price','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','L','R','R');
			$this->pdf->setFont('Arial','',8);
			$total = 0;
			$totalqty = 0;
			$diskon =0;
			$netto = 0;
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['productname'],
					Yii::app()->format->formatNumber($row1['qty']),$row1['uomcode'],
					Yii::app()->format->formatCurrency($row1['price']/$per),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
				));
				$totalqty += $row1['qty'];
				$total += $row1['nominal']/$per;
				$netto += $row1['nett']/$per;
				$diskon = $total - $netto ;
				$bilangan = explode(".",$netto);
			}
			$this->pdf->row(array(
				'','Total',
				Yii::app()->format->formatNumber($totalqty),'',
				'Nominal',
				Yii::app()->format->formatCurrency($total),
			));
			$this->pdf->row(array(
				'','',
				'',
				'',
				'Diskon',
				Yii::app()->format->formatCurrency($diskon),
			));
			$this->pdf->row(array(
				'',
				'Terbilang : '.eja($bilangan[0]),
				'',
				'',
				'Netto',
				Yii::app()->format->formatCurrency($netto),
			));
			$this->pdf->row(array(
				'',
				'Note : '.$row['headernote'],
				'',
				'',
				'',
				'',
			));
			$totalqty1 += $totalqty;
			$total1 += $total;
			$totaldisc1 += $diskon;
			$totalnetto1 += $netto;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->coldetailalign = array('C','R','R','R','R');
		$this->pdf->setwidths(array(40,30,40,40,40));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'TOTAL PENJUALAN ',
			'QTY  '.Yii::app()->format->formatNumber($totalqty1),
			'NOMINAL  '.Yii::app()->format->formatCurrency($total1),
			'DISKON  '.Yii::app()->format->formatCurrency($totaldisc1),
			'NETTO  '.Yii::app()->format->formatCurrency($totalnetto1),
		));
		
		$totqty1=0;$totalnom1=0;$totaldisk1=0;$totalnett1=0;
		$sql = "select distinct b.notagirid,b.notagirno,i.fullname as customer,d.gireturdate,j.paycode,h.taxid,b.headernote
					from notagirpro a
					left join notagir b on b.notagirid=a.notagirid
					left join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					left join giretur d on d.gireturid=b.gireturid
					left join product e on e.productid=a.productid
					left join gidetail f on f.gidetailid=c.gidetailid
					left join giheader g on g.giheaderid=d.giheaderid
					left join soheader h on h.soheaderid=g.soheaderid
					left join addressbook i on i.addressbookid=h.addressbookid
					left join paymentmethod j on j.paymentmethodid=h.paymentmethodid
					left join sloc k on k.slocid=a.slocid
					left join employee l on l.employeeid = h.employeeid
					where k.sloccode like '%".$sloc."%' and b.recordstatus = 3 and i.fullname like '%".$customer."%' and 
					h.companyid = ".$companyid." and e.productname like '%".$product."%' and l.fullname like '%".$employee."%' and
					d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
					order by notagirno";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Penjualan - Retur Per Dokumen';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		if(isset($spv) && $spv!='')
		{
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
		$this->pdf->sety($this->pdf->gety()+5);
	
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Dokumen');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['notagirno']);
			$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['customer']);
			$this->pdf->text(130,$this->pdf->gety()+5,'Tanggal');$this->pdf->text(160,$this->pdf->gety()+5,': '.date(Yii::app()->params['dateviewfromdb'], strtotime($row['gireturdate'])));
			$this->pdf->text(130,$this->pdf->gety()+10,'T.O.P');$this->pdf->text(160,$this->pdf->gety()+10,': '.$row['paycode'].' HARI');                
			$sql1 = "select *,(nominal-netto) as disc from
						(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
						g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and b.notagirid = ".$row['notagirid']." 
						and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)z order by notagirno,notagirproid";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$i=0;$totqty=0;$totalnom=0;$totaldisk=0;$totalnett=0;
			$this->pdf->sety($this->pdf->gety()+12);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,20,20,30,50));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Harga','Jumlah','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
		
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['productname'],
					Yii::app()->format->formatNumber($row1['qty']),
					Yii::app()->format->formatCurrency($row1['price']/$per),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					$row1['headernote'],
				));
				$totqty += $row1['qty'];
				$totalnom += $row1['nominal']/$per;
				$totaldisk += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnett += $row1['netto']/$per;

			}
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','Keterangan : '.$row['headernote'],
				Yii::app()->format->formatNumber($totqty),
				'','Nominal',
				Yii::app()->format->formatCurrency($totalnom),
			));
		
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','','',
				'','Diskon',
				Yii::app()->format->formatCurrency($totaldisk),
			));
		
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','','',
				'','Netto',
				Yii::app()->format->formatCurrency($totalnett),
			));
						
			$totqty1 += $totqty;
			$totalnom1 += $totalnom;
			$totaldisk1 += $totaldisk;
			$totalnett1 += $totalnett;			
			$this->pdf->checkPageBreak(20);
		}

		$this->pdf->coldetailalign = array('C','R','R','R','R');
		$this->pdf->setwidths(array(40,30,40,40,40));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'TOTAL RETUR PENJUALAN ',
			'QTY  '.Yii::app()->format->formatNumber($totqty1),
			'NOMINAL  '.Yii::app()->format->formatCurrency($totalnom1),
			'DISKON  '.Yii::app()->format->formatCurrency($totaldisk1),
			'NETTO  '.Yii::app()->format->formatCurrency($totalnett1),						
		));
		$this->pdf->sety($this->pdf->gety()+10);			
		
		$this->pdf->coldetailalign = array('C','R','R','R','R');
		$this->pdf->setwidths(array(30,30,45,40,45));
		$this->pdf->setFont('Arial','BI',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			'QTY  '.Yii::app()->format->formatNumber($totalqty1-$totqty1),
			'NOMINAL  '.Yii::app()->format->formatCurrency($total1-$totalnom1),
			'DISKON  '.Yii::app()->format->formatCurrency($totaldisc1-$totaldisk1),
			'NETTO  '.Yii::app()->format->formatCurrency($totalnetto1-$totalnett1),
		));
		
		$this->pdf->Output();
	}
	//26
	public function RekapPenjualanReturPenjualanPerDokumen($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and c.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$sql = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
				(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
						where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
                  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
                  e.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by invoiceno
					)z group by invoiceno
		"; 
		
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Dokumen';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();
			
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+8);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,22,20,40,30,25,25,25));
		$this->pdf->colheader = array('No','No Bukti','Tanggal','Customer','Nominal','Disc','Jumlah','Keterangan');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','L','L','R','R','R','L');		
		$total = 0;$i=0;$totalqty=0;
		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',7);
			$this->pdf->row(array(
				$i,$row['invoiceno'],
				date(Yii::app()->params['dateviewfromdb'], strtotime($row['invoicedate'])),
				$row['fullname'],
				Yii::app()->format->formatCurrency($row['nominal']/$per),
				Yii::app()->format->formatCurrency($row['disc']/$per),
				Yii::app()->format->formatCurrency($row['netto']/$per),
				$row['headernote']
			));				
			$totalnominal1 += $row['nominal']/$per;
			$totaldisc1 += $row['disc']/$per;
			$totaljumlah1 += $row['netto']/$per;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(40,40,40,40));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'TOTAL PENJUALAN',
			'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
			'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
			'JUMLAH : '.Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$sqlo = "select *, sum(nom) as nominal, sum(nett) as netto from
						(select distinct a.notagirproid,b.notagirno,a.qty,
						g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
						)z group by notagirno
		";
		$dataReadero=Yii::app()->db->createCommand($sqlo)->queryAll();
            
		foreach($dataReadero as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		
		$this->pdf->title='Rekap Retur Penjualan Per Dokumen';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');     
		
		if(isset($spv) && $spv!='')
		{
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();
			
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
		$i=0;

		$this->pdf->sety($this->pdf->gety()+10);
		$this->pdf->setFont('Arial','B',10);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,24,30,40,30,25,30));
		$this->pdf->colheader = array('No','Dokumen','Tanggal','Customer','Nominal','Diskons','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','L','L','R','R','R');
		
		foreach($dataReadero as $row)
		{
			$i+=1;
			$this->pdf->SetFont('Arial','',8);
			$this->pdf->row(array(
				$i,$row['notagirno'],
				$row['gireturdate'],
				$row['fullname'],
				Yii::app()->format->formatCurrency($row['nominal']/$per),
				Yii::app()->format->formatCurrency(($row['nominal']/$per) - ($row['netto']/$per)),
				Yii::app()->format->formatCurrency($row['netto']/$per),
			));
			$totalnominal2 += $row['nominal']/$per;
			$totalppn2 += ($row['nominal']/$per) - ($row['netto']/$per);
			$totaljumlah2 += $row['netto']/$per;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'','','','TOTAL RETUR',
			Yii::app()->format->formatCurrency($totalnominal2),
			Yii::app()->format->formatCurrency($totalppn2),
			Yii::app()->format->formatCurrency($totaljumlah2),
		));			
		$this->pdf->setFont('Arial','B',10);
		$this->pdf->colalign = array('C','R','R','R');
		$this->pdf->setwidths(array(40,50,50,50));
		$this->pdf->row(array(
			'GRAND TOTAL',
			'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1-$totalnominal2),
			'DISKON : '.Yii::app()->format->formatCurrency($totaldisc1-$totalppn2),
			'JUMLAH : '.Yii::app()->format->formatCurrency($totaljumlah1-$totaljumlah2),
		));
		$this->pdf->Output();
	}
	//27
	public function RekapPenjualanReturPenjualanPerCustomer($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;$totalnominal2=0;$totaldiskon2=0;$totalnetto2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1."  
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
            
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
    
		$this->pdf->title='Rekap Penjualan - Retur Per Customer';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}

		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
			$sql1 = "select * from
							(select invoiceno as dokumen,invoicedate as tanggal,sum(nom) as nominal,(sum(nom)-sum(nett)) as diskon,sum(nett) as netto,headernote from
							(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						  from gidetail zzb 
						  join sodetail zza on zza.sodetailid = zzb.sodetailid
						  where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							and d.addressbookid = ".$row['addressbookid']." order by invoiceno)z group by invoiceno
							union
							select notagirno as dokumen,gireturdate as tanggal,sum(nom) as nominal,sum(disc) as diskon,sum(nett) as netto,headernote from
							(select distinct a.notagirproid,b.notagirno,(-1*a.qty*g.price) as nom,(-1*a.qty*g.price)-(-1*a.qty*a.price) as disc,
							(-1*a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							order by notagirno,notagirproid
							)z group by notagirno)zz order by dokumen
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$totalppn = 0;$totalnominal=0;$total=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+15);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,24,20,25,25,25,55));
			$this->pdf->colheader = array('No','No Dokumen','Tanggal','Nominal','Diskon','Netto','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','L');
			$this->pdf->setFont('Arial','',8);
			$totalnominal = 0;
			$totaldiskon = 0;
			$totalnetto = 0;
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['dokumen'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row1['tanggal'])),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency($row1['diskon']/$per),
					Yii::app()->format->formatCurrency($row1['netto']/$per),$row1['headernote']
				));
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += $row1['diskon']/$per;
				$totalnetto += $row1['netto']/$per;
			}
			$this->pdf->row(array(
				'','Total ','',
				Yii::app()->format->formatCurrency($totalnominal),
				Yii::app()->format->formatCurrency($totaldiskon),
				Yii::app()->format->formatCurrency($totalnetto),
			));
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(40,40,50,40));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'TOTAL',
			'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
			'DISKON : '.Yii::app()->format->formatCurrency($totaldiskon1),
			'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1),
		));
					
		$this->pdf->Output();
  }
	//28
	public function RekapPenjualanReturPenjualanPerSales($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct employeeid,fullname from
			(select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Sales';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$sql1 = "select distinct fullname,sum(nominal) as nominal,sum(disc) as disc,sum(netto) as netto from
							(select fullname,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
                  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
                  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
					and e.employeeid = ".$row['employeeid'].")z group by fullname
					union
					select fullname, -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							order by notagirno,notagirproid
							)z group by fullname) zz group by fullname order by fullname
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,80,30,30,30,30));
			$this->pdf->colheader = array('No','Nama Customer','Nominal','Disc','Netto');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totalnominal = 0;
			$totaldisc = 0;
			$total = 0;
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['fullname'],
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency($row1['disc']/$per),
					Yii::app()->format->formatCurrency($row1['netto']/$per),
				));
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += $row1['disc']/$per;
				$total += $row1['netto']/$per;
			}
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
				'','TOTAL SALES',
				Yii::app()->format->formatCurrency($totalnominal),
				Yii::app()->format->formatCurrency($totaldisc),
				Yii::app()->format->formatCurrency($total),
			));
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totaljumlah1 += $total;
			$this->pdf->sety($this->pdf->gety()+5);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(30,50,50,50));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'TOTAL',
			'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
			'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
			'NETTO : '.Yii::app()->format->formatCurrency($totaljumlah1),
		));
			
		$this->pdf->Output();
	}
	//29
	public function RekapPenjualanReturPenjualanPerBarang($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1 = 0;$totalnominal1 = 0;$totaldiskon1 = 0;$totalnetto1 = 0;	
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct materialgroupid,materialgroupcode,description from 
						(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and	zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and ze.productname like '%".$product."%' and zg.areaname like '%".$salesarea."%' and zk.description like '%".$materialgroup."%' and zh.sloccode like '%".$sloc."%'
						and	zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
						union
						select distinct o.materialgroupid,o.materialgroupcode,o.description
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						join materialgroup o on o.materialgroupid=n.materialgroupid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%' and o.description like '%".$materialgroup."%' and i.productname like '%".$product."%'
						and d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
            
		$this->pdf->title='Rekap Penjualan - Retur Per Barang';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 

		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		$this->pdf->sety($this->pdf->gety()+0);
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Material Group');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['description']);
			$sql1 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
							(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and j.materialgroupid = ".$row['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							)z group by productname
							union
							select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and n.materialgroupid = ".$row['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							)z group by productname )zz 
							group by productname order by productname
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+15);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,15,20,30,25,30));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
               
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['productname'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qty']),
					Yii::app()->format->formatCurrency($row1['harga']/$per),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
					Yii::app()->format->formatCurrency($row1['netto']/$per),
				));
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;
			}
			$this->pdf->row(array(
				'','Total : '.$row['description'],
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty),'',
				Yii::app()->format->formatCurrency($totalnominal),
				Yii::app()->format->formatCurrency($totaldiskon),
				Yii::app()->format->formatCurrency($totalnetto),
			));
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->colalign = array('C','R','R','R');
		$this->pdf->setwidths(array(30,30,45,40,45));
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->row(array(
			'GRAND TOTAL',
			'QTY  '.Yii::app()->format->formatNumber($totalqty1),
			'NOMINAL  '.Yii::app()->format->formatCurrency($totalnominal1),
			'DISKON  '.Yii::app()->format->formatCurrency($totaldiskon1),
			'NETTO  '.Yii::app()->format->formatCurrency($totalnetto1),
		));
		
		$this->pdf->Output();
  }
	//30
	public function RekapPenjualanReturPenjualanPerArea($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1 = 0;$totalnominal1 = 0;$totaldiskon1 = 0;$totalnetto1 = 0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Area';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
    
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
     
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Area');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['areaname']);
			$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'	".$spv1."	".$isdisplay1."				
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							)z order by description
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach($dataReader1 as $row1)
			{
				$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
				$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
								)z group by productname
								union
								select productname,-1*sum(qty),-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,a.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
								)z group by productname)zz 
								group by productname order by productname
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$totalnetto = 0;$totalnominal=0;$totaldiskon=0;$i=0;$totalqty=0;
				$this->pdf->sety($this->pdf->gety()+20);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,80,20,30,20,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Diskon','Netto');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row2['productname'],
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qty']),
						Yii::app()->format->formatCurrency($row2['nominal']/$per),
						Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
						Yii::app()->format->formatCurrency($row2['netto']/$per),
					));
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldiskon += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;
				}
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','Total '.$row1['description'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty),
					Yii::app()->format->formatCurrency($totalnominal),
					Yii::app()->format->formatCurrency($totaldiskon),
					Yii::app()->format->formatCurrency($totalnetto),
				));
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldiskon1 += $totaldiskon;
				$totalnetto1 += $totalnetto;
				$this->pdf->checkPageBreak(20);
			}
		}
		$this->pdf->colalign = array('C','R','R','R');
		$this->pdf->setwidths(array(30,30,45,40,45));
		$this->pdf->setFont('Arial','BI',9);
		$this->pdf->sety($this->pdf->gety()+10);
		$this->pdf->row(array(
		'GRAND TOTAL :',
		'QTY  '.Yii::app()->format->formatCurrency($totalqty1),
		'NOMINAL  '.Yii::app()->format->formatCurrency($totalnominal1),
		'DISKON  '.Yii::app()->format->formatCurrency($totaldiskon1),
		'NETTO  '.Yii::app()->format->formatCurrency($totalnetto1),
		));
		
		$this->pdf->Output();
	}
	//31
	public function RekapPenjualanReturPenjualanPerCustomerPerBarangTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1."
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang - Total';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,20,35,30,35));
			$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
			$this->pdf->RowHeader();
			
			$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from
							(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							)zz group by barang
							union
							select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							) z	group by barang) zz group by barang order by barang
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
				
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['barang'],
					Yii::app()->format->formatNumber($row1['qty']),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
					Yii::app()->format->formatCurrency($row1['netto']/$per),
				));
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;						
			}
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'','TOTAL CUSTOMER '.$row['fullname'],
				Yii::app()->format->formatNumber($totalqty),
				Yii::app()->format->formatCurrency($totalnominal),
				Yii::app()->format->formatCurrency($totaldisc),
				Yii::app()->format->formatCurrency($totalnetto),
			));
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			$this->pdf->sety($this->pdf->gety()+3);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('L','R','R','R','R');
		$this->pdf->setwidths(array(70,20,35,30,35));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			Yii::app()->format->formatNumber($totalqty1),
			Yii::app()->format->formatCurrency($totalnominal1),
			Yii::app()->format->formatCurrency($totaldisc1),
			Yii::app()->format->formatCurrency($totalnetto1),
		));
		
		$this->pdf->Output();
	}
	//32
	public function RekapPenjualanReturPenjualanPerCustomerPerBarangRincian($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid4 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
			$spvid4 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay4 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
			$isdisplay4 = "";
		}
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang - Rincian';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							)z order by description
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Material Group');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row1['description']);
				$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." and d.addressbookid = ".$row['addressbookid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid4." ".$isdisplay4."
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
								)z group by productname)zz group by productname order by productname
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,20,30,20,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totalqty = 0;
				$totaldisc = 0;
				$totalnetto = 0;
							
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row2['productname'],
						Yii::app()->format->formatNumber($row2['qty']),
						Yii::app()->format->formatCurrency($row2['harga']/$per),
						Yii::app()->format->formatCurrency($row2['nominal']/$per),
						Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
						Yii::app()->format->formatCurrency($row2['netto']/$per),
					));
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;
					
				}
				$this->pdf->row(array(
					'','Total '.$row1['description'],
					Yii::app()->format->formatNumber($totalqty),'',
					Yii::app()->format->formatCurrency($totalnominal),
					Yii::app()->format->formatCurrency($totaldisc),
					Yii::app()->format->formatCurrency($totalnetto),
				));
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totaljumlah1 += $totalnetto;
								
				$this->pdf->checkPageBreak(20);
			}

		}
		$this->pdf->colalign = array('C','C','C','C','C');
		$this->pdf->setwidths(array(20,40,40,40,40));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'TOTAL',
			'QTY : '.Yii::app()->format->formatNumber($totalqty1),
			'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
			'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
			'JUMLAH : '.Yii::app()->format->formatCurrency($totaljumlah1),
		));
		$this->pdf->Output();
	}
	//33
	public function RekapPenjualanReturPenjualanPerSalesPerBarangTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct employeeid,fullname from
			(select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Sales Per Barang - Total';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,20,35,30,35));
			$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
			$this->pdf->RowHeader();
				
			$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from 
							(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and e.employeeid = ".$row['employeeid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							)zz group by barang
							union
							select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							) z group by barang) zz group by barang order by barang
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
				
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['barang'],
					Yii::app()->format->formatNumber($row1['qty']),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
					Yii::app()->format->formatCurrency($row1['netto']/$per),
				));
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;						
			}
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'','TOTAL SALES '.$row['fullname'],
				Yii::app()->format->formatNumber($totalqty),
				Yii::app()->format->formatCurrency($totalnominal),
				Yii::app()->format->formatCurrency($totaldisc),
				Yii::app()->format->formatCurrency($totalnetto),
			));
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			$this->pdf->sety($this->pdf->gety()+3);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('L','R','R','R','R');
		$this->pdf->setwidths(array(70,20,35,30,35));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			Yii::app()->format->formatCurrency($totalqty1),
			Yii::app()->format->formatCurrency($totalnominal1),
			Yii::app()->format->formatCurrency($totaldisc1),
			Yii::app()->format->formatCurrency($totalnetto1),
		));
					
		$this->pdf->Output();
	}
	//34
	public function RekapPenjualanReturPenjualanPerSalesPerBarangRincian($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid4 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
			$spvid4 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay4 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
			$isdisplay4 = "";
		}
		$sql = "select distinct employeeid,fullname from
			(select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Sales Per Barang (Rincian)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['fullname']);
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,15,20,30,25,30));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
			$this->pdf->RowHeader();
			$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
			$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zd.employeeid = ".$row['employeeid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							)z order by description
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','B',9);
				$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
				$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." and e.employeeid = ".$row['employeeid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid4." ".$isdisplay4."
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
								)z group by productname)zz group by productname order by productname
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+7);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totalqty = 0;
				$totaldisc = 0;
				$totalnetto = 0;
					
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row2['productname'],
						Yii::app()->format->formatNumber($row2['qty']),
						Yii::app()->format->formatCurrency($row2['harga']/$per),
						Yii::app()->format->formatCurrency($row2['nominal']/$per),
						Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
						Yii::app()->format->formatCurrency($row2['netto']/$per),
					));
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;						
				}
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row1['description'],
					Yii::app()->format->formatNumber($totalqty),'',
					Yii::app()->format->formatCurrency($totalnominal),
					Yii::app()->format->formatCurrency($totaldisc),
					Yii::app()->format->formatCurrency($totalnetto),
				));
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totalnetto1 += $totalnetto;
										
			}
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL SALES '.$row['fullname'],
				Yii::app()->format->formatNumber($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
			));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('C','R','R','R','R');
		$this->pdf->setwidths(array(70,20,35,30,35));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			Yii::app()->format->formatNumber($totalqty2),
			Yii::app()->format->formatCurrency($totalnominal2),
			Yii::app()->format->formatCurrency($totaldisc2),
			Yii::app()->format->formatCurrency($totalnetto2),
		));
		
		$this->pdf->Output();
	}
	//35
	public function RekapPenjualanReturPenjualanPerAreaPerBarangTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Area Per Barang - Total';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['areaname']);
			$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,20,35,30,35));
			$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
			$this->pdf->RowHeader();
			
			$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from
							(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and f.salesareaid = ".$row['salesareaid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							)zz group by barang
							union
							select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							) z group by barang) zz group by barang order by barang
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
				
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['barang'],
					Yii::app()->format->formatNumber($row1['qty']),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
					Yii::app()->format->formatCurrency($row1['netto']/$per),
				));
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;						
			}
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
					'','TOTAL AREA '.$row['areaname'],
					Yii::app()->format->formatNumber($totalqty),
					Yii::app()->format->formatCurrency($totalnominal),
					Yii::app()->format->formatCurrency($totaldisc),
					Yii::app()->format->formatCurrency($totalnetto),
				));
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totalnetto1 += $totalnetto;
				$this->pdf->sety($this->pdf->gety()+3);	
				$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('L','R','R','R','R');
		$this->pdf->setwidths(array(70,20,35,30,35));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			Yii::app()->format->formatNumber($totalqty1),
			Yii::app()->format->formatCurrency($totalnominal1),
			Yii::app()->format->formatCurrency($totaldisc1),
			Yii::app()->format->formatCurrency($totalnetto1),
		));
		
		$this->pdf->Output();
	}
	//36
	public function RekapPenjualanReturPenjualanPerAreaPerBarangRincian($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Area Per Barang (Rincian)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['areaname']);
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,15,20,30,25,30));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
			$this->pdf->RowHeader();
			$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
			$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid1." ".$isdisplay1."
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							)z order by description
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','B',9);
				$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
				$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
							(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']." 
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							)z group by productname
							union
							select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
							and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							)z group by productname)zz group by productname order by productname
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+7);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totalqty = 0;
				$totaldisc = 0;
				$totalnetto = 0;
				
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row2['productname'],
						Yii::app()->format->formatNumber($row2['qty']),
						Yii::app()->format->formatCurrency($row2['harga']/$per),
						Yii::app()->format->formatCurrency($row2['nominal']/$per),
						Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
						Yii::app()->format->formatCurrency($row2['netto']/$per),
					));
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;						
				}
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row1['description'],
					Yii::app()->format->formatNumber($totalqty),'',
					Yii::app()->format->formatCurrency($totalnominal),
					Yii::app()->format->formatCurrency($totaldisc),
					Yii::app()->format->formatCurrency($totalnetto),
				));
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totalnetto1 += $totalnetto;
			}
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL AREA '.$row['areaname'],
				Yii::app()->format->formatNumber($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
		}
		
		$this->pdf->colalign = array('C','R','R','R','R');
		$this->pdf->setwidths(array(70,20,35,30,35));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			Yii::app()->format->formatNumber($totalqty2),
			Yii::app()->format->formatCurrency($totalnominal2),
			Yii::app()->format->formatCurrency($totaldisc2),
			Yii::app()->format->formatCurrency($totalnetto2),
		));
		
		$this->pdf->Output();
	}
	//37
	public function RincianSalesOrderPerDokumen($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
    if(isset($spv) && $spv!='')
		{
			$spvid = " and (a.spvid = '".$spv."' or a.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay = " and a.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay = "";
		}
		$sql = "select a.soheaderid,a.sodate,a.sono,b.fullname as customer,d.fullname as sales,g.slocid,a.headernote,
						c.paydays
						from soheader a
						join addressbook b on b.addressbookid = a.addressbookid
						join paymentmethod c on c.paymentmethodid = a.paymentmethodid
						join employee d on d.employeeid = a.employeeid
						join salesarea e on e.salesareaid = b.salesareaid
						join sodetail f on f.soheaderid = a.soheaderid
						join sloc g on g.slocid = f.slocid
						where a.recordstatus = 6 and b.fullname like '%".$customer."%' and a.companyid = ".$companyid." and 
						d.fullname like '%".$employee."%' ".$spvid." ".$isdisplay." and e.areaname like '%".$salesarea."%' and 
						a.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
						'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and f.productid in 
						(select x.productid 
						from productplant x 
						join product xx on xx.productid = x.productid 
						join sloc xa on xa.slocid = x.slocid
						where xx.productname like '%".$product."%' and 
						xa.sloccode like '%".$sloc."%') group by soheaderid
		";	
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Sales Order Per Dokumen';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'No SO');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['sono']);
			$this->pdf->text(10,$this->pdf->gety()+15,'Sales');$this->pdf->text(30,$this->pdf->gety()+15,': '.$row['sales']);
			$this->pdf->text(10,$this->pdf->gety()+20,'Customer');$this->pdf->text(30,$this->pdf->gety()+20,': '.$row['customer']);
			$this->pdf->text(150,$this->pdf->gety()+10,'Tgl SO');$this->pdf->text(180,$this->pdf->gety()+10,': '.date(Yii::app()->params['dateviewfromdb'], strtotime($row['sodate'])));
			$this->pdf->text(150,$this->pdf->gety()+20,'T.O.P');$this->pdf->text(180,$this->pdf->gety()+20,': '.$row['paydays'].' HARI');
			$sql1 = "select b.productname, a.qty,c.uomcode,a.price,(qty * price) + (e.taxvalue * qty * price / 100) as jumlah,
						gettotalamountdiscso(a.soheaderid) as amountafterdisc
						from sodetail a 
						inner join product b on b.productid = a.productid
						inner join unitofmeasure c on c.unitofmeasureid = a.unitofmeasureid
						left join currency d on d.currencyid = a.currencyid
						left join soheader f on f.soheaderid = a.soheaderid 
						left join tax e on e.taxid = f.taxid
						where b.productname like '%".$product."%' and a.soheaderid = '".$row['soheaderid']."'
			";
				
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$total = 0;$i=0;$totalqty=0;
			$this->pdf->sety($this->pdf->gety()+25);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,80,20,20,30,30));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Satuan','Harga','Jumlah');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','C','R','R');
			$this->pdf->setFont('Arial','',8);
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['productname'],
					Yii::app()->format->formatNumber($row1['qty']),$row1['uomcode'],
					Yii::app()->format->formatCurrency($row1['price']/$per),
					Yii::app()->format->formatCurrency($row1['jumlah']/$per),
				));
				$totalqty += $row1['qty'];
				$total += $row1['jumlah']/$per;
				$disc = ($row1['amountafterdisc']/$per) - $total;
			}
			$this->pdf->row(array(
				'','Total',
				Yii::app()->format->formatNumber($totalqty),'',
				'',
				Yii::app()->format->formatCurrency($total),
			));
			$this->pdf->row(array(
				'','',
				'',
				'',
				'Disc',
				Yii::app()->format->formatCurrency($disc),
			));
			$this->pdf->row(array(
				'','',
				'',
				'',
				'Netto',
				Yii::app()->format->formatCurrency($row1['amountafterdisc']/$per),
			));
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->Output();
	}
	//38
	public function RincianSalesOrderOutstanding($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnetto=0;
    if(isset($spv) && $spv!='')
		{
			$spvid = " and (a.spvid = '".$spv."' or a.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay = " and a.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay = "";
		}
		$sql = "select a.soheaderid,a.sodate,a.sono,b.fullname as customer,d.fullname as sales,g.slocid,a.headernote,
						c.paydays
						from soheader a
						join addressbook b on b.addressbookid = a.addressbookid
						join paymentmethod c on c.paymentmethodid = a.paymentmethodid
						join employee d on d.employeeid = a.employeeid
						join salesarea e on e.salesareaid = b.salesareaid
						join sodetail f on f.soheaderid = a.soheaderid
						join sloc g on g.slocid = f.slocid
						where a.recordstatus = 6 and f.qty > f.giqty and a.companyid = ".$companyid." and 
						d.fullname like '%".$employee."%' ".$spvid." ".$isdisplay." and b.fullname like '%".$customer."%' and e.areaname like '%".$salesarea."%' and 
						a.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
						'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and f.productid in 
						(select x.productid 
						from sodetail x 
						join product xx on xx.productid = x.productid 
						join sloc xa on xa.slocid = x.slocid
						where xx.productname like '%".$product."%' and x.giqty < x.qty and xx.isstock = 1 and 
						xa.sloccode like '%".$sloc."%') group by soheaderid
		";	
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Sales Order Outstanding';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		
		$this->pdf->AddPage('P'); 
      
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
      
		foreach($dataReader as $row)
		{
			$this->pdf->sety($this->pdf->gety() + 5);
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'No SO');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['sono']);
			$this->pdf->text(10,$this->pdf->gety()+15,'Sales');$this->pdf->text(30,$this->pdf->gety()+15,': '.$row['sales']);
			$this->pdf->text(10,$this->pdf->gety()+20,'Customer');$this->pdf->text(30,$this->pdf->gety()+20,': '.$row['customer']);
			$this->pdf->text(150,$this->pdf->gety()+10,'Tgl SO');$this->pdf->text(180,$this->pdf->gety()+10,': '.date(Yii::app()->params['dateviewfromdb'], strtotime($row['sodate'])));
			$this->pdf->text(150,$this->pdf->gety()+20,'T.O.P');$this->pdf->text(180,$this->pdf->gety()+20,': '.$row['paydays'].' HARI');
			
			$sql1 = "select productname, giqty, qty, price, uomcode, sisa*price as jumlah, amountafterdisc, stock,stockissource from (select b.productname, a.qty, a.giqty, c.uomcode,a.price, a.qty-ifnull(a.giqty,0) as sisa, GetTotalAmountDiscPendinganSO(a.soheaderid) as amountafterdisc, (select sum(qty) from productstock x where x.productid = a.productid and x.slocid = a.slocid and x.unitofmeasureid = a.unitofmeasureid) as stock,(select sum(qty) from productstock x 
									join productplant y on y.productid = x.productid and y.slocid = x.slocid and y.unitofissue = x.unitofmeasureid and y.issource=1
									join sloc z on z.slocid = y.slocid 
									where x.productid = a.productid and x.unitofmeasureid = a.unitofmeasureid and z.plantid = j.plantid) as stockissource
									from sodetail a 
									inner join sloc j on j.slocid=a.slocid
									inner join product b on b.productid = a.productid
									inner join unitofmeasure c on c.unitofmeasureid = a.unitofmeasureid
									left join currency d on d.currencyid = a.currencyid
									left join soheader f on f.soheaderid = a.soheaderid 
									left join tax e on e.taxid = f.taxid
									join product g on g.productid = a.productid
									where b.productname like '%".$product."%' and g.isstock = 1 and a.soheaderid = '".$row['soheaderid']."') z 
									where sisa > 0
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
			$total = 0;$i=0;$totalqty=0;$totalgiqty=0;$totalstock=0;$totalstockissource=0;
			
			$this->pdf->sety($this->pdf->gety()+25);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,62,15,15,15,15,15,25,25));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Qty Gi','Stock',' Sumber','Satuan','Harga','Jumlah');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','C','C','R','R');
			$this->pdf->setFont('Arial','',8);
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['productname'],
					Yii::app()->format->formatNumber($row1['qty']),
					Yii::app()->format->formatNumber($row1['giqty']),
					Yii::app()->format->formatNumber($row1['stock']),
					Yii::app()->format->formatNumber($row1['stockissource']),
					$row1['uomcode'],
					Yii::app()->format->formatCurrency($row1['price']/$per),
					Yii::app()->format->formatCurrency($row1['jumlah']/$per),
				));
				$totalqty += $row1['qty'];
				$totalgiqty += $row1['giqty'];
				$totalstock += $row1['stock'];
				$totalstockissource += $row1['stockissource'];
				$total += $row1['jumlah']/$per;
				$disc = ($row1['amountafterdisc']/$per) - $total;
			}
			$this->pdf->row(array(
				'','Total',
				Yii::app()->format->formatNumber($totalqty),
				Yii::app()->format->formatNumber($totalgiqty),
				Yii::app()->format->formatNumber($totalstock),
				Yii::app()->format->formatNumber($totalstockissource),
										'','',
				Yii::app()->format->formatCurrency($total),
			));
			$this->pdf->row(array(
				'','',
				'',
				'',
				'',
				'',
				'',
				'Disc',
				Yii::app()->format->formatCurrency($disc),
			));
			$this->pdf->row(array(
				'','',
				'',
				'',
				'',
				'',
				'',
				'Netto',
				Yii::app()->format->formatCurrency($row1['amountafterdisc']/$per),
			));
			$totalnetto+=$row1['amountafterdisc']/$per;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->sety($this->pdf->gety()+10);
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->setwidths(array(10,65,85,30));
		$this->pdf->coldetailalign = array('L','R','R','R');
		$this->pdf->row(array(
			'',
			'Netto',
			Yii::app()->format->formatCurrency($totalnetto),
			'',
		));
		
		$this->pdf->Output();
	}
	//39
	public function RekapSuratJalanBelumDibuatkanFaktur($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select a.gino,a.gidate,c.fullname as customer,d.fullname as sales,a.headernote,ifnull((select sum(qty) from gireturdetail x join giretur z on z.gireturid = x.gireturid
        where z.giheaderid = a.giheaderid and z.gireturdate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and z.recordstatus=3),0) as qtyretur
                        from giheader a
                        join soheader b on b.soheaderid = a.soheaderid
                        join addressbook c on c.addressbookid = b.addressbookid
                        join employee d on d.employeeid = b.employeeid
                        join salesarea e on e.salesareaid = c.salesareaid
                        join gidetail f on f.giheaderid = a.giheaderid
                        join sloc g on g.slocid = f.slocid
                        join product h on h.productid = f.productid
                        where a.giheaderid not in
                        (select t.giheaderid from invoice t)
                        and a.gino is not null
                        and b.companyid = ".$companyid." and g.sloccode like '%".$sloc."%' and c.fullname like '%".$customer."%' and
                         d.fullname like '%".$employee."%' ".$spvid." and e.areaname like '%".$salesarea."%' and h.productname like '%".$product."%' and
                         a.gidate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
			and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
            and a.recordstatus > 0 group by gino,customer,sales order by gino";
		
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Surat Jalan Belum Dibuatkan Faktur';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
      
            if(isset($spv) && $spv!='')
              {                
                $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
                $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
                $this->pdf->SetFont('Arial','B',10);
                $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
                $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
                $this->pdf->sety($this->pdf->gety()+5);
              }
      
			$this->pdf->setFont('Arial','B',8);
            $this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->colalign = array('C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,20,20,60,30,15,25));
			$this->pdf->colheader = array('No','No Bukti','Tanggal','Customer','Sales','Qty Retur','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','C','C','L','L','R','L');		
			$total = 0;$i=0;$totalqty=0;
			foreach($dataReader as $row)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',7);
				$this->pdf->row(array(
					$i,$row['gino'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row['gidate'])),
					$row['customer'],
					$row['sales'],
                    Yii::app()->format->formatNumber($row['qtyretur']),
					$row['headernote']
				));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}
	/*public function RekapSuratJalanBelumDibuatkanFaktur($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select a.gino,a.gidate,c.fullname as customer,d.fullname as sales,a.headernote
                        from giheader a
                        join soheader b on b.soheaderid = a.soheaderid
                        join addressbook c on c.addressbookid = b.addressbookid
                        join employee d on d.employeeid = b.employeeid
                        join salesarea e on e.salesareaid = c.salesareaid
                        join gidetail f on f.giheaderid = a.giheaderid
                        join sloc g on g.slocid = f.slocid
                        join product h on h.productid = f.productid
                        where a.recordstatus = 3
												and a.giheaderid not in
                        (select t.giheaderid from invoice t)
                        and a.gino is not null
                        and b.companyid = ".$companyid." and g.sloccode like '%".$sloc."%' and c.fullname like '%".$customer."%' and
                         d.fullname like '%".$employee."%' ".$spvid." and e.areaname like '%".$salesarea."%' and h.productname like '%".$product."%' and
                         a.gidate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
			and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by gino,customer,sales order by gino";
		
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Surat Jalan Belum Dibuatkan Faktur';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
      
            if(isset($spv) && $spv!='')
              {                
                $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
                $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
                $this->pdf->SetFont('Arial','B',10);
                $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
                $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
                $this->pdf->sety($this->pdf->gety()+5);
              }
      
			$this->pdf->setFont('Arial','B',8);
            $this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,20,20,60,55,25));
			$this->pdf->colheader = array('No','No Bukti','Tanggal','Customer','Sales','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','C','C','L','L','L');		
			$total = 0;$i=0;$totalqty=0;
			foreach($dataReader as $row)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',7);
				$this->pdf->row(array(
					$i,$row['gino'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row['gidate'])),
					$row['customer'],
					$row['sales'],
					$row['headernote']
				));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}*/ 
	//40
	public function RekapPenjualanPerCustomerPerBulanPerTahun($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
      
        if(isset($spv)&& $spv!='')
        {
          $spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
        }
        else
        {
          $spvid = "";
        }
        
        if(isset($product) && $product!='')
        {
          $product = " and (aa.giheaderid in (select a1.giheaderid from gidetail a1 join product a2 on a2.productid=a1.productid where a2.productname like '%".$product."%'))";
        }
        else
        {
          $product = "";
        } 
		$sql = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
                    join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null and z.fullname like '%".$customer."%'
                    order by fullname asc) zz
					where zz.jumlah <> 0"; 
		
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
						
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Customer Per Bulan';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
			$this->pdf->AddPage('P',array(400,140));
      
            if(isset($spv) && $spv!='')
              {                
                $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
                $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
                $this->pdf->SetFont('Arial','B',10);
                $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
                $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
                $this->pdf->sety($this->pdf->gety()+5);
              }
			
			$this->pdf->setFont('Arial','B',8);
            $this->pdf->sety($this->pdf->gety()+3);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');		
			
			foreach($dataReader as $row)
			{
				$this->pdf->setFont('Arial','',7);
				$i=$i+1;
				$this->pdf->row(array(
					$i,$row['fullname'],
					Yii::app()->format->formatCurrency($row['januari']/$per),
					Yii::app()->format->formatCurrency($row['februari']/$per),
					Yii::app()->format->formatCurrency($row['maret']/$per),
					Yii::app()->format->formatCurrency($row['april']/$per),
					Yii::app()->format->formatCurrency($row['mei']/$per),
					Yii::app()->format->formatCurrency($row['juni']/$per),
					Yii::app()->format->formatCurrency($row['juli']/$per),
					Yii::app()->format->formatCurrency($row['agustus']/$per),
					Yii::app()->format->formatCurrency($row['september']/$per),
					Yii::app()->format->formatCurrency($row['oktober']/$per),
					Yii::app()->format->formatCurrency($row['nopember']/$per),
					Yii::app()->format->formatCurrency($row['desember']/$per),
					Yii::app()->format->formatCurrency($row['jumlah']/$per)
				));
				$totaljanuari += $row['januari']/$per;
        $totalfebruari += $row['februari']/$per;
				$totalmaret += $row['maret']/$per;
				$totalapril += $row['april']/$per;
				$totalmei += $row['mei']/$per;
				$totaljuni += $row['juni']/$per;
				$totaljuli += $row['juli']/$per;
				$totalagustus += $row['agustus']/$per;
				$totalseptember += $row['september']/$per;
				$totaloktober += $row['oktober']/$per;
				$totalnopember += $row['nopember']/$per;
				$totaldesember += $row['desember']/$per;
				$totaljumlah += $row['jumlah']/$per;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
					'','TOTAL',
						Yii::app()->format->formatCurrency($totaljanuari),
						Yii::app()->format->formatCurrency($totalfebruari),
						Yii::app()->format->formatCurrency($totalmaret),
						Yii::app()->format->formatCurrency($totalapril),
						Yii::app()->format->formatCurrency($totalmei),
						Yii::app()->format->formatCurrency($totaljuni),
						Yii::app()->format->formatCurrency($totaljuli),
						Yii::app()->format->formatCurrency($totalagustus),
						Yii::app()->format->formatCurrency($totalseptember),
						Yii::app()->format->formatCurrency($totaloktober),
						Yii::app()->format->formatCurrency($totalnopember),
						Yii::app()->format->formatCurrency($totaldesember),
						Yii::app()->format->formatCurrency($totaljumlah),
			));
			$this->pdf->Output();
	}
	//41
	public function RekapReturPenjualanPerCustomerPerBulanPerTahun($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
        if(isset($spv)&& $spv!='')
        {
          $spvid = " and (e.spvid='".$spv."' or e.employeeid='".$spv."')";
        }
        else
        {
          $spvid = "";
        }
        
        if(isset($product) && $product!='')
        {
          $product = " and (d.giheaderid in (select a1.giheaderid from gidetail a1 join product a2 on a2.productid=a1.productid where a2.productname like '%".$product."%'))";
        }
        else
        {
          $product = "";
        }  
		$sql = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product." and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$product."  and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null and z.fullname like '%".$customer."%'
                order by fullname asc) zz
				where zz.jumlah <> 0"; 
		
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
						
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Retur Penjualan Per Customer Per Bulan';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
			$this->pdf->AddPage('P',array(400,140));
			
            if(isset($spv) && $spv!='')
              {                
                $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
                $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
                $this->pdf->SetFont('Arial','B',10);
                $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
                $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
                $this->pdf->sety($this->pdf->gety()+5);
              }
      
			$this->pdf->setFont('Arial','B',8);
            $this->pdf->sety($this->pdf->gety()+3);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');		
			
			foreach($dataReader as $row)
			{
				$this->pdf->setFont('Arial','',7);
				$i=$i+1;
				$this->pdf->row(array(
					$i,$row['fullname'],
					Yii::app()->format->formatCurrency($row['januari']/$per),
					Yii::app()->format->formatCurrency($row['februari']/$per),
					Yii::app()->format->formatCurrency($row['maret']/$per),
					Yii::app()->format->formatCurrency($row['april']/$per),
					Yii::app()->format->formatCurrency($row['mei']/$per),
					Yii::app()->format->formatCurrency($row['juni']/$per),
					Yii::app()->format->formatCurrency($row['juli']/$per),
					Yii::app()->format->formatCurrency($row['agustus']/$per),
					Yii::app()->format->formatCurrency($row['september']/$per),
					Yii::app()->format->formatCurrency($row['oktober']/$per),
					Yii::app()->format->formatCurrency($row['nopember']/$per),
					Yii::app()->format->formatCurrency($row['desember']/$per),
					Yii::app()->format->formatCurrency($row['jumlah']/$per)
				));
				$totaljanuari += $row['januari']/$per;
        $totalfebruari += $row['februari']/$per;
				$totalmaret += $row['maret']/$per;
				$totalapril += $row['april']/$per;
				$totalmei += $row['mei']/$per;
				$totaljuni += $row['juni']/$per;
				$totaljuli += $row['juli']/$per;
				$totalagustus += $row['agustus']/$per;
				$totalseptember += $row['september']/$per;
				$totaloktober += $row['oktober']/$per;
				$totalnopember += $row['nopember']/$per;
				$totaldesember += $row['desember']/$per;
				$totaljumlah += $row['jumlah']/$per;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
					'','TOTAL',
						Yii::app()->format->formatCurrency($totaljanuari),
						Yii::app()->format->formatCurrency($totalfebruari),
						Yii::app()->format->formatCurrency($totalmaret),
						Yii::app()->format->formatCurrency($totalapril),
						Yii::app()->format->formatCurrency($totalmei),
						Yii::app()->format->formatCurrency($totaljuni),
						Yii::app()->format->formatCurrency($totaljuli),
						Yii::app()->format->formatCurrency($totalagustus),
						Yii::app()->format->formatCurrency($totalseptember),
						Yii::app()->format->formatCurrency($totaloktober),
						Yii::app()->format->formatCurrency($totalnopember),
						Yii::app()->format->formatCurrency($totaldesember),
						Yii::app()->format->formatCurrency($totaljumlah),
			));
			$this->pdf->Output();
	}
	//42
	public function RekapPenjualanReturPenjualanPerCustomerPerBulanPerTahun($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		if(isset($spv) && $spv!='')
		{
			$spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
			$spvid1 = " and (e.spvid='".$spv."' or e.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
			$spvid1 = "";
		}
		
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and aaa.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and e.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		
		if(isset($product) && $product!='')
		{
			$product1 = " and (aa.giheaderid in (select a1.giheaderid from gidetail a1 join product a2 on a2.productid=a1.productid where a2.productname like '%".$product."%'))";
			$product2 = " and (d.giheaderid in (select a1.giheaderid from gidetail a1 join product a2 on a2.productid=a1.productid where a2.productname like '%".$product."%'))";
		}
		else
		{
			$product1 = "";
			$product2 = "";
		}
        
		if($salesarea!=='')
		{
			$joinsalesarea1 = " join addressbook g1 on g1.addressbookid=aaa.addressbookid join salesarea h1 on h1.salesareaid=g1.salesareaid ";
			$wheresalesarea1 = " and h1.areaname like '%".$salesarea."%' ";
			$joinsalesarea2 = " join addressbook g2 on g2.addressbookid=e.addressbookid join salesarea h2 on h2.salesareaid=g2.salesareaid ";
			$wheresalesarea2 = " and h2.areaname like '%".$salesarea."%' ";
		}
		else
		{
			$joinsalesarea1 = " ";
			$wheresalesarea1 = "  ";
			$joinsalesarea2 = " ";
			$wheresalesarea2 = " ";
		}
        
		if($sloc!=='')
		{
			$sloc1 = " and (aa.giheaderid in (select a1.giheaderid from gidetail a1 join sloc a2 on a2.slocid=a1.slocid where a2.sloccode like '%".$sloc."%'))";
			$sloc2 = " and (d.giheaderid in (select a1.giheaderid from gidetail a1 join sloc a2 on a2.slocid=a1.slocid where a2.sloccode like '%".$sloc."%'))";
		}
		else
		{
			$sloc1 = " ";
			$sloc2 = " ";
		}
        
		$sql = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null and z.fullname like '%".$customer."%'
                order by fullname asc) zz
				where zz.jumlah <> 0
		";
		
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
					
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Bulan';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		
		$this->pdf->setFont('Arial','B',8);
					$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');		
			
		foreach($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',7);
			$i=$i+1;
			$this->pdf->row(array(
				$i,$row['fullname'],
				Yii::app()->format->formatCurrency($row['januari']/$per),
				Yii::app()->format->formatCurrency($row['februari']/$per),
				Yii::app()->format->formatCurrency($row['maret']/$per),
				Yii::app()->format->formatCurrency($row['april']/$per),
				Yii::app()->format->formatCurrency($row['mei']/$per),
				Yii::app()->format->formatCurrency($row['juni']/$per),
				Yii::app()->format->formatCurrency($row['juli']/$per),
				Yii::app()->format->formatCurrency($row['agustus']/$per),
				Yii::app()->format->formatCurrency($row['september']/$per),
				Yii::app()->format->formatCurrency($row['oktober']/$per),
				Yii::app()->format->formatCurrency($row['nopember']/$per),
				Yii::app()->format->formatCurrency($row['desember']/$per),
				Yii::app()->format->formatCurrency($row['jumlah']/$per)
			));
			$totaljanuari += $row['januari']/$per;
			$totalfebruari += $row['februari']/$per;
			$totalmaret += $row['maret']/$per;
			$totalapril += $row['april']/$per;
			$totalmei += $row['mei']/$per;
			$totaljuni += $row['juni']/$per;
			$totaljuli += $row['juli']/$per;
			$totalagustus += $row['agustus']/$per;
			$totalseptember += $row['september']/$per;
			$totaloktober += $row['oktober']/$per;
			$totalnopember += $row['nopember']/$per;
			$totaldesember += $row['desember']/$per;
			$totaljumlah += $row['jumlah']/$per;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari),
			Yii::app()->format->formatCurrency($totalfebruari),
			Yii::app()->format->formatCurrency($totalmaret),
			Yii::app()->format->formatCurrency($totalapril),
			Yii::app()->format->formatCurrency($totalmei),
			Yii::app()->format->formatCurrency($totaljuni),
			Yii::app()->format->formatCurrency($totaljuli),
			Yii::app()->format->formatCurrency($totalagustus),
			Yii::app()->format->formatCurrency($totalseptember),
			Yii::app()->format->formatCurrency($totaloktober),
			Yii::app()->format->formatCurrency($totalnopember),
			Yii::app()->format->formatCurrency($totaldesember),
			Yii::app()->format->formatCurrency($totaljumlah),
		));
		$this->pdf->Output();
	}
	//43
	public function RekapPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
      
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					join salesarea d on d.salesareaid=a.salesareaid
					where c.companyid=".$companyid." ";
					
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan Per Jenis Customer Per Bulan Per Tahun';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
      
        if(isset($spv) && $spv!='')
          {                
            $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
            $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
            $this->pdf->SetFont('Arial','B',10);
            $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
            $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
            $this->pdf->sety($this->pdf->gety()+5);
          }
		
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
        
        
		foreach($dataReader as $row)
		{	
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'JENIS CUSTOMER ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['jenis']);
			$this->pdf->sety($this->pdf->gety()+7);
			$sql1 = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."') ) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					join addressaccount za on za.addressbookid=z.addressbookid
					join salesarea zb on zb.salesareaid=z.salesareaid
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
					and za.recordstatus =1 and za.companyid=".$companyid."  and zb.areaname like '%".$salesarea."%'
					and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
					where zz.jumlah <> 0"; 
			
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
								
				foreach($dataReader1 as $row1)
				{
					$this->pdf->setFont('Arial','',7);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['fullname'],
						Yii::app()->format->formatCurrency($row1['januari']/$per),
						Yii::app()->format->formatCurrency($row1['februari']/$per),
						Yii::app()->format->formatCurrency($row1['maret']/$per),
						Yii::app()->format->formatCurrency($row1['april']/$per),
						Yii::app()->format->formatCurrency($row1['mei']/$per),
						Yii::app()->format->formatCurrency($row1['juni']/$per),
						Yii::app()->format->formatCurrency($row1['juli']/$per),
						Yii::app()->format->formatCurrency($row1['agustus']/$per),
						Yii::app()->format->formatCurrency($row1['september']/$per),
						Yii::app()->format->formatCurrency($row1['oktober']/$per),
						Yii::app()->format->formatCurrency($row1['nopember']/$per),
						Yii::app()->format->formatCurrency($row1['desember']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per)
					));
					$totaljanuari += $row1['januari']/$per;
					$totalfebruari += $row1['februari']/$per;
					$totalmaret += $row1['maret']/$per;
					$totalapril += $row1['april']/$per;
					$totalmei += $row1['mei']/$per;
					$totaljuni += $row1['juni']/$per;
					$totaljuli += $row1['juli']/$per;
					$totalagustus += $row1['agustus']/$per;
					$totalseptember += $row1['september']/$per;
					$totaloktober += $row1['oktober']/$per;
					$totalnopember += $row1['nopember']/$per;
					$totaldesember += $row1['desember']/$per;
					$totaljumlah += $row1['jumlah']/$per;
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
				$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row['jenis'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah),
				));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	//44
	public function RekapReturPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
        
        if(isset($spv)&& $spv!=''){
          $spvid = " and (e.spvid='".$spv."' or e.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Retur Penjualan Per Jenis Customer Per Bulan';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
      
        if(isset($spv) && $spv!='')
        {                
          $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
          $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
          $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
          $this->pdf->sety($this->pdf->gety()+5);
        }
		
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{	
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'JENIS CUSTOMER ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['jenis']);
			$this->pdf->sety($this->pdf->gety()+7);
			$sql1 = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
								
				foreach($dataReader1 as $row1)
				{
					$this->pdf->setFont('Arial','',7);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['fullname'],
						Yii::app()->format->formatCurrency($row1['januari']/$per),
						Yii::app()->format->formatCurrency($row1['februari']/$per),
						Yii::app()->format->formatCurrency($row1['maret']/$per),
						Yii::app()->format->formatCurrency($row1['april']/$per),
						Yii::app()->format->formatCurrency($row1['mei']/$per),
						Yii::app()->format->formatCurrency($row1['juni']/$per),
						Yii::app()->format->formatCurrency($row1['juli']/$per),
						Yii::app()->format->formatCurrency($row1['agustus']/$per),
						Yii::app()->format->formatCurrency($row1['september']/$per),
						Yii::app()->format->formatCurrency($row1['oktober']/$per),
						Yii::app()->format->formatCurrency($row1['nopember']/$per),
						Yii::app()->format->formatCurrency($row1['desember']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per)
					));
					$totaljanuari += $row1['januari']/$per;
					$totalfebruari += $row1['februari']/$per;
					$totalmaret += $row1['maret']/$per;
					$totalapril += $row1['april']/$per;
					$totalmei += $row1['mei']/$per;
					$totaljuni += $row1['juni']/$per;
					$totaljuli += $row1['juli']/$per;
					$totalagustus += $row1['agustus']/$per;
					$totalseptember += $row1['september']/$per;
					$totaloktober += $row1['oktober']/$per;
					$totalnopember += $row1['nopember']/$per;
					$totaldesember += $row1['desember']/$per;
					$totaljumlah += $row1['jumlah']/$per;
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
				$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row['jenis'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah),
				));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	//45
	public function RekapPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		if(isset($spv) && $spv!='')
		{
			$spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
			$spvid1 = " and (e.spvid='".$spv."' or e.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
			$spvid1 = "";
		}
		
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and aaa.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and e.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
      
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid."
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Jenis Customer Per Bulan';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
			$this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
			$this->pdf->sety($this->pdf->gety()+5);
		}
     
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{	
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'JENIS CUSTOMER ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['jenis']);
			$this->pdf->sety($this->pdf->gety()+7);
			$sql1 = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
								
			foreach($dataReader1 as $row1)
			{
				$this->pdf->setFont('Arial','',7);
				$i=$i+1;
				$this->pdf->row(array(
					$i,$row1['fullname'],
					Yii::app()->format->formatCurrency($row1['januari']/$per),
					Yii::app()->format->formatCurrency($row1['februari']/$per),
					Yii::app()->format->formatCurrency($row1['maret']/$per),
					Yii::app()->format->formatCurrency($row1['april']/$per),
					Yii::app()->format->formatCurrency($row1['mei']/$per),
					Yii::app()->format->formatCurrency($row1['juni']/$per),
					Yii::app()->format->formatCurrency($row1['juli']/$per),
					Yii::app()->format->formatCurrency($row1['agustus']/$per),
					Yii::app()->format->formatCurrency($row1['september']/$per),
					Yii::app()->format->formatCurrency($row1['oktober']/$per),
					Yii::app()->format->formatCurrency($row1['nopember']/$per),
					Yii::app()->format->formatCurrency($row1['desember']/$per),
					Yii::app()->format->formatCurrency($row1['jumlah']/$per)
				));
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
				'','TOTAL '.$row['jenis'],
				Yii::app()->format->formatCurrency($totaljanuari),
				Yii::app()->format->formatCurrency($totalfebruari),
				Yii::app()->format->formatCurrency($totalmaret),
				Yii::app()->format->formatCurrency($totalapril),
				Yii::app()->format->formatCurrency($totalmei),
				Yii::app()->format->formatCurrency($totaljuni),
				Yii::app()->format->formatCurrency($totaljuli),
				Yii::app()->format->formatCurrency($totalagustus),
				Yii::app()->format->formatCurrency($totalseptember),
				Yii::app()->format->formatCurrency($totaloktober),
				Yii::app()->format->formatCurrency($totalnopember),
				Yii::app()->format->formatCurrency($totaldesember),
				Yii::app()->format->formatCurrency($totaljumlah),
			));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	//46
	public function RekapTotalPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
      
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Total Penjualan Per Jenis Customer Per Bulan';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
		
        if(isset($spv) && $spv!='')
        {                
          $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
          $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
          $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
          $this->pdf->sety($this->pdf->gety()+5);
        }
      
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{	
			$sql1 = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					join addressaccount za on za.addressbookid=z.addressbookid
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
					and za.recordstatus =1 and za.companyid=".$companyid." 
					and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
					where zz.jumlah <> 0"; 
			
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
								
				foreach($dataReader1 as $row1)
				{
					$totaljanuari += $row1['januari']/$per;
					$totalfebruari += $row1['februari']/$per;
					$totalmaret += $row1['maret']/$per;
					$totalapril += $row1['april']/$per;
					$totalmei += $row1['mei']/$per;
					$totaljuni += $row1['juni']/$per;
					$totaljuli += $row1['juli']/$per;
					$totalagustus += $row1['agustus']/$per;
					$totalseptember += $row1['september']/$per;
					$totaloktober += $row1['oktober']/$per;
					$totalnopember += $row1['nopember']/$per;
					$totaldesember += $row1['desember']/$per;
					$totaljumlah += $row1['jumlah']/$per;
					$this->pdf->checkPageBreak(20);
				}
				$i=$i+1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,$row['jenis'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah),
				));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	//47
	public function RekapTotalReturPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
      
         if(isset($spv)&& $spv!=''){
          $spvid = " and (e.spvid='".$spv."' or e.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
      
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Total Retur Penjualan Per Jenis Customer Per Bulan';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
		
        if(isset($spv) && $spv!='')
        {                
          $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
          $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
          $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
          $this->pdf->sety($this->pdf->gety()+5);
        }
      
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{	
			$sql1 = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
								
				foreach($dataReader1 as $row1)
				{
					$totaljanuari += $row1['januari']/$per;
					$totalfebruari += $row1['februari']/$per;
					$totalmaret += $row1['maret']/$per;
					$totalapril += $row1['april']/$per;
					$totalmei += $row1['mei']/$per;
					$totaljuni += $row1['juni']/$per;
					$totaljuli += $row1['juli']/$per;
					$totalagustus += $row1['agustus']/$per;
					$totalseptember += $row1['september']/$per;
					$totaloktober += $row1['oktober']/$per;
					$totalnopember += $row1['nopember']/$per;
					$totaldesember += $row1['desember']/$per;
					$totaljumlah += $row1['jumlah']/$per;
					$this->pdf->checkPageBreak(20);
				}
				$i=$i+1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,$row['jenis'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah),
				));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	//48
	public function RekapTotalPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		if(isset($spv) && $spv!='')
		{
			$spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
			$spvid1 = " and (e.spvid='".$spv."' or e.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
			$spvid1 = "";
		}
		
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and aaa.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and e.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Total Penjualan - Retur Per Jenis Customer Per Bulan';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
		
        if(isset($spv) && $spv!='')
        {                
          $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
          $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
          $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
          $this->pdf->sety($this->pdf->gety()+5);
        }
      
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{	
			$sql1 = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
				
				foreach($dataReader1 as $row1)
				{
					$totaljanuari += $row1['januari']/$per;
					$totalfebruari += $row1['februari']/$per;
					$totalmaret += $row1['maret']/$per;
					$totalapril += $row1['april']/$per;
					$totalmei += $row1['mei']/$per;
					$totaljuni += $row1['juni']/$per;
					$totaljuli += $row1['juli']/$per;
					$totalagustus += $row1['agustus']/$per;
					$totalseptember += $row1['september']/$per;
					$totaloktober += $row1['oktober']/$per;
					$totalnopember += $row1['nopember']/$per;
					$totaldesember += $row1['desember']/$per;
					$totaljumlah += $row1['jumlah']/$per;
					$this->pdf->checkPageBreak(20);
				}
				$i=$i+1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,$row['jenis'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah),
				));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	/*public function RekapPenjualanPerGrupMaterial($companyid,$sloc,$customer,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select *,nominal-netto as disc
                        from
                        (
                        select distinct a.materialgroupid,a.description,
                        (
                        select sum(a.qty)
                        from gidetail a
                        join sodetail b on b.sodetailid = a.sodetailid
                        join soheader c on c.soheaderid = b.soheaderid
                        where a.productid = b.productid and c.companyid = ".$companyid." and c.recordstatus > 3
                                and c.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                                and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        ) as qty,
                        (
                        select sum(a.qty * b.price)
                        from gidetail a
                        join sodetail b on b.sodetailid = a.sodetailid
                        join soheader c on c.soheaderid = b.soheaderid
                        where a.productid = b.productid and c.companyid = ".$companyid." and c.recordstatus > 3
                                and c.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                                and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        ) as nominal,
                        (
                        select sum(getamountinvgi(a.giheaderid,b.soheaderid))
                        from gidetail a
                        join sodetail b on b.sodetailid = a.sodetailid
                        join soheader c on c.soheaderid = b.soheaderid
                        where a.productid = b.productid and c.companyid = ".$companyid." and c.recordstatus > 3
                                and c.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                                and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        ) as netto
                        from materialgroup a
                        join productplant b on b.materialgroupid = a.materialgroupid
                        where b.productid in 
                        (
                        select distinct a.productid
                        from gidetail a
                        join sodetail b on b.sodetailid = a.sodetailid
                        join soheader c on c.soheaderid = b.soheaderid
                        where a.productid = b.productid and c.companyid = ".$companyid." and c.recordstatus > 3
                                and c.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                                and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        )
                        ) zzz";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rincian Penjualan Per Dokumen (Basis Invoice)';
			$this->pdf->text(10,$this->pdf->gety()+10,'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)));
			$this->pdf->AddPage('P');                             if(isset($spv) && $spv!='')             {                               $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                               $fullname = Yii::app()->db->createCommand($sql)->queryScalar();                   $this->pdf->SetFont('Arial','B',10);               $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');               $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);               $this->pdf->sety($this->pdf->gety()+5);             }
			$total = 0;$i=0;$totalqty=0;
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,70,20,30,30,30));
			$this->pdf->colheader = array('No','Nama Grup','Qty','Nominal','Disc','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			
			foreach($dataReader as $row)

			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row['description'],
					Yii::app()->format->formatNumber($row['qty']),
					Yii::app()->format->formatCurrency($row['nominal']),
					Yii::app()->format->formatCurrency($row['disc']),
					Yii::app()->format->formatCurrency($row['netto']),
				));
				$totalqty += $row['qty'];
				$total += $row['netto'];
			}
			$this->pdf->row(array(
					'',
					'Total',
					Yii::app()->format->formatNumber($row['qty']),
					Yii::app()->format->formatCurrency($row['nominal']),
					Yii::app()->format->formatCurrency($row['disc']),
					Yii::app()->format->formatCurrency($row['netto']),
				));
			$this->pdf->checkPageBreak(20);
			$this->pdf->Output();
	}
	
	public function RekapPenjualanPerSalesBarang($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.employeeid,a.fullname
		from employee a 
		where a.employeeid in (select employeeid from soheader b
		where b.companyid = ".$companyid." and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
		and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Penjualan Per Sales - Barang (Basis Invoice)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');                             if(isset($spv) && $spv!='')             {                               $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                               $fullname = Yii::app()->db->createCommand($sql)->queryScalar();                   $this->pdf->SetFont('Arial','B',10);               $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');               $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);               $this->pdf->sety($this->pdf->gety()+5);             }
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Sales');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
			$sql1 = "select a.materialgroupid,a.description
				from materialgroup a
				where a.materialgroupid in
				(
					select c.materialgroupid
					from gidetail b 
					join sodetail d on d.sodetailid = b.sodetailid
					join soheader e on e.soheaderid = d.soheaderid
					join productplant c on c.productid = b.productid
					where e.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and e.companyid = ".$companyid."
				)";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
					$sql2 = "select *,nominal-disc as netto
                                        from
                                        (
                                        select distinct a.productid,e.productname,
                                        (
                                        select sum(zzb.qty)
                                        from gidetail zzb 
                                        where zzb.productid = a.productid
                                        ) as qty,
                                        (
                                        select sum(zzb.qty * zza.price)
                                        from gidetail zzb 
                                        join sodetail zza on zza.sodetailid = zzb.sodetailid
                                        where zzb.productid = a.productid
                                        ) as nominal,
                                        (
                                        select sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                        from gidetail zzb 
                                        join sodetail zza on zza.sodetailid = zzb.sodetailid
                                        where zzb.productid = a.productid
                                        ) as disc
                                        from productplant a
                                        join product e on e.productid = a.productid
                                        join sloc b on b.slocid = a.slocid
                                        join plant c on c.plantid = b.plantid
                                        join company d on d.companyid = c.companyid
                                        where d.companyid = ".$companyid." and a.materialgroupid = ".$row1['materialgroupid']." and a.productid in
                                        (
                                        select zc.productid
                                        from soheader za 
                                        join giheader zb on zb.soheaderid = za.soheaderid
                                        join gidetail zc on zc.giheaderid = zb.giheaderid
                                        where zb.recordstatus = 3 and za.employeeid = '".$row['employeeid']."' and zc.slocid = a.slocid and za.companyid = ".$companyid." and za.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                        and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                                        ) 
                                        ) zzz order by productname";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					$totalgrupdisc = 0;$totalgrupnominal=0;$totalgrup=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+20);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,30,30,30,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Disc','Total');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					foreach($dataReader2 as $row2)
					{
                                                $i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['nominal']),
							Yii::app()->format->formatCurrency($row2['disc']),
							Yii::app()->format->formatCurrency($row2['netto']),
						));
						$totalgrupnominal += $row2['nominal'];
						$totalgrupdisc += $row2['disc'];
						$totalgrup += $row2['netto'];
					}
					$this->pdf->row(array(
							'','Total '.$row1['description'],'',
							Yii::app()->format->formatCurrency($totalgrupnominal),
							Yii::app()->format->formatCurrency($totalgrupdisc),
							Yii::app()->format->formatCurrency($totalgrup),
						));
					$this->pdf->checkPageBreak(20);
				}
		}
		$this->pdf->Output();
	}
	
	public function RekapPenjualanPerSalesGrupBarang($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.employeeid,a.fullname
		from employee a 
		where a.employeeid in (select employeeid from soheader b
		where b.companyid = ".$companyid." and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
		and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Penjualan Per Sales - Barang (Basis Invoice)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');                             if(isset($spv) && $spv!='')             {                               $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                               $fullname = Yii::app()->db->createCommand($sql)->queryScalar();                   $this->pdf->SetFont('Arial','B',10);               $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');               $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);               $this->pdf->sety($this->pdf->gety()+5);             }
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Sales');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
			$sql1 = "select a.materialgroupid,a.description
				from materialgroup a
				where a.materialgroupid in
				(
					select c.materialgroupid
					from gidetail b 
					join sodetail d on d.sodetailid = b.sodetailid
					join soheader e on e.soheaderid = d.soheaderid
					join productplant c on c.productid = b.productid
					where e.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and e.companyid = ".$companyid."
				)";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
					$sql2 = "select *, nominal-disc as netto
						from
						(
							select f.productname,sum(b.qty) as totalqty,
							sum(b.qty *d.price) as nominal,
							getamountdiscbyso(d.soheaderid) as disc
							from gidetail b 
							join sodetail d on d.sodetailid = b.sodetailid
							join soheader e on e.soheaderid = d.soheaderid
							join productplant c on c.productid = b.productid
							join product f on f.productid = b.productid
							where e.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and e.companyid = ".$companyid." and
							c.materialgroupid = 1
							group by f.productname
						) zzz";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					$totalgrupdisc = 0;$totalgrupnominal=0;$totalgrup=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+17);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,30,30,30,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Disc','Total');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					foreach($dataReader2 as $row2)
					{
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['nominal']),
							Yii::app()->format->formatCurrency($row2['disc']),
							Yii::app()->format->formatCurrency($row2['netto']),
						));
						$totalgrupnominal += $row2['nominal'];
						$totalgrupdisc += $row2['disc'];
						$totalgrup += $row2['netto'];
					}
					$this->pdf->row(array(
							'','Total '.$row1['description'],'',
							Yii::app()->format->formatCurrency($totalgrupnominal),
							Yii::app()->format->formatCurrency($totalgrupdisc),
							Yii::app()->format->formatCurrency($totalgrup),
						));
					$this->pdf->checkPageBreak(20);
				}
		}
		$this->pdf->Output();
	}
        
        public function RekapPenjualanPerCustomerBarang($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.addressbookid,a.fullname
		from addressbook a 
		where a.addressbookid in (select addressbookid from soheader b
		where b.companyid = ".$companyid." and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
		and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Penjualan Per Customer - Barang (Basis Invoice)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');                             if(isset($spv) && $spv!='')             {                               $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                               $fullname = Yii::app()->db->createCommand($sql)->queryScalar();                   $this->pdf->SetFont('Arial','B',10);               $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');               $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);               $this->pdf->sety($this->pdf->gety()+5);             }
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
			$sql1 = "select a.materialgroupid,a.description
				from materialgroup a
				where a.materialgroupid in
				(
					select c.materialgroupid
					from gidetail b 
					join sodetail d on d.sodetailid = b.sodetailid
					join soheader e on e.soheaderid = d.soheaderid
					join productplant c on c.productid = b.productid
					where e.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                        and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and e.companyid = ".$companyid."
				)";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
					$sql2 = "select *,nominal-disc as netto
                                        from
                                        (
                                        select distinct a.productid,e.productname,
                                        (
                                        select sum(zzb.qty)
                                        from gidetail zzb 
                                        where zzb.productid = a.productid
                                        ) as qty,
                                        (
                                        select sum(zzb.qty * zza.price)
                                        from gidetail zzb 
                                        join sodetail zza on zza.sodetailid = zzb.sodetailid
                                        where zzb.productid = a.productid
                                        ) as nominal,
                                        (
                                        select sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                        from gidetail zzb 
                                        join sodetail zza on zza.sodetailid = zzb.sodetailid
                                        where zzb.productid = a.productid
                                        ) as disc
                                        from productplant a
                                        join product e on e.productid = a.productid
                                        join sloc b on b.slocid = a.slocid
                                        join plant c on c.plantid = b.plantid
                                        join company d on d.companyid = c.companyid
                                        where d.companyid = ".$companyid." and a.materialgroupid = ".$row1['materialgroupid']." and a.productid in
                                        (
                                        select zc.productid
                                        from soheader za 
                                        join giheader zb on zb.soheaderid = za.soheaderid
                                        join gidetail zc on zc.giheaderid = zb.giheaderid
                                        where zb.recordstatus = 3 and za.addressbookid = '".$row['addressbookid']."' and zc.slocid = a.slocid and za.companyid = ".$companyid." and za.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                        and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                                        ) 
                                        ) zzz order by productname";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					$totalgrupdisc = 0;$totalgrupnominal=0;$totalgrup=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+20);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,30,30,30,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Disc','Total');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					foreach($dataReader2 as $row2)
					{
                                                $i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['nominal']),
							Yii::app()->format->formatCurrency($row2['disc']),
							Yii::app()->format->formatCurrency($row2['netto']),
						));
						$totalgrupnominal += $row2['nominal'];
						$totalgrupdisc += $row2['disc'];
						$totalgrup += $row2['netto'];
					}
					$this->pdf->row(array(
							'','Total '.$row1['description'],'',
							Yii::app()->format->formatCurrency($totalgrupnominal),
							Yii::app()->format->formatCurrency($totalgrupdisc),
							Yii::app()->format->formatCurrency($totalgrup),
						));
					$this->pdf->checkPageBreak(20);
				}
		}
		$this->pdf->Output();
	}
        
        public function RekapSuratJalanBelumDibuatkanFaktur($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.gino,a.gidate,c.fullname as customer,d.fullname as sales,a.headernote
                        from giheader a
                        join soheader b on b.soheaderid = a.soheaderid
                        join addressbook c on c.addressbookid = b.addressbookid
                        join employee d on d.employeeid = b.employeeid
                        where a.giheaderid not in
                        (select t.giheaderid from invoice t)
                        and a.gino is not null
                        and b.companyid = ".$companyid." and a.gidate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
			and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Surat Jalan Belum Dibuatkan Faktur';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');                             if(isset($spv) && $spv!='')             {                               $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                               $fullname = Yii::app()->db->createCommand($sql)->queryScalar();                   $this->pdf->SetFont('Arial','B',10);               $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');               $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);               $this->pdf->sety($this->pdf->gety()+5);             }
			
			$this->pdf->setFont('Arial','B',8);
                        $this->pdf->sety($this->pdf->gety()+10);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,20,20,60,55,25));
			$this->pdf->colheader = array('No','No Bukti','Tanggal','Customer','Sales','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','C','C','L','L','L');		
			$total = 0;$i=0;$totalqty=0;
			foreach($dataReader as $row)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',7);
				$this->pdf->row(array(
					$i,$row['gino'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row['gidate'])),
					$row['customer'],
					$row['sales'],
					$row['headernote']
				));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}
        
        public function RekapPenjualanBarangQty($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct a.materialgroupid,a.materialgroupcode,a.description,d.slocid
                        from materialgroup a
                        join productplant b on b.materialgroupid = a.materialgroupid
                        join product c on c.productid = b.productid
                        join sloc d on d.slocid = b.slocid
                        join plant e on e.plantid = d.plantid
                        join company f on f.companyid = e.companyid
                        where f.companyid = ".$companyid." and b.productid in
                        (
                        select zc.productid
                        from soheader za 
                        join giheader zb on zb.soheaderid = za.soheaderid
                        join gidetail zc on zc.giheaderid = zb.giheaderid
                        where zb.recordstatus = 3 and zc.slocid = b.slocid and za.companyid = ".$companyid." and za.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                        and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        )";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Barang (Qty)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Divisi');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['description']);
				$sql1 = "select *,(januari+februari+maret+april+mei+juni+juli+agustus+september+oktober+november+desember) as total
                                        from
                                        (select distinct b.productname,c.uomcode,d.sloccode,
                                        (
                                            select ifnull(sum(ab.qty),0) 
                                            from productstockdet ab
                                            where year(ab.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ab.transdate) = 1 
                                            and ab.productid = a.productid
                                            and ab.unitofmeasureid = a.unitofissue
                                            and ab.slocid = a.slocid 
                                        ) as januari,
                                        (
                                            select ifnull(sum(ac.qty),0) 
                                            from productstockdet ac
                                            where year(ac.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ac.transdate) = 2
                                            and ac.productid = a.productid
                                            and ac.unitofmeasureid = a.unitofissue
                                            and ac.slocid = a.slocid 
                                        ) as februari,
                                        (
                                            select ifnull(sum(ad.qty),0) 
                                            from productstockdet ad
                                            where year(ad.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ad.transdate) = 3
                                            and ad.productid = a.productid
                                            and ad.unitofmeasureid = a.unitofissue
                                            and ad.slocid = a.slocid 
                                        ) as maret,
                                        (
                                            select ifnull(sum(ae.qty),0) 
                                            from productstockdet ae
                                            where year(ae.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ae.transdate) = 4
                                            and ae.productid = a.productid
                                            and ae.unitofmeasureid = a.unitofissue
                                            and ae.slocid = a.slocid 
                                        ) as april,
                                        (
                                            select ifnull(sum(af.qty),0) 
                                            from productstockdet af
                                            where year(af.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(af.transdate) = 5
                                            and af.productid = a.productid
                                            and af.unitofmeasureid = a.unitofissue
                                            and af.slocid = a.slocid 
                                        ) as mei,
                                        (
                                            select ifnull(sum(ag.qty),0) 
                                            from productstockdet ag
                                            where year(ag.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ag.transdate) = 6 
                                            and ag.productid = a.productid
                                            and ag.unitofmeasureid = a.unitofissue
                                            and ag.slocid = a.slocid 
                                        ) as juni,
                                        (
                                            select ifnull(sum(ah.qty),0) 
                                            from productstockdet ah
                                            where year(ah.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ah.transdate) = 7
                                            and ah.productid = a.productid
                                            and ah.unitofmeasureid = a.unitofissue
                                            and ah.slocid = a.slocid 
                                        ) as juli,
                                        (
                                            select ifnull(sum(ai.qty),0) 
                                            from productstockdet ai
                                            where year(ai.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ai.transdate) = 8
                                            and ai.productid = a.productid
                                            and ai.unitofmeasureid = a.unitofissue
                                            and ai.slocid = a.slocid 
                                        ) as agustus,
                                        (
                                            select ifnull(sum(aj.qty),0) 
                                            from productstockdet aj
                                            where year(aj.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(aj.transdate) = 9
                                            and aj.productid = a.productid
                                            and aj.unitofmeasureid = a.unitofissue
                                            and aj.slocid = a.slocid 
                                        ) as september,
                                        (
                                            select ifnull(sum(ak.qty),0) 
                                            from productstockdet ak
                                            where year(ak.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ak.transdate) = 10
                                            and ak.productid = a.productid
                                            and ak.unitofmeasureid = a.unitofissue
                                            and ak.slocid = a.slocid 
                                        ) as oktober,
                                        (
                                            select ifnull(sum(al.qty),0) 
                                            from productstockdet al
                                            where year(al.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(al.transdate) = 11
                                            and al.productid = a.productid
                                            and al.unitofmeasureid = a.unitofissue
                                            and al.slocid = a.slocid 
                                        ) as november,
                                        (
                                            select ifnull(sum(am.qty),0) 
                                            from productstockdet am
                                            where year(am.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(am.transdate) = 12
                                            and am.productid = a.productid
                                            and am.unitofmeasureid = a.unitofissue
                                            and am.slocid = a.slocid 
                                        ) as desember
                                        from productplant a
                                        join product b on b.productid=a.productid
                                        join unitofmeasure c on c.unitofmeasureid=a.unitofissue
                                        join sloc d on d.slocid=a.slocid
                                        join plant e on e.plantid=d.plantid
                                        join company f on f.companyid=e.companyid
                                        where a.materialgroupid = '".$row['materialgroupid']."' and f.companyid='".$companyid."' and a.slocid = '".$row['slocid']."')z";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$total=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C',
                                        'C','C','C','C');
				$this->pdf->setwidths(array(60,15,15,15,15,15,15,15,15,20,
                                        20,20,20,20));
				$this->pdf->colheader = array('Nama Barang','Januari','Februari','Maret','April',
                                    'Mei','Juni','Juli','Agustus','September','Oktober','November','Desember','Total');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R',
                                                'R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
                                        $row1['productname'],
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['januari']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['februari']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['maret']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['april']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['mei']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['juni']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['juli']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['agustus']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['september']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['oktober']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['november']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['desember']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['total']),
                                ));
					$total += $row1['total'];
				}
				$this->pdf->row(array(
						'','Total',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						Yii::app()->format->formatCurrency($total),
					));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}
        
        public function RekapPenjualanBarangNilai($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct a.materialgroupid,a.materialgroupcode,a.description,d.slocid
                        from materialgroup a
                        join productplant b on b.materialgroupid = a.materialgroupid
                        join product c on c.productid = b.productid
                        join sloc d on d.slocid = b.slocid
                        join plant e on e.plantid = d.plantid
                        join company f on f.companyid = e.companyid
                        where f.companyid = ".$companyid." and b.productid in
                        (
                        select zc.productid
                        from soheader za 
                        join giheader zb on zb.soheaderid = za.soheaderid
                        join gidetail zc on zc.giheaderid = zb.giheaderid
                        where zb.recordstatus = 3 and zc.slocid = b.slocid and za.companyid = ".$companyid." and za.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                        and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        )";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Barang (Qty)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Divisi');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['description']);
				$sql1 = "select *,(januari+februari+maret+april+mei+juni+juli+agustus+september+oktober+november+desember) as total
                                        from
                                        (select distinct b.productname,c.uomcode,d.sloccode,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 1
                                            and zzb.productid = a.productid
                                        ) as januari,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 2
                                            and zzb.productid = a.productid
                                        ) as februari,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 3
                                            and zzb.productid = a.productid
                                        ) as maret,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 4
                                            and zzb.productid = a.productid
                                        ) as april,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 5
                                            and zzb.productid = a.productid 
                                        ) as mei,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 6 
                                            and zzb.productid = a.productid
                                        ) as juni,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 7
                                            and zzb.productid = a.productid
                                        ) as juli,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 8
                                            and zzb.productid = a.productid
                                        ) as agustus,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 9
                                            and zzb.productid = a.productid
                                        ) as september,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 10
                                            and zzb.productid = a.productid
                                        ) as oktober,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 11
                                            and zzb.productid = a.productid
                                        ) as november,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 12
                                            and zzb.productid = a.productid
                                        ) as desember
                                        from productplant a
                                        join product b on b.productid=a.productid
                                        join unitofmeasure c on c.unitofmeasureid=a.unitofissue
                                        join sloc d on d.slocid=a.slocid
                                        join plant e on e.plantid=d.plantid
                                        join company f on f.companyid=e.companyid
                                        where a.materialgroupid = '".$row['materialgroupid']."' and f.companyid='".$companyid."' and a.slocid = '".$row['slocid']."')z";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$total=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C',
                                        'C','C','C','C');
				$this->pdf->setwidths(array(50,15,15,15,15,15,20,20,15,20,
                                        20,20,20,20));
				$this->pdf->colheader = array('Nama Barang','Januari','Februari','Maret','April',
                                    'Mei','Juni','Juli','Agustus','September','Oktober','November','Desember','Total');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R',
                                                'R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
                                        $row1['productname'],
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['januari']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['februari']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['maret']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['april']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['mei']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['juni']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['juli']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['agustus']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['september']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['oktober']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['november']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['desember']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['total']),
                                ));
					$total += $row1['total'];
				}
				$this->pdf->row(array(
						'','Total',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						Yii::app()->format->formatCurrency($total),
					));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}*/
	//49
	public function RekapPenjualanPerBarangPerBulanQty($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
    
        
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid." and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Barang Per Bulan (Qty)';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P',array(400,250));
			
            if(isset($spv) && $spv!='')
              {                
                $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
                $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
                $this->pdf->SetFont('Arial','B',10);
                $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
                $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
                $this->pdf->sety($this->pdf->gety()+5);
              }
      
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+3);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
          
        
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',8);
			$this->pdf->text(10,$this->pdf->gety()+5,'MATERIAL GROUP ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->sety($this->pdf->gety()+7);
			$sql1 = "select *
							from (select distinct v.productname,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as januari,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as februari,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as maret,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as april,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as mei,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juni,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juli,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as agustus,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as september,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as oktober,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as nopember,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as desember,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as jumlah
							from productplant z
							join product v on v.productid = z.productid
							where z.recordstatus=1 and v.productname like '%".$product."%'
							and z.materialgroupid = ".$row['materialgroupid']." ) zz
							where januari<>0 or februari <>0 or maret <>0 or april <>0 or mei <>0 or juni <>0 or juli <>0 or
							agustus <>0 or september <>0 or oktober <>0 or nopember <>0 or desember <>0 ";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				foreach($dataReader1 as $row1)
				{
					
					$this->pdf->setFont('Arial','',7);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatNumber($row1['januari']),
						Yii::app()->format->formatNumber($row1['februari']),
						Yii::app()->format->formatNumber($row1['maret']),
						Yii::app()->format->formatNumber($row1['april']),
						Yii::app()->format->formatNumber($row1['mei']),
						Yii::app()->format->formatNumber($row1['juni']),
						Yii::app()->format->formatNumber($row1['juli']),
						Yii::app()->format->formatNumber($row1['agustus']),
						Yii::app()->format->formatNumber($row1['september']),
						Yii::app()->format->formatNumber($row1['oktober']),
						Yii::app()->format->formatNumber($row1['nopember']),
						Yii::app()->format->formatNumber($row1['desember']),
						Yii::app()->format->formatNumber($row1['jumlah'])));					
						
					$totaljanuari += $row1['januari'];
					$totalfebruari += $row1['februari'];
					$totalmaret += $row1['maret'];
					$totalapril += $row1['april'];
					$totalmei += $row1['mei'];
					$totaljuni += $row1['juni'];
					$totaljuli += $row1['juli'];
					$totalagustus += $row1['agustus'];
					$totalseptember += $row1['september'];
					$totaloktober += $row1['oktober'];
					$totalnopember += $row1['nopember'];
					$totaldesember += $row1['desember'];
					$totaljumlah += $row1['jumlah'];
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
				$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row['description'],
					Yii::app()->format->formatNumber($totaljanuari),
					Yii::app()->format->formatNumber($totalfebruari),
					Yii::app()->format->formatNumber($totalmaret),
					Yii::app()->format->formatNumber($totalapril),
					Yii::app()->format->formatNumber($totalmei),
					Yii::app()->format->formatNumber($totaljuni),
					Yii::app()->format->formatNumber($totaljuli),
					Yii::app()->format->formatNumber($totalagustus),
					Yii::app()->format->formatNumber($totalseptember),
					Yii::app()->format->formatNumber($totaloktober),
					Yii::app()->format->formatNumber($totalnopember),
					Yii::app()->format->formatNumber($totaldesember),
					Yii::app()->format->formatNumber($totaljumlah)));
					
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatNumber($totaljanuari1),
			Yii::app()->format->formatNumber($totalfebruari1),
			Yii::app()->format->formatNumber($totalmaret1),
			Yii::app()->format->formatNumber($totalapril1),
			Yii::app()->format->formatNumber($totalmei1),
			Yii::app()->format->formatNumber($totaljuni1),
			Yii::app()->format->formatNumber($totaljuli1),
			Yii::app()->format->formatNumber($totalagustus1),
			Yii::app()->format->formatNumber($totalseptember1),
			Yii::app()->format->formatNumber($totaloktober1),
			Yii::app()->format->formatNumber($totalnopember1),
			Yii::app()->format->formatNumber($totaldesember1),
			Yii::app()->format->formatNumber($totaljumlah1)));
		$this->pdf->Output();
	}
	/*
	public function RekapPenjualanPerBarangPerBulanNilai($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Barang Per Bulan (Nilai)';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P',array(400,250));
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',8);
			$this->pdf->text(10,$this->pdf->gety()+5,'MATERIAL GROUP ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->sety($this->pdf->gety()+7);
			
			$sql1 = "select *
							from (select distinct v.productname,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=1 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as januari
							from productplant z
							join product v on v.productid = z.productid
							where z.recordstatus=1 and z.materialgroupid = ".$row['materialgroupid'].") zz 
							where januari<>0 ";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->setFont('Arial','',7);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatCurrency($row1['januari']/$per)));
				}
		}
			
		$this->pdf->Output();
	}
	*/
	//50
	public function RekapPenjualanPerBarangPerBulanNilai($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (d.spvid='".$spv."' or d.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid." and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Barang Per Bulan (Nilai)';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P',array(400,250));
			
            if(isset($spv) && $spv!='')
              {                
                $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
                $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
                $this->pdf->SetFont('Arial','B',10);
                $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
                $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
                $this->pdf->sety($this->pdf->gety()+5);
              }
      
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+3);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',8);
			$this->pdf->text(10,$this->pdf->gety()+5,'MATERIAL GROUP ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->sety($this->pdf->gety()+7);
			
			$sql1 = "select *
							from (select distinct v.productname,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=1 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as januari,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=2 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as februari,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=3 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as maret,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=4 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as april,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=5 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as mei,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=6 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as juni,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=7 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as juli,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=8 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as agustus,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=9 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as september,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=10 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as oktober,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=11 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as nopember,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=12 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as desember,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a 
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = 1 and c.recordstatus=3 and year(c.invoicedate)='2016-09-30'
							and a.productid=v.productid group by a.productid),0) as jumlah					
							from productplant z
							join product v on v.productid = z.productid
							where z.recordstatus=1 and z.materialgroupid = ".$row['materialgroupid'].") zz 
							where januari<>0 or februari<>0 or maret<>0 or april<>0 or mei<>0 or juni<>0 or juli<>0 or agustus<>0 
							or september<>0 or oktober<>0 or nopember<>0 or desember<>0 ";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->setFont('Arial','',7);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatCurrency($row1['januari']/$per),
						Yii::app()->format->formatCurrency($row1['februari']/$per),
						Yii::app()->format->formatCurrency($row1['maret']/$per),
						Yii::app()->format->formatCurrency($row1['april']/$per),
						Yii::app()->format->formatCurrency($row1['mei']/$per),
						Yii::app()->format->formatCurrency($row1['juni']/$per),
						Yii::app()->format->formatCurrency($row1['juli']/$per),
						Yii::app()->format->formatCurrency($row1['agustus']/$per),
						Yii::app()->format->formatCurrency($row1['september']/$per),
						Yii::app()->format->formatCurrency($row1['oktober']/$per),
						Yii::app()->format->formatCurrency($row1['nopember']/$per),
						Yii::app()->format->formatCurrency($row1['desember']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per)
						));
						
						$totaljanuari += $row1['januari'];
						$totalfebruari += $row1['februari'];
						$totalmaret += $row1['maret'];
						$totalapril += $row1['april'];
						$totalmei += $row1['mei'];
						$totaljuni += $row1['juni'];
						$totaljuli += $row1['juli'];
						$totalagustus += $row1['agustus'];
						$totalseptember += $row1['september'];
						$totaloktober += $row1['oktober'];
						$totalnopember += $row1['nopember'];
						$totaldesember += $row1['desember'];
						$totaljumlah += $row1['jumlah'];
				}
				$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
				$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row['description'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah)
					));
		}
//		var_dump($sql1);
			
		$this->pdf->Output();
	}
	//51
	public function RekapPenjualanPerBarangPerBulanQtydanNilai($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuariqty1=0;$totaljanuarinil1=0;$totalfebruariqty1=0;$totalfebruarinil1=0;$totalmaretqty1=0;$totalmaretnil1=0;$totalaprilqty1=0;$totalaprilnil1=0;$totalmeiqty1=0;$totalmeinil1=0;$totaljuniqty1=0;$totaljuninil1=0;$totaljuliqty1=0;$totaljulinil1=0;$totalagustusqty1=0;$totalagustusnil1=0;$totalseptemberqty1=0;$totalseptembernil1=0;$totaloktoberqty1=0;$totaloktobernil1=0;$totalnopemberqty1=0;$totalnopembernil1=0;$totaldesemberqty1=0;$totaldesembernil1=0;$totaljumlahqty1=0;$totaljumlahnil1=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (d.spvid='".$spv."' or d.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }
      
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' ".$spvid." and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Barang Per Bulan (Qty) dan (Nilai)';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P',array(400,250));
			
            if(isset($spv) && $spv!='')
            {                
              $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
              $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
              $this->pdf->SetFont('Arial','B',10);
              $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
              $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
              $this->pdf->sety($this->pdf->gety()+5);
            }
      
			$this->pdf->setFont('Arial','B',9	);
			$this->pdf->sety($this->pdf->gety()+3);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,35,25,25,25,25,25,25,25,25,25,25,25,30,35));
			$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');	

			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R');
			
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',8);
			$this->pdf->setwidths(array(10,35,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,19));
			$this->pdf->text(10,$this->pdf->gety()+5,'MATERIAL GROUP ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['description']);

			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->SetFont('Arial','B',7);
			$this->pdf->setwidths(array(10,35,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,15,15));	
		$this->pdf->row(array('','','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Total Qty','Total Nilai'));
			$sql1 = "select *
                      from (select distinct v.productname,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as januariqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=1 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as januarinil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as februariqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=2 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as februarinil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as maretqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=3 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as maretnil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as aprilqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=4 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as aprilnil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as meiqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=5 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as meinil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juniqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=6 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as juninil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juliqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=7 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as julinil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as agustusqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=8 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as agustusnil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as septemberqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=9 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as septembernil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as oktoberqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=10 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as oktobernil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as nopemberqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=11 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as nopembernil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as desemberqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=12 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as desembernil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as jumlahqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a 
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                      and a.productid=v.productid group by a.productid),0) as jumlahnil	
                      from productplant z
                      join product v on v.productid = z.productid
                      where z.recordstatus=1 and v.productname like '%".$product."%'
                      and z.materialgroupid = ".$row['materialgroupid']." ) zz
                      where januarinil<>0 or januariqty  or februariqty <>0 or februarinil <>0 or maretqty <>0 or maretnil <>0 or aprilqty <>0  or aprilnil <>0 or meiqty <>0 or meinil <>0 or juniqty <>0 or juninil <>0 or juliqty <>0 or julinil <>0 or
                      agustusqty <>0 or agustusnil <>0 or septemberqty <>0 or septemberqty <>0 or  oktoberqty <>0 or oktobernil <>0 or nopemberqty <>0 or nopembernil <>0 or desemberqty <>0 or desembernil <>0";

				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$i=0;$totaljanuariqty=0;$totaljanuarinil=0;$totalfebruariqty=0;$totalfebruarinil=0;$totalmaretqty=0;$totalmaretnil=0;$totalaprilqty=0;$totalaprilnil=0;$totalmeiqty=0;$totalmeinil=0;$totaljuniqty=0;$totaljuninil=0;$totaljuliqty=0;$totaljulinil=0;$totalagustusqty=0;$totalagustusnil=0;$totalseptemberqty=0;$totalseptembernil=0; $totaloktoberqty=0;$totaloktobernil=0;$totalnopemberqty=0;$totalnopembernil=0;$totaldesemberqty=0;$totaldesembernil=0;$totaljumlahqty=0;$totaljumlahnil=0;
				foreach($dataReader1 as $row1)
				{
					
					$this->pdf->setFont('Arial','',8);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatNumber($row1['januariqty']),
						Yii::app()->format->formatCurrency($row1['januarinil']/$per),
						Yii::app()->format->formatNumber($row1['februariqty']),
						Yii::app()->format->formatCurrency($row1['februarinil']/$per),
						Yii::app()->format->formatNumber($row1['maretqty']),
						Yii::app()->format->formatCurrency($row1['maretnil']/$per),
						Yii::app()->format->formatNumber($row1['aprilqty']),
						Yii::app()->format->formatCurrency($row1['aprilnil']/$per),
						Yii::app()->format->formatNumber($row1['meiqty']),
						Yii::app()->format->formatCurrency($row1['meinil']/$per),
						Yii::app()->format->formatNumber($row1['juniqty']),
						Yii::app()->format->formatCurrency($row1['juninil']/$per),
						Yii::app()->format->formatNumber($row1['juliqty']),
						Yii::app()->format->formatCurrency($row1['julinil']/$per),
						Yii::app()->format->formatNumber($row1['agustusqty']),
						Yii::app()->format->formatCurrency($row1['agustusnil']/$per),
						Yii::app()->format->formatNumber($row1['septemberqty']),
						Yii::app()->format->formatCurrency($row1['septembernil']/$per),
						Yii::app()->format->formatNumber($row1['oktoberqty']),
						Yii::app()->format->formatCurrency($row1['oktobernil']/$per),
						Yii::app()->format->formatNumber($row1['nopemberqty']),
						Yii::app()->format->formatCurrency($row1['nopembernil']/$per),
						Yii::app()->format->formatNumber($row1['desemberqty']),
						Yii::app()->format->formatCurrency($row1['desembernil']/$per),
						Yii::app()->format->formatNumber($row1['jumlahqty']),
						Yii::app()->format->formatCurrency($row1['jumlahnil']/$per)));					
						
					$totaljanuariqty += $row1['januariqty'];
					$totaljanuarinil += $row1['januarinil'];
					$totalfebruariqty += $row1['februariqty'];
					$totalfebruarinil += $row1['februarinil'];
					$totalmaretqty += $row1['maretqty'];
					$totalmaretnil += $row1['maretnil'];
					$totalaprilqty += $row1['aprilqty'];
					$totalaprilnil += $row1['aprilnil'];
					$totalmeiqty += $row1['meiqty'];
					$totalmeinil += $row1['meinil'];
					$totaljuniqty += $row1['juniqty'];
					$totaljuninil += $row1['juninil'];
					$totaljuliqty += $row1['juliqty'];
					$totaljulinil += $row1['julinil'];
					$totalagustusqty += $row1['agustusqty'];
					$totalagustusnil += $row1['agustusnil'];
					$totalseptemberqty += $row1['septemberqty'];
					$totalseptembernil += $row1['septembernil'];
					$totaloktoberqty += $row1['oktoberqty'];
					$totaloktobernil += $row1['oktobernil'];
					$totalnopemberqty += $row1['nopemberqty'];
					$totalnopembernil += $row1['nopembernil'];
					$totaldesemberqty += $row1['desemberqty'];
					$totaldesembernil += $row1['desembernil'];
					$totaljumlahqty += $row1['jumlahqty'];
					$totaljumlahnil += $row1['jumlahnil'];
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R','L','L','R','R','R','R','R','R','R','R','R','R','R');
				$this->pdf->setwidths(array(10,35,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,15));
				$this->pdf->setFont('Arial','B',7);
				$this->pdf->row(array(
					'','TOTAL '.$row['description'],
					Yii::app()->format->formatNumber($totaljanuariqty),
					Yii::app()->format->formatCurrency($totaljanuarinil),
					Yii::app()->format->formatNumber($totalfebruariqty),
					Yii::app()->format->formatCurrency($totalfebruarinil),
					Yii::app()->format->formatNumber($totalmaretqty),
					Yii::app()->format->formatCurrency($totalmaretnil),
					Yii::app()->format->formatNumber($totalaprilqty),
					Yii::app()->format->formatCurrency($totalaprilnil),
					Yii::app()->format->formatNumber($totalmeiqty),
					Yii::app()->format->formatCurrency($totalmeinil),
					Yii::app()->format->formatNumber($totaljuniqty),
					Yii::app()->format->formatCurrency($totaljuninil),
					Yii::app()->format->formatNumber($totaljuliqty),
					Yii::app()->format->formatCurrency($totaljulinil),
					Yii::app()->format->formatNumber($totalagustusqty),
					Yii::app()->format->formatCurrency($totalagustusnil),
					Yii::app()->format->formatNumber($totalseptemberqty),
					Yii::app()->format->formatCurrency($totalseptembernil),
					Yii::app()->format->formatNumber($totaloktoberqty),
					Yii::app()->format->formatCurrency($totaloktobernil),
					Yii::app()->format->formatNumber($totalnopemberqty),
					Yii::app()->format->formatCurrency($totalnopembernil),
					Yii::app()->format->formatNumber($totaldesemberqty),
					Yii::app()->format->formatCurrency($totaldesembernil),
					Yii::app()->format->formatNumber($totaljumlahqty),
					Yii::app()->format->formatCurrency($totaljumlahnil)));
					
			$totaljanuariqty1 += $totaljanuariqty;
			$totaljanuarinil1 += $totaljanuarinil;
			$totalfebruariqty1 += $totalfebruariqty;
			$totalfebruarinil1 += $totalfebruarinil;
			$totalmaretqty1 += $totalmaretqty;
			$totalmaretnil1 += $totalmaretnil;
			$totalaprilqty1 += $totalaprilqty;
			$totalaprilnil1 += $totalaprilnil;
			$totalmeiqty1 += $totalmeiqty;
			$totalmeinil1 += $totalmeinil;
			$totaljuniqty1 += $totaljuniqty;
			$totaljuninil1 += $totaljuninil;
			$totaljuliqty1 += $totaljuliqty;
			$totaljulinil1 += $totaljulinil;
			$totalagustusqty1 += $totalagustusqty;
			$totalagustusnil1 += $totalagustusnil;
			$totalseptemberqty1 += $totalseptemberqty;
			$totalseptembernil1 += $totalseptembernil;
			$totaloktoberqty1 += $totaloktoberqty;
			$totaloktobernil1 += $totaloktobernil;
			$totalnopemberqty1 += $totalnopemberqty;
			$totalnopembernil1 += $totalnopembernil;
			$totaldesemberqty1 += $totaldesemberqty;
			$totaldesembernil1 += $totaldesembernil;
			$totaljumlahqty1 += $totaljumlahqty;
			$totaljumlahnil1 += $totaljumlahnil;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R','L','L','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,35,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,15));
		$this->pdf->setFont('Arial','B',7);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatNumber($totaljanuariqty1),
			Yii::app()->format->formatCurrency($totaljanuarinil1),
			Yii::app()->format->formatNumber($totalfebruariqty1),
			Yii::app()->format->formatCurrency($totalfebruarinil1),
			Yii::app()->format->formatNumber($totalmaretqty1),
			Yii::app()->format->formatCurrency($totalmaretnil1),
			Yii::app()->format->formatNumber($totalaprilqty1),
			Yii::app()->format->formatCurrency($totalaprilnil1),
			Yii::app()->format->formatNumber($totalmeiqty1),
			Yii::app()->format->formatCurrency($totalmeinil1),
			Yii::app()->format->formatNumber($totaljuniqty1),
			Yii::app()->format->formatCurrency($totaljuninil1),
			Yii::app()->format->formatNumber($totaljuliqty1),
			Yii::app()->format->formatCurrency($totaljulinil1),
			Yii::app()->format->formatNumber($totalagustusqty1),
			Yii::app()->format->formatCurrency($totalagustusnil1),
			Yii::app()->format->formatNumber($totalseptemberqty1),
			Yii::app()->format->formatCurrency($totalseptembernil1),
			Yii::app()->format->formatNumber($totaloktoberqty1),
			Yii::app()->format->formatCurrency($totaloktobernil1),
			Yii::app()->format->formatNumber($totalnopemberqty1),
			Yii::app()->format->formatCurrency($totalnopembernil1),
			Yii::app()->format->formatNumber($totaldesemberqty1),
			Yii::app()->format->formatCurrency($totaldesembernil1),
			Yii::app()->format->formatNumber($totaljumlahqty1),
			Yii::app()->format->formatCurrency($totaljumlahnil1)));
		$this->pdf->Output();
	}
	//52
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalNilai($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	            join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang Per Bulan - Total (Nilai)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','F4');
      
        if(isset($spv) && $spv!='')
        {                
          $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
          $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
          $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
          $this->pdf->sety($this->pdf->gety()+5);
        }
								
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,35,20,20,20,20,20,20,20,20,20,20,20,20,25));
			$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
			$this->pdf->RowHeader();
			
			$sql1 = "select * from (select xxx.description as barang,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as januari,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as februari,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as maret,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and invoiceno not like '%-%-%'
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as april,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as mei,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juni,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juli,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as agustus,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as september,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 10 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as oktober,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as nopember,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 12 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as desember,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as jumlah
							from materialgroup xxx where xxx.parentmatgroupid is not null) xxxx where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <>0 
							or juli <>0 or agustus <> 0 or september <>0 or oktober <> 0 or nopember <> 0 or desember <> 0";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
			foreach($dataReader1 as $row1)
			{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['barang'],
						Yii::app()->format->formatCurrency($row1['januari']/$per),
						Yii::app()->format->formatCurrency($row1['februari']/$per),
						Yii::app()->format->formatCurrency($row1['maret']/$per),
						Yii::app()->format->formatCurrency($row1['april']/$per),
						Yii::app()->format->formatCurrency($row1['mei']/$per),
						Yii::app()->format->formatCurrency($row1['juni']/$per),
						Yii::app()->format->formatCurrency($row1['juli']/$per),
						Yii::app()->format->formatCurrency($row1['agustus']/$per),
						Yii::app()->format->formatCurrency($row1['september']/$per),
						Yii::app()->format->formatCurrency($row1['oktober']/$per),
						Yii::app()->format->formatCurrency($row1['nopember']/$per),
						Yii::app()->format->formatCurrency($row1['desember']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per)
					));
				$totaljanuari += $row1['januari']/$per;
		    $totalfebruari += $row1['februari']/$per;
		    $totalmaret += $row1['maret']/$per;
		    $totalapril += $row1['april']/$per;
		    $totalmei += $row1['mei']/$per;
		    $totaljuni += $row1['juni']/$per;
		    $totaljuli += $row1['juli']/$per;
		    $totalagustus += $row1['agustus']/$per;
		    $totalseptember += $row1['september']/$per;
		    $totaloktober += $row1['oktober']/$per;
		    $totalnopember += $row1['nopember']/$per;
		    $totaldesember += $row1['desember']/$per;
		    $totaljumlah += $row1['jumlah']/$per;
			}
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
        '',
        'TOTAL ' . $row['fullname'],
        Yii::app()->format->formatCurrency($totaljanuari),
        Yii::app()->format->formatCurrency($totalfebruari),
        Yii::app()->format->formatCurrency($totalmaret),
        Yii::app()->format->formatCurrency($totalapril),
        Yii::app()->format->formatCurrency($totalmei),
        Yii::app()->format->formatCurrency($totaljuni),
        Yii::app()->format->formatCurrency($totaljuli),
        Yii::app()->format->formatCurrency($totalagustus),
        Yii::app()->format->formatCurrency($totalseptember),
        Yii::app()->format->formatCurrency($totaloktober),
        Yii::app()->format->formatCurrency($totalnopember),
        Yii::app()->format->formatCurrency($totaldesember),
        Yii::app()->format->formatCurrency($totaljumlah),
      ));
			$totaljanuari1 += $totaljanuari;
	    $totalfebruari1 += $totalfebruari;
	    $totalmaret1 += $totalmaret;
	    $totalapril1 += $totalapril;
	    $totalmei1 += $totalmei;
	    $totaljuni1 += $totaljuni;
	    $totaljuli1 += $totaljuli;
	    $totalagustus1 += $totalagustus;
	    $totalseptember1 += $totalseptember;
	    $totaloktober1 += $totaloktober;
	    $totalnopember1 += $totalnopember;
	    $totaldesember1 += $totaldesember;
	    $totaljumlah1 += $totaljumlah;

			$this->pdf->sety($this->pdf->gety()+3);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatCurrency($totaljanuari1),
      Yii::app()->format->formatCurrency($totalfebruari1),
      Yii::app()->format->formatCurrency($totalmaret1),
      Yii::app()->format->formatCurrency($totalapril1),
      Yii::app()->format->formatCurrency($totalmei1),
      Yii::app()->format->formatCurrency($totaljuni1),
      Yii::app()->format->formatCurrency($totaljuli1),
      Yii::app()->format->formatCurrency($totalagustus1),
      Yii::app()->format->formatCurrency($totalseptember1),
      Yii::app()->format->formatCurrency($totaloktober1),
      Yii::app()->format->formatCurrency($totalnopember1),
      Yii::app()->format->formatCurrency($totaldesember1),
      Yii::app()->format->formatCurrency($totaljumlah1),
    ));
		$this->pdf->Output();
	}
	//53
	public function s_RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianNilai($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }  
        if(isset($spv)&& $spv!=''){
          $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid3 = "";
        }  
        
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) =	year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang Per Bulan - Rincian (Nilai)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L','F4');
			
            if(isset($spv) && $spv!='')
            {                
              $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
              $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
              $this->pdf->SetFont('Arial','B',10);
              $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
              $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
              $this->pdf->sety($this->pdf->gety()+5);
            }
            
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid2." and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')					
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by description";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','',10);
					$this->pdf->text(10,$this->pdf->gety()+10,'Material Group');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row1['description']);
					$sql2 = "select *
								from (select o.productname,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 1
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 1
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as januari,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 2
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 2
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as februari,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 3
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 3
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as maret,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 4
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 4
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as april,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 5
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 5
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as mei,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 6
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 6
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juni,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 7
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 7
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juli,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 8
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 8
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as agustus,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 9
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 9
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as september,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 10
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 10
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as oktober,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 11
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 11
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as nopember,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 12
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 12
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as desember,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']."
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']."
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as jumlah
								from product o 
								order by productname) zzz
								where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
								";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+15);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,35,20,20,20,20,20,20,20,20,20,20,20,20,25));
					$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
								
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['januari']/$per),
							Yii::app()->format->formatCurrency($row2['februari']/$per),
							Yii::app()->format->formatCurrency($row2['maret']/$per),
							Yii::app()->format->formatCurrency($row2['april']/$per),
							Yii::app()->format->formatCurrency($row2['mei']/$per),
							Yii::app()->format->formatCurrency($row2['juni']/$per),
							Yii::app()->format->formatCurrency($row2['juli']/$per),
							Yii::app()->format->formatCurrency($row2['agustus']/$per),
							Yii::app()->format->formatCurrency($row2['september']/$per),
							Yii::app()->format->formatCurrency($row2['oktober']/$per),
							Yii::app()->format->formatCurrency($row2['nopember']/$per),
							Yii::app()->format->formatCurrency($row2['desember']/$per),
							Yii::app()->format->formatCurrency($row2['jumlah']/$per),
						));
						$totaljanuari += $row2['januari']/$per;
						$totalfebruari += $row2['februari']/$per;
						$totalmaret += $row2['maret']/$per;
						$totalapril += $row2['april']/$per;
						$totalmei += $row2['mei']/$per;
						$totaljuni += $row2['juni']/$per;
						$totaljuli += $row2['juli']/$per;
						$totalagustus += $row2['agustus']/$per;
						$totalseptember += $row2['september']/$per;
						$totaloktober += $row2['oktober']/$per;
						$totalnopember += $row2['nopember']/$per;
						$totaldesember += $row2['desember']/$per;
						$totaljumlah += $row2['jumlah']/$per;
						
					}					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
						'','JUMLAH '.$row1['description'],
						Yii::app()->format->formatCurrency($totaljanuari),
						Yii::app()->format->formatCurrency($totalfebruari),
						Yii::app()->format->formatCurrency($totalmaret),
						Yii::app()->format->formatCurrency($totalapril),
						Yii::app()->format->formatCurrency($totalmei),
						Yii::app()->format->formatCurrency($totaljuni),
						Yii::app()->format->formatCurrency($totaljuli),
						Yii::app()->format->formatCurrency($totalagustus),
						Yii::app()->format->formatCurrency($totalseptember),
						Yii::app()->format->formatCurrency($totaloktober),
						Yii::app()->format->formatCurrency($totalnopember),
						Yii::app()->format->formatCurrency($totaldesember),
						Yii::app()->format->formatCurrency($totaljumlah),
					));
						$totaljanuari1 += $totaljanuari;
						$totalfebruari1 += $totalfebruari;
						$totalmaret1 += $totalmaret;
						$totalapril1 += $totalapril;
						$totalmei1 += $totalmei;
						$totaljuni1 += $totaljuni;
						$totaljuli1 += $totaljuli;
						$totalagustus1 += $totalagustus;
						$totalseptember1 += $totalseptember;
						$totaloktober1 += $totaloktober;
						$totalnopember1 += $totalnopember;
						$totaldesember1 += $totaldesember;
						$totaljumlah1 += $totaljumlah;
						
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'TOTAL '.$row['fullname'],
      Yii::app()->format->formatCurrency($totaljanuari1),
      Yii::app()->format->formatCurrency($totalfebruari1),
      Yii::app()->format->formatCurrency($totalmaret1),
      Yii::app()->format->formatCurrency($totalapril1),
      Yii::app()->format->formatCurrency($totalmei1),
      Yii::app()->format->formatCurrency($totaljuni1),
      Yii::app()->format->formatCurrency($totaljuli1),
      Yii::app()->format->formatCurrency($totalagustus1),
      Yii::app()->format->formatCurrency($totalseptember1),
      Yii::app()->format->formatCurrency($totaloktober1),
      Yii::app()->format->formatCurrency($totalnopember1),
      Yii::app()->format->formatCurrency($totaldesember1),
      Yii::app()->format->formatCurrency($totaljumlah1),
    ));
		
			$totaljanuari2 += $totaljanuari1;
			$totalfebruari2 += $totalfebruari1;
			$totalmaret2 += $totalmaret1;
			$totalapril2 += $totalapril1;
			$totalmei2 += $totalmei1;
			$totaljuni2 += $totaljuni1;
			$totaljuli2 += $totaljuli1;
			$totalagustus2 += $totalagustus1;
			$totalseptember2 += $totalseptember1;
			$totaloktober2 += $totaloktober1;
			$totalnopember2 += $totalnopember1;
			$totaldesember2 += $totaldesember1;
			$totaljumlah2 += $totaljumlah1;

			}
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatCurrency($totaljanuari2),
      Yii::app()->format->formatCurrency($totalfebruari2),
      Yii::app()->format->formatCurrency($totalmaret2),
      Yii::app()->format->formatCurrency($totalapril2),
      Yii::app()->format->formatCurrency($totalmei2),
      Yii::app()->format->formatCurrency($totaljuni2),
      Yii::app()->format->formatCurrency($totaljuli2),
      Yii::app()->format->formatCurrency($totalagustus2),
      Yii::app()->format->formatCurrency($totalseptember2),
      Yii::app()->format->formatCurrency($totaloktober2),
      Yii::app()->format->formatCurrency($totalnopember2),
      Yii::app()->format->formatCurrency($totaldesember2),
      Yii::app()->format->formatCurrency($totaljumlah2),
    ));
			$this->pdf->Output();
	}
	//54
	public function s_RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalQty($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }  
       
        
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang Per Bulan - Total (Qty)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','F4');
		
        if(isset($spv) && $spv!='')
        {                
          $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
          $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
          $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
          $this->pdf->sety($this->pdf->gety()+5);
        }
        
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,35,20,20,20,20,20,20,20,20,20,20,20,20,25));
			$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
			$this->pdf->RowHeader();
			
			$sql1 = "select * from (select xxx.description as barang,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as januari,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as februari,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as maret,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as april,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as mei,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juni,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juli,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as agustus,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as september,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 10 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as oktober,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as nopember,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 12 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as desember,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as jumlah
							from materialgroup xxx) xxxx where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <>0 
							or juli <>0 or agustus <> 0 or september <>0 or oktober <> 0 or nopember <> 0 or desember <> 0";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
			foreach($dataReader1 as $row1)
			{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['barang'],
						Yii::app()->format->formatNumber($row1['januari']),
						Yii::app()->format->formatNumber($row1['februari']),
						Yii::app()->format->formatNumber($row1['maret']),
						Yii::app()->format->formatNumber($row1['april']),
						Yii::app()->format->formatNumber($row1['mei']),
						Yii::app()->format->formatNumber($row1['juni']),
						Yii::app()->format->formatNumber($row1['juli']),
						Yii::app()->format->formatNumber($row1['agustus']),
						Yii::app()->format->formatNumber($row1['september']),
						Yii::app()->format->formatNumber($row1['oktober']),
						Yii::app()->format->formatNumber($row1['nopember']),
						Yii::app()->format->formatNumber($row1['desember']),
						Yii::app()->format->formatNumber($row1['jumlah'])
					));
				$totaljanuari += $row1['januari'];
		    $totalfebruari += $row1['februari'];
		    $totalmaret += $row1['maret'];
		    $totalapril += $row1['april'];
		    $totalmei += $row1['mei'];
		    $totaljuni += $row1['juni'];
		    $totaljuli += $row1['juli'];
		    $totalagustus += $row1['agustus'];
		    $totalseptember += $row1['september'];
		    $totaloktober += $row1['oktober'];
		    $totalnopember += $row1['nopember'];
		    $totaldesember += $row1['desember'];
		    $totaljumlah += $row1['jumlah'];
			}
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
        '',
        'TOTAL ' . $row['fullname'],
        Yii::app()->format->formatNumber($totaljanuari),
        Yii::app()->format->formatNumber($totalfebruari),
        Yii::app()->format->formatNumber($totalmaret),
        Yii::app()->format->formatNumber($totalapril),
        Yii::app()->format->formatNumber($totalmei),
        Yii::app()->format->formatNumber($totaljuni),
        Yii::app()->format->formatNumber($totaljuli),
        Yii::app()->format->formatNumber($totalagustus),
        Yii::app()->format->formatNumber($totalseptember),
        Yii::app()->format->formatNumber($totaloktober),
        Yii::app()->format->formatNumber($totalnopember),
        Yii::app()->format->formatNumber($totaldesember),
        Yii::app()->format->formatNumber($totaljumlah),
      ));
			$totaljanuari1 += $totaljanuari;
	    $totalfebruari1 += $totalfebruari;
	    $totalmaret1 += $totalmaret;
	    $totalapril1 += $totalapril;
	    $totalmei1 += $totalmei;
	    $totaljuni1 += $totaljuni;
	    $totaljuli1 += $totaljuli;
	    $totalagustus1 += $totalagustus;
	    $totalseptember1 += $totalseptember;
	    $totaloktober1 += $totaloktober;
	    $totalnopember1 += $totalnopember;
	    $totaldesember1 += $totaldesember;
	    $totaljumlah1 += $totaljumlah;

			$this->pdf->sety($this->pdf->gety()+3);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatNumber($totaljanuari1),
      Yii::app()->format->formatNumber($totalfebruari1),
      Yii::app()->format->formatNumber($totalmaret1),
      Yii::app()->format->formatNumber($totalapril1),
      Yii::app()->format->formatNumber($totalmei1),
      Yii::app()->format->formatNumber($totaljuni1),
      Yii::app()->format->formatNumber($totaljuli1),
      Yii::app()->format->formatNumber($totalagustus1),
      Yii::app()->format->formatNumber($totalseptember1),
      Yii::app()->format->formatNumber($totaloktober1),
      Yii::app()->format->formatNumber($totalnopember1),
      Yii::app()->format->formatNumber($totaldesember1),
      Yii::app()->format->formatNumber($totaljumlah1),
    ));
		$this->pdf->Output();
	}
	//55
	public function s_RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianQty($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid3 = "";
        }  
       
        
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) =	year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang Per Bulan - Rincian (Qty)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L','F4');
      
            if(isset($spv) && $spv!='')
            {                
              $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
              $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
              $this->pdf->SetFont('Arial','B',10);
              $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
              $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
              $this->pdf->sety($this->pdf->gety()+5);
            }
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid2." and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by description";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','',10);
					$this->pdf->text(10,$this->pdf->gety()+10,'Material Group');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row1['description']);
					$sql2 = "select *
								from (select o.productname,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 1
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 1
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as januari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 2
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 2
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as februari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 3
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 3
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as maret,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 4
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 4
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as april,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 5
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 5
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as mei,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 6
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 6
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juni,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 7
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 7
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juli,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 8
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 8
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as agustus,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 9
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 9
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as september,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 10
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 10
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as oktober,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 11
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 11
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as nopember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 12
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 12
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as desember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']."
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']."
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as jumlah
								from product o 
								order by productname) zzz
								where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
								";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+15);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,35,20,20,20,20,20,20,20,20,20,20,20,20,25));
					$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
								
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatNumber($row2['januari']),
							Yii::app()->format->formatNumber($row2['februari']),
							Yii::app()->format->formatNumber($row2['maret']),
							Yii::app()->format->formatNumber($row2['april']),
							Yii::app()->format->formatNumber($row2['mei']),
							Yii::app()->format->formatNumber($row2['juni']),
							Yii::app()->format->formatNumber($row2['juli']),
							Yii::app()->format->formatNumber($row2['agustus']),
							Yii::app()->format->formatNumber($row2['september']),
							Yii::app()->format->formatNumber($row2['oktober']),
							Yii::app()->format->formatNumber($row2['nopember']),
							Yii::app()->format->formatNumber($row2['desember']),
							Yii::app()->format->formatNumber($row2['jumlah']),
						));
						$totaljanuari += $row2['januari'];
						$totalfebruari += $row2['februari'];
						$totalmaret += $row2['maret'];
						$totalapril += $row2['april'];
						$totalmei += $row2['mei'];
						$totaljuni += $row2['juni'];
						$totaljuli += $row2['juli'];
						$totalagustus += $row2['agustus'];
						$totalseptember += $row2['september'];
						$totaloktober += $row2['oktober'];
						$totalnopember += $row2['nopember'];
						$totaldesember += $row2['desember'];
						$totaljumlah += $row2['jumlah'];
						
					}					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
						'','JUMLAH '.$row1['description'],
						Yii::app()->format->formatNumber($totaljanuari),
						Yii::app()->format->formatNumber($totalfebruari),
						Yii::app()->format->formatNumber($totalmaret),
						Yii::app()->format->formatNumber($totalapril),
						Yii::app()->format->formatNumber($totalmei),
						Yii::app()->format->formatNumber($totaljuni),
						Yii::app()->format->formatNumber($totaljuli),
						Yii::app()->format->formatNumber($totalagustus),
						Yii::app()->format->formatNumber($totalseptember),
						Yii::app()->format->formatNumber($totaloktober),
						Yii::app()->format->formatNumber($totalnopember),
						Yii::app()->format->formatNumber($totaldesember),
						Yii::app()->format->formatNumber($totaljumlah),
					));
						$totaljanuari1 += $totaljanuari;
						$totalfebruari1 += $totalfebruari;
						$totalmaret1 += $totalmaret;
						$totalapril1 += $totalapril;
						$totalmei1 += $totalmei;
						$totaljuni1 += $totaljuni;
						$totaljuli1 += $totaljuli;
						$totalagustus1 += $totalagustus;
						$totalseptember1 += $totalseptember;
						$totaloktober1 += $totaloktober;
						$totalnopember1 += $totalnopember;
						$totaldesember1 += $totaldesember;
						$totaljumlah1 += $totaljumlah;
						
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'TOTAL '.$row['fullname'],
      Yii::app()->format->formatNumber($totaljanuari1),
      Yii::app()->format->formatNumber($totalfebruari1),
      Yii::app()->format->formatNumber($totalmaret1),
      Yii::app()->format->formatNumber($totalapril1),
      Yii::app()->format->formatNumber($totalmei1),
      Yii::app()->format->formatNumber($totaljuni1),
      Yii::app()->format->formatNumber($totaljuli1),
      Yii::app()->format->formatNumber($totalagustus1),
      Yii::app()->format->formatNumber($totalseptember1),
      Yii::app()->format->formatNumber($totaloktober1),
      Yii::app()->format->formatNumber($totalnopember1),
      Yii::app()->format->formatNumber($totaldesember1),
      Yii::app()->format->formatNumber($totaljumlah1),
    ));
		
			$totaljanuari2 += $totaljanuari1;
			$totalfebruari2 += $totalfebruari1;
			$totalmaret2 += $totalmaret1;
			$totalapril2 += $totalapril1;
			$totalmei2 += $totalmei1;
			$totaljuni2 += $totaljuni1;
			$totaljuli2 += $totaljuli1;
			$totalagustus2 += $totalagustus1;
			$totalseptember2 += $totalseptember1;
			$totaloktober2 += $totaloktober1;
			$totalnopember2 += $totalnopember1;
			$totaldesember2 += $totaldesember1;
			$totaljumlah2 += $totaljumlah1;

			}
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatNumber($totaljanuari2),
      Yii::app()->format->formatNumber($totalfebruari2),
      Yii::app()->format->formatNumber($totalmaret2),
      Yii::app()->format->formatNumber($totalapril2),
      Yii::app()->format->formatNumber($totalmei2),
      Yii::app()->format->formatNumber($totaljuni2),
      Yii::app()->format->formatNumber($totaljuli2),
      Yii::app()->format->formatNumber($totalagustus2),
      Yii::app()->format->formatNumber($totalseptember2),
      Yii::app()->format->formatNumber($totaloktober2),
      Yii::app()->format->formatNumber($totalnopember2),
      Yii::app()->format->formatNumber($totaldesember2),
      Yii::app()->format->formatNumber($totaljumlah2),
    ));
			$this->pdf->Output();
	}
	//56
	public function RekapSalesOrderOutstandingPerBarang($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnetto=0;
      
         if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         
		$sql = "select distinct f.materialgroupid, f.description
						from sodetail a 
						join soheader b on b.soheaderid=a.soheaderid
						join product c on c.productid=a.productid
						join unitofmeasure d on d.unitofmeasureid=a.unitofmeasureid
						join productplant e on e.productid=a.productid and e.slocid=a.slocid
						join materialgroup f on f.materialgroupid=e.materialgroupid
						join sloc g on g.slocid=a.slocid
						join addressbook h on h.addressbookid=b.addressbookid
						join employee i on i.employeeid=b.employeeid
						join salesarea j on j.salesareaid=h.salesareaid
						where b.recordstatus = 6 and c.isstock = 1
						and b.companyid = ".$companyid."
						and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and a.qty <> a.giqty and g.sloccode like '%".$sloc."%'	and h.fullname like '%".$customer."%' 
						and i.fullname like '%".$employee."%'	".$spvid." and c.productname like '%".$product."%'
						and j.areaname like '%".$salesarea."%' group by productname";	
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rincian Sales Order Outstanding';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			
			$this->pdf->AddPage('P'); 
      
            if(isset($spv) && $spv!='')
            {                
              $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
              $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
              $this->pdf->SetFont('Arial','B',10);
              $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
              $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
              $this->pdf->sety($this->pdf->gety()+5);
            }
			
			if ($customer == '') {$cust = 'ALL';} else {$cust = $customer;}
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');
			$this->pdf->text(30,$this->pdf->gety()+5,': '.$cust);
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Material Group');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['description']);
				
				$sql1 = "select c.productname, d.uomcode, sum(a.qty) as qty, sum(a.giqty) as giqty, sum(a.qty-a.giqty) as sisa,
							(select ifnull(sum(k.qty),0) from productstock k where k.productid=a.productid and k.slocid=a.slocid and k.unitofmeasureid=a.unitofmeasureid) as stok
						from sodetail a 
						join soheader b on b.soheaderid=a.soheaderid
						join product c on c.productid=a.productid
						join unitofmeasure d on d.unitofmeasureid=a.unitofmeasureid
						join productplant e on e.productid=a.productid and e.slocid=a.slocid
						join materialgroup f on f.materialgroupid=e.materialgroupid
						join sloc g on g.slocid=a.slocid
						join addressbook h on h.addressbookid=b.addressbookid
						join employee i on i.employeeid=b.employeeid
						join salesarea j on j.salesareaid=h.salesareaid
						where b.recordstatus = 6 and c.isstock = 1 and e.recordstatus = 1 and f.materialgroupid = '".$row['materialgroupid']."'
						and b.companyid = ".$companyid."
						and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and a.qty <> a.giqty and g.sloccode like '%".$sloc."%'	and h.fullname like '%".$customer."%' 
						and i.fullname like '%".$employee."%'	".$spvid." and c.productname like '%".$product."%'
						and j.areaname like '%".$salesarea."%' group by productname";
				
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totalsisa=0;$i=0;$totalqty=0;$totalgiqty=0;
				$this->pdf->sety($this->pdf->gety()+14);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,70,12,25,25,25,25));
				$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty SO','Qty Kirim','Qty Belum Kirim','Stok Tersedia');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						$row1['uomcode'],
						Yii::app()->format->formatNumber($row1['qty']),
						Yii::app()->format->formatNumber($row1['giqty']),
						Yii::app()->format->formatNumber($row1['sisa']),
						Yii::app()->format->formatNumber($row1['stok'])
					));
					$totalqty += $row1['qty'];
					$totalgiqty += $row1['giqty'];
					$totalsisa += $row1['sisa'];

				}
				$this->pdf->row(array(
						'','Total','',
						Yii::app()->format->formatNumber($totalqty),
						Yii::app()->format->formatNumber($totalgiqty),
						Yii::app()->format->formatNumber($totalsisa),
					));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}
	//57
	public function RekapSOPerDokumentBelumStatusMax($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.soheaderid, a.sono, a.sodate, a.companyid, a.addressbookid, a.recordstatus, a.statusname, b.companyname, c.fullname
		from soheader a
        join company b on b.companyid = a.companyid
        join addressbook c on c.addressbookid = a.addressbookid
        join employee e on e.employeeid = a.employeeid
        where a.recordstatus < 6 and a.recordstatus <> 0
        and a.companyid=".$companyid."
        and c.fullname like '%".$customer."%'
        and e.fullname like '%".$employee."%'
	and a.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
		and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."'";
        
            $dataReader=Yii::app()->db->createCommand($sql)->queryAll();

       
			$this->pdf->title='Rekap SO Per Dokumen Status Belum Max';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			    $this->pdf->AddPage('P');
				$this->pdf->sety($this->pdf->gety()+10);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,20,20,50,45,45));
				$this->pdf->colheader = array('No','NO SO','Tgl SO','Perusahaan','Customer','Status');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','L','L','L','L');
				$this->pdf->setFont('Arial','',8);	
        $i=0;
        foreach($dataReader as $row){
            $i+=1;
            $this->pdf->setFont('Arial','',8);
            $this->pdf->row(array(
                $row['soheaderid'],
                $row['sono'],
               date(Yii::app()->params['dateviewfromdb'],strtotime($row['sodate'])),
                $row['companyname'],
                $row['fullname'],
                $row['statusname']));
                                  
        }
		$this->pdf->Output();	
	}
	//58
	public function RekapPenjualanReturPenjualanPerSalesPerBulanPerTahunTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$nilai = array();
		$year = date('Y',strtotime($enddate));
		$jumlah[1]=0;$jumlah[2]=0;$jumlah[3]=0;$jumlah[4]=0;$jumlah[5]=0;$jumlah[6]=0;$jumlah[7]=0;$jumlah[8]=0;$jumlah[9]=0;$jumlah[10]=0;$jumlah[11]=0;$jumlah[12]=0;$jumlah[13]=0;
		$sql = "select distinct employeeid,fullname from
			(select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%'
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and year(j.invoicedate)={$year}
				union
				select distinct l.employeeid,l.fullname
                from notagirpro a
                join notagir b on b.notagirid=a.notagirid
                join gireturdetail c on c.gireturdetailid=a.gireturdetailid
                join giretur d on d.gireturid=b.gireturid
                join gidetail e on e.gidetailid=c.gidetailid
                join giheader f on f.giheaderid=d.giheaderid
                join sodetail g on g.sodetailid=e.sodetailid
                join soheader h on h.soheaderid=f.soheaderid
                join product i on i.productid = a.productid
                join sloc j on j.slocid = a.slocid
                join addressbook k on k.addressbookid = h.addressbookid
                join employee l on l.employeeid = h.employeeid
                join salesarea m on m.salesareaid = k.salesareaid
                where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
                and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
                and i.productname like '%".$product."%' and year(d.gireturdate)={$year})z order by fullname";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Sales Per Bulan Per Tahun - Total (Nilai)';
		$this->pdf->subtitle='Per Tahun '.date('Y',strtotime($enddate));
		$this->pdf->AddPage('L','F4');
		
		$this->pdf->SetFont('Arial','B',10);
		$i=0;
		$this->pdf->sety($this->pdf->gety()+8);
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,35,20,20,20,20,20,20,20,20,20,20,20,20,25));
		$this->pdf->colheader = array('No','Nama Sales','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
        
		foreach($dataReader as $row)
		{	   
			$nilai[13]=0;
			for($l=1; $l<=12; $l++)
			{
				$sql1 = "
							select distinct sum(netto) as netto from
							(select sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productname,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = 1 and h.sloccode like '%%' and d.fullname like '%%' and
							e.fullname like '%%' and f.areaname like '%%' and i.productname like '%%' and a.invoicedate between '".$year."-".$l."-01' and '".$year."-".$l."-31'  
							and e.employeeid = {$row['employeeid']})z group by fullname
							union
							select -1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productname,(a.qty*a.price) as nett,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = 1 and b.recordstatus = 3 and j.sloccode like '%%' 
							and k.fullname like '%%' and l.fullname like '%%' and m.areaname like '%%'
							and i.productname like '%%' and l.employeeid = {$row['employeeid']} and d.gireturdate between '".$year."-".$l."-01' and '".$year."-".$l."-31'  
							)z ) zz ";
                    
				$res=Yii::app()->db->createCommand($sql1)->queryRow();
				$nilai[$l] = $res['netto'];
				$nilai[13] = $nilai[13] + $nilai[$l];
			}
			$this->pdf->setFont('Arial','',7);
			$i=$i+1;
			
			$this->pdf->row(array(
				$i,$row['fullname'],
				Yii::app()->format->formatCurrency($nilai[1]/$per),
				Yii::app()->format->formatCurrency($nilai[2]/$per),
				Yii::app()->format->formatCurrency($nilai[3]/$per),
				Yii::app()->format->formatCurrency($nilai[4]/$per),
				Yii::app()->format->formatCurrency($nilai[5]/$per),
				Yii::app()->format->formatCurrency($nilai[6]/$per),
				Yii::app()->format->formatCurrency($nilai[7]/$per),
				Yii::app()->format->formatCurrency($nilai[8]/$per),
				Yii::app()->format->formatCurrency($nilai[9]/$per),
				Yii::app()->format->formatCurrency($nilai[10]/$per),
				Yii::app()->format->formatCurrency($nilai[11]/$per),
				Yii::app()->format->formatCurrency($nilai[12]/$per),
				Yii::app()->format->formatCurrency($nilai[13]/$per)					
			));
			
			$jumlah[1] += $nilai[1]/$per;
			$jumlah[2] += $nilai[2]/$per;
			$jumlah[3] += $nilai[3]/$per;
			$jumlah[4] += $nilai[4]/$per;
			$jumlah[5] += $nilai[5]/$per;
			$jumlah[6] += $nilai[6]/$per;
			$jumlah[7] += $nilai[7]/$per;
			$jumlah[8] += $nilai[8]/$per;
			$jumlah[9] += $nilai[9]/$per;
			$jumlah[10] += $nilai[10]/$per;
			$jumlah[11] += $nilai[11]/$per;
			$jumlah[12] += $nilai[12]/$per;
			$jumlah[13] += $nilai[13]/$per;
									
			$this->pdf->sety($this->pdf->gety()+5);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','TOTAL ',
			Yii::app()->format->formatCurrency($jumlah[1]),
			Yii::app()->format->formatCurrency($jumlah[2]),
			Yii::app()->format->formatCurrency($jumlah[3]),
			Yii::app()->format->formatCurrency($jumlah[4]),
			Yii::app()->format->formatCurrency($jumlah[5]),
			Yii::app()->format->formatCurrency($jumlah[6]),
			Yii::app()->format->formatCurrency($jumlah[7]),
			Yii::app()->format->formatCurrency($jumlah[8]),
			Yii::app()->format->formatCurrency($jumlah[9]),
			Yii::app()->format->formatCurrency($jumlah[10]),
			Yii::app()->format->formatCurrency($jumlah[11]),
			Yii::app()->format->formatCurrency($jumlah[12]),
			Yii::app()->format->formatCurrency($jumlah[13])					
		));	
		$this->pdf->Output();
	}
	//59
	public function RekapPenjualanReturPenjualanPerSalesPerBarangBulanPerTahunTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$exp = array();
		$total[1][0]=0;$total[2][0]=0;$total[3][0]=0;$total[4][0]=0;$total[5][0]=0;$total[6][0]=0;$total[7][0]=0;$total[8][0]=0;$total[9][0]=0;$total[10][0]=0;$total[11][0]=0;$total[12][0]=0;$total[13][0]=0;
		$total[1][1]=0;$total[2][1]=0;$total[3][1]=0;$total[4][1]=0;$total[5][1]=0;$total[6][1]=0;$total[7][1]=0;$total[8][1]=0;$total[9][1]=0;$total[10][1]=0;$total[11][1]=0;$total[12][1]=0;$total[13][1]=0;
		$sql = "select employeeid, fullname from 
				(select distinct f.employeeid,f.fullname
                from soheader b
                join addressbook c on c.addressbookid = b.addressbookid
                join salesarea k on k.salesareaid = c.salesareaid
                join giheader h on h.soheaderid = b.soheaderid
                join gidetail d on d.giheaderid = h.giheaderid
                join product e on e.productid = d.productid
                join employee f on f.employeeid = b.employeeid
                join sloc i on i.slocid = d.slocid
                join invoice j on j.giheaderid = h.giheaderid  
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
                select distinct l.employeeid,l.fullname
                from notagirpro a
                join notagir b on b.notagirid=a.notagirid
                join gireturdetail c on c.gireturdetailid=a.gireturdetailid
                join giretur d on d.gireturid=b.gireturid
                join gidetail e on e.gidetailid=c.gidetailid
                join giheader f on f.giheaderid=d.giheaderid
                join sodetail g on g.sodetailid=e.sodetailid
                join soheader h on h.soheaderid=f.soheaderid
                join product i on i.productid = a.productid
                join sloc j on j.slocid = a.slocid
                join addressbook k on k.addressbookid = h.addressbookid
                join employee l on l.employeeid = h.employeeid
                join salesarea m on m.salesareaid = k.salesareaid
                where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
                and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
                and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();

		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Sales Per Barang Per Bulan - Total (Qty & Nilai)';
		$this->pdf->subtitle='Per Tahun '.date('Y',strtotime($enddate));
		$this->pdf->AddPage('L',array(170,395));


		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$i=0;
			$jumlah[1][0]=0;$jumlah[2][0]=0;$jumlah[3][0]=0;$jumlah[4][0]=0;$jumlah[5][0]=0;$jumlah[6][0]=0;$jumlah[7][0]=0;$jumlah[8][0]=0;$jumlah[9][0]=0;$jumlah[10][0]=0;$jumlah[11][0]=0;$jumlah[12][0]=0;$jumlah[13][0]=0;
			$jumlah[1][1]=0;$jumlah[2][1]=0;$jumlah[3][1]=0;$jumlah[4][1]=0;$jumlah[5][1]=0;$jumlah[6][1]=0;$jumlah[7][1]=0;$jumlah[8][1]=0;$jumlah[9][1]=0;$jumlah[10][1]=0;$jumlah[11][1]=0;$jumlah[12][1]=0;$jumlah[13][1]=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->setwidths(array(10,30,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Material Group','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
			$this->pdf->RowHeader();

			$sql1 = "select barang, bulan1, bulan2, bulan3, bulan4, bulan5, bulan6, bulan7, bulan8, bulan9, bulan10, bulan11, bulan12, jumlah from 
					(select xxx.description as barang, 
					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 1 
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 1
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan1,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 2 
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 2
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan2,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 3 
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 3
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan3,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 4 
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 4
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan4,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 5 
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 5
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan5,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 6 
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 6
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan6,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 7 
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 7
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan7,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 8 
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 8
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan8,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 9 
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 9
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan9,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 10
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 10
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan10,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 11
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 11
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan11,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and month (a.invoicedate) = 12
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and month(d.gireturdate) = 12
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan12,

					ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
					(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
					(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid and j.slocid=g.slocid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					join materialgroup l on l.materialgroupid = j.materialgroupid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
					e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
					and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
					union
					select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
					(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					join materialgroup o on o.materialgroupid=n.materialgroupid
					where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
					and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
					and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
					where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as jumlah
					from materialgroup xxx) xxxx where bulan1 <> 0 or bulan2 <> 0 or bulan3 <> 0 or bulan4 <> 0 or bulan5 <> 0 or bulan6 <>0 
					or bulan7 <>0 or bulan8 <> 0 or bulan9 <>0 or bulan10 <> 0 or bulan11 <> 0 or bulan12 <> 0";

			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setwidths(array(10,30,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,10));
			$this->pdf->row(array('','','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty'));
			$res1 = Yii::app()->db->createCommand($sql1)->queryAll();
			foreach($res1 as $row1)
			{
				$i +=1;
				for($j=1; $j<=12; $j++){
						$exp[$j] = explode(',',$row1['bulan'.$j]);
				}
				$exp['jumlah'] = explode(',',$row1['jumlah']);
				$this->pdf->SetFont('Arial','',8);
				$this->pdf->row(array($i,$row1['barang'],
					Yii::app()->format->formatCurrency($exp[1][0]/$per),$exp[1][1],
					Yii::app()->format->formatCurrency($exp[2][0]/$per),$exp[2][1],
					Yii::app()->format->formatCurrency($exp[3][0]/$per),$exp[3][1],
					Yii::app()->format->formatCurrency($exp[4][0]/$per),$exp[4][1],
					Yii::app()->format->formatCurrency($exp[5][0]/$per),$exp[5][1],
					Yii::app()->format->formatCurrency($exp[6][0]/$per),$exp[6][1],
					Yii::app()->format->formatCurrency($exp[7][0]/$per),$exp[7][1],
					Yii::app()->format->formatCurrency($exp[8][0]/$per),$exp[8][1],
					Yii::app()->format->formatCurrency($exp[9][0]/$per),$exp[9][1],
					Yii::app()->format->formatCurrency($exp[10][0]/$per),$exp[10][1],
					Yii::app()->format->formatCurrency($exp[11][0]/$per),$exp[11][1],
					Yii::app()->format->formatCurrency($exp[12][0]/$per),$exp[12][1],
					Yii::app()->format->formatCurrency($exp['jumlah'][0]/$per),$exp['jumlah'][1],
				));
				$i++;
				$jumlah[1][0] += $exp[1][0]/$per;
				$jumlah[2][0] += $exp[2][0]/$per;
				$jumlah[3][0] += $exp[3][0]/$per;
				$jumlah[4][0] += $exp[4][0]/$per;
				$jumlah[5][0] += $exp[5][0]/$per;
				$jumlah[6][0] += $exp[6][0]/$per;
				$jumlah[7][0] += $exp[7][0]/$per;
				$jumlah[8][0] += $exp[8][0]/$per;
				$jumlah[9][0] += $exp[9][0]/$per;
				$jumlah[10][0] += $exp[10][0]/$per;
				$jumlah[11][0] += $exp[11][0]/$per;
				$jumlah[12][0] += $exp[12][0]/$per;
				$jumlah[13][0] += $exp['jumlah'][0]/$per;
				$jumlah[1][1] += $exp[1][1];
				$jumlah[2][1] += $exp[2][1];
				$jumlah[3][1] += $exp[3][1];
				$jumlah[4][1] += $exp[4][1];
				$jumlah[5][1] += $exp[5][1];
				$jumlah[6][1] += $exp[6][1];
				$jumlah[7][1] += $exp[7][1];
				$jumlah[8][1] += $exp[8][1];
				$jumlah[9][1] += $exp[9][1];
				$jumlah[10][1] += $exp[10][1];
				$jumlah[11][1] += $exp[11][1];
				$jumlah[12][1] += $exp[12][1];
				$jumlah[13][1] += $exp['jumlah'][1];
			}
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array('','JUMLAH '.$row['fullname'],
				Yii::app()->format->formatCurrency($jumlah[1][0]),$jumlah[1][1],
				Yii::app()->format->formatCurrency($jumlah[2][0]),$jumlah[2][1],
				Yii::app()->format->formatCurrency($jumlah[3][0]),$jumlah[3][1],
				Yii::app()->format->formatCurrency($jumlah[4][0]),$jumlah[4][1],
				Yii::app()->format->formatCurrency($jumlah[5][0]),$jumlah[5][1],
				Yii::app()->format->formatCurrency($jumlah[6][0]),$jumlah[6][1],
				Yii::app()->format->formatCurrency($jumlah[7][0]),$jumlah[7][1],
				Yii::app()->format->formatCurrency($jumlah[8][0]),$jumlah[8][1],
				Yii::app()->format->formatCurrency($jumlah[9][0]),$jumlah[9][1],
				Yii::app()->format->formatCurrency($jumlah[10][0]),$jumlah[10][1],
				Yii::app()->format->formatCurrency($jumlah[11][0]),$jumlah[11][1],
				Yii::app()->format->formatCurrency($jumlah[12][0]),$jumlah[12][1],
				Yii::app()->format->formatCurrency($jumlah[13][0]),$jumlah[13][1],
			));
			$total[1][0] += $jumlah[1][0];
			$total[2][0] += $jumlah[2][0];
			$total[3][0] += $jumlah[3][0];
			$total[4][0] += $jumlah[4][0];
			$total[5][0] += $jumlah[5][0];
			$total[6][0] += $jumlah[6][0];
			$total[7][0] += $jumlah[7][0];
			$total[8][0] += $jumlah[8][0];
			$total[9][0] += $jumlah[9][0];
			$total[10][0] += $jumlah[10][0];
			$total[11][0] += $jumlah[11][0];
			$total[12][0] += $jumlah[12][0];
			$total[13][0] += $jumlah[13][0];
			$total[1][1] += $jumlah[1][1];
			$total[2][1] += $jumlah[2][1];
			$total[3][1] += $jumlah[3][1];
			$total[4][1] += $jumlah[4][1];
			$total[5][1] += $jumlah[5][1];
			$total[6][1] += $jumlah[6][1];
			$total[7][1] += $jumlah[7][1];
			$total[8][1] += $jumlah[8][1];
			$total[9][1] += $jumlah[9][1];
			$total[10][1] += $jumlah[10][1];
			$total[11][1] += $jumlah[11][1];
			$total[12][1] += $jumlah[12][1];
			$total[13][1] += $jumlah[13][1];
		}
		$this->pdf->setFont('Arial','BI',9);
		$this->pdf->row(array('','GRAND TOTAL',
			Yii::app()->format->formatCurrency($total[1][0]/$per),$total[1][1],
			Yii::app()->format->formatCurrency($total[2][0]/$per),$total[2][1],
			Yii::app()->format->formatCurrency($total[3][0]/$per),$total[3][1],
			Yii::app()->format->formatCurrency($total[4][0]/$per),$total[4][1],
			Yii::app()->format->formatCurrency($total[5][0]/$per),$total[5][1],
			Yii::app()->format->formatCurrency($total[6][0]/$per),$total[6][1],
			Yii::app()->format->formatCurrency($total[7][0]/$per),$total[7][1],
			Yii::app()->format->formatCurrency($total[8][0]/$per),$total[8][1],
			Yii::app()->format->formatCurrency($total[9][0]/$per),$total[9][1],
			Yii::app()->format->formatCurrency($total[10][0]/$per),$total[10][1],
			Yii::app()->format->formatCurrency($total[11][0]/$per),$total[11][1],
			Yii::app()->format->formatCurrency($total[12][0]/$per),$total[12][1],
			Yii::app()->format->formatCurrency($total[13][0]/$per),$total[13][1],
		));
		$this->pdf->Output();
	}
	//60
	public function RekapPenjualanReturPenjualanPerSalesPerCustomerBulanPerTahunTotal($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$exp = array();
		$total[1][0]=0;$total[2][0]=0;$total[3][0]=0;$total[4][0]=0;$total[5][0]=0;$total[6][0]=0;$total[7][0]=0;$total[8][0]=0;$total[9][0]=0;$total[10][0]=0;$total[11][0]=0;$total[12][0]=0;$total[13][0]=0;
		$total[1][1]=0;$total[2][1]=0;$total[3][1]=0;$total[4][1]=0;$total[5][1]=0;$total[6][1]=0;$total[7][1]=0;$total[8][1]=0;$total[9][1]=0;$total[10][1]=0;$total[11][1]=0;$total[12][1]=0;$total[13][1]=0;
		$sql = "select employeeid, fullname from 
			(select distinct f.employeeid,f.fullname
							from soheader b
							join addressbook c on c.addressbookid = b.addressbookid
							join salesarea k on k.salesareaid = c.salesareaid
							join giheader h on h.soheaderid = b.soheaderid
							join gidetail d on d.giheaderid = h.giheaderid
							join product e on e.productid = d.productid
							join employee f on f.employeeid = b.employeeid
							join sloc i on i.slocid = d.slocid
							join invoice j on j.giheaderid = h.giheaderid  
			where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
			and f.fullname like '%".$employee."%' 
			and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
			and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
			union
							select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();

		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Sales Per Customer Per Bulan - Total (Qty & Nilai)';
		$this->pdf->subtitle='Per Tahun '.date('Y',strtotime($enddate));
		$this->pdf->AddPage('L',array(170,395));


		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$i=0;
			$jumlah[1][0]=0;$jumlah[2][0]=0;$jumlah[3][0]=0;$jumlah[4][0]=0;$jumlah[5][0]=0;$jumlah[6][0]=0;$jumlah[7][0]=0;$jumlah[8][0]=0;$jumlah[9][0]=0;$jumlah[10][0]=0;$jumlah[11][0]=0;$jumlah[12][0]=0;$jumlah[13][0]=0;
			$jumlah[1][1]=0;$jumlah[2][1]=0;$jumlah[3][1]=0;$jumlah[4][1]=0;$jumlah[5][1]=0;$jumlah[6][1]=0;$jumlah[7][1]=0;$jumlah[8][1]=0;$jumlah[9][1]=0;$jumlah[10][1]=0;$jumlah[11][1]=0;$jumlah[12][1]=0;$jumlah[13][1]=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->setwidths(array(10,30,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No',getCatalog('customer'),'Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
			$this->pdf->RowHeader();

					$sql1 = "select custname, bulan1, bulan2, bulan3, bulan4, bulan5, bulan6, bulan7, bulan8, bulan9, bulan10, bulan11, bulan12, jumlah from 
							(select xxx.fullname as custname, 
							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan1,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan2,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan3,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan4,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 5 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan5,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan6,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan7,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan8,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan9,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 10
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan10,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan11,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 12
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan12,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as jumlah
							from addressbook xxx) xxxx where bulan1 <> 0 or bulan2 <> 0 or bulan3 <> 0 or bulan4 <> 0 or bulan5 <> 0 or bulan6 <>0 
							or bulan7 <>0 or bulan8 <> 0 or bulan9 <>0 or bulan10 <> 0 or bulan11 <> 0 or bulan12 <> 0";

			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setwidths(array(10,30,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,15,10,10));
			$this->pdf->row(array('','','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty'));
			$res1 = Yii::app()->db->createCommand($sql1)->queryAll();
			foreach($res1 as $row1)
			{
				$i +=1;
				for($j=1; $j<=12; $j++)
				{
					$exp[$j] = explode(',',$row1['bulan'.$j]);
				}
				$exp['jumlah'] = explode(',',$row1['jumlah']);
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array($i,$row1['custname'],
					Yii::app()->format->formatCurrency($exp[1][0]/$per),$exp[1][1],
					Yii::app()->format->formatCurrency($exp[2][0]/$per),$exp[2][1],
					Yii::app()->format->formatCurrency($exp[3][0]/$per),$exp[3][1],
					Yii::app()->format->formatCurrency($exp[4][0]/$per),$exp[4][1],
					Yii::app()->format->formatCurrency($exp[5][0]/$per),$exp[5][1],
					Yii::app()->format->formatCurrency($exp[6][0]/$per),$exp[6][1],
					Yii::app()->format->formatCurrency($exp[7][0]/$per),$exp[7][1],
					Yii::app()->format->formatCurrency($exp[8][0]/$per),$exp[8][1],
					Yii::app()->format->formatCurrency($exp[9][0]/$per),$exp[9][1],
					Yii::app()->format->formatCurrency($exp[10][0]/$per),$exp[10][1],
					Yii::app()->format->formatCurrency($exp[11][0]/$per),$exp[11][1],
					Yii::app()->format->formatCurrency($exp[12][0]/$per),$exp[12][1],
					Yii::app()->format->formatCurrency($exp['jumlah'][0]/$per),$exp['jumlah'][1],
				));
				$i++;
				$jumlah[1][0] += $exp[1][0]/$per;
				$jumlah[2][0] += $exp[2][0]/$per;
				$jumlah[3][0] += $exp[3][0]/$per;
				$jumlah[4][0] += $exp[4][0]/$per;
				$jumlah[5][0] += $exp[5][0]/$per;
				$jumlah[6][0] += $exp[6][0]/$per;
				$jumlah[7][0] += $exp[7][0]/$per;
				$jumlah[8][0] += $exp[8][0]/$per;
				$jumlah[9][0] += $exp[9][0]/$per;
				$jumlah[10][0] += $exp[10][0]/$per;
				$jumlah[11][0] += $exp[11][0]/$per;
				$jumlah[12][0] += $exp[12][0]/$per;
				$jumlah[13][0] += $exp['jumlah'][0]/$per;
				$jumlah[1][1] += $exp[1][1];
				$jumlah[2][1] += $exp[2][1];
				$jumlah[3][1] += $exp[3][1];
				$jumlah[4][1] += $exp[4][1];
				$jumlah[5][1] += $exp[5][1];
				$jumlah[6][1] += $exp[6][1];
				$jumlah[7][1] += $exp[7][1];
				$jumlah[8][1] += $exp[8][1];
				$jumlah[9][1] += $exp[9][1];
				$jumlah[10][1] += $exp[10][1];
				$jumlah[11][1] += $exp[11][1];
				$jumlah[12][1] += $exp[12][1];
				$jumlah[13][1] += $exp['jumlah'][1];
			}
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array('','JUMLAH '.$row['fullname'],
				Yii::app()->format->formatCurrency($jumlah[1][0]),$jumlah[1][1],
				Yii::app()->format->formatCurrency($jumlah[2][0]),$jumlah[2][1],
				Yii::app()->format->formatCurrency($jumlah[3][0]),$jumlah[3][1],
				Yii::app()->format->formatCurrency($jumlah[4][0]),$jumlah[4][1],
				Yii::app()->format->formatCurrency($jumlah[5][0]),$jumlah[5][1],
				Yii::app()->format->formatCurrency($jumlah[6][0]),$jumlah[6][1],
				Yii::app()->format->formatCurrency($jumlah[7][0]),$jumlah[7][1],
				Yii::app()->format->formatCurrency($jumlah[8][0]),$jumlah[8][1],
				Yii::app()->format->formatCurrency($jumlah[9][0]),$jumlah[9][1],
				Yii::app()->format->formatCurrency($jumlah[10][0]),$jumlah[10][1],
				Yii::app()->format->formatCurrency($jumlah[11][0]),$jumlah[11][1],
				Yii::app()->format->formatCurrency($jumlah[12][0]),$jumlah[12][1],
				Yii::app()->format->formatCurrency($jumlah[13][0]),$jumlah[13][1],
			));
			$total[1][0] += $jumlah[1][0];
			$total[2][0] += $jumlah[2][0];
			$total[3][0] += $jumlah[3][0];
			$total[4][0] += $jumlah[4][0];
			$total[5][0] += $jumlah[5][0];
			$total[6][0] += $jumlah[6][0];
			$total[7][0] += $jumlah[7][0];
			$total[8][0] += $jumlah[8][0];
			$total[9][0] += $jumlah[9][0];
			$total[10][0] += $jumlah[10][0];
			$total[11][0] += $jumlah[11][0];
			$total[12][0] += $jumlah[12][0];
			$total[13][0] += $jumlah[13][0];
			$total[1][1] += $jumlah[1][1];
			$total[2][1] += $jumlah[2][1];
			$total[3][1] += $jumlah[3][1];
			$total[4][1] += $jumlah[4][1];
			$total[5][1] += $jumlah[5][1];
			$total[6][1] += $jumlah[6][1];
			$total[7][1] += $jumlah[7][1];
			$total[8][1] += $jumlah[8][1];
			$total[9][1] += $jumlah[9][1];
			$total[10][1] += $jumlah[10][1];
			$total[11][1] += $jumlah[11][1];
			$total[12][1] += $jumlah[12][1];
			$total[13][1] += $jumlah[13][1];
		}
		$this->pdf->setFont('Arial','BI',9);
		$this->pdf->row(array('','GRAND TOTAL',
			Yii::app()->format->formatCurrency($total[1][0]/$per),$total[1][1],
			Yii::app()->format->formatCurrency($total[2][0]/$per),$total[2][1],
			Yii::app()->format->formatCurrency($total[3][0]/$per),$total[3][1],
			Yii::app()->format->formatCurrency($total[4][0]/$per),$total[4][1],
			Yii::app()->format->formatCurrency($total[5][0]/$per),$total[5][1],
			Yii::app()->format->formatCurrency($total[6][0]/$per),$total[6][1],
			Yii::app()->format->formatCurrency($total[7][0]/$per),$total[7][1],
			Yii::app()->format->formatCurrency($total[8][0]/$per),$total[8][1],
			Yii::app()->format->formatCurrency($total[9][0]/$per),$total[9][1],
			Yii::app()->format->formatCurrency($total[10][0]/$per),$total[10][1],
			Yii::app()->format->formatCurrency($total[11][0]/$per),$total[11][1],
			Yii::app()->format->formatCurrency($total[12][0]/$per),$total[12][1],
			Yii::app()->format->formatCurrency($total[13][0]/$per),$total[13][1],
		));
		$this->pdf->Output();
	}
	//61
	public function RekapPenjualanReturAreaCustomerBarangPerBulanPerTahunRincianNilai($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();		$totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
        $i=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid3 = "";
        }  
        
		$sql = "select distinct salesareaid,areaname from 
				(select distinct k.salesareaid,k.areaname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) =	year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct m.salesareaid,m.areaname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by areaname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Area, Customer, Barang Per Bulan - Rincian (Nilai)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L','F4');
               
            if(isset($spv) && $spv!='')
            {                
              $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
              $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

              $this->pdf->SetFont('Arial','B',10);
              $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
              $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
              $this->pdf->sety($this->pdf->gety()+5);
            }
            $this->pdf->sety($this->pdf->gety()+3);
            $this->pdf->setFont('Arial','B',8);
            $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
            $this->pdf->setwidths(array(10,35,35,35,15,15,15,15,15,15,15,15,15,15,15,15,20));
            $this->pdf->colheader = array('No','Wilayah','Customer','Nama Barang','Jan','Feb','Mar','Apr','Mei','Jun','Jul','Agu','Sept','Okt','Nop','Des','Jumlah');
            $this->pdf->RowHeader();
            $this->pdf->coldetailalign = array('L','L','L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
            $this->pdf->setFont('Arial','',8);
			
			foreach($dataReader as $row)
			{	
        /*$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Wilayah');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['areaname']);*/
				$sql1 = "select distinct addressbookid,fullname from 
							(select distinct zf.addressbookid,zf.fullname
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid2." and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')						
							union
							select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		
				foreach($dataReader1 as $row1)
				{
					/*$this->pdf->SetFont('Arial','',10);
					$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row1['fullname']);*/
					$sql2 = "select *
								from (select o.productname,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 1
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 1
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as januari,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 2
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 2
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as februari,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 3
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 3
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as maret,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 4
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 4
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as april,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 5
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 5
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as mei,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 6
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 6
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juni,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 7
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 7
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juli,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 8
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 8
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as agustus,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 9
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 9
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as september,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 10
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 10
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as oktober,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 11
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 11
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as nopember,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 12
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 12
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as desember,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']."
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']."
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as jumlah
								from product o 
								order by productname) zzz
								where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
								";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
								
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row['areaname'],
              $row1['fullname'],
              $row2['productname'],
							Yii::app()->format->formatNumberWODecimal($row2['januari']),
							Yii::app()->format->formatNumberWODecimal($row2['februari']),
							Yii::app()->format->formatNumberWODecimal($row2['maret']),
							Yii::app()->format->formatNumberWODecimal($row2['april']),
							Yii::app()->format->formatNumberWODecimal($row2['mei']),
							Yii::app()->format->formatNumberWODecimal($row2['juni']),
							Yii::app()->format->formatNumberWODecimal($row2['juli']),
							Yii::app()->format->formatNumberWODecimal($row2['agustus']),
							Yii::app()->format->formatNumberWODecimal($row2['september']),
							Yii::app()->format->formatNumberWODecimal($row2['oktober']),
							Yii::app()->format->formatNumberWODecimal($row2['nopember']),
							Yii::app()->format->formatNumberWODecimal($row2['desember']),
							Yii::app()->format->formatNumberWODecimal($row2['jumlah']),
						));
						$totaljanuari += $row2['januari'];
						$totalfebruari += $row2['februari'];
						$totalmaret += $row2['maret'];
						$totalapril += $row2['april'];
						$totalmei += $row2['mei'];
						$totaljuni += $row2['juni'];
						$totaljuli += $row2['juli'];
						$totalagustus += $row2['agustus'];
						$totalseptember += $row2['september'];
						$totaloktober += $row2['oktober'];
						$totalnopember += $row2['nopember'];
						$totaldesember += $row2['desember'];
						$totaljumlah += $row2['jumlah'];
						
					}					
					/*$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
						'','JUMLAH '.$row1['fullname'],
						Yii::app()->format->formatNumberWODecimal($totaljanuari),
						Yii::app()->format->formatNumberWODecimal($totalfebruari),
						Yii::app()->format->formatNumberWODecimal($totalmaret),
						Yii::app()->format->formatNumberWODecimal($totalapril),
						Yii::app()->format->formatNumberWODecimal($totalmei),
						Yii::app()->format->formatNumberWODecimal($totaljuni),
						Yii::app()->format->formatNumberWODecimal($totaljuli),
						Yii::app()->format->formatNumberWODecimal($totalagustus),
						Yii::app()->format->formatNumberWODecimal($totalseptember),
						Yii::app()->format->formatNumberWODecimal($totaloktober),
						Yii::app()->format->formatNumberWODecimal($totalnopember),
						Yii::app()->format->formatNumberWODecimal($totaldesember),
						Yii::app()->format->formatNumberWODecimal($totaljumlah),
					));*/
						$totaljanuari1 += $totaljanuari;
						$totalfebruari1 += $totalfebruari;
						$totalmaret1 += $totalmaret;
						$totalapril1 += $totalapril;
						$totalmei1 += $totalmei;
						$totaljuni1 += $totaljuni;
						$totaljuli1 += $totaljuli;
						$totalagustus1 += $totalagustus;
						$totalseptember1 += $totalseptember;
						$totaloktober1 += $totaloktober;
						$totalnopember1 += $totalnopember;
						$totaldesember1 += $totaldesember;
						$totaljumlah1 += $totaljumlah;
						
					$this->pdf->checkPageBreak(20);
				}
				/*$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'TOTAL '.$row['areaname'],
      Yii::app()->format->formatNumberWODecimal($totaljanuari1),
      Yii::app()->format->formatNumberWODecimal($totalfebruari1),
      Yii::app()->format->formatNumberWODecimal($totalmaret1),
      Yii::app()->format->formatNumberWODecimal($totalapril1),
      Yii::app()->format->formatNumberWODecimal($totalmei1),
      Yii::app()->format->formatNumberWODecimal($totaljuni1),
      Yii::app()->format->formatNumberWODecimal($totaljuli1),
      Yii::app()->format->formatNumberWODecimal($totalagustus1),
      Yii::app()->format->formatNumberWODecimal($totalseptember1),
      Yii::app()->format->formatNumberWODecimal($totaloktober1),
      Yii::app()->format->formatNumberWODecimal($totalnopember1),
      Yii::app()->format->formatNumberWODecimal($totaldesember1),
      Yii::app()->format->formatNumberWODecimal($totaljumlah1),
    ));*/
		
			$totaljanuari2 += $totaljanuari1;
			$totalfebruari2 += $totalfebruari1;
			$totalmaret2 += $totalmaret1;
			$totalapril2 += $totalapril1;
			$totalmei2 += $totalmei1;
			$totaljuni2 += $totaljuni1;
			$totaljuli2 += $totaljuli1;
			$totalagustus2 += $totalagustus1;
			$totalseptember2 += $totalseptember1;
			$totaloktober2 += $totaloktober1;
			$totalnopember2 += $totalnopember1;
			$totaldesember2 += $totaldesember1;
			$totaljumlah2 += $totaljumlah1;

			}
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatNumberWODecimal($totaljanuari2),
      Yii::app()->format->formatNumberWODecimal($totalfebruari2),
      Yii::app()->format->formatNumberWODecimal($totalmaret2),
      Yii::app()->format->formatNumberWODecimal($totalapril2),
      Yii::app()->format->formatNumberWODecimal($totalmei2),
      Yii::app()->format->formatNumberWODecimal($totaljuni2),
      Yii::app()->format->formatNumberWODecimal($totaljuli2),
      Yii::app()->format->formatNumberWODecimal($totalagustus2),
      Yii::app()->format->formatNumberWODecimal($totalseptember2),
      Yii::app()->format->formatNumberWODecimal($totaloktober2),
      Yii::app()->format->formatNumberWODecimal($totalnopember2),
      Yii::app()->format->formatNumberWODecimal($totaldesember2),
      Yii::app()->format->formatNumberWODecimal($totaljumlah2),
    ));
			$this->pdf->Output();
	}
	//62
	public function RekapPenjualanReturAreaCustomerBarangPerBulanPerTahunRincianQty($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();		$totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
        $i=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid3 = "";
        }  
        
        
		$sql = "select distinct salesareaid,areaname from 
				(select distinct k.salesareaid,k.areaname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) =	year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct m.salesareaid,m.areaname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by areaname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Area, Customer, Barang Per Bulan - Rincian (Qty)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L','F4');
            
               
            if(isset($spv) && $spv!='')
            {                
              $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
              $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

              $this->pdf->SetFont('Arial','B',10);
              $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
              $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
              $this->pdf->sety($this->pdf->gety()+5);
            }
            $this->pdf->sety($this->pdf->gety()+3);
            $this->pdf->setFont('Arial','B',8);
            $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
            $this->pdf->setwidths(array(10,35,35,35,15,15,15,15,15,15,15,15,15,15,15,15,20));
            $this->pdf->setwidths(array(10,35,35,35,15,15,15,15,15,15,15,15,15,15,15,15,20));
            $this->pdf->colheader = array('No','Wilayah','Customer','Nama Barang','Jan','Feb','Mar','Apr','Mei','Jun','Jul','Agu','Sept','Okt','Nop','Des','Jumlah');
            $this->pdf->RowHeader();
            $this->pdf->coldetailalign = array('L','L','L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
            $this->pdf->setFont('Arial','',8);
			
			foreach($dataReader as $row)
			{	
        /*$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Wilayah');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['areaname']);*/
				$sql1 = "select distinct addressbookid,fullname from 
							(select distinct zf.addressbookid,zf.fullname
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid2." and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')						
							union
							select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		
				foreach($dataReader1 as $row1)
				{
					/*$this->pdf->SetFont('Arial','',10);
					$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row1['fullname']);*/
					$sql2 = "select *
								from (select o.productname,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 1
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 1
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as januari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 2
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 2
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as februari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 3
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 3
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as maret,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 4
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 4
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as april,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 5
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 5
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as mei,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 6
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 6
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juni,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 7
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 7
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juli,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 8
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 8
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as agustus,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 9
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 9
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as september,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 10
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 10
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as oktober,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 11
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 11
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as nopember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 12
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 12
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as desember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']."
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']."
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as jumlah
								from product o 
								order by productname) zzz
								where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
								";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
								
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row['areaname'],
              $row1['fullname'],
              $row2['productname'],
							Yii::app()->format->formatNumberWODecimal($row2['januari']),
							Yii::app()->format->formatNumberWODecimal($row2['februari']),
							Yii::app()->format->formatNumberWODecimal($row2['maret']),
							Yii::app()->format->formatNumberWODecimal($row2['april']),
							Yii::app()->format->formatNumberWODecimal($row2['mei']),
							Yii::app()->format->formatNumberWODecimal($row2['juni']),
							Yii::app()->format->formatNumberWODecimal($row2['juli']),
							Yii::app()->format->formatNumberWODecimal($row2['agustus']),
							Yii::app()->format->formatNumberWODecimal($row2['september']),
							Yii::app()->format->formatNumberWODecimal($row2['oktober']),
							Yii::app()->format->formatNumberWODecimal($row2['nopember']),
							Yii::app()->format->formatNumberWODecimal($row2['desember']),
							Yii::app()->format->formatNumberWODecimal($row2['jumlah']),
						));
						$totaljanuari += $row2['januari'];
						$totalfebruari += $row2['februari'];
						$totalmaret += $row2['maret'];
						$totalapril += $row2['april'];
						$totalmei += $row2['mei'];
						$totaljuni += $row2['juni'];
						$totaljuli += $row2['juli'];
						$totalagustus += $row2['agustus'];
						$totalseptember += $row2['september'];
						$totaloktober += $row2['oktober'];
						$totalnopember += $row2['nopember'];
						$totaldesember += $row2['desember'];
						$totaljumlah += $row2['jumlah'];
						
					}					
					/*$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
						'','JUMLAH '.$row1['fullname'],
						Yii::app()->format->formatNumberWODecimal($totaljanuari),
						Yii::app()->format->formatNumberWODecimal($totalfebruari),
						Yii::app()->format->formatNumberWODecimal($totalmaret),
						Yii::app()->format->formatNumberWODecimal($totalapril),
						Yii::app()->format->formatNumberWODecimal($totalmei),
						Yii::app()->format->formatNumberWODecimal($totaljuni),
						Yii::app()->format->formatNumberWODecimal($totaljuli),
						Yii::app()->format->formatNumberWODecimal($totalagustus),
						Yii::app()->format->formatNumberWODecimal($totalseptember),
						Yii::app()->format->formatNumberWODecimal($totaloktober),
						Yii::app()->format->formatNumberWODecimal($totalnopember),
						Yii::app()->format->formatNumberWODecimal($totaldesember),
						Yii::app()->format->formatNumberWODecimal($totaljumlah),
					));*/
						$totaljanuari1 += $totaljanuari;
						$totalfebruari1 += $totalfebruari;
						$totalmaret1 += $totalmaret;
						$totalapril1 += $totalapril;
						$totalmei1 += $totalmei;
						$totaljuni1 += $totaljuni;
						$totaljuli1 += $totaljuli;
						$totalagustus1 += $totalagustus;
						$totalseptember1 += $totalseptember;
						$totaloktober1 += $totaloktober;
						$totalnopember1 += $totalnopember;
						$totaldesember1 += $totaldesember;
						$totaljumlah1 += $totaljumlah;
						
					$this->pdf->checkPageBreak(20);
				}
				/*$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'TOTAL '.$row['areaname'],
      Yii::app()->format->formatNumberWODecimal($totaljanuari1),
      Yii::app()->format->formatNumberWODecimal($totalfebruari1),
      Yii::app()->format->formatNumberWODecimal($totalmaret1),
      Yii::app()->format->formatNumberWODecimal($totalapril1),
      Yii::app()->format->formatNumberWODecimal($totalmei1),
      Yii::app()->format->formatNumberWODecimal($totaljuni1),
      Yii::app()->format->formatNumberWODecimal($totaljuli1),
      Yii::app()->format->formatNumberWODecimal($totalagustus1),
      Yii::app()->format->formatNumberWODecimal($totalseptember1),
      Yii::app()->format->formatNumberWODecimal($totaloktober1),
      Yii::app()->format->formatNumberWODecimal($totalnopember1),
      Yii::app()->format->formatNumberWODecimal($totaldesember1),
      Yii::app()->format->formatNumberWODecimal($totaljumlah1),
    ));*/
		
			$totaljanuari2 += $totaljanuari1;
			$totalfebruari2 += $totalfebruari1;
			$totalmaret2 += $totalmaret1;
			$totalapril2 += $totalapril1;
			$totalmei2 += $totalmei1;
			$totaljuni2 += $totaljuni1;
			$totaljuli2 += $totaljuli1;
			$totalagustus2 += $totalagustus1;
			$totalseptember2 += $totalseptember1;
			$totaloktober2 += $totaloktober1;
			$totalnopember2 += $totalnopember1;
			$totaldesember2 += $totaldesember1;
			$totaljumlah2 += $totaljumlah1;

			}
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatNumberWODecimal($totaljanuari2),
      Yii::app()->format->formatNumberWODecimal($totalfebruari2),
      Yii::app()->format->formatNumberWODecimal($totalmaret2),
      Yii::app()->format->formatNumberWODecimal($totalapril2),
      Yii::app()->format->formatNumberWODecimal($totalmei2),
      Yii::app()->format->formatNumberWODecimal($totaljuni2),
      Yii::app()->format->formatNumberWODecimal($totaljuli2),
      Yii::app()->format->formatNumberWODecimal($totalagustus2),
      Yii::app()->format->formatNumberWODecimal($totalseptember2),
      Yii::app()->format->formatNumberWODecimal($totaloktober2),
      Yii::app()->format->formatNumberWODecimal($totalnopember2),
      Yii::app()->format->formatNumberWODecimal($totaldesember2),
      Yii::app()->format->formatNumberWODecimal($totaljumlah2),
    ));
			$this->pdf->Output();
	}
	//63
	public function LaporanLatLng($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			
			$connection = Yii::app()->db;
			$this->pdf->title='Laporan Customer Belum ada Lokasi (Lat, Lang)';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L','A4');
			
			$this->pdf->SetFont('Arial','',11);
			$this->pdf->sety($this->pdf->gety()+5);

			$this->pdf->colalign = array('L','C','C','C','L','C','C');
			$this->pdf->setwidths(array(25,60,60,40,20,20,30));
			$this->pdf->colheader = array('No','Nama Customer','Alamat','Kota','No HP','No Telp','Email');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','L','C','L','L','L');		
			
			$this->pdf->SetFont('Arial','',10);
			/*
			$this->pdf->row(array(1,'Nama Kegiatan goes here','Detail goes here','01-05-2017','Realisasi goes here','Permasalahan goes here','Solusi goes here','01-05-2017')); 
			*/
			
			$sql = "select distinct a.addressbookid, a.fullname, e.cityname, e.cityid, c.addressname, c.rt, c.rw, d.mobilephone, d.phoneno, d.emailaddress, c.lat, c.lng, b.areaname
            from addressbook a
            left join salesarea b on b.salesareaid = a.salesareaid
            left join address c on c.addressbookid = a.addressbookid
            left join addresscontact d on d.addressbookid = a.addressbookid
            left join city e on e.cityid = c.cityid ";
			
			$where = "where ((c.lat = 0 ) or (c.lng = 0))";
			if(isset($customer) && $customer!=''){
					$where .= " and a.fullname like '%".$customer."%' ";
			}
			if(isset($salesarea) && $salesarea!=''){
					$where .= " and b.areaname like '%".$salesarea."%' ";
			}
			#$where .= " AND b.startdate BETWEEN '".$startdate."' AND '".$enddate."' ORDER BY a.empplanid DESC";
			//$where .= " GROUP BY a.addressbookid";
			
			$result = $connection->createCommand($sql.$where)->queryAll();
			$i=1;
			foreach($result as $row){
					$y = $this->pdf->setY($this->pdf->getY()+1);
					$this->pdf->row(array($i,$row['fullname'],$row['addressname'].' RT '.$row['rt'].' RW '.$row['rw'],$row['cityname'],$row['mobilephone'],$row['phoneno'],$row['emailaddress']));
					$i++;
			}
			$this->pdf->Output();
	}
	//64
	public function LaporanFoto($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			//$this->no_result();
			
			 $connection = Yii::app()->db;
			$this->pdf->title='Laporan Customer Belum Lengkap Foto Toko';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L','A4');
			
			$this->pdf->SetFont('Arial','',11);
			$this->pdf->sety($this->pdf->gety()+5);

			$this->pdf->colalign = array('L','C','C','C','L','C','C');
			$this->pdf->setwidths(array(25,60,60,40,20,20,30));
			$this->pdf->colheader = array('No','Nama Customer','Alamat','Kota','No HP','No Telp','Email');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','L','C','L','L','L');		
			
			$this->pdf->SetFont('Arial','',10);
			/*
			$this->pdf->row(array(1,'Nama Kegiatan goes here','Detail goes here','01-05-2017','Realisasi goes here','Permasalahan goes here','Solusi goes here','01-05-2017')); 
			*/
			
			$sql = "SELECT a.addressbookid, a.fullname, e.cityname, e.cityid, c.addressname, c.rt, c.rw, d.mobilephone, d.phoneno, d.emailaddress
							FROM addressbook a
							LEFT JOIN salesarea b ON b.salesareaid = a.salesareaid
							LEFT JOIN address c ON c.addressbookid = a.addressbookid
							LEFT JOIN addresscontact d ON d.addressbookid = a.addressbookid
							LEFT JOIN city e ON e.cityid = c.cityid ";
			
			$where = "WHERE (c.foto IS NULL OR c.foto='') AND a.iscustomer='1' AND a.recordstatus='1' ";
			if(isset($customer) && $customer!=''){
					$where .= " AND a.fullname LIKE '%".$customer."%' ";
			}
			if(isset($salesarea) && $salesarea!=''){
					$where .= " AND b.areaname LIKE '%".$salesarea."%' ";
			}
			#$where .= " AND b.startdate BETWEEN '".$startdate."' AND '".$enddate."' ORDER BY a.empplanid DESC";
			$where .= " GROUP BY a.addressbookid";
			
			$result = $connection->createCommand($sql.$where)->queryAll();
			$i=1;
			foreach($result as $row){
					$y = $this->pdf->setY($this->pdf->getY()+1);
					$this->pdf->row(array($i,$row['fullname'],$row['addressname'].' RT '.$row['rt'].' RW '.$row['rw'],$row['cityname'],$row['mobilephone'],$row['phoneno'],$row['emailaddress']));
					$i++;
			}
			$this->pdf->Output();
	}
	//65
	public function LaporanCustomerBelumAdaKTP($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			$connection = Yii::app()->db;
			$this->pdf->title='Laporan Customer Belum Ada KTP';
	$this->pdf->subtitle='Per Tahun '.date('Y',strtotime($enddate));
	$this->pdf->AddPage('P');
			
			$sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname
							from addressbook a
							join address b on a.addressbookid = b.addressbookid
							join salesarea c on c.salesareaid = a.salesareaid ";
			$where = "where a.iscustomer=1 AND a.recordstatus='1' and (a.ktpno is null or a.ktpno='-' or a.ktpno='') ";
			
			if(isset($salesarea) && $salesarea!=''){
					$where .= " and c.areaname like '%".$salesarea."%' ";
			}
			$dataReader = $connection->createCommand($sql.$where)->queryAll();
			
			$this->pdf->colalign = array('C','C','L','C','C');
			$this->pdf->setwidths(array(10,40,50,77,25));
			$this->pdf->colheader = array('No',getCatalog('fullname'),getCatalog('addressname'),getCatalog('areaname'),getCatalog('recordstatus'));
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('C','L','L','C','C');
			$i=1;
			$this->pdf->setFont('Arial','',10);
			foreach($dataReader as $row){
					$this->pdf->row(array(
				$i,
					$row['fullname'],
					$row['addressname'],
					$row['areaname'],
					$row['recordstatus'] == '1' ? 'Active' : 'Not Active',
		));
					$i++;
			}
			$this->pdf->Output();
	}
	//66
	public function LaporanCustomerBelumAdaNPWP($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			$this->pdf->title='Laporan Customer Belum Ada NPWP';
	$this->pdf->subtitle='Per Tahun '.date('Y',strtotime($enddate));
	$this->pdf->AddPage('P');
			
			$sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname, a.taxno
							from addressbook a
							join address b on a.addressbookid = b.addressbookid
							join salesarea c on c.salesareaid = a.salesareaid
							where a.iscustomer=1 AND a.recordstatus='1' and a.taxno is null or a.taxno='-' or a.taxno=' '";
			$cmd = Yii::app()->db->createCommand($sql);
			$dataReader=$cmd->queryAll();
			
			$this->pdf->colalign = array('C','C','L','C','C');
			$this->pdf->setwidths(array(10,40,50,77,25));
			$this->pdf->colheader = array('No',getCatalog('fullname'),getCatalog('addressname'),getCatalog('areaname'),getCatalog('recordstatus'));
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('C','L','L','C','C');
			$i=1;
			$this->pdf->setFont('Arial','',10);
			foreach($dataReader as $row){
					$this->pdf->row(array(
				$i,
					$row['fullname'],
					$row['addressname'],
					$row['areaname'],
					$row['recordstatus'] == '1' ? 'Active' : 'Not Active',
		));
					$i++;
			}
			$this->pdf->Output();
	}
	//67
	public function LaporanCustomerSudahLengkapLokasi($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			
			$connection = Yii::app()->db;
			$this->pdf->title='Laporan Customer Sudah ada Lokasi (Lat, Lang)';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L','A4');
			
			$this->pdf->SetFont('Arial','',11);
			$this->pdf->sety($this->pdf->gety()+5);

			$this->pdf->colalign = array('L','C','C','C','L','C','C','C','C','C');
			$this->pdf->setwidths(array(8,50,60,50,20,20,30,20,20));
			$this->pdf->colheader = array('No','Nama Customer','Alamat','Kota','No HP','No Telp','Email','Latitude','langutude');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','L','C','L','L','L','L','L');		
			
			$this->pdf->SetFont('Arial','',10);
			/*
			$this->pdf->row(array(1,'Nama Kegiatan goes here','Detail goes here','01-05-2017','Realisasi goes here','Permasalahan goes here','Solusi goes here','01-05-2017')); 
			*/
			
			$sql = "select distinct a.addressbookid, a.fullname, e.cityname, e.cityid, c.addressname, c.rt, c.rw, d.mobilephone, d.phoneno, d.emailaddress, c.lat, c.lng
							from addressbook a
							left join salesarea b ON b.salesareaid = a.salesareaid
							left join address c ON c.addressbookid = a.addressbookid
							left join addresscontact d ON d.addressbookid = a.addressbookid
							left join city e ON e.cityid = c.cityid ";
			
			$where = "where ((c.lat <> 0 ) and (c.lng <> 0))";
			if(isset($customer) && $customer!=''){
					$where .= " and a.fullname like '%".$customer."%' ";
			}
			if(isset($salesarea) && $salesarea!=''){
					$where .= " and b.areaname like '%".$salesarea."%' ";
			}
			#$where .= " AND b.startdate BETWEEN '".$startdate."' AND '".$enddate."' ORDER BY a.empplanid DESC";
            //$where .= " GROUP BY a.addressbookid";
			
			$result = $connection->createCommand($sql.$where)->queryAll();
			$i=1;
			foreach($result as $row){
					$y = $this->pdf->setY($this->pdf->getY()+1);
					$this->pdf->row(array($i,$row['fullname'],$row['addressname'].' RT '.$row['rt'].' RW '.$row['rw'],$row['cityname'],$row['mobilephone'],$row['phoneno'],$row['emailaddress'],$row['lat'],$row['lng']));
					$i++;
			}
			$this->pdf->Output();
	}
	//68
	public function LaporanSudahFoto($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			//$this->no_result();
			
			 $connection = Yii::app()->db;
			$this->pdf->title='Laporan Customer Sudah Lengkap Foto Toko';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L','A4');
			
			$this->pdf->SetFont('Arial','',11);
			$this->pdf->sety($this->pdf->gety()+5);

			$this->pdf->colalign = array('L','C','C','C','L','C','C','C');
			$this->pdf->setwidths(array(8,50,60,40,20,20,30,30));
			$this->pdf->colheader = array('No','Nama Customer','Alamat','Kota','No HP','No Telp','Email','Foto');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','L','C','L','L','L','L');		
			
			$this->pdf->SetFont('Arial','',10);
			/*
			$this->pdf->row(array(1,'Nama Kegiatan goes here','Detail goes here','01-05-2017','Realisasi goes here','Permasalahan goes here','Solusi goes here','01-05-2017')); 
			*/
			
			$sql = "SELECT a.addressbookid, a.fullname, e.cityname, e.cityid, c.addressname, c.rt, c.rw, d.mobilephone, d.phoneno, d.emailaddress, c.foto
							FROM addressbook a
							LEFT JOIN salesarea b ON b.salesareaid = a.salesareaid
							LEFT JOIN address c ON c.addressbookid = a.addressbookid
							LEFT JOIN addresscontact d ON d.addressbookid = a.addressbookid
							LEFT JOIN city e ON e.cityid = c.cityid ";
			
			$where = "WHERE (c.foto IS NULL OR c.foto='') AND a.iscustomer='1' AND a.recordstatus='1' ";
			if(isset($customer) && $customer!=''){
					$where .= " AND a.fullname LIKE '%".$customer."%' ";
			}
			if(isset($salesarea) && $salesarea!=''){
					$where .= " AND b.areaname LIKE '%".$salesarea."%' ";
			}
			#$where .= " AND b.startdate BETWEEN '".$startdate."' AND '".$enddate."' ORDER BY a.empplanid DESC";
			$where .= " GROUP BY a.addressbookid";
			
			$result = $connection->createCommand($sql.$where)->queryAll();
			$i=1;
			foreach($result as $row){
					$y = $this->pdf->setY($this->pdf->getY()+1);
					$this->pdf->row(array($i,$row['fullname'],$row['addressname'].' RT '.$row['rt'].' RW '.$row['rw'],$row['cityname'],$row['mobilephone'],$row['phoneno'],$row['emailaddress'],$row['foto']));
					$i++;
			}
			$this->pdf->Output();
	}
	//69
	public function LaporanCustomerSudahAdaKTP($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			$this->pdf->title='Laporan Customer Sudah Ada KTP';
	$this->pdf->subtitle='Per Tahun '.date('Y',strtotime($enddate));
	$this->pdf->AddPage('P');
			
			$sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname, a.ktpno
							from addressbook a
							join address b on a.addressbookid = b.addressbookid
							join salesarea c on c.salesareaid = a.salesareaid
							where a.iscustomer=1 and (a.ktpno is not null and a.ktpno<>'-' and a.ktpno<>' ') and a.recordstatus='1' ";
			$cmd = Yii::app()->db->createCommand($sql);
			$dataReader=$cmd->queryAll();
			
			$this->pdf->colalign = array('C','C','L','C','C','C');
			$this->pdf->setwidths(array(8,40,40,70,20,20));
			$this->pdf->colheader = array('No',getCatalog('fullname'),getCatalog('addressname'),getCatalog('areaname'),getCatalog('No KTP'),getCatalog('recordstatus'));
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('C','L','L','C','C','C');
			$i=1;
			$this->pdf->setFont('Arial','',10);
			foreach($dataReader as $row){
					$this->pdf->row(array(
				$i,
					$row['fullname'],
					$row['addressname'],
					$row['areaname'],
                    $row['ktpno'],
					$row['recordstatus'] == '1' ? 'Active' : 'Not Active',
		));
					$i++;
			}
			$this->pdf->Output();
	}
	//70
	public function LaporanCustomerSudahAdaNPWP($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			$this->pdf->title='Laporan Customer Sudah Ada NPWP';
	$this->pdf->subtitle='Per Tahun '.date('Y',strtotime($enddate));
	$this->pdf->AddPage('P');
			
			$sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname, a.taxno
							from addressbook a
							join address b on a.addressbookid = b.addressbookid
							join salesarea c on c.salesareaid = a.salesareaid
							where a.iscustomer=1 and (a.taxno is not null and a.taxno<>'-' and  a.taxno<>''and a.taxno<>'0') and a.recordstatus='1' ";
			$cmd = Yii::app()->db->createCommand($sql);
			$dataReader=$cmd->queryAll();
			
			$this->pdf->colalign = array('C','C','L','C','C','C');
			$this->pdf->setwidths(array(8,35,45,70,20,20));
			$this->pdf->colheader = array('No',getCatalog('fullname'),getCatalog('addressname'),getCatalog('areaname'),getCatalog('taxno'),getCatalog('recordstatus'));
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('C','L','L','C','C','C');
			$i=1;
			$this->pdf->setFont('Arial','',10);
			foreach($dataReader as $row){
					$this->pdf->row(array(
				$i,
					$row['fullname'],
					$row['addressname'],
					$row['areaname'],
                    $row['taxno'],    
					$row['recordstatus'] == '1' ? 'Active' : 'Not Active',
		));
					$i++;
			}
			$this->pdf->Output();
	}
	//71
    public function RekapRealisasiPenjualanPerSalesPerGroupMaterial($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
      parent::actionDownload();
      //$this->no_result();
      
      $connection = Yii::app()->db;
      $this->pdf->title='Perhitungan Skala Upah Tambahan Sales';
	    $this->pdf->companyid=$companyid;
      $datetime = new DateTime(date($enddate));

      $this->pdf->subtitle='Target Bulan '.$datetime->format('F').' '.$datetime->format('Y').' dan '.'Realisasi s/d '.date('d-m-Y',strtotime($enddate));
      $this->pdf->AddPage('L',array(210,330));
      
      $this->pdf->SetFont('Arial','',10);
      $this->pdf->sety($this->pdf->gety()+5);
      
      $month = date('m',strtotime($enddate));
      $year = date('Y',strtotime($enddate));
      
      $prev_month_ts1 = strtotime(''.$year.'-'.$month.'-01 -3 month');
      $prev_month_ts2 = strtotime(''.$year.'-'.$month.'-01 -1 month');
      
      $lastmonth1 = date('Y-m-d', $prev_month_ts1);
      $lastmonth2 = date('Y-m-t', $prev_month_ts2);
      
      $prev_month_ts =  strtotime($year.'-'.$month.'-01');
      $month1 = date('Y-m-d', $prev_month_ts);
      $month2 = date('Y-m-t', $prev_month_ts);
      $this->pdf->text(310,15,'Per : '.$per);
      $maxtarget = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appst')")->queryScalar();
      $maxscale = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appss')")->queryScalar();
      
      $sqlidscale = "select scaleid
                        from scale
                        where recordstatus = getwfmaxstatbywfname('appss') 
                        -- and companyid = {$companyid} 
                        order by docdate desc limit 1";
      $idscale = Yii::app()->db->createCommand($sqlidscale)->queryScalar();
      
      $sql = "select a.employeeid, b.fullname, salestargetid
                    from salestarget a
                    join employee b on b.employeeid = a.employeeid
                    where recordstatus= {$maxtarget} and a.perioddate = '{$month1}' and a.companyid = {$companyid}
                    and b.fullname like '%{$employee}%'";
      $result = Yii::app()->db->createCommand($sql)->queryAll();
      
      foreach($result as $row)
      {
          $totaltarget2 = 0;
          $totalqtykum = 0;
          $totalqtytarget = 0;
          $totalqtyrealisasi = 0;
          $totalqtypl = 0;
          $totalrealisasi = 0;
          $totalkumulatif = 0;
          $totalkomisi = 0;
          $totaldiff = 0;
                    $n=1;
          
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->setwidths(array(85));
          $this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                    
                    $sqlcustcategory = "select b.custcategoryname,a.custcategoryid as custid
                                       from salestargetdet a
                                       join custcategory b on b.custcategoryid = a.custcategoryid
                                       where a.salestargetid = {$row['salestargetid']}
                                       group by b.custcategoryid";
                
                    $foundrows = Yii::app()->db->createCommand('select found_rows()')->queryScalar();

                    $resultcustcategory = Yii::app()->db->createCommand($sqlcustcategory)->queryAll();
                    foreach($resultcustcategory as $rslt)
                    {
                        $totaltargetcust = 0;
                        $totalqtykumcust = 0;
                        $totalqtytargetcust = 0;
                        $totalqtyrealisasicust = 0;
                        $totalqtyplcust = 0;
                        $totalrealisasicust = 0;
                        $totalkumulatifcust = 0;
                        $totalkomisicust = 0;
                        $totaldiffcust = 0;
                                  
						$sqlcustscale = "select value
								 from scalecat a
								 -- join salesscale b on b.salesscaleid = a.salesscaleid
								 -- where b.perioddate = '{$month1}' 
								 -- and b.companyid = {$companyid}
								 -- and b.recordstatus = {$maxscale}
								 where scaleid = {$idscale}
								 and a.custcategoryid = ".$rslt['custid'];
						$custscale = Yii::app()->db->createCommand($sqlcustscale)->queryScalar();
                      
                        $sqlgroupkasta = "select groupkastaid,groupname from groupkasta";
            $groupkasta = Yii::app()->db->createCommand($sqlgroupkasta)->queryAll();
                        
                        $sqlpencapaian = "select sum(kumharga)/sum(harga)*100 from (
                            select ifnull(sum(qty*price),0) as harga,
                            ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                            from invoice a
                            join giheader b on a.giheaderid = b.giheaderid
                            join gidetail c on c.giheaderid = b.giheaderid
                            join soheader d on d.soheaderid = b.soheaderid
                            join product e on e.productid = c.productid
                            join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                            join materialgroup h on h.materialgroupid = f.materialgroupid
                            join addressbook g on g.addressbookid = d.addressbookid
                            where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                            and d.employeeid = {$row['employeeid']} and g.custcategoryid =  {$rslt['custid']}
                            and d.isdisplay=0 and h.groupkastaid in(select g2.groupkastaid from groupkasta g2)),0) as kumharga
                            from salestarget b
                            join salestargetdet a on a.salestargetid = b.salestargetid
                            join employee d on d.employeeid = b.employeeid
                            join materialgroup h on h.materialgroupid = a.materialgroupid
                            where b.employeeid = {$row['employeeid']} and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} and h.groupkastaid in(select g2.groupkastaid from groupkasta g2)
                            and a.custcategoryid = {$rslt['custid']}
                            union
                            select sum(harga) as harga, sum(kumharga) as kumharga from (
                            select 0 as harga,-1*sum(a.qty*a.price) as kumharga
                            from notagirpro a
                            join notagir b on b.notagirid = a.notagirid
                            join gireturdetail c on c.gireturdetailid = a.gireturdetailid
                            join giretur d on d.gireturid = c.gireturid
                            join giheader e on e.giheaderid = d.giheaderid
                            join soheader f on f.soheaderid = e.soheaderid
                            join product g on g.productid = a.productid
                            join addressbook h on h.addressbookid = f.addressbookid
                            join productplant i on i.productid = a.productid and i.slocid = a.slocid and i.unitofissue = a.uomid
                            join materialgroup j on j.materialgroupid = i.materialgroupid
                            where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid = {$row['employeeid']}
                            and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                            and h.custcategoryid = {$rslt['custid']}
                            and f.isdisplay=0 and j.groupkastaid in(select g2.groupkastaid from groupkasta g2)) x 
                            ) z ";
                        $h = Yii::app()->db->createCommand($sqlpencapaian)->queryScalar();
                        
                        $this->pdf->setFont('Arial','B',10);
                        $this->pdf->setY($this->pdf->getY());
                        $this->pdf->setwidths(array(85));
                        $this->pdf->row(array(getCatalog('custcategory'). ' = '. $rslt['custcategoryname'].' - '.$custscale.'%'));
                        $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
                        $this->pdf->setwidths(array(50,45,45,45,45,15,15,30,15));
                        $this->pdf->colheader = array('Kelompok Barang',
                                                'Target Bulan ini',
                                                'Realisasi Hari ini',
                                                'Realisasi Kumulatif',
                                                '+ / -',
                                                'Penc.',
                                                'Skala',
                                                'Upah Tambahan',
                                                '');
                        $this->pdf->RowHeader();
                        $this->pdf->coldetailalign = array('L','C','C','C','C','C','C','C');
						            //$this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,18,15,30,15));
                        $this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,18,15,30,15));
                        //$this->pdf->row(array('','Qty','Rp','Qty','Rp','Qty','Rp','Qty','Rp','RP','Rp','Rp','Rp'));
                        $this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R','R','R','R','R','R');
                        
                        foreach($groupkasta as $group) {
                          
                            $hgroup=0;
                            $totaltargetgroup = 0;
                            $totalqtykumgroup = 0;
                            $totalqtytargetgroup = 0;
                            $totalqtyrealisasigroup = 0;
                            $totalqtyplgroup = 0;
                            $totalrealisasigroup = 0;
                            $totalkumulatifgroup = 0;
                            $totalkomisigroup = 0;
                            $totaldiffgroup = 0;
                          
                            $this->pdf->SetFont('Arial','B',9);
                            $this->pdf->row(array(
                            $group['groupname']));
                          
                            $matgroup = "select * from (select z.materialgroupid as materialgroupid, description
                            from salestargetdet za
                            join (select parentmatgroupid,materialgroupid,description from materialgroup zx where zx.isfg=0 and zx.recordstatus=1 and groupkastaid = {$group['groupkastaid']}) z on z.materialgroupid = za.materialgroupid
                            join salestarget zc on zc.salestargetid = za.salestargetid
                            where za.salestargetid = {$row['salestargetid']}
                            and za.custcategoryid={$rslt['custid']}
                            and zc.companyid={$companyid} and zc.perioddate = '{$month1}'
                            group by z.materialgroupid
                            union 
                            select g.materialgroupid, description
                            from invoice a
                            join giheader b on a.giheaderid = b.giheaderid
                            join gidetail c on c.giheaderid = b.giheaderid
                            join soheader d on d.soheaderid = b.soheaderid
                            join product e on e.productid = c.productid
                            join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                            join addressbook i on i.addressbookid = d.addressbookid
                            join materialgroup g on g.materialgroupid = f.materialgroupid
                            -- join materialgroup h on h.materialgroupid = g.parentmatgroupid
                            where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                            and d.employeeid = {$row['employeeid']} 
                            -- and h.isfg=1
                            and i.custcategoryid = {$rslt['custid']}
                            and d.isdisplay=0 and g.groupkastaid = {$group['groupkastaid']}
                            group by g.materialgroupid 
                            union
                            select xh.materialgroupid, description
                            from notagirpro x
                            join notagir xa on xa.notagirid = x.notagirid
                            join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                            join giretur xc on xc.gireturid = xb.gireturid
                            join giheader xd on xd.giheaderid = xc.giheaderid
                            join soheader xe on xe.soheaderid = xd.soheaderid
                            join product xf on xf.productid = x.productid
                            join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                            join addressbook xj on xj.addressbookid = xe.addressbookid
                            join materialgroup xh on xh.materialgroupid = xg.materialgroupid
                            -- join materialgroup xi on xi.materialgroupid = xh.parentmatgroupid
                            where xc.companyid = {$companyid} and xc.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 
                            and xe.employeeid = {$row['employeeid']} 
                            -- and xi.isfg=1 
                            and xj.custcategoryid = {$rslt['custid']}
                            and xe.isdisplay=0 and xh.groupkastaid = {$group['groupkastaid']}
                            group by xh.materialgroupid ) zzz
                            order by zzz.materialgroupid asc ";
                            $material = Yii::app()->db->createCommand($matgroup)->queryAll();
                            foreach($material as $row1)
                            {

                                $sql1 = "select sum(qty) as targetqty, sum(harga) as targetharga, sum(realqty) as realqty, sum(realharga) as realharga, sum(kumqty) as kumqty, sum(kumharga) as kumharga from (
                                                select ifnull(sum(a.qty),0) as qty,
                                                ifnull(sum(qty*price),0) as harga,
                                                 ifnull((select sum(xb.qty)
                                                        from giheader xa
                                                        join gidetail xb on xa.giheaderid = xb.giheaderid
                                                        join soheader xs on xs.soheaderid = xa.soheaderid
                                                        join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                        join addressbook xd on xd.addressbookid = xs.addressbookid
                                                        where xa.recordstatus = 3 and xs.employeeid = {$row['employeeid']} 
                                                        -- and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) 
                                                        and xc.materialgroupid = {$row1['materialgroupid']}
                                                        and xs.companyid = {$companyid} and xa.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and xd.custcategoryid = {$rslt['custid']}
                                                        and xs.isdisplay=0),0) as realqty,
                                                ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                        from invoice a
                                                        join giheader b on a.giheaderid = b.giheaderid
                                                        join gidetail c on c.giheaderid = b.giheaderid
                                                        join soheader d on d.soheaderid = b.soheaderid
                                                        join product e on e.productid = c.productid
                                                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                                                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and d.employeeid = {$row['employeeid']}
                                                        -- and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']}) 
                                                        and f.materialgroupid = {$row1['materialgroupid']} 
                                                        and g.custcategoryid = {$rslt['custid']}
                                                        and d.isdisplay=0),0) as realharga,
                                                ifnull((select sum(xb.qty)
                                                        from giheader xa
                                                        join gidetail xb on xa.giheaderid = xb.giheaderid
                                                        join soheader xs on xs.soheaderid = xa.soheaderid
                                                        join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                        join addressbook xd on xd.addressbookid = xs.addressbookid
                                                        where xa.recordstatus = 3 and xs.companyid = {$companyid} and xs.employeeid = {$row['employeeid']} 
                                                        -- and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) 
                                                        and xc.materialgroupid = {$row1['materialgroupid']}
                                                        and xa.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and xd.custcategoryid = {$rslt['custid']}
                                                        and xs.isdisplay=0),0) as kumqty,
                                             ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                        from invoice a
                                                        join giheader b on a.giheaderid = b.giheaderid
                                                        join gidetail c on c.giheaderid = b.giheaderid
                                                        join soheader d on d.soheaderid = b.soheaderid
                                                        join product e on e.productid = c.productid
                                                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                                                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and d.employeeid = {$row['employeeid']}
                                                        -- and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']})
                                                        and f.materialgroupid = {$row1['materialgroupid']}
                                                        and g.custcategoryid = {$rslt['custid']}
                                                        and d.isdisplay=0),0) as kumharga
                                                from salestarget b
                                                join salestargetdet a on a.salestargetid = b.salestargetid
                                                join materialgroup c on c.materialgroupid = a.materialgroupid
                                                join employee d on d.employeeid = b.employeeid
                                                where b.employeeid = {$row['employeeid']} and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} 
                                                -- and a.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                                                and a.materialgroupid = {$row1['materialgroupid']}
                                                and a.custcategoryid = {$rslt['custid']}
                                                union

                                  select 0 as qty,0 as harga,
                                                        ifnull((select -1*sum(x.qty)
                                                                from notagirpro x
                                                                join notagir xa on xa.notagirid = x.notagirid
                                                                join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                join giretur xc on xc.gireturid = xb.gireturid
                                                                join giheader xd on xd.giheaderid = xc.giheaderid
                                                                join soheader xe on xe.soheaderid = xd.soheaderid
                                                                join product xf on xf.productid = x.productid
                                                                join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                join addressbook xh on xh.addressbookid = xe.addressbookid
                                                                where xc.companyid = {$companyid} and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 and xe.employeeid = {$row['employeeid']} 
                                                                -- and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) 
                                                                and xg.materialgroupid = {$row1['materialgroupid']}
                                                                and xh.custcategoryid = {$rslt['custid']}
                                                                and xe.isdisplay=0),0) as realqty,
                                                        ifnull((select -1*sum(x.qty*x.price)
                                                                from notagirpro x
                                                                join notagir xa on xa.notagirid = x.notagirid
                                                                join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                join giretur xc on xc.gireturid = xb.gireturid
                                                                join giheader xd on xd.giheaderid = xc.giheaderid
                                                                join soheader xe on xe.soheaderid = xd.soheaderid
                                                                join product xf on xf.productid = x.productid
                                                                join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                join addressbook xh on xh.addressbookid = xe.addressbookid
                                                                where xc.companyid = {$companyid}  and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 and xe.employeeid = {$row['employeeid']} 
                                                                -- and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                                                                and xg.materialgroupid = {$row1['materialgroupid']}
                                                                and xh.custcategoryid = {$rslt['custid']}
                                                                and xe.isdisplay=0),0) as realharga,
                                                        ifnull(-1*sum(a.qty),0) as kumqty,
                                                        ifnull(-1*sum(a.qty*a.price),0) as kumharga
                                                        from notagirpro a
                                                        join notagir b on b.notagirid = a.notagirid
                                                        join gireturdetail c on c.gireturdetailid = a.gireturdetailid
                                                        join giretur d on d.gireturid = c.gireturid
                                                        join giheader e on e.giheaderid = d.giheaderid
                                                        join soheader f on f.soheaderid = e.soheaderid
                                                        join product g on g.productid = a.productid
                                                        join productplant h on h.productid = g.productid and h.unitofissue = a.uomid and h.slocid = a.slocid
                                                        join addressbook i on i.addressbookid = f.addressbookid
                                                        join custcategory j on j.custcategoryid = i.custcategoryid
                                                        where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid = {$row['employeeid']}
                                                        -- and h.materialgroupid  in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                                                        and h.materialgroupid = {$row1['materialgroupid']}
                                                        and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and j.custcategoryid = {$rslt['custid']}
                                                and f.isdisplay=0) z ";

                                    $res1 = Yii::app()->db->createCommand($sql1)->queryAll();
                                    /*
                                    $this->pdf->SetFont('Arial','B',10);
                                    $this->pdf->setwidths(array(85));
                                    $this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                                    */
                                    $mod = 0;
                                    foreach($res1 as $row2)
                                    {
                                        $this->pdf->SetFont('Arial','',8);
                                        $this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,15,15,30,15));

                                        
                                        if($row2['targetharga']*$row2['targetqty']==0)
                                        {
                                            $mod = 0;
                                        }
                                        else
                                        {
                                            //$mod = ($row2['kumqty']/$row2['targetqty'])*100;
                                            $mod = ($row2['kumharga']/$row2['targetharga'])*100;
                                            //$mod = 1;
                                        }
                                        if($row2['targetqty']==0 && $row2['kumqty']>0)
                                        {
                                            $mod = 0;
                                        }
                                        /*
                                        if($h>=$minscale)
                                        {
                                            //$this->pdf->setbordercell(array('B','B','B','B','B','B','B','B','B','B','B','B','B','B'));
                                            if($mod>120)
                                            {
                                                $select = 'select gt120';
                                            }
                                            else if($mod<=120 && $mod>100)
                                            {
                                                $select = 'select gt100';
                                            }
                                            else if($mod<=100 & $mod>90)
                                            {
                                                $select = 'select gt90';
                                            }
                                            else if($mod<=90 && $mod>80)
                                            {
                                                $select = 'select gt80';
                                            }
                                            else if($mod<=80 && $mod>70)
                                            {
                                                $select = 'select gt70';
                                            }
                                            else
                                            {
                                                $select = 'select 0';
                                            }
                                            $from = " from salesscale a 
                                                        join salesscaledet b on a.salesscaleid = b.salesscaleid
                                                        where a.companyid = {$companyid} and b.materialgroupid ={$row1['materialgroupid']} 
                                                        and a.perioddate = '{$month1}' and a.recordstatus = {$maxscale} ";
                                            $scale = Yii::app()->db->createCommand($select.$from)->queryScalar();
                                        }
                                        else
                                        {
                                            $scale=0;
                                        }
                                        */
                                        $select = "select value
                                                  from scaledet a
                                                  where a.scaleid = {$idscale} and materialgroupid = {$row1['materialgroupid']}";
                                        $scale = Yii::app()->db->createCommand($select)->queryScalar();
										
                                        if($mod<70) {
                                            $multiscale = 0;
                                        }
										                    else if($mod>120) {
                                            $multiscale = 1.2;
                                        }
                                        else {
                                            $multiscale = $mod/100;
                                        }
                                        $this->pdf->row(array($row1['description'].' - ('.Yii::app()->format->formatCurrency($scale).'% )',
                                                Yii::app()->format->formatCurrency($row2['targetqty']),
                                                Yii::app()->format->formatCurrency(($row2['targetharga'])/$per),
                                                Yii::app()->format->formatCurrency($row2['realqty']),
                                                Yii::app()->format->formatCurrency($row2['realharga']/$per),
                                                Yii::app()->format->formatCurrency($row2['kumqty']),
                                                Yii::app()->format->formatCurrency($row2['kumharga']/$per),
                                                Yii::app()->format->formatCurrency($row2['kumqty'] - $row2['targetqty']),
                                                Yii::app()->format->formatCurrency(($row2['kumharga'] - ($row2['targetharga']))/$per),
                                                Yii::app()->format->formatCurrency($mod),
                                                //Yii::app()->format->formatNumber($scale*$multiscale*($custscale/100)),
                                                Yii::app()->format->formatNumber($scale),
                                                Yii::app()->format->formatCurrency(($scale/100*$row2['kumharga']*($custscale/100))/$per)
                                                //Yii::app()->format->formatCurrency(($scale/100*$row2['kumharga'])/$per)
                                        ));
                                        $totaltarget2 += ($row2['targetharga'])/$per;
                                        $totalrealisasi += $row2['realharga']/$per;
                                        $totalkumulatif += $row2['kumharga']/$per;
                                        $totaldiff += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        //$totalkomisi += ($scale/100*$row2['kumharga'])*$multiscale*($custscale/100)/$per;
                                        $totalkomisi += ($scale/100*$row2['kumharga']*$custscale/100)/$per;
                                        $totalqtykum += $row2['kumqty'];
                                        $totalqtytarget += $row2['targetqty'];
                                        $totalqtyrealisasi += $row2['realqty'];
                                        $totalqtypl += ($row2['kumqty'] - $row2['targetqty']);
                                    
                                        
                                        $totaltargetcust += ($row2['targetharga'])/$per;
                                        $totalrealisasicust += $row2['realharga']/$per;
                                        $totalkumulatifcust += $row2['kumharga']/$per;
                                        $totaldiffcust += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        $totalkomisicust += ($scale/100*$row2['kumharga'])*($custscale/100)/$per;
                                        $totalqtykumcust += $row2['kumqty'];
                                        $totalqtytargetcust += $row2['targetqty'];
                                        $totalqtyrealisasicust += $row2['realqty'];
                                        $totalqtyplcust += ($row2['kumqty'] - $row2['targetqty']);
                                        

                                        $totaltargetgroup += ($row2['targetharga'])/$per;
                                        $totalrealisasigroup += $row2['realharga']/$per;
                                        $totalkumulatifgroup += $row2['kumharga']/$per;
                                        $totaldiffgroup += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        //$totalkomisigroup += ($scale/100*$row2['kumharga'])*$multiscale*($custscale/100)/$per;
                                        $totalkomisigroup += ($scale/100*$row2['kumharga']*$custscale/100)/$per;
                                        $totalqtykumgroup += $row2['kumqty'];
                                        $totalqtytargetgroup += $row2['targetqty'];
                                        $totalqtyrealisasigroup += $row2['realqty'];
                                        $totalqtyplgroup += ($row2['kumqty'] - $row2['targetqty']);
                                      
                                        //$this->pdf->row(array(''));
                                        $n++;
                                        
                                        if($foundrows == $n)
                                        {
                                            $this->pdf->setY($this->pdf->getY()+0);
                                        }
                                        else
                                        {
                                            $this->pdf->checkNewPage(25);   
                                        }
                                        
                                    }
                            }
                            if($totaltargetgroup===0) {
                                $hgroup=0;
                            }
                            else {
                            if ($totaltargetgroup == 0) {
                              $hgroup = 0;
                            }
                            else {
                              $hgroup = ($totalkumulatifgroup/$totaltargetgroup)*100; 
                            }
                          }
                            $this->pdf->setFont('Arial','B',9);
                            $this->pdf->row(array('TOTAL '.$group['groupname'].' : ',$totalqtytargetgroup, Yii::app()->format->formatCurrency($totaltargetgroup),$totalqtyrealisasigroup, Yii::app()->format->formatCurrency($totalrealisasigroup),$totalqtykumgroup, Yii::app()->format->formatCurrency($totalkumulatifgroup),$totalqtyplgroup, Yii::app()->format->formatCurrency($totaldiffgroup),Yii::app()->format->formatCurrency($hgroup),'',Yii::app()->format->formatCurrency($totalkomisigroup)));
                            $this->pdf->setY($this->pdf->getY()+5);
                        }
                        if($totalkumulatifcust==0) {
                            $totalkomisisub = 0;
                        }
                        else {
                            $totalkomisisub = ($totalkomisicust/$totalkumulatifcust)*100;
                        }
                        
                        $this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,18,15,30,15));
						if ($totalkumulatif <> 0){
							$utglobal = ($totalkomisi/$totalkumulatif)*100;
						} else {
							$utglobal = 0;
						}
                        $this->pdf->setFont('Arial','B',9);
                        $this->pdf->row(array('TOTAL '.getCatalog('custcategory').' : '.$rslt['custcategoryname'],$totalqtytargetcust, Yii::app()->format->formatCurrency($totaltargetcust),$totalqtyrealisasicust, Yii::app()->format->formatCurrency($totalrealisasicust),$totalqtykumcust, Yii::app()->format->formatCurrency($totalkumulatifcust),$totalqtyplcust, Yii::app()->format->formatCurrency($totaldiffcust),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisicust),Yii::app()->format->formatNumber($totalkomisisub).'%'));
                        //$this->pdf->row(array(''));
                        //$this->pdf->setY($this->pdf->getY()+10);
                        if($h>120){
                          $pengkali = 120;
                        }
                        else if($h<70){
                          $pengkali=0;
                        }
                        else {
                          $pengkali=$h;
                        }

                        $this->pdf->setwidths(array(50,243,15));
                        $this->pdf->coldetailalign = array('L','C','R');
                        $this->pdf->row(array('',"Skala Penentu Upah Tambahan (SPUT) adalah ".Yii::app()->format->formatNumber($pengkali)."% x ".Yii::app()->format->formatNumber($utglobal)." = ",Yii::app()->format->formatNumber($pengkali*$utglobal/100)."%"));
                        $deposit = (($totalkomisi)*10/100);
                        //$this->pdf->checkNewPage(22);
                    }
                    
          $this->pdf->row(array(''));
          $this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R','R','R','R','R','R');
          $this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,18,15,30,15));
          $this->pdf->row(array('TOTAL SALES '. $row['fullname'],$totalqtytarget, Yii::app()->format->formatCurrency($totaltarget2),$totalqtyrealisasi, Yii::app()->format->formatCurrency($totalrealisasi),$totalqtykum, Yii::app()->format->formatCurrency($totalkumulatif),$totalqtypl, Yii::app()->format->formatCurrency($totaldiff),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisi),''));
          
          /*
          
          $skala = $pengkali*$utglobal/100;
          */
          //$sqldelete = Yii::app()->db->createCommand("delete from scalevalue where companyid={$companyid} and perioddate = '{$month1}' and employeeid = {$row['employeeid']} and recordstatus=5")->execute();
          //$sqlinsert = Yii::app()->db->createCommand("insert into scalevalue(companyid,perioddate,employeeid,scalevalue,recordstatus)values({$companyid},'{$month1}',{$row['employeeid']},{$skala},5)")->execute();
                    /*
          $this->pdf->setwidths(array(220,25,35,30));
          $this->pdf->colalign = array('C','R','R','L');
          $this->pdf->row(array('','Deposit 10%', Yii::app()->format->formatCurrency($deposit).' = ',Yii::app()->format->formatCurrency($totalkomisi-$deposit)));
          $this->pdf->checkNewPage(25);
          $this->pdf->setwidths(array(50,50,70,70,70));
          $this->pdf->colalign = array('C','C','C','C','C');
          $this->pdf->row(array('Diperiksa Oleh', 'Disetujui Oleh     ', 'Mengetahui      ', 'Dibayar Oleh', 'Diterima Oleh'));
          $this->pdf->setY($this->pdf->getY()+12);
          $this->pdf->setwidths(array(50,50,70,70,70));
          $this->pdf->colalign = array('C','L','C','C','C');
          $this->pdf->row(array('ACC & HEAD FINANCE','HEAD MARKETING', 'BRANCH MANAGER', 'KASIR     ', 'SALES     '));
          $this->pdf->checkNewPage(-20);
                    */
      }
      $this->pdf->Output();
  
	}
	public function RekapRealisasiPenjualanPerSalesPerGroupMaterial_lama3($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
      parent::actionDownload();
      //$this->no_result();
      
      $connection = Yii::app()->db;
      $this->pdf->title='REKAP REALISASI PENJUALAN PER SALES PER GROUP MATERIAL';
	  $this->pdf->companyid=$companyid;
      $datetime = new DateTime(date($enddate));

      $this->pdf->subtitle='Target Bulan '.$datetime->format('F').' '.$datetime->format('Y').' dan '.'Realisasi s/d '.date('d-m-Y',strtotime($enddate));
      $this->pdf->AddPage('L',array(210,330));
      
      $this->pdf->SetFont('Arial','',10);
      $this->pdf->sety($this->pdf->gety()+5);
      
      $month = date('m',strtotime($enddate));
      $year = date('Y',strtotime($enddate));
      
      $prev_month_ts1 = strtotime(''.$year.'-'.$month.'-01 -3 month');
      $prev_month_ts2 = strtotime(''.$year.'-'.$month.'-01 -1 month');
      
      $lastmonth1 = date('Y-m-d', $prev_month_ts1);
      $lastmonth2 = date('Y-m-t', $prev_month_ts2);
      
      $prev_month_ts =  strtotime($year.'-'.$month.'-01');
      $month1 = date('Y-m-d', $prev_month_ts);
      $month2 = date('Y-m-t', $prev_month_ts);
      $this->pdf->text(310,15,'Per : '.$per);
      $maxtarget = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appst')")->queryScalar();
      $maxscale = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appss')")->queryScalar();
      
      $sqlidscale = "select scaleid
                        from scale
                        where recordstatus = getwfmaxstatbywfname('appss') 
                        -- and companyid = {$companyid} 
                        order by docdate desc limit 1";
      $idscale = Yii::app()->db->createCommand($sqlidscale)->queryScalar();
      
      $sql = "select a.employeeid, b.fullname, salestargetid
                    from salestarget a
                    join employee b on b.employeeid = a.employeeid
                    where recordstatus= {$maxtarget} and a.perioddate = '{$month1}' and a.companyid = {$companyid}
                    and b.fullname like '%{$employee}%'";
      $result = Yii::app()->db->createCommand($sql)->queryAll();
      
      foreach($result as $row)
      {
          $totaltarget2 = 0;
          $totalqtykum = 0;
          $totalqtytarget = 0;
          $totalqtyrealisasi = 0;
          $totalqtypl = 0;
          $totalrealisasi = 0;
          $totalkumulatif = 0;
          $totalkomisi = 0;
          $totaldiff = 0;
                    $n=1;
          
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->setwidths(array(85));
          $this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                    
                    $sqlcustcategory = "select b.custcategoryname,a.custcategoryid as custid
                                       from salestargetdet a
                                       join custcategory b on b.custcategoryid = a.custcategoryid
                                       where a.salestargetid = {$row['salestargetid']}
                                       group by b.custcategoryid";
                
                    $foundrows = Yii::app()->db->createCommand('select found_rows()')->queryScalar();
          
                    $resultcustcategory = Yii::app()->db->createCommand($sqlcustcategory)->queryAll();
                    foreach($resultcustcategory as $rslt)
                    {
                        $totaltargetcust = 0;
                        $totalqtykumcust = 0;
                        $totalqtytargetcust = 0;
                        $totalqtyrealisasicust = 0;
                        $totalqtyplcust = 0;
                        $totalrealisasicust = 0;
                        $totalkumulatifcust = 0;
                        $totalkomisicust = 0;
                        $totaldiffcust = 0;
                                        
						$sqlcustscale = "select value
								 from scalecat a
								 -- join salesscale b on b.salesscaleid = a.salesscaleid
								 -- where b.perioddate = '{$month1}' 
								 -- and b.companyid = {$companyid}
								 -- and b.recordstatus = {$maxscale}
								 where scaleid = {$idscale}
								 and a.custcategoryid = {$rslt['custid']}";
						$custscale = Yii::app()->db->createCommand($sqlcustscale)->queryScalar();
                      
                        $sqlgroupkasta = "select groupkastaid,groupname from groupkasta";
$groupkasta = Yii::app()->db->createCommand($sqlgroupkasta)->queryAll();
                        
                        $sqlpencapaian = "select sum(kumharga)/sum(harga)*100 from (
                            select ifnull(sum(qty*price),0) as harga,
                            ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                            from invoice a
                            join giheader b on a.giheaderid = b.giheaderid
                            join gidetail c on c.giheaderid = b.giheaderid
                            join soheader d on d.soheaderid = b.soheaderid
                            join product e on e.productid = c.productid
                            join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                            where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                            and d.employeeid = {$row['employeeid']} and g.custcategoryid = {$rslt['custid']} and d.isdisplay=0),0) as kumharga
                            from salestarget b
                            join salestargetdet a on a.salestargetid = b.salestargetid
                            join employee d on d.employeeid = b.employeeid
                            where b.employeeid = {$row['employeeid']} and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} and a.custcategoryid = {$rslt['custid']}
                            union
                            select sum(harga) as harga, sum(kumharga) as kumharga from (
                            select 0 as harga,-1*sum(a.qty*a.price) as kumharga
                            from notagirpro a
                            join notagir b on b.notagirid = a.notagirid
                            join gireturdetail c on c.gireturdetailid = a.gireturdetailid
                            join giretur d on d.gireturid = c.gireturid
                            join giheader e on e.giheaderid = d.giheaderid
                            join soheader f on f.soheaderid = e.soheaderid
                            join product g on g.productid = a.productid
                                                        join addressbook h on h.addressbookid = f.addressbookid
                            where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid = {$row['employeeid']}
                            and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and h.custcategoryid = {$rslt['custid']} and f.isdisplay=0) x 
                            ) z ";
                        $h = Yii::app()->db->createCommand($sqlpencapaian)->queryScalar();
                        
                        $this->pdf->setFont('Arial','B',10);
                        $this->pdf->setY($this->pdf->getY());
                        $this->pdf->row(array(getCatalog('custcategory'). ' = '. $rslt['custcategoryname'].' - '.$custscale.'%'));
                        $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
                        $this->pdf->setwidths(array(50,45,45,45,45,15,15,30,15));
                        $this->pdf->colheader = array('Kelompok Barang',
                                                'Target Bulan ini',
                                                'Realisasi Hari ini',
                                                'Realisasi Kumulatif',
                                                '+ / -',
                                                'Penc.',
                                                'Skala',
                                                'Upah Tambahan',
                                                '');
                        $this->pdf->RowHeader();
                        $this->pdf->coldetailalign = array('L','C','C','C','C','C','C','C');
						$this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,15,15,30,15));
                        //$this->pdf->row(array('','Qty','Rp','Qty','Rp','Qty','Rp','Qty','Rp','RP','Rp','Rp','Rp'));
                        $this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R','R','R','R','R','R');
                        
                        foreach($groupkasta as $group) {
                          
                            $hgroup=0;
                            $totaltargetgroup = 0;
                            $totalqtykumgroup = 0;
                            $totalqtytargetgroup = 0;
                            $totalqtyrealisasigroup = 0;
                            $totalqtyplgroup = 0;
                            $totalrealisasigroup = 0;
                            $totalkumulatifgroup = 0;
                            $totalkomisigroup = 0;
                            $totaldiffgroup = 0;
                          
                            $this->pdf->SetFont('Arial','B',9);
                            $this->pdf->row(array(
                            $group['groupname']));
                          
                            $matgroup = "select * from (select z.materialgroupid as materialgroupid, description
                            from salestargetdet za
                            join (select parentmatgroupid,materialgroupid,description from materialgroup zx where zx.isfg=0 and zx.recordstatus=1 and groupkastaid = {$group['groupkastaid']}) z on z.materialgroupid = za.materialgroupid
                            join salestarget zc on zc.salestargetid = za.salestargetid
                            where za.salestargetid = {$row['salestargetid']}
                            and za.custcategoryid={$rslt['custid']} and zc.companyid={$companyid} and zc.perioddate = '{$month1}'
                            group by z.materialgroupid
                            union 
                            select g.materialgroupid, description
                            from invoice a
                            join giheader b on a.giheaderid = b.giheaderid
                            join gidetail c on c.giheaderid = b.giheaderid
                            join soheader d on d.soheaderid = b.soheaderid
                            join product e on e.productid = c.productid
                            join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                            join addressbook i on i.addressbookid = d.addressbookid
                            join materialgroup g on g.materialgroupid = f.materialgroupid
                            -- join materialgroup h on h.materialgroupid = g.parentmatgroupid
                            where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                            and d.employeeid = {$row['employeeid']} 
                            -- and h.isfg=1
                            and i.custcategoryid = {$rslt['custid']}
                            and d.isdisplay=0 and g.groupkastaid = {$group['groupkastaid']}
                            group by g.materialgroupid 
                            union
                            select xh.materialgroupid, description
                            from notagirpro x
                            join notagir xa on xa.notagirid = x.notagirid
                            join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                            join giretur xc on xc.gireturid = xb.gireturid
                            join giheader xd on xd.giheaderid = xc.giheaderid
                            join soheader xe on xe.soheaderid = xd.soheaderid
                            join product xf on xf.productid = x.productid
                            join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
join addressbook xj on xj.addressbookid = xe.addressbookid
                            join materialgroup xh on xh.materialgroupid = xg.materialgroupid
                            -- join materialgroup xi on xi.materialgroupid = xh.parentmatgroupid
                            where xc.companyid = {$companyid} and xc.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 
                            and xe.employeeid = {$row['employeeid']} 
                            -- and xi.isfg=1 
                            and xj.custcategoryid = {$rslt['custid']}
                            and xe.isdisplay=0 and xh.groupkastaid = {$group['groupkastaid']}
                            group by xh.materialgroupid ) zzz
                            order by zzz.materialgroupid asc ";
                            $material = Yii::app()->db->createCommand($matgroup)->queryAll();
                            foreach($material as $row1)
                            {

                                $sql1 = "select sum(qty) as targetqty, sum(harga) as targetharga, sum(realqty) as realqty, sum(realharga) as realharga, sum(kumqty) as kumqty, sum(kumharga) as kumharga from (
                                                select ifnull(sum(a.qty),0) as qty,
                                                ifnull(sum(qty*price),0) as harga,
                                                 ifnull((select sum(xb.qty)
                                                        from giheader xa
                                                        join gidetail xb on xa.giheaderid = xb.giheaderid
                                                        join soheader xs on xs.soheaderid = xa.soheaderid
                                                        join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                        join addressbook xd on xd.addressbookid = xs.addressbookid
                                                        where xa.recordstatus = 3 and xs.employeeid = {$row['employeeid']} 
                                                        -- and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) 
                                                        and xc.materialgroupid = {$row1['materialgroupid']}
                                                        and xs.companyid = {$companyid} and xa.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xd.custcategoryid = {$rslt['custid']} and xs.isdisplay=0),0) as realqty,
                                                ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                        from invoice a
                                                        join giheader b on a.giheaderid = b.giheaderid
                                                        join gidetail c on c.giheaderid = b.giheaderid
                                                        join soheader d on d.soheaderid = b.soheaderid
                                                        join product e on e.productid = c.productid
                                                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                                                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and d.employeeid = {$row['employeeid']}
-- and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']}) 
                                                        and f.materialgroupid = {$row1['materialgroupid']} and g.custcategoryid = {$rslt['custid']} and d.isdisplay=0),0) as realharga,
                                                ifnull((select sum(xb.qty)
                                                        from giheader xa
                                                        join gidetail xb on xa.giheaderid = xb.giheaderid
                                                        join soheader xs on xs.soheaderid = xa.soheaderid
                                                        join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                        join addressbook xd on xd.addressbookid = xs.addressbookid
                                                        where xa.recordstatus = 3 and xs.companyid = {$companyid} and xs.employeeid = {$row['employeeid']} 
                                                        -- and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) 
                                                        and xc.materialgroupid = {$row1['materialgroupid']}
                                                        and xa.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xd.custcategoryid = {$rslt['custid']} and xs.isdisplay=0),0) as kumqty,
                                             ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                        from invoice a
                                                        join giheader b on a.giheaderid = b.giheaderid
                                                        join gidetail c on c.giheaderid = b.giheaderid
                                                        join soheader d on d.soheaderid = b.soheaderid
                                                        join product e on e.productid = c.productid
                                                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                                                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and d.employeeid = {$row['employeeid']}
                                                        -- and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']})
                                                        and f.materialgroupid = {$row1['materialgroupid']}
                                                        and g.custcategoryid = {$rslt['custid']} and d.isdisplay=0),0) as kumharga
                                                from salestarget b
                                                join salestargetdet a on a.salestargetid = b.salestargetid
                                                join materialgroup c on c.materialgroupid = a.materialgroupid
                                                join employee d on d.employeeid = b.employeeid
                                                where b.employeeid = {$row['employeeid']} and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} 
                                                -- and a.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
and a.materialgroupid = {$row1['materialgroupid']}
                                                and a.custcategoryid = {$rslt['custid']}
                                                union

                                  select 0 as qty,0 as harga,
                                                        ifnull((select -1*sum(x.qty)
                                                                from notagirpro x
                                                                join notagir xa on xa.notagirid = x.notagirid
                                                                join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                join giretur xc on xc.gireturid = xb.gireturid
                                                                join giheader xd on xd.giheaderid = xc.giheaderid
                                                                join soheader xe on xe.soheaderid = xd.soheaderid
                                                                join product xf on xf.productid = x.productid
                                                                join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                join addressbook xh on xh.addressbookid = xe.addressbookid
                                                                where xc.companyid = {$companyid} and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 and xe.employeeid = {$row['employeeid']} 
                                                                -- and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) 
                                                                and xg.materialgroupid = {$row1['materialgroupid']}
                                                                and xh.custcategoryid = {$rslt['custid']} and xe.isdisplay=0),0) as realqty,
                                                        ifnull((select -1*sum(x.qty*x.price)
                                                                from notagirpro x
                                                                join notagir xa on xa.notagirid = x.notagirid
                                                                join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                join giretur xc on xc.gireturid = xb.gireturid
                                                                join giheader xd on xd.giheaderid = xc.giheaderid
                                                                join soheader xe on xe.soheaderid = xd.soheaderid
                                                                join product xf on xf.productid = x.productid
                                                                join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                join addressbook xh on xh.addressbookid = xe.addressbookid
                                                                where xc.companyid = {$companyid}  and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 and xe.employeeid = {$row['employeeid']} 
                                                                -- and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                                                                and xg.materialgroupid = {$row1['materialgroupid']}
                                                                and xh.custcategoryid = {$rslt['custid']} and xe.isdisplay=0),0) as realharga,
                                                         ifnull(-1*sum(a.qty),0) as kumqty,
ifnull(-1*sum(a.qty*a.price),0) as kumharga
                                                        from notagirpro a
                                                        join notagir b on b.notagirid = a.notagirid
                                                        join gireturdetail c on c.gireturdetailid = a.gireturdetailid
                                                        join giretur d on d.gireturid = c.gireturid
                                                        join giheader e on e.giheaderid = d.giheaderid
                                                        join soheader f on f.soheaderid = e.soheaderid
                                                        join product g on g.productid = a.productid
                                                        join productplant h on h.productid = g.productid and h.unitofissue = a.uomid and h.slocid = a.slocid
                                                        join addressbook i on i.addressbookid = f.addressbookid
                                                        join custcategory j on j.custcategoryid = i.custcategoryid
                                                        where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid = {$row['employeeid']}
                                                        -- and h.materialgroupid  in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                                                        and h.materialgroupid = {$row1['materialgroupid']}
                                                        and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and j.custcategoryid = ".$rslt['custid']."
                                                and f.isdisplay=0) z ";

                                    $res1 = Yii::app()->db->createCommand($sql1)->queryAll();
                                    /*
                                    $this->pdf->SetFont('Arial','B',10);
                                    $this->pdf->setwidths(array(85));
                                    $this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                                    */
                                    $mod = 0;
                                    foreach($res1 as $row2)
                                    {
                                        $this->pdf->SetFont('Arial','',8);
                                        $this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,15,15,30,15));

                                        
                                        if($row2['targetharga']*$row2['targetqty']==0)
                                        {
                                            $mod = 0;
                                        }
                                        else
                                        {
                                            //$mod = ($row2['kumqty']/$row2['targetqty'])*100;
                                            $mod = ($row2['kumharga']/$row2['targetharga'])*100;
                                            //$mod = 1;
                                        }
if($row2['targetqty']==0 && $row2['kumqty']>0)
                                        {
                                            $mod = 0;
                                        }
                                        /*
                                        if($h>=$minscale)
                                        {
                                            //$this->pdf->setbordercell(array('B','B','B','B','B','B','B','B','B','B','B','B','B','B'));
                                            if($mod>120)
                                            {
                                                $select = 'select gt120';
                                            }
                                            else if($mod<=120 && $mod>100)
                                            {
                                                $select = 'select gt100';
                                            }
                                            else if($mod<=100 & $mod>90)
                                            {
                                                $select = 'select gt90';
                                            }
                                            else if($mod<=90 && $mod>80)
                                            {
                                                $select = 'select gt80';
                                            }
                                            else if($mod<=80 && $mod>70)
                                            {
                                                $select = 'select gt70';
                                            }
                                            else
                                            {
                                                $select = 'select 0';
                                            }
                                            $from = " from salesscale a 
                                                        join salesscaledet b on a.salesscaleid = b.salesscaleid
                                                        where a.companyid = {$companyid} and b.materialgroupid ={$row1['materialgroupid']} 
                                                        and a.perioddate = '{$month1}' and a.recordstatus = {$maxscale} ";
                                            $scale = Yii::app()->db->createCommand($select.$from)->queryScalar();
                                        }
                                        else
                                        {
                                            $scale=0;
                                        }
                                        */
                                        $select = "select value
                                                  from scaledet a
                                                  where a.scaleid = {$idscale} and materialgroupid = {$row1['materialgroupid']}";
                                        $scale = Yii::app()->db->createCommand($select)->queryScalar();
										
                                        if($mod<70) {
                                            $multiscale = 0;
                                        }
										else if($mod>120) {
                                            $multiscale = 1.2;
                                        }
                                        else {
                                            $multiscale = $mod/100;
                                        }
                                        $this->pdf->row(array($row1['description'].' - ('.Yii::app()->format->formatCurrency($scale).'% )',
                                                Yii::app()->format->formatCurrency($row2['targetqty']),
                                                Yii::app()->format->formatCurrency(($row2['targetharga'])/$per),
                                                Yii::app()->format->formatCurrency($row2['realqty']),
                                                Yii::app()->format->formatCurrency($row2['realharga']/$per),
                                                Yii::app()->format->formatCurrency($row2['kumqty']),
                                                Yii::app()->format->formatCurrency($row2['kumharga']/$per),
                                                Yii::app()->format->formatCurrency($row2['kumqty'] - $row2['targetqty']),
                                                Yii::app()->format->formatCurrency(($row2['kumharga'] - ($row2['targetharga']))/$per),
                                                Yii::app()->format->formatCurrency($mod),
                                                Yii::app()->format->formatNumber($scale*$multiscale*($custscale/100)),
                                                Yii::app()->format->formatCurrency(($scale/100*$row2['kumharga']*$multiscale*($custscale/100))/$per)
                                        ));
                                        $totaltarget2 += ($row2['targetharga'])/$per;
                                        $totalrealisasi += $row2['realharga']/$per;
                                        $totalkumulatif += $row2['kumharga']/$per;
                                        $totaldiff += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        $totalkomisi += ($scale/100*$row2['kumharga'])*$multiscale*($custscale/100)/$per;
                                        $totalqtykum += $row2['kumqty'];
                                        $totalqtytarget += $row2['targetqty'];
                                        $totalqtyrealisasi += $row2['realqty'];
                                        $totalqtypl += ($row2['kumqty'] - $row2['targetqty']);
                                    
                                        $totaltargetcust += ($row2['targetharga'])/$per;
                                        $totalrealisasicust += $row2['realharga']/$per;
                                        $totalkumulatifcust += $row2['kumharga']/$per;
                                        $totaldiffcust += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        $totalkomisicust += ($scale/100*$row2['kumharga'])*$multiscale*($custscale/100)/$per;
                                        $totalqtykumcust += $row2['kumqty'];
                                        $totalqtytargetcust += $row2['targetqty'];
                                        $totalqtyrealisasicust += $row2['realqty'];
                                        $totalqtyplcust += ($row2['kumqty'] - $row2['targetqty']);
                                      
                                        $totaltargetgroup += ($row2['targetharga'])/$per;
                                        $totalrealisasigroup += $row2['realharga']/$per;
                                        $totalkumulatifgroup += $row2['kumharga']/$per;
                                        $totaldiffgroup += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        $totalkomisigroup += ($scale/100*$row2['kumharga'])*$multiscale*($custscale/100)/$per;
                                        $totalqtykumgroup += $row2['kumqty'];
                                        $totalqtytargetgroup += $row2['targetqty'];
$totalqtyrealisasigroup += $row2['realqty'];
                                        $totalqtyplgroup += ($row2['kumqty'] - $row2['targetqty']);
                                      
                                        //$this->pdf->row(array(''));
                                        $n++;
                                        if($foundrows == $n)
                                        {
                                            //$this->pdf->setY($this->pdf->getY()+0);
                                        }
                                        else
                                        {
                                            $this->pdf->checkNewPage(25);   
                                        }
                                    
                                    }
                            }
                            if($totaltargetgroup===0) {
                                $hgroup=0;
                            }
                            else {
								if ($totaltargetgroup == 0) {
									$hgroup = 0;
								}
								else {
									$hgroup = ($totalkumulatifgroup/$totaltargetgroup)*100; 
								}
                            }
                            $this->pdf->setFont('Arial','B',9);
                            $this->pdf->row(array('TOTAL '.$group['groupname'].' : ',$totalqtytargetgroup, Yii::app()->format->formatCurrency($totaltargetgroup),$totalqtyrealisasigroup, Yii::app()->format->formatCurrency($totalrealisasigroup),$totalqtykumgroup, Yii::app()->format->formatCurrency($totalkumulatifgroup),$totalqtyplgroup, Yii::app()->format->formatCurrency($totaldiffgroup),Yii::app()->format->formatCurrency($hgroup),'',Yii::app()->format->formatCurrency($totalkomisigroup)));
                            $this->pdf->setY($this->pdf->getY()+5);
                        }
                        if($totalkumulatifcust==0) {
                            $totalkomisisub = 0;
                        }
                        else {
                            $totalkomisisub = ($totalkomisicust/$totalkumulatifcust)*100;
                        }
                        $this->pdf->setFont('Arial','B',9);
                        $this->pdf->row(array('TOTAL '.getCatalog('custcategory').' : '.$rslt['custcategoryname'],$totalqtytargetcust, Yii::app()->format->formatCurrency($totaltargetcust),$totalqtyrealisasicust, Yii::app()->format->formatCurrency($totalrealisasicust),$totalqtykumcust, Yii::app()->format->formatCurrency($totalkumulatifcust),$totalqtyplcust, Yii::app()->format->formatCurrency($totaldiffcust),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisicust),Yii::app()->format->formatNumber($totalkomisisub).'%'));
                        //$this->pdf->row(array(''));
                        $this->pdf->setY($this->pdf->getY()+10);
                        //$this->pdf->checkNewPage(22);
                    }
          $this->pdf->row(array('TOTAL SALES '. $row['fullname'],$totalqtytarget, Yii::app()->format->formatCurrency($totaltarget2),$totalqtyrealisasi, Yii::app()->format->formatCurrency($totalrealisasi),$totalqtykum, Yii::app()->format->formatCurrency($totalkumulatif),$totalqtypl, Yii::app()->format->formatCurrency($totaldiff),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisi)));
          $this->pdf->row(array(''));
          $deposit = (($totalkomisi)*10/100);
                    
                    /*
          $this->pdf->setwidths(array(220,25,35,30));
          $this->pdf->colalign = array('C','R','R','L');
          $this->pdf->row(array('','Deposit 10%', Yii::app()->format->formatCurrency($deposit).' = ',Yii::app()->format->formatCurrency($totalkomisi-$deposit)));
          $this->pdf->checkNewPage(25);
          $this->pdf->setwidths(array(50,50,70,70,70));
          $this->pdf->colalign = array('C','C','C','C','C');
          $this->pdf->row(array('Diperiksa Oleh', 'Disetujui Oleh     ', 'Mengetahui      ', 'Dibayar Oleh', 'Diterima Oleh'));
          $this->pdf->setY($this->pdf->getY()+12);
$this->pdf->setwidths(array(50,50,70,70,70));
          $this->pdf->colalign = array('C','L','C','C','C');
          $this->pdf->row(array('ACC & HEAD FINANCE','HEAD MARKETING', 'BRANCH MANAGER', 'KASIR     ', 'SALES     '));
          $this->pdf->checkNewPage(-20);
                    */
      }
      $this->pdf->Output();
  
	}
	public function RekapRealisasiPenjualanPerSalesPerGroupMaterial_lama2($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			//$this->no_result();
			
			$connection = Yii::app()->db;
			$this->pdf->title='REKAP REALISASI PENJUALAN PER SALES PER GROUP MATERIAL';
			$datetime = new DateTime(date($enddate));

			$this->pdf->subtitle='Target Bulan '.$datetime->format('F').' '.$datetime->format('Y').' dan '.'Realisasi s/d '.date('d-m-Y',strtotime($enddate));
			$this->pdf->AddPage('L',array(210,330));
			
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->sety($this->pdf->gety()+5);
			
			$month = date('m',strtotime($enddate));
			$year = date('Y',strtotime($enddate));
			
			$prev_month_ts1 = strtotime(''.$year.'-'.$month.'-01 -3 month');
			$prev_month_ts2 = strtotime(''.$year.'-'.$month.'-01 -1 month');
			
			$lastmonth1 = date('Y-m-d', $prev_month_ts1);
			$lastmonth2 = date('Y-m-t', $prev_month_ts2);
			
			$prev_month_ts =  strtotime($year.'-'.$month.'-01');
			$month1 = date('Y-m-d', $prev_month_ts);
			$month2 = date('Y-m-t', $prev_month_ts);
			$this->pdf->text(310,15,'Per : '.$per);
			$maxtarget = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appst')")->queryScalar();
			$maxscale = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appss')")->queryScalar();
			
			$sqlminscale = "select minscale
                        from salesscale
                        where recordstatus = getwfmaxstatbywfname('appss') and companyid = {$companyid} and perioddate = '{$month1}' ";
			$minscale = Yii::app()->db->createCommand($sqlminscale)->queryScalar();
			
			$sql = "select a.employeeid, b.fullname, salestargetid
							from salestarget a
							join employee b on b.employeeid = a.employeeid
							where recordstatus= {$maxtarget} and a.perioddate = '{$month1}' and a.companyid = {$companyid}
							and b.fullname like '%{$employee}%'";
			$result = Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($result as $row)
			{
					$totaltarget2 = 0;
					$totalqtykum = 0;
					$totalqtytarget = 0;
					$totalqtyrealisasi = 0;
					$totalqtypl = 0;
					$totalrealisasi = 0;
					$totalkumulatif = 0;
					$totalkomisi = 0;
					$totaldiff = 0;
                    $n=1;
					
					$this->pdf->SetFont('Arial','B',10);
					$this->pdf->setwidths(array(85));
					$this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                    
                    $sqlcustcategory = "select b.custcategoryname,a.custcategoryid as custid
                                       from salestargetdet a
                                       join custcategory b on b.custcategoryid = a.custcategoryid
                                       where a.salestargetid = {$row['salestargetid']}
                                       group by b.custcategoryid";
                
                    $foundrows = Yii::app()->db->createCommand('select found_rows()')->queryScalar();
					
                    $resultcustcategory = Yii::app()->db->createCommand($sqlcustcategory)->queryAll();
                    foreach($resultcustcategory as $rslt)
                    {
                        $totaltargetcust = 0;
                        $totalqtykumcust = 0;
                        $totalqtytargetcust = 0;
                        $totalqtyrealisasicust = 0;
                        $totalqtyplcust = 0;
                        $totalrealisasicust = 0;
                        $totalkumulatifcust = 0;
                        $totalkomisicust = 0;
                        $totaldiffcust = 0;
                        
                        $sqlpencapaian = "select sum(kumharga)/sum(harga)*100 from (
														select ifnull(sum(qty*price),0) as harga,
														ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
														from invoice a
														join giheader b on a.giheaderid = b.giheaderid
														join gidetail c on c.giheaderid = b.giheaderid
														join soheader d on d.soheaderid = b.soheaderid
														join product e on e.productid = c.productid
														join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
														where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
														and d.employeeid = {$row['employeeid']} and g.custcategoryid = {$rslt['custid']} and d.isdisplay=0),0) as kumharga
														from salestarget b
														join salestargetdet a on a.salestargetid = b.salestargetid
														join employee d on d.employeeid = b.employeeid
														where b.employeeid = {$row['employeeid']} and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} and a.custcategoryid = {$rslt['custid']}
														union
														select sum(harga) as harga, sum(kumharga) as kumharga from (
														select 0 as harga,-1*sum(a.qty*a.price) as kumharga
														from notagirpro a
														join notagir b on b.notagirid = a.notagirid
														join gireturdetail c on c.gireturdetailid = a.gireturdetailid
														join giretur d on d.gireturid = c.gireturid
														join giheader e on e.giheaderid = d.giheaderid
														join soheader f on f.soheaderid = e.soheaderid
														join product g on g.productid = a.productid
                                                        join addressbook h on h.addressbookid = f.addressbookid
														where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid = {$row['employeeid']}
														and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and h.custcategoryid = {$rslt['custid']} and f.isdisplay=0) x 
														) z ";
                        $h = Yii::app()->db->createCommand($sqlpencapaian)->queryScalar();
                        
                        $this->pdf->setFont('Arial','B',10);
                        $this->pdf->setY($this->pdf->getY());
                        $this->pdf->row(array(getCatalog('custcategory'). ' = '. $rslt['custcategoryname']));
                        $this->pdf->colalign = array('C','C','C','C','C','C','C','C');
                        $this->pdf->setwidths(array(70,45,45,45,45,15,15,30));
                        $this->pdf->colheader = array('Sales dan Kelompok Barang',
                                                'Target Bulan ini',
                                                'Realisasi Hari ini',
                                                'Realisasi Kumulatif',
                                                '+ / -',
                                                'Penc.',
                                                'Skala',
                                                'Upah Tambahan');
                        $this->pdf->RowHeader();
                        $this->pdf->coldetailalign = array('L','C','C','C','C','C','C');
                        $this->pdf->setwidths(array(70,15,30,15,30,15,30,15,30,15,15,30));
                        //$this->pdf->row(array('','Qty','Rp','Qty','Rp','Qty','Rp','Qty','Rp','RP','Rp','Rp'));
                        $this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R','R','R','R');
                        
                        $matgroup = "select z.parentmatgroupid as materialgroupid, (select description from materialgroup where materialgroupid=z.parentmatgroupid) as description
                        from salestargetdet za
                        join (select parentmatgroupid,materialgroupid,description from materialgroup zx where zx.isfg=0 and zx.recordstatus=1) z on z.materialgroupid = za.materialgroupid
                        join salestarget zc on zc.salestargetid = za.salestargetid
                        where za.salestargetid = {$row['salestargetid']}
                        and za.custcategoryid={$rslt['custid']} and zc.companyid={$companyid} and zc.perioddate = '{$month1}'
                        group by z.parentmatgroupid
                        union 
                        select h.materialgroupid, h.description
                        from invoice a
                        join giheader b on a.giheaderid = b.giheaderid
                        join gidetail c on c.giheaderid = b.giheaderid
                        join soheader d on d.soheaderid = b.soheaderid
                        join product e on e.productid = c.productid
                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                        join addressbook i on i.addressbookid = d.addressbookid
                        join materialgroup g on g.materialgroupid = f.materialgroupid
                        join materialgroup h on h.materialgroupid = g.parentmatgroupid
                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                        and d.employeeid = {$row['employeeid']} and h.isfg=1 and i.custcategoryid = {$rslt['custid']}
						and d.isdisplay=0
                        group by h.materialgroupid 
                        union
                        select xi.materialgroupid, xi.description
                        from notagirpro x
                        join notagir `xa` on `xa`.notagirid = x.notagirid
                        join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                        join giretur xc on xc.gireturid = xb.gireturid
                        join giheader xd on xd.giheaderid = xc.giheaderid
                        join soheader xe on xe.soheaderid = xd.soheaderid
                        join product xf on xf.productid = x.productid
                        join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                        join addressbook xj on xj.addressbookid = xe.addressbookid
                        join materialgroup xh on xh.materialgroupid = xg.materialgroupid
                        join materialgroup xi on xi.materialgroupid = xh.parentmatgroupid
                        where xc.companyid = {$companyid} and xc.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 
                        and xe.employeeid = {$row['employeeid']} and xi.isfg=1 and xj.custcategoryid = {$rslt['custid']}
						and xe.isdisplay=0
                        group by xi.materialgroupid";
                        $material = Yii::app()->db->createCommand($matgroup)->queryAll();
                        foreach($material as $row1)
                        {		

                                $sql1 = "select sum(qty) as targetqty, sum(harga) as targetharga, sum(realqty) as realqty, sum(realharga) as realharga, sum(kumqty) as kumqty, sum(kumharga) as kumharga from (
                                                select ifnull(sum(a.qty),0) as qty,
                                                ifnull(sum(qty*price),0) as harga,
                                                 ifnull((select sum(`xb`.qty)
                                                        from giheader `xa`
                                                        join gidetail xb on `xa`.giheaderid = xb.giheaderid
                                                        join soheader xs on xs.soheaderid = `xa`.soheaderid
                                                        join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                        join addressbook xd on xd.addressbookid = xs.addressbookid
                                                        where `xa`.recordstatus = 3 and xs.employeeid = {$row['employeeid']} and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) and xs.companyid = {$companyid} and `xa`.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xd.custcategoryid = {$rslt['custid']} and xs.isdisplay=0),0) as realqty,
                                                ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                        from invoice a
                                                        join giheader b on a.giheaderid = b.giheaderid
                                                        join gidetail c on c.giheaderid = b.giheaderid
                                                        join soheader d on d.soheaderid = b.soheaderid
                                                        join product e on e.productid = c.productid
                                                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                                                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and d.employeeid = {$row['employeeid']}
                                                        and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']}) and g.custcategoryid = {$rslt['custid']} and d.isdisplay=0),0) as realharga,
                                                ifnull((select sum(`xb`.qty)
                                                        from giheader `xa`
                                                        join gidetail xb on `xa`.giheaderid = xb.giheaderid
                                                        join soheader xs on xs.soheaderid = `xa`.soheaderid
                                                        join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                        join addressbook xd on xd.addressbookid = xs.addressbookid
                                                        where `xa`.recordstatus = 3 and xs.companyid = {$companyid} and xs.employeeid = {$row['employeeid']} and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) and `xa`.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xd.custcategoryid = {$rslt['custid']} and xs.isdisplay=0),0) as kumqty,
                                             ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                        from invoice a
                                                        join giheader b on a.giheaderid = b.giheaderid
                                                        join gidetail c on c.giheaderid = b.giheaderid
                                                        join soheader d on d.soheaderid = b.soheaderid
                                                        join product e on e.productid = c.productid
                                                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                                                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and d.employeeid = {$row['employeeid']}
                                                        and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']}) and g.custcategoryid = {$rslt['custid']} and d.isdisplay=0),0) as kumharga
                                                from salestarget b
                                                join salestargetdet a on a.salestargetid = b.salestargetid
                                                join materialgroup c on c.materialgroupid = a.materialgroupid
                                                join employee d on d.employeeid = b.employeeid
                                                where b.employeeid = {$row['employeeid']} and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} and a.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) and a.custcategoryid = {$rslt['custid']}
                                                union

                              select 0 as qty,0 as harga,
                                                        ifnull((select -1*sum(x.qty)
                                                                from notagirpro x
                                                                join notagir `xa` on `xa`.notagirid = x.notagirid
                                                                join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                join giretur xc on xc.gireturid = xb.gireturid
                                                                join giheader xd on xd.giheaderid = xc.giheaderid
                                                                join soheader xe on xe.soheaderid = xd.soheaderid
                                                                join product xf on xf.productid = x.productid
                                                                join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                join addressbook xh on xh.addressbookid = xe.addressbookid
                                                                where xc.companyid = {$companyid} and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 and xe.employeeid = {$row['employeeid']} and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) and xh.custcategoryid = {$rslt['custid']} and xe.isdisplay=0),0) as realqty,
                                                        ifnull((select -1*sum(x.qty*x.price)
                                                                from notagirpro x
                                                                join notagir `xa` on `xa`.notagirid = x.notagirid
                                                                join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                join giretur xc on xc.gireturid = xb.gireturid
                                                                join giheader xd on xd.giheaderid = xc.giheaderid
                                                                join soheader xe on xe.soheaderid = xd.soheaderid
                                                                join product xf on xf.productid = x.productid
                                                                join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                join addressbook xh on xh.addressbookid = xe.addressbookid
                                                                where xc.companyid = {$companyid}  and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 and xe.employeeid = {$row['employeeid']} and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) and xh.custcategoryid = {$rslt['custid']} and xe.isdisplay=0),0) as realharga,
                                                         ifnull(-1*sum(a.qty),0) as kumqty,
                                                        ifnull(-1*sum(a.qty*a.price),0) as kumharga
                                                        from notagirpro a
                                                        join notagir b on b.notagirid = a.notagirid
                                                        join gireturdetail c on c.gireturdetailid = a.gireturdetailid
                                                        join giretur d on d.gireturid = c.gireturid
                                                        join giheader e on e.giheaderid = d.giheaderid
                                                        join soheader f on f.soheaderid = e.soheaderid
                                                        join product g on g.productid = a.productid
                                                        join productplant h on h.productid = g.productid and h.unitofissue = a.uomid and h.slocid = a.slocid
                                                        join addressbook i on i.addressbookid = f.addressbookid
                                                        join custcategory j on j.custcategoryid = i.custcategoryid
                                                        where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid = {$row['employeeid']}
                                                        and h.materialgroupid  in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                                                        and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and j.custcategoryid = ".$rslt['custid']."
                                                and f.isdisplay=0) z ";

                                $res1 = Yii::app()->db->createCommand($sql1)->queryAll();
                                /*
                                $this->pdf->SetFont('Arial','B',10);
                                $this->pdf->setwidths(array(85));
                                $this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                                */
                                $mod = 0;
                                foreach($res1 as $row2)
                                {
                                    $this->pdf->SetFont('Arial','',8);
                                    $this->pdf->setwidths(array(70,15,30,15,30,15,30,15,30,15,15,30));

                                    if($row2['targetharga']*$row2['targetqty']==0)
                                    {
                                                    $mod = 0;
                                    }
                                    else
                                    {
                                                    $mod = ($row2['kumqty']/$row2['targetqty'])*100;
                                                    //$mod = 1;
                                    }

                                    if($row2['targetqty']==0 && $row2['kumqty']>0)
                                    {
                                            $mod = 75;
                                    }

                                    if($h>=$minscale)
                                    {
                                            //$this->pdf->setbordercell(array('B','B','B','B','B','B','B','B','B','B','B','B','B','B'));
                                            if($mod>120)
                                            {
                                                            $select = 'select gt120';
                                            }
                                            else if($mod<=120 && $mod>100)
                                            {
                                                            $select = 'select gt100';
                                            }
                                            else if($mod<=100 & $mod>90)
                                            {
                                                            $select = 'select gt90';
                                            }
                                            else if($mod<=90 && $mod>80)
                                            {
                                                            $select = 'select gt80';
                                            }
                                            else if($mod<=80 && $mod>70)
                                            {
                                                            $select = 'select gt70';
                                            }
                                            else
                                            {
                                                            $select = 'select 0';
                                            }
                                            $from = " from salesscale a 
                                                    join salesscaledet b on a.salesscaleid = b.salesscaleid
                                                    where a.companyid = {$companyid} and b.materialgroupid ={$row1['materialgroupid']} 
                                                    and a.perioddate = '{$month1}' and a.recordstatus = {$maxscale} ";
                                            $scale = Yii::app()->db->createCommand($select.$from)->queryScalar();
                                    }
                                    else
                                    {
                                            $scale=0;
                                    }
                                    
                                    $sqlcustscale = "select paramvalue
                                                 from salesscalecat a
                                                 join salesscale b on b.salesscaleid = a.salesscaleid
                                                 where b.perioddate = '{$month1}' 
                                                 and b.companyid = {$companyid}
                                                 and b.recordstatus = {$maxscale}
                                                 and a.custcategoryid = {$rslt['custid']}";
                                    $custscale = Yii::app()->db->createCommand($sqlcustscale)->queryScalar();
                                    $this->pdf->row(array($row1['description'],
                                                        Yii::app()->format->formatNumber($row2['targetqty']),
                                                        Yii::app()->format->formatCurrency(($row2['targetharga'])/$per),
                                                        Yii::app()->format->formatNumber($row2['realqty']),
                                                        Yii::app()->format->formatCurrency($row2['realharga']/$per),
                                                        Yii::app()->format->formatNumber($row2['kumqty']),
                                                        Yii::app()->format->formatCurrency($row2['kumharga']/$per),
                                                        Yii::app()->format->formatNumber($row2['kumqty'] - $row2['targetqty']),
                                                        Yii::app()->format->formatCurrency(($row2['kumharga'] - ($row2['targetharga']))/$per),
                                                        Yii::app()->format->formatNumber($mod),
                                                        Yii::app()->format->formatNumber($scale),
                                                        Yii::app()->format->formatCurrency(($scale/100*$row2['kumharga']*($custscale/100))/$per)
                                                        ));
                                        $totaltarget2 += ($row2['targetharga']  )/$per;
                                        $totalrealisasi += $row2['realharga']/$per;
                                        $totalkumulatif += $row2['kumharga']/$per;
                                        $totaldiff += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        $totalkomisi += ($scale/100*$row2['kumharga'])*($custscale/100)/$per;
                                        $totalqtykum += $row2['kumqty'];
                                        $totalqtytarget += $row2['targetqty'];
                                        $totalqtyrealisasi += $row2['realqty'];
                                        $totalqtypl += ($row2['kumqty'] - $row2['targetqty']);
                                    
                                    
                                        $totaltargetcust += ($row2['targetharga']  )/$per;
                                        $totalrealisasicust += $row2['realharga']/$per;
                                        $totalkumulatifcust += $row2['kumharga']/$per;
                                        $totaldiffcust += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        $totalkomisicust += ($scale/100*$row2['kumharga'])*($custscale/100)/$per;
                                        $totalqtykumcust += $row2['kumqty'];
                                        $totalqtytargetcust += $row2['targetqty'];
                                        $totalqtyrealisasicust += $row2['realqty'];
                                        $totalqtyplcust += ($row2['kumqty'] - $row2['targetqty']);
                                        //$this->pdf->row(array(''));
                                    $n++;
                                    if($foundrows == $n)
                                    {
                                        //$this->pdf->setY($this->pdf->getY()+0);
                                    }
                                    else
                                    {
                                        $this->pdf->checkNewPage(25);   
                                    }
                                    
                                }
                        }
                        $this->pdf->setFont('Arial','B',9);
                        $this->pdf->row(array('TOTAL '.getCatalog('custcategory').' : '.$rslt['custcategoryname'],$totalqtytargetcust, Yii::app()->format->formatCurrency($totaltargetcust),$totalqtyrealisasicust, Yii::app()->format->formatCurrency($totalrealisasicust),$totalqtykumcust, Yii::app()->format->formatCurrency($totalkumulatifcust),$totalqtyplcust, Yii::app()->format->formatCurrency($totaldiffcust),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisicust)));
                        //$this->pdf->row(array(''));
                        $this->pdf->setY($this->pdf->getY()+10);
                        //$this->pdf->checkNewPage(22);
                    }
					$this->pdf->row(array('TOTAL SALES '. $row['fullname'],$totalqtytarget, Yii::app()->format->formatCurrency($totaltarget2),$totalqtyrealisasi, Yii::app()->format->formatCurrency($totalrealisasi),$totalqtykum, Yii::app()->format->formatCurrency($totalkumulatif),$totalqtypl, Yii::app()->format->formatCurrency($totaldiff),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisi)));
					$this->pdf->row(array(''));
					$deposit = (($totalkomisi)*10/100);
                    
					$this->pdf->setwidths(array(220,25,35,30));
					$this->pdf->colalign = array('C','R','R','L');
					$this->pdf->row(array('','Deposit 10%', Yii::app()->format->formatCurrency($deposit).' = ',Yii::app()->format->formatCurrency($totalkomisi-$deposit)));
					$this->pdf->checkNewPage(25);
					$this->pdf->setwidths(array(50,50,70,70,70));
					$this->pdf->colalign = array('C','C','C','C','C');
					$this->pdf->row(array('Diperiksa Oleh', 'Disetujui Oleh     ', 'Mengetahui      ', 'Dibayar Oleh', 'Diterima Oleh'));
					$this->pdf->setY($this->pdf->getY()+12);
					$this->pdf->setwidths(array(50,50,70,70,70));
					$this->pdf->colalign = array('C','L','C','C','C');
					$this->pdf->row(array('ACC & HEAD FINANCE','HEAD MARKETING', 'BRANCH MANAGER', 'KASIR     ', 'SALES     '));
					$this->pdf->checkNewPage(-20);
			}
			$this->pdf->Output();
	
	}
	public function RekapRealisasiPenjualanPerSalesPerGroupMaterial_lama($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			//$this->no_result();
			
			$connection = Yii::app()->db;
			$this->pdf->title='REKAP REALISASI PENJUALAN PER SALES PER GROUP MATERIAL';
			$datetime = new DateTime(date($enddate));

			$this->pdf->subtitle='Target Bulan '.$datetime->format('F').' '.$datetime->format('Y').' dan '.'Realisasi s/d '.date('d-m-Y',strtotime($enddate));
			$this->pdf->AddPage('L',array(210,330));
			
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->sety($this->pdf->gety()+5);
			
			$month = date('m',strtotime($enddate));
			$year = date('Y',strtotime($enddate));
			
			$prev_month_ts1 = strtotime(''.$year.'-'.$month.'-01 -3 month');
			$prev_month_ts2 = strtotime(''.$year.'-'.$month.'-01 -1 month');
			
			$lastmonth1 = date('Y-m-d', $prev_month_ts1);
			$lastmonth2 = date('Y-m-t', $prev_month_ts2);
			
			$prev_month_ts =  strtotime($year.'-'.$month.'-01');
			$month1 = date('Y-m-d', $prev_month_ts);
			$month2 = date('Y-m-t', $prev_month_ts);
			$this->pdf->text(310,15,'Per : '.$per);
			$maxtarget = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appst')")->queryScalar();
			$maxscale = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appss')")->queryScalar();
			
			$sqlminscale = "select minscale
                        from salesscale
                        where recordstatus = getwfmaxstatbywfname('appss') and companyid = {$companyid} and perioddate = '{$month1}' ";
			$minscale = Yii::app()->db->createCommand($sqlminscale)->queryScalar();
			
			$sql = "select a.employeeid, b.fullname, salestargetid
							from salestarget a
							join employee b on b.employeeid = a.employeeid
							where recordstatus= {$maxtarget} and a.perioddate = '{$month1}' and a.companyid = {$companyid}
							and b.fullname like '%{$employee}%'";
			$result = Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($result as $row)
			{
					$totaltarget2 = 0;
					$totalqtykum = 0;
					$totalqtytarget = 0;
					$totalqtyrealisasi = 0;
					$totalqtypl = 0;
					$totalrealisasi = 0;
					$totalkumulatif = 0;
					$totalkomisi = 0;
					$totaldiff = 0;
                    $n=1;
					
					$this->pdf->SetFont('Arial','B',10);
					$this->pdf->setwidths(array(85));
					$this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                    
                    $sqlcustcategory = "select b.custcategoryname,a.custcategoryid as custid
                                       from salestargetdet a
                                       join custcategory b on b.custcategoryid = a.custcategoryid
                                       where a.salestargetid = {$row['salestargetid']}
                                       group by b.custcategoryid";
                
                    $foundrows = Yii::app()->db->createCommand('select found_rows()')->queryScalar();
					
                    $resultcustcategory = Yii::app()->db->createCommand($sqlcustcategory)->queryAll();
                    foreach($resultcustcategory as $rslt)
                    {
                        $totaltargetcust = 0;
                        $totalqtykumcust = 0;
                        $totalqtytargetcust = 0;
                        $totalqtyrealisasicust = 0;
                        $totalqtyplcust = 0;
                        $totalrealisasicust = 0;
                        $totalkumulatifcust = 0;
                        $totalkomisicust = 0;
                        $totaldiffcust = 0;
                        
                        $sqlpencapaian = "select sum(kumharga)/sum(harga)*100 from (
														select ifnull(sum(qty*price),0) as harga,
														ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
														from invoice a
														join giheader b on a.giheaderid = b.giheaderid
														join gidetail c on c.giheaderid = b.giheaderid
														join soheader d on d.soheaderid = b.soheaderid
														join product e on e.productid = c.productid
														join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
														where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
														and d.employeeid = {$row['employeeid']} and g.custcategoryid = {$rslt['custid']}),0) as kumharga
														from salestarget b
														join salestargetdet a on a.salestargetid = b.salestargetid
														join employee d on d.employeeid = b.employeeid
														where b.employeeid = {$row['employeeid']} and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} and a.custcategoryid = {$rslt['custid']}
														union
														select sum(harga) as harga, sum(kumharga) as kumharga from (
														select 0 as harga,-1*sum(a.qty*a.price) as kumharga
														from notagirpro a
														join notagir b on b.notagirid = a.notagirid
														join gireturdetail c on c.gireturdetailid = a.gireturdetailid
														join giretur d on d.gireturid = c.gireturid
														join giheader e on e.giheaderid = d.giheaderid
														join soheader f on f.soheaderid = e.soheaderid
														join product g on g.productid = a.productid
                                                        join addressbook h on h.addressbookid = f.addressbookid
														where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid = {$row['employeeid']}
														and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and h.custcategoryid = {$rslt['custid']}) x 
														) z ";
                        $h = Yii::app()->db->createCommand($sqlpencapaian)->queryScalar();
                        
                        $this->pdf->setFont('Arial','B',10);
                        $this->pdf->setY($this->pdf->getY());
                        $this->pdf->row(array(getCatalog('custcategory'). ' = '. $rslt['custcategoryname']));
                        $this->pdf->colalign = array('C','C','C','C','C','C','C','C');
                        $this->pdf->setwidths(array(70,45,45,45,45,15,15,30));
                        $this->pdf->colheader = array('Sales dan Kelompok Barang',
                                                'Target Bulan ini',
                                                'Realisasi Hari ini',
                                                'Realisasi Kumulatif',
                                                '+ / -',
                                                'Penc.',
                                                'Skala',
                                                'Upah Tambahan');
                        $this->pdf->RowHeader();
                        $this->pdf->coldetailalign = array('L','C','C','C','C','C','C');
                        $this->pdf->setwidths(array(70,15,30,15,30,15,30,15,30,15,15,30));
                        //$this->pdf->row(array('','Qty','Rp','Qty','Rp','Qty','Rp','Qty','Rp','RP','Rp','Rp'));
                        $this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R','R','R','R');
                        
                        $matgroup = "select z.parentmatgroupid as materialgroupid, (select description from materialgroup where materialgroupid=z.parentmatgroupid) as description
                        from salestargetdet za
                        join (select parentmatgroupid,materialgroupid,description from materialgroup zx where zx.isfg=0 and zx.recordstatus=1) z on z.materialgroupid = za.materialgroupid
                        join salestarget zc on zc.salestargetid = za.salestargetid
                        where za.salestargetid = {$row['salestargetid']}
                        and za.custcategoryid={$rslt['custid']} and zc.companyid={$companyid} and zc.perioddate = '{$month1}'
                        group by z.parentmatgroupid
                        union 
                        select h.materialgroupid, h.description
                        from invoice a
                        join giheader b on a.giheaderid = b.giheaderid
                        join gidetail c on c.giheaderid = b.giheaderid
                        join soheader d on d.soheaderid = b.soheaderid
                        join product e on e.productid = c.productid
                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                        join addressbook i on i.addressbookid = d.addressbookid
                        join materialgroup g on g.materialgroupid = f.materialgroupid
                        join materialgroup h on h.materialgroupid = g.parentmatgroupid
                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                        and d.employeeid = {$row['employeeid']} and h.isfg=1 and i.custcategoryid = {$rslt['custid']}
                        group by h.materialgroupid 
                        union
                        select xi.materialgroupid, xi.description
                        from notagirpro x
                        join notagir `xa` on `xa`.notagirid = x.notagirid
                        join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                        join giretur xc on xc.gireturid = xb.gireturid
                        join giheader xd on xd.giheaderid = xc.giheaderid
                        join soheader xe on xe.soheaderid = xd.soheaderid
                        join product xf on xf.productid = x.productid
                        join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                        join addressbook xj on xj.addressbookid = xe.addressbookid
                        join materialgroup xh on xh.materialgroupid = xg.materialgroupid
                        join materialgroup xi on xi.materialgroupid = xh.parentmatgroupid
                        where xc.companyid = {$companyid} and xc.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 
                        and xe.employeeid = {$row['employeeid']} and xi.isfg=1 and xj.custcategoryid = {$rslt['custid']}
                        group by xi.materialgroupid";
                        $material = Yii::app()->db->createCommand($matgroup)->queryAll();
                        foreach($material as $row1)
                        {		

                                $sql1 = "select sum(qty) as targetqty, sum(harga) as targetharga, sum(realqty) as realqty, sum(realharga) as realharga, sum(kumqty) as kumqty, sum(kumharga) as kumharga from (
                                                select ifnull(sum(a.qty),0) as qty,
                                                ifnull(sum(qty*price),0) as harga,
                                                 ifnull((select sum(`xb`.qty)
                                                        from giheader `xa`
                                                        join gidetail xb on `xa`.giheaderid = xb.giheaderid
                                                        join soheader xs on xs.soheaderid = `xa`.soheaderid
                                                        join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                        join addressbook xd on xd.addressbookid = xs.addressbookid
                                                        where `xa`.recordstatus = 3 and xs.employeeid = {$row['employeeid']} and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) and xs.companyid = {$companyid} and `xa`.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xd.custcategoryid = {$rslt['custid']}),0) as realqty,
                                                ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                        from invoice a
                                                        join giheader b on a.giheaderid = b.giheaderid
                                                        join gidetail c on c.giheaderid = b.giheaderid
                                                        join soheader d on d.soheaderid = b.soheaderid
                                                        join product e on e.productid = c.productid
                                                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                                                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and d.employeeid = {$row['employeeid']}
                                                        and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']}) and g.custcategoryid = {$rslt['custid']}),0) as realharga,
                                                ifnull((select sum(`xb`.qty)
                                                        from giheader `xa`
                                                        join gidetail xb on `xa`.giheaderid = xb.giheaderid
                                                        join soheader xs on xs.soheaderid = `xa`.soheaderid
                                                        join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                        join addressbook xd on xd.addressbookid = xs.addressbookid
                                                        where `xa`.recordstatus = 3 and xs.companyid = {$companyid} and xs.employeeid = {$row['employeeid']} and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) and `xa`.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xd.custcategoryid = {$rslt['custid']}),0) as kumqty,
                                             ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                        from invoice a
                                                        join giheader b on a.giheaderid = b.giheaderid
                                                        join gidetail c on c.giheaderid = b.giheaderid
                                                        join soheader d on d.soheaderid = b.soheaderid
                                                        join product e on e.productid = c.productid
                                                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                                                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and d.employeeid = {$row['employeeid']}
                                                        and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']}) and g.custcategoryid = {$rslt['custid']}),0) as kumharga
                                                from salestarget b
                                                join salestargetdet a on a.salestargetid = b.salestargetid
                                                join materialgroup c on c.materialgroupid = a.materialgroupid
                                                join employee d on d.employeeid = b.employeeid
                                                where b.employeeid = {$row['employeeid']} and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} and a.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) and a.custcategoryid = {$rslt['custid']}
                                                union

                              select 0 as qty,0 as harga,
                                                        ifnull((select -1*sum(x.qty)
                                                                from notagirpro x
                                                                join notagir `xa` on `xa`.notagirid = x.notagirid
                                                                join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                join giretur xc on xc.gireturid = xb.gireturid
                                                                join giheader xd on xd.giheaderid = xc.giheaderid
                                                                join soheader xe on xe.soheaderid = xd.soheaderid
                                                                join product xf on xf.productid = x.productid
                                                                join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                join addressbook xh on xh.addressbookid = xe.addressbookid
                                                                where xc.companyid = {$companyid} and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 and xe.employeeid = {$row['employeeid']} and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) and xh.custcategoryid = {$rslt['custid']}),0) as realqty,
                                                        ifnull((select -1*sum(x.qty*x.price)
                                                                from notagirpro x
                                                                join notagir `xa` on `xa`.notagirid = x.notagirid
                                                                join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                join giretur xc on xc.gireturid = xb.gireturid
                                                                join giheader xd on xd.giheaderid = xc.giheaderid
                                                                join soheader xe on xe.soheaderid = xd.soheaderid
                                                                join product xf on xf.productid = x.productid
                                                                join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                join addressbook xh on xh.addressbookid = xe.addressbookid
                                                                where xc.companyid = {$companyid}  and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 and xe.employeeid = {$row['employeeid']} and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) and xh.custcategoryid = {$rslt['custid']}),0) as realharga,
                                                         ifnull(-1*sum(a.qty),0) as kumqty,
                                                        ifnull(-1*sum(a.qty*a.price),0) as kumharga
                                                        from notagirpro a
                                                        join notagir b on b.notagirid = a.notagirid
                                                        join gireturdetail c on c.gireturdetailid = a.gireturdetailid
                                                        join giretur d on d.gireturid = c.gireturid
                                                        join giheader e on e.giheaderid = d.giheaderid
                                                        join soheader f on f.soheaderid = e.soheaderid
                                                        join product g on g.productid = a.productid
                                                        join productplant h on h.productid = g.productid and h.unitofissue = a.uomid and h.slocid = a.slocid
                                                        join addressbook i on i.addressbookid = f.addressbookid
                                                        join custcategory j on j.custcategoryid = i.custcategoryid
                                                        where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid = {$row['employeeid']}
                                                        and h.materialgroupid  in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                                                        and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and j.custcategoryid = ".$rslt['custid']."
                                                ) z ";

                                $res1 = Yii::app()->db->createCommand($sql1)->queryAll();
                                /*
                                $this->pdf->SetFont('Arial','B',10);
                                $this->pdf->setwidths(array(85));
                                $this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                                */
                                $mod = 0;
                                foreach($res1 as $row2)
                                {
                                    $this->pdf->SetFont('Arial','',8);
                                    $this->pdf->setwidths(array(70,15,30,15,30,15,30,15,30,15,15,30));

                                    //if($row2['targetharga']*$row2['targetqty']==0)
                                    if($row2['targetqty']==0)
                                    {
                                                    $mod = 0;
                                    }
                                    else
                                    {
                                                    $mod = ($row2['kumqty']/$row2['targetqty'])*100;
                                                    //$mod = 1;
                                    }

                                    if($row2['targetqty']==0 && $row2['kumqty']>0)
                                    {
                                            $mod = 75;
                                    }

                                    if($h>=$minscale)
                                    {
                                            //$this->pdf->setbordercell(array('B','B','B','B','B','B','B','B','B','B','B','B','B','B'));
                                            if($mod>120)
                                            {
                                                            $select = 'select gt120';
                                            }
                                            else if($mod<=120 && $mod>100)
                                            {
                                                            $select = 'select gt100';
                                            }
                                            else if($mod<=100 & $mod>90)
                                            {
                                                            $select = 'select gt90';
                                            }
                                            else if($mod<=90 && $mod>80)
                                            {
                                                            $select = 'select gt80';
                                            }
                                            else if($mod<=80 && $mod>70)
                                            {
                                                            $select = 'select gt70';
                                            }
                                            else
                                            {
                                                            $select = 'select 0';
                                            }
                                            $from = " from salesscale a 
                                                    join salesscaledet b on a.salesscaleid = b.salesscaleid
                                                    where a.companyid = {$companyid} and b.materialgroupid ={$row1['materialgroupid']} 
                                                    and a.perioddate = '{$month1}' and a.recordstatus = {$maxscale} ";
                                            $scale = Yii::app()->db->createCommand($select.$from)->queryScalar();
                                    }
                                    else
                                    {
                                            $scale=0;
                                    }
                                    
                                    $sqlcustscale = "select paramvalue
                                                 from salesscalecat a
                                                 join salesscale b on b.salesscaleid = a.salesscaleid
                                                 where b.perioddate = '{$month1}' 
                                                 and b.companyid = {$companyid}
                                                 and b.recordstatus = {$maxscale}
                                                 and a.custcategoryid = {$rslt['custid']}";
                                    $custscale = Yii::app()->db->createCommand($sqlcustscale)->queryScalar();
                                    $this->pdf->row(array($row1['description'],
                                                        Yii::app()->format->formatNumber($row2['targetqty']),
                                                        Yii::app()->format->formatCurrency(($row2['targetharga'])/$per),
                                                        Yii::app()->format->formatNumber($row2['realqty']),
                                                        Yii::app()->format->formatCurrency($row2['realharga']/$per),
                                                        Yii::app()->format->formatNumber($row2['kumqty']),
                                                        Yii::app()->format->formatCurrency($row2['kumharga']/$per),
                                                        Yii::app()->format->formatNumber($row2['kumqty'] - $row2['targetqty']),
                                                        Yii::app()->format->formatCurrency(($row2['kumharga'] - ($row2['targetharga']))/$per),
                                                        Yii::app()->format->formatNumber($mod),
                                                        Yii::app()->format->formatNumber($scale),
                                                        Yii::app()->format->formatCurrency(($scale/100*$row2['kumharga']*($custscale/100))/$per)
                                                        ));
                                        $totaltarget2 += ($row2['targetharga']  )/$per;
                                        $totalrealisasi += $row2['realharga']/$per;
                                        $totalkumulatif += $row2['kumharga']/$per;
                                        $totaldiff += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        $totalkomisi += ($scale/100*$row2['kumharga'])*($custscale/100)/$per;
                                        $totalqtykum += $row2['kumqty'];
                                        $totalqtytarget += $row2['targetqty'];
                                        $totalqtyrealisasi += $row2['realqty'];
                                        $totalqtypl += ($row2['kumqty'] - $row2['targetqty']);
                                    
                                    
                                        $totaltargetcust += ($row2['targetharga']  )/$per;
                                        $totalrealisasicust += $row2['realharga']/$per;
                                        $totalkumulatifcust += $row2['kumharga']/$per;
                                        $totaldiffcust += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        $totalkomisicust += ($scale/100*$row2['kumharga'])*($custscale/100)/$per;
                                        $totalqtykumcust += $row2['kumqty'];
                                        $totalqtytargetcust += $row2['targetqty'];
                                        $totalqtyrealisasicust += $row2['realqty'];
                                        $totalqtyplcust += ($row2['kumqty'] - $row2['targetqty']);
                                        //$this->pdf->row(array(''));
                                    $n++;
                                    if($foundrows == $n)
                                    {
                                        //$this->pdf->setY($this->pdf->getY()+0);
                                    }
                                    else
                                    {
                                        $this->pdf->checkNewPage(25);   
                                    }
                                    
                                }
                        }
                        $this->pdf->setFont('Arial','B',9);
                        $this->pdf->row(array('TOTAL '.getCatalog('custcategory').' : '.$rslt['custcategoryname'],$totalqtytargetcust, Yii::app()->format->formatCurrency($totaltargetcust),$totalqtyrealisasicust, Yii::app()->format->formatCurrency($totalrealisasicust),$totalqtykumcust, Yii::app()->format->formatCurrency($totalkumulatifcust),$totalqtyplcust, Yii::app()->format->formatCurrency($totaldiffcust),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisicust)));
                        //$this->pdf->row(array(''));
                        $this->pdf->setY($this->pdf->getY()+10);
                        //$this->pdf->checkNewPage(22);
                    }
					$this->pdf->row(array('TOTAL SALES '. $row['fullname'],$totalqtytarget, Yii::app()->format->formatCurrency($totaltarget2),$totalqtyrealisasi, Yii::app()->format->formatCurrency($totalrealisasi),$totalqtykum, Yii::app()->format->formatCurrency($totalkumulatif),$totalqtypl, Yii::app()->format->formatCurrency($totaldiff),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisi)));
					$this->pdf->row(array(''));
					$deposit = (($totalkomisi)*10/100);
                    
					$this->pdf->setwidths(array(220,25,35,30));
					$this->pdf->colalign = array('C','R','R','L');
					$this->pdf->row(array('','Deposit 10%', Yii::app()->format->formatCurrency($deposit).' = ',Yii::app()->format->formatCurrency($totalkomisi-$deposit)));
					$this->pdf->checkNewPage(25);
					$this->pdf->setwidths(array(50,50,70,70,70));
					$this->pdf->colalign = array('C','C','C','C','C');
					$this->pdf->row(array('Diperiksa Oleh', 'Disetujui Oleh     ', 'Mengetahui      ', 'Dibayar Oleh', 'Diterima Oleh'));
					$this->pdf->setY($this->pdf->getY()+12);
					$this->pdf->setwidths(array(50,50,70,70,70));
					$this->pdf->colalign = array('C','L','C','C','C');
					$this->pdf->row(array('ACC & HEAD FINANCE','HEAD MARKETING', 'BRANCH MANAGER', 'KASIR     ', 'SALES     '));
					$this->pdf->checkNewPage(50);
			}
			$this->pdf->Output();
	
	}
	//72
	public function RincianRealisasiPenjualanPerSalesPerGroupMaterial($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			//$this->no_result();
			
			$connection = Yii::app()->db;
			$this->pdf->title='RINCIAN REALISASI PENJUALAN PER SALES PER GROUP MATERIAL PER SUB MATERIAL GROUP PER BARANG';
			$datetime = new DateTime(date(Yii::app()->params['datetodb'], strtotime($enddate)));

			$this->pdf->subtitle='TARGET BULAN : '.$datetime->format('m').' '.$datetime->format('Y');
			$this->pdf->AddPage('L',array(210,350));
			
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->sety($this->pdf->gety()+5);
			
			$this->pdf->text(310,15,'Per : '.$per);

			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(65,10,25,10,15,25,10,15,20,10,10,20,5,5,21,10,20));
			$this->pdf->colheader = array('                   Kelompok                       Barang     ',
																		'                 ','Target Bulan ini','           ',
																		'                 ','Realisasi Hari ini','           ',
																		'                 ','Realisasi Kumulatif','           ',
																		'                 ','      + / -              ','     ',
																		'    ','Pencapaian %','           ',
																		'Skala                   ');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(35,20,30,20,30,20,30,20,30,20,20,20));
			
			$month = date('m',strtotime($enddate));
			$year = date('Y',strtotime($enddate));
			
			$prev_month_ts1 = strtotime(''.$year.'-'.$month.'-01 -3 month');
			$prev_month_ts2 = strtotime(''.$year.'-'.$month.'-01 -1 month');
			
			$lastmonth1 = date('Y-m-d', $prev_month_ts1);
			$lastmonth2 = date('Y-m-t', $prev_month_ts2);
			
			$prev_month_ts =  strtotime($year.'-'.$month.'-01');
			$month1 = date('Y-m-d', $prev_month_ts);
			$month2 = date('Y-m-t', $prev_month_ts);
			
			$sqlsales = "select a.employeeid, b.fullname
							from soheader a
							join employee b on a.employeeid = b.employeeid
							where a.sodate between '".$datetime->format('Y')."-".$datetime->format('m')."-01' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							and a.recordstatus = 6 and a.companyid = {$companyid}
							and b.fullname ".(isset($employee)&&$employee!='' ? "like '%".$employee."%'" : "like '%%'")."
							group by a.employeeid
							union
							select a.employeeid, b.fullname
							from salestarget a
							join employee b on b.employeeid = a.employeeid
							where a.companyid = {$companyid} 
							and a.perioddate between '".$datetime->format('Y')."-".$datetime->format('m')."-01' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							and a.recordstatus=3 
							and b.fullname ".(isset($employee)&&$employee!='' ? "like '%".$employee."%'" : "like '%%'")."";
			$resultsales = Yii::app()->db->createCommand($sqlsales)->queryAll();
			
			foreach($resultsales as $sales)
			{
					$totalqtytargetsales = 0;
					$totalqtyrealisasisales = 0;
					$totalqtykumulatifsales = 0;
					$totaltargetsales = 0;
					$totalrealisasisales = 0;
					$totalkumulatifsales = 0;
					$totalkomisisales = 0;
					$totaldiffqtysales = 0;
					$totaldiffhargasales = 0;
					
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->setwidths(array(150));
					$this->pdf->row(array('NAMA SALES : '.$sales['fullname']));
					
					//$this->pdf->row(array('','Qty','Rp','Qty','Rp','Qty','Rp','Qty','Rp','RP','Rp','Rp'));
					//$this->pdf->coldetailalign = array('L','L','R','C','R','C','R','C','R','C','C','C');
					
					/*
					$sql = "select c.materialgroupid,description 
								 from materialgroup c
								 where isfg=1 
								 order by materialgroupcode asc";
					*/
					
					$sql = "select x.materialgroupid, x.description from (select distinct c.materialgroupid,description, c.parentmatgroupid
								 from materialgroup c
								 join salestargetdet b on b.materialgroupid = c.materialgroupid
								 join salestarget a on a.salestargetid = b.salestargetid
								 where a.employeeid = {$sales['employeeid']} and a.companyid = {$companyid} and a.perioddate = '{$month1}'
								 union
								 select distinct xd.materialgroupid, xd.description, xd.parentmatgroupid
				from invoice x
				join giheader `xa` on `xa`.giheaderid = x.giheaderid
				join gidetail xb on `xa`.giheaderid = xb.giheaderid
				join soheader xs use key(ix_soheader_emp_com_rec) on xs.soheaderid = `xa`.soheaderid
				join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
									join materialgroup xd on xd.materialgroupid = xc.materialgroupid
				where `x`.recordstatus = 3 and xs.employeeid = {$sales['employeeid']} and xs.companyid = {$companyid} and 
									`x`.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
								 ) z
								 join materialgroup x on x.materialgroupid = z.parentmatgroupid
								 where x.isfg = 1
								 group by x.materialgroupid ";
							
					$result = Yii::app()->db->createCommand($sql)->queryAll();

					foreach($result as $row)
					{
							$this->pdf->setFont('Arial','B',9);
							$this->pdf->setwidths(array(150));
							$this->pdf->row(array('BARANG JADI '.$row['description']));
							$sql1 = "select c.materialgroupid, c.description
											 from materialgroup c
											 where c.parentmatgroupid = ".$row['materialgroupid'];
							$res1 = Yii::app()->db->createCommand($sql1)->queryAll();
							foreach($res1 as $row1)
							{
									$this->pdf->SetFont('Arial','',8);
									$this->pdf->setwidths(array(150));
									//$this->pdf->row(array('   >> '.$row1['description']));
									
									$totalqtytarget = 0;
									$totalqtyrealisasi = 0;
									$totalqtykumulatif = 0;
									$totaltarget = 0;
									$totalrealisasi = 0;
									$totalkumulatif = 0;
									$totalkomisi = 0;
									$totaldiffqty = 0;
									$totaldiffharga = 0;
																										 
									$sql2 = "select productid, productname, sum(targetqty) as targetqty, sum(targetharga) as targetharga, sum(realqty) as realqty,sum(realharga) as realharga, sum(kumqty) as kumqty, sum(kumharga) as kumharga from (select b.productid, d.productname, b.qty as targetqty,
											ifnull((select sum(getamountdiscso(xd.soheaderid,xc.sodetailid,xc.qty))/sum(xc.qty)
															from invoice xa
															join giheader xb on xa.giheaderid = xb.giheaderid
															join gidetail xc on xc.giheaderid = xb.giheaderid
															join soheader xd on xd.soheaderid = xb.soheaderid
															join product xe on xe.productid = xc.productid
															join productplant xf on xf.productid = xe.productid and xf.slocid = xc.slocid and xf.unitofissue = xc.unitofmeasureid
															where xd.companyid = 1 and xa.recordstatus = 3 and xa.invoicedate between '{$lastmonth1}' and '{$lastmonth2}'
															-- and xd.employeeid = {$sales['employeeid']}
															and xf.materialgroupid = {$row1['materialgroupid']}),0) as targetharga,
													ifnull((select sum(xb.qty)
															from invoice x
															join giheader `xa` on `xa`.giheaderid = x.giheaderid
															join gidetail xb on `xa`.giheaderid = xb.giheaderid
															join soheader xs on xs.soheaderid = `xa`.soheaderid
															join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
															where `x`.recordstatus = 3 and xs.employeeid = {$sales['employeeid']} and xc.materialgroupid = {$row1['materialgroupid']} and xs.companyid = {$companyid} and `x`.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xb.productid = b.productid),0) as realqty,
													ifnull((select sum(getamountdiscso(xd.soheaderid,xc.sodetailid,xc.qty))
															from invoice xa
															join giheader xb on xa.giheaderid = xb.giheaderid
															join gidetail xc on xc.giheaderid = xb.giheaderid
															join soheader xd on xd.soheaderid = xb.soheaderid
															join product xe on xe.productid = xc.productid
															join productplant xf on xf.productid = xe.productid and xf.slocid = xc.slocid and xf.unitofissue = xc.unitofmeasureid
															where xd.companyid = {$companyid} and xa.recordstatus = 3 and xa.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
															and xd.employeeid = {$sales['employeeid']}
															and xf.materialgroupid = {$row1['materialgroupid']} and xc.productid = b.productid ),0) as realharga,
													ifnull((select sum(`xb`.qty)
															from invoice x
															join giheader `xa` on `xa`.giheaderid = x.giheaderid
															join gidetail xb on `xa`.giheaderid = xb.giheaderid
															join soheader xs on xs.soheaderid = `xa`.soheaderid
															join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
															where `x`.recordstatus = 3 and xs.companyid = {$companyid} and xs.employeeid = {$sales['employeeid']} and xc.materialgroupid = {$row1['materialgroupid']} and `x`.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xb.productid = b.productid),0) as kumqty,
													ifnull((select sum(getamountdiscso(xd.soheaderid,xc.sodetailid,xc.qty))
															from invoice xa
															join giheader xb on xa.giheaderid = xb.giheaderid
															join gidetail xc on xc.giheaderid = xb.giheaderid
															join soheader xd on xd.soheaderid = xb.soheaderid
															join product xe on xe.productid = xc.productid
															join productplant xf on xf.productid = xe.productid and xf.slocid = xc.slocid and xf.unitofissue = xc.unitofmeasureid
															where xd.companyid = {$companyid} and xa.recordstatus = 3 and xa.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
															and xd.employeeid = {$sales['employeeid']}
															and xf.materialgroupid = {$row1['materialgroupid']} and xc.productid = b.productid),0) as kumharga
													from salestarget a
													join salestargetdet b on a.salestargetid = b.salestargetid
													join productplant c on c.productid = b.productid and c.slocid = b.slocid and c.unitofissue = b.unitofmeasureid
													join product d on d.productid = b.productid
													where a.companyid = {$companyid} and a.recordstatus=3 and a.perioddate = '{$month1}' and a.employeeid = {$sales['employeeid']} and c.materialgroupid = {$row1['materialgroupid']}

													union

													select xd.productid,xd.productname,0 as qty,0 as targetharga,
													ifnull((select sum(`b`.qty)
															from giheader `a`
															join gidetail b on `a`.giheaderid = b.giheaderid
															join soheader s on s.soheaderid = `a`.soheaderid
															join productplant c on c.productid = b.productid and c.slocid = b.slocid and c.unitofissue = b.unitofmeasureid
															where `a`.recordstatus = 3 and s.employeeid = {$sales['employeeid']} and c.materialgroupid = {$row1['materialgroupid']} and s.companyid = {$companyid} 
															and `a`.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
															and b.productid not in(
															select productid 
															from salestarget x 
															join salestargetdet y on x.salestargetid = y.salestargetid
															where x.employeeid = {$sales['employeeid']} and x.recordstatus=3 and x.perioddate = '{$month1}' and x.companyid = {$companyid}) and b.productid = xa.productid),0) as realqty,
													ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
															from invoice a
															join giheader b on a.giheaderid = b.giheaderid
															join gidetail c on c.giheaderid = b.giheaderid
															join soheader d on d.soheaderid = b.soheaderid
															join product e on e.productid = c.productid
															join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
															where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
															and d.employeeid = {$sales['employeeid']}
															and f.materialgroupid = {$row1['materialgroupid']} 
															and c.productid not in(
															select productid 
															from salestarget x 
															join salestargetdet y on x.salestargetid = y.salestargetid
															where x.employeeid = {$sales['employeeid']} and x.recordstatus=3 and x.perioddate = '{$month1}'and x.companyid = {$companyid}) and c.productid = xa.productid),0) as realharga,
													ifnull((select sum(`b`.qty)
															from giheader `a`
															join gidetail b on `a`.giheaderid = b.giheaderid
															join soheader s on s.soheaderid = `a`.soheaderid
															join productplant c on c.productid = b.productid and c.slocid = b.slocid and c.unitofissue = b.unitofmeasureid
															where `a`.recordstatus = 3 and s.employeeid = {$sales['employeeid']} and c.materialgroupid = {$row1['materialgroupid']} and s.companyid = {$companyid} and `a`.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
															and b.productid not in(
															select productid 
															from salestarget x 
															join salestargetdet y on x.salestargetid = y.salestargetid
															where x.employeeid = {$sales['employeeid']} and x.recordstatus=3 and x.perioddate = '{$month1}' and x.companyid = {$companyid}) and b.productid = xa.productid ),0) as kumqty,
													ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
															from invoice a
															join giheader b on a.giheaderid = b.giheaderid
															join gidetail c on c.giheaderid = b.giheaderid
															join soheader d on d.soheaderid = b.soheaderid
															join product e on e.productid = c.productid
															join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
															where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
															and d.employeeid = {$sales['employeeid']}
															and f.materialgroupid = {$row1['materialgroupid']} 
															and c.productid not in(
															select productid 
															from salestarget x 
															join salestargetdet y on x.salestargetid = y.salestargetid
															where x.employeeid = {$sales['employeeid']} and x.recordstatus=3 and x.perioddate = '{$month1}'and x.companyid = {$companyid})  and c.productid = xa.productid),0) as kumharga 
													from gidetail xa
													join giheader xb on xb.giheaderid = xa.giheaderid
													join invoice xe on xe.giheaderid = xb.giheaderid
													join soheader xc on xc.soheaderid = xb.soheaderid
													join product xd on xd.productid = xa.productid
													where xc.companyid = {$companyid} and xe.recordstatus = 3 and xc.employeeid = {$sales['employeeid']} and xb.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' having kumqty <> 0  
													
													union

													select i.productid,i.productname,0 as targetqty,0 as targetharga,
													ifnull((select -1*sum(x.qty)
															from notagirpro x
															join notagir `xa` on `xa`.notagirid = x.notagirid
															join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
															join giretur xc on xc.gireturid = xb.gireturid
															join giheader xd on xd.giheaderid = xc.giheaderid
															join soheader xe on xe.soheaderid = xd.soheaderid
															where xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 and xe.employeeid = {$sales['employeeid']} and xc.companyid = {$companyid} and x.productid = a.productid),0) as realqty,
													ifnull((select -1*sum(x.qty*x.price)
															from notagirpro x
															join notagir `xa` on `xa`.notagirid = x.notagirid
															join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
															join giretur xc on xc.gireturid = xb.gireturid
															join giheader xd on xd.giheaderid = xc.giheaderid
															join soheader xe on xe.soheaderid = xd.soheaderid
															where xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 and xe.employeeid = {$sales['employeeid']} and xc.companyid = {$companyid} and x.productid = a.productid),0) as realharga,
													ifnull((select -1*sum(x.qty)
															from notagirpro x
															join notagir `xa` on `xa`.notagirid = x.notagirid
															join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
															join giretur xc on xc.gireturid = xb.gireturid
															join giheader xd on xd.giheaderid = xc.giheaderid
															join soheader xe on xe.soheaderid = xd.soheaderid
															where xc.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 and xe.employeeid = {$sales['employeeid']} and xc.companyid = {$companyid} and x.productid = a.productid),0) as kumqty,
													ifnull((select -1*sum(x.qty*x.price)
															from notagirpro x
															join notagir `xa` on `xa`.notagirid = x.notagirid
															join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
															join giretur xc on xc.gireturid = xb.gireturid
															join giheader xd on xd.giheaderid = xc.giheaderid
															join soheader xe on xe.soheaderid = xd.soheaderid
															where xc.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 and xe.employeeid = {$sales['employeeid']} and xc.companyid = {$companyid} and x.productid = a.productid ),0) as kumharga
													from notagirpro a
													join notagir b on a.notagirid = b.notagirid
													join gireturdetail c on c.gireturdetailid = a.gireturdetailid
													join giretur d on d.gireturid = c.gireturid
													join giheader e on e.giheaderid = d.giheaderid
													join gidetail g on g.giheaderid = e.giheaderid
													join soheader f on f.soheaderid = e.soheaderid
													join productplant h on h.productid = g.productid and h.unitofissue = g.unitofmeasureid and h.slocid = g.slocid
													join product i on i.productid = h.productid
													where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid = {$sales['employeeid']} 
													and h.materialgroupid = {$row1['materialgroupid']}
													and e.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
													group by a.productid
													) z group by productid 
													";
									$res2 = Yii::app()->db->createCommand($sql2)->queryAll();
									foreach($res2 as $row2)
									{
											if($row2['targetharga']== 0 or $row2['kumqty']== 0)
											{
													$mod = 0;
											}
											else
											{
													$mod = @($row2['kumqty']/$row2['targetqty'])*100;
													//$mod = 1;
											}
											//$this->pdf->setbordercell(array('B','B','B','B','B','B','B','B','B','B','B','B','B','B'));
											if($mod>=120)
											{
													$select = 'select gt120';
											}
											else if($mod>=100)
											{
													$select = 'select gt100';
											}
											else if($mod>=90)
											{
													$select = 'select gt90';
											}
											else if($mod>=80)
											{
													$select = 'select gt80';
											}
											else if($mod>=70)
											{
													$select = 'select gt70';
											}
											else
											{
													$select = 'select 0';
											}
											$from = " from salesscale a 
															join salesscaledet b on a.salesscaleid = b.salesscaleid
															where b.materialgroupid = {$row['materialgroupid']} 
															and month(a.perioddate) = month('".date(Yii::app()->params['datetodb'], strtotime($enddate))."') and a.recordstatus = 6 ";
											$scale = Yii::app()->db->createCommand($select.$from)->queryScalar();
											
											
									//$this->pdf->row(array(''));
									/*
									$this->pdf->setFont('Arial','',9);
									$this->pdf->coldetailalign = array('L','L','C','C','R','C','R','C','R','C','C','C','C');
									$this->pdf->setwidths(array(5,55,30,20,20,25,20,25,20,25,20,30,20));
									$this->pdf->row(array(''));
									$this->pdf->row(array('','TOTAL '.$row1['description'],
																									Yii::app()->format->formatNumber($totalqtytarget),
																									Yii::app()->format->formatCurrency($totaltarget),
																									Yii::app()->format->formatNumber($totalqtyrealisasi),
																									Yii::app()->format->formatCurrency($totalrealisasi),
																									Yii::app()->format->formatNumber($totalqtykumulatif),
																									Yii::app()->format->formatCurrency($totalkumulatif),
																									Yii::app()->format->formatNumber($totaldiffqty),
																									Yii::app()->format->formatCurrency($totaldiffharga),
																									'',
																									'',
																									Yii::app()->format->formatCurrency($totalkomisi)
																									));
									*/
											if($row2['targetqty']==0)
											{
													$targetqty = 1;
											}
											else
											{
													$targetqty = $row2['targetqty'];
											}
											$this->pdf->SetFont('Arial','',8);
											$this->pdf->coldetailalign = array('L','L','C','R','C','R','C','R','C','R','C','C');
											$this->pdf->setwidths(array(6,55,30,20,20,25,20,25,20,25,20,30));
											$this->pdf->row(array('>>',$row2['productname'],
																									Yii::app()->format->formatNumber($row2['targetqty']),
																									Yii::app()->format->formatCurrency($targetqty*$row2['targetharga']/$per),
																									Yii::app()->format->formatNumber($row2['realqty']),
																									Yii::app()->format->formatCurrency($row2['realharga']/$per),
																									Yii::app()->format->formatNumber($row2['kumqty']),
																									Yii::app()->format->formatCurrency($row2['kumharga']/$per),
																									Yii::app()->format->formatNumber($row2['kumqty'] - $row2['targetqty']),
																									Yii::app()->format->formatCurrency(($row2['kumharga'] - ($row2['targetharga']*$row2['targetqty']))/$per),
																									Yii::app()->format->formatNumber($mod),
																									Yii::app()->format->formatNumber($scale),
																									));
									
											$totaltarget = $totaltarget + (($row2['targetqty']*$row2['targetharga'])/$per);
											$totalrealisasi = $totalrealisasi + ($row2['realharga']/$per);
											$totalkumulatif = $totalkumulatif + ($row2['kumharga']/$per);
											$totalqtytarget = $totalqtytarget + $row2['targetqty'];
											$totalqtyrealisasi = $totalqtyrealisasi + $row2['realqty'];
											$totalqtykumulatif = $totalqtykumulatif + $row2['kumqty'];
											$totaldiffqty = $totaldiffqty + ($row2['kumqty'] - $row2['targetqty']);
											$totaldiffharga = $totaldiffharga + (($row2['kumharga'] - ($row2['targetharga']*$row2['targetqty']))/$per);
											$totalkomisi = $totalkomisi + ($scale * $row2['kumharga']/$per);
											
									}
									
									$totaltargetsales = $totaltargetsales + $totaltarget;
									$totalrealisasisales = $totalrealisasisales + $totalrealisasi;
									$totalkumulatifsales = $totalkumulatifsales + $totalkumulatif;
									$totalqtytargetsales = $totalqtytargetsales + $totalqtytarget;
									$totalqtyrealisasisales = $totalqtyrealisasisales + $totalqtyrealisasi;
									$totalqtykumulatifsales = $totalqtykumulatifsales + $totalqtykumulatif;
									$totaldiffqtysales = $totaldiffqtysales + $totaldiffqty;
									$totaldiffhargasales = $totaldiffhargasales + $totaldiffharga;
									$totalkomisisales = $totalkomisisales + $totalkomisi;
									
									
									$this->pdf->SetFont('Arial','B',8);
											$this->pdf->coldetailalign = array('L','L','C','R','C','R','C','R','C','R','C','C');
											$this->pdf->setwidths(array(5,55,30,20,20,25,20,25,20,25,20,30));
											$this->pdf->row(array('   ','TOTAL '.$row1['description'],
																						$totalqtytarget,'',
																						$totalqtyrealisasi,'',
																						$totalqtykumulatif,'',
																						$totaldiffqty,'',
																								 '',
																			));
											$this->pdf->row(array(''));
							}
								
					}
					
					 $this->pdf->row(array(''));
					$this->pdf->coldetailalign = array('L','L','C','C','R','C','R','C','R','C','C','C','C');
					$this->pdf->setwidths(array(55,5,30,20,20,25,20,25,20,25,20,30,20));
					$this->pdf->row(array('TOTAL SALES : '.$sales['fullname'],'',
																$totalqtytargetsales,Yii::app()->format->formatCurrency($totaltargetsales),
																$totalqtyrealisasisales, Yii::app()->format->formatCurrency($totalrealisasisales),
																$totalqtykumulatifsales,Yii::app()->format->formatCurrency($totalkumulatifsales),
																$totaldiffqtysales,Yii::app()->format->formatCurrency($totaldiffhargasales),
																'','',
															 Yii::app()->format->formatCurrency($totalkomisi)));
					$this->pdf->row(array(''));
			}
			$this->pdf->Output();
	}
	//73
	public function RekapPenjualanVSProduksiVSSaldoAkhir($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			//$this->no_result();
			
			$connection = Yii::app()->db;
			$this->pdf->title='REKAP PENJUALAN VS HASIL PRODUKSI VS SALDO AKHIR';
			
			$datetime = new DateTime(date(Yii::app()->params['datetodb'], strtotime($enddate)));

			$this->pdf->subtitle='TARGET BULAN : '.$datetime->format('F').' '.$datetime->format('Y');
			$this->pdf->AddPage('L','F4');
			
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->sety($this->pdf->gety()+5);
			
			$month = date('m',strtotime($enddate));
			$year = date('Y',strtotime($enddate));
			
			
			$prev_month_ts =  strtotime($year.'-'.$month.'-01');
			$month1 = date('Y-m-d', $prev_month_ts);
			
			$this->pdf->text(310,15,'Per : '.$per);

			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(35,30,10,25,10,25,10,25,10,25,25));
			
			$this->pdf->colheader = array('      Kelompok Barang',
																		'                                                   ',
																		'           ','Penjualan Hari ini','           ',
																		'Produksi Hari ini',
																		'                 ','Kumulatif Penjualan','           ',
																		'Kumulatif Produksi',
																		'Saldo                   ');
			
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','R','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(35,40,10,25,22,25,25,25,10,25,55));
			$this->pdf->row(array('','','Qty','Rp','Qty','Qty','Rp','Qty','Qty'));
			
			$totaltarget = 0;
			$totalrealisasi = 0;
			$totalkumulatif = 0;
			$totalkomisi = 0;

			if(isset($employee) && $employee!='')
            {
                $emp = "select employeeid
                        from employee
                        where fullname like '%".$employee."%' ";
                $employeeid = Yii::app()->db->createCommand($emp)->queryScalar();
                $where = ' and xs.employeeid = '.$employeeid;
            }
            else
            {
                $where = '';
            }

			//$this->pdf->row(array('','Qty','Rp','Qty','Rp','Qty','Rp','Qty','Rp','RP','Rp','Rp'));
			//$this->pdf->coldetailalign = array('L','L','R','C','R','C','R','C','R','C','C','C');

			$sql = "select materialgroupid,description from materialgroup where isfg=1 order by materialgroupcode asc";
			$result = Yii::app()->db->createCommand($sql)->queryAll();

					foreach($result as $row)
					{
							$this->pdf->setFont('Arial','B',9);
							$this->pdf->setwidths(array(150));
							$this->pdf->row(array('BARANG JADI '.$row['description']));
							$sql1 = "select materialgroupid, description
											 from materialgroup c
											 where c.parentmatgroupid = ".$row['materialgroupid'];
							$res1 = Yii::app()->db->createCommand($sql1)->queryAll();
							foreach($res1 as $row1)
							{
									$this->pdf->setFont('Arial','B',8);
									$this->pdf->setwidths(array(150));
									$this->pdf->row(array('   >> '.$row1['description']));

									$sql2 = "select b.productid, c.productname,
													ifnull((select sum(`xb`.qty)
															from giheader `xa`
															join gidetail xb on `xa`.giheaderid = xb.giheaderid
															join soheader xs on xs.soheaderid = `xa`.soheaderid
															join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
															where `xa`.recordstatus = 3 and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) and xs.companyid = {$companyid} and `xa`.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' {$where}),0)  as salestoday,
															ifnull((select GetAmountDiscSoByProduct(x.soheaderid,y.productid)
															from soheader x
															join sodetail y on x.soheaderid = y.soheaderid
															where x.soheaderid = a.soheaderid and y.sodetailid = b.sodetailid
															and x.recordstatus = 6
															),0) as hargaqty, a.soheaderid,
															ifnull((select sum(qtyoutput)
															from productoutput x
															join productoutputfg y on x.productoutputid = y.productoutputid
															where x.productoutputdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and y.productid = b.productid
															and x.recordstatus = 3 
															),0) as produksihariini,
															ifnull((select sum(y.qty)
															from giheader x 
															join gidetail y on x.giheaderid = y.giheaderid
															where x.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
															and x.recordstatus = 3 and y.productid = b.productid),0) as kumsales,
															ifnull((select sum(y.qtyoutput)
															from productoutput x
															join productoutputfg y on x.productoutputid = y.productoutputid
															where x.recordstatus = 3 and x.productoutputdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
															and y.productid = b.productid),0) as kumproduksi
													from giheader a
													join gidetail b on a.giheaderid = b.giheaderid
													join product c on c.productid = b.productid
													join productplant d on d.productid = c.productid and b.unitofmeasureid = d.unitofissue and b.slocid = d.slocid
													where a.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and d.materialgroupid = {$row1['materialgroupid']}
													group by b.productid";
									$res2 = Yii::app()->db->createCommand($sql2)->queryAll();
									foreach($res2 as $row2)
									{
										 
											$this->pdf->setFont('Arial','',8);
											$this->pdf->coldetailalign = array('L','L','R','C','C','C','C','C','C','C');
											//$this->pdf->setwidths(array(5,55,30,20,30,20,30,20,30,20));
											$this->pdf->setwidths(array(5,55,25,25,22,25,25,25,10,25,55));
										 
											$this->pdf->row(array('',''.$row2['productname'],
																							Yii::app()->format->formatNumber($row2['salestoday']),
																							Yii::app()->format->formatCurrency($row2['hargaqty']*$row2['salestoday']/$per),
																							Yii::app()->format->formatNumber($row2['produksihariini']),
																							Yii::app()->format->formatNumber($row2['kumsales']),
																							Yii::app()->format->formatCurrency($row2['hargaqty']),
																							Yii::app()->format->formatNumber($row2['kumproduksi']),
																							Yii::app()->format->formatNumber($row2['kumproduksi']-$row2['produksihariini'])
																						));
									}

							}
							$this->pdf->row(array(''));
					//}
			}
			$this->pdf->Output();
	}
	//74
	public function RekapTTNTPerDokumenStatusBelumMax($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.ttntid, a.docno, a.docdate, a.companyid, e.fullname,a.recordstatus, a.statusname, b.companyname
		from ttnt a
        join company b on b.companyid = a.companyid
        join employee e on e.employeeid = a.employeeid
        where a.docdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
        and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."'
        and a.recordstatus < getwfmaxstatbywfname('appttnt')
        and a.recordstatus <>0
        and a.companyid=".$companyid." ";
		
			$dataReader = Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap TTNT Per Dokumen Belum Status Max';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			$this->pdf->setFont('Arial','B',9);
                        $this->pdf->sety($this->pdf->gety()+10);
			$this->pdf->colalign = array('C','C','C','C','C','L');
			$this->pdf->setwidths(array(10,20,25,25,75,25));
			$this->pdf->colheader = array('No','ID','No Dokumen','Tanggal','Sales','Status');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('C','C','C','C','L','C');		
			$totalnominal1=0;$i=0;$totaldisc1=0;$totaljumlah1=0;
			foreach($dataReader as $row)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,$row['ttntid'],$row['docno'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row['docdate'])),
					$row['fullname'], $row['statusname']));
               
				$this->pdf->checkPageBreak(20);
			}
			
			$this->pdf->Output();
	}
	//75
	public function RekapTTFPerDokumenStatusBelumMax($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.ttfid, a.docno, a.docdate, a.companyid, e.fullname,a.recordstatus, a.statusname, b.companyname
		from ttf a
        join company b on b.companyid = a.companyid
        join employee e on e.employeeid = a.employeeid
        where a.docdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
        and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."'
        and a.recordstatus < getwfmaxstatbywfname('appttf') 
        and a.recordstatus <> 0
        and a.companyid=".$companyid." ";
		
			$dataReader = Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap TTF Per Dokumen Belum Status Max';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			$this->pdf->setFont('Arial','B',9);
                        $this->pdf->sety($this->pdf->gety()+10);
			$this->pdf->colalign = array('C','C','C','C','C','L');
			$this->pdf->setwidths(array(10,20,25,25,75,25));
			$this->pdf->colheader = array('No','ID','No Dokumen','Tanggal','Sales','Status');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','C','C','C','L','C');		
			$totalnominal1=0;$i=0;$totaldisc1=0;$totaljumlah1=0;
			foreach($dataReader as $row)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,$row['ttfid'],$row['docno'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row['docdate'])),
					$row['fullname'], $row['statusname']));
               
				$this->pdf->checkPageBreak(20);
			}
			
			$this->pdf->Output();
	}
	//76
	public function RekapSkalaKomisiPenjualanPerDokumenStatusBelumMax($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct a.salesscaleid,a.docno,a.docdate,a.perioddate,a.statusname
						from salesscale a
                        join salesscaledet b on a.salesscaleid=b.salesscaleid
                        join materialgroup c on b.materialgroupid=c.materialgroupid
						where a.docdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                        and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and a.recordstatus < getwfmaxstatbywfname('appss')
                        and a.recordstatus <> 0
						and a.companyid like '".$companyid."' ";
        
		$dataReader = Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Skala Upah Tambahan Penjualan Per Dokumen Belum Status Max';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->setFont('Arial','B',8);
											$this->pdf->sety($this->pdf->gety()+10);
		$this->pdf->colalign = array('C','C','L','L','C','L');
		$this->pdf->setwidths(array(10,15,25,25,50,25));
		$this->pdf->colheader = array('No','ID SC','Tanggal','Tgl Periode','No Dokumen','Status');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','C','L','L','L','L');		
		$totalnominal1=0;$i=0;$totaldisc1=0;$totaljumlah1=0;
		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',7);
			$this->pdf->row(array(
				$i,$row['salesscaleid'],
				date(Yii::app()->params['dateviewfromdb'], strtotime($row['docdate'])),	
									date(Yii::app()->params['dateviewfromdb'], strtotime($row['perioddate'])),
				$row['docno'], $row['statusname']));
						 
			$this->pdf->checkPageBreak(20);
		}
		
		$this->pdf->Output();
	}
	//77
	public function RekapTargetPenjualanPerDokumenStatusBelumMax($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct a.salestargetid,a.perioddate,a.docdate,c.description,d.fullname, a.statusname
						from salestarget a
                        join salestargetdet b on a.salestargetid=b.salestargetid
                         join materialgroup c on b.materialgroupid=c.materialgroupid
                        join employee d on a.employeeid=d.employeeid
						where a.docdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                        and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and a.recordstatus < getwfmaxstatbywfname('appst')
                        and a.recordstatus <> 0
						and a.companyid like '".$companyid."' ";
                
		$dataReader = Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Target Penjualan Per Dokumen Belum Status Max';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->setFont('Arial','B',8);
											$this->pdf->sety($this->pdf->gety()+10);
		$this->pdf->colalign = array('C','C','L','L','L','C','L');
		$this->pdf->setwidths(array(10,15,20,20,30,70,20));
		$this->pdf->colheader = array('No','ID ST','Tanggal','Tgl Periode','Nama Sales','Material/Service','Status');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','C','L','L','L','L','L');		
		$totalnominal1=0;$i=0;$totaldisc1=0;$totaljumlah1=0;
		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',7);
			$this->pdf->row(array(
				$i,$row['salestargetid'],
				date(Yii::app()->params['dateviewfromdb'], strtotime($row['docdate'])),	
									date(Yii::app()->params['dateviewfromdb'], strtotime($row['perioddate'])),
				$row['fullname'],$row['description'], $row['statusname']));
						 
			$this->pdf->checkPageBreak(20);
		}
		
		$this->pdf->Output();
	}
	//78
	public function RekapPerubahanPlafonPerDokumenStatusBelumMax($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct a.plafonreqid,a.plafonreqno,a.plafonreqdate,a.reqlimit,b.fullname, a.recordstatus, getwfstatusbywfname('appplafonreq',a.recordstatus) as statusname
						from plafonreq a
						join addressbook b on a.addressbookid=b.addressbookid
						where  a.plafonreqdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and a.recordstatus < getwfmaxstatbywfname('appss')
                        and a.recordstatus <> 0";
        
		$dataReader = Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perubahan Plafon Per Dokumen Belum Status Max';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->setFont('Arial','B',8);
											$this->pdf->sety($this->pdf->gety()+10);
		$this->pdf->colalign = array('C','C','L','L','L','C','L');
		$this->pdf->setwidths(array(10,15,25,25,25,60,30));
		$this->pdf->colheader = array('No','ID Plafon','No Plafon','Tgl Plafon','Limit','Customer','Status');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','C','L','L','L','L','L');		
		$totalnominal1=0;$i=0;$totaldisc1=0;$totaljumlah1=0;
		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',7);
			$this->pdf->row(array(
				$i,$row['plafonreqid'],
				$row['plafonreqno'],	
				date(Yii::app()->params['dateviewfromdb'], strtotime($row['plafonreqdate'])),
				$row['reqlimit'],$row['fullname'], $row['statusname']));
						 
			$this->pdf->checkPageBreak(20);
		}
		
		$this->pdf->Output();
	}
	//79
	public function RekapRealisasiPenjualanPerSPVSalesPerGroupMaterial($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
        parent::actionDownload();
        //$this->no_result();

        $connection = Yii::app()->db;
        $this->pdf->title='REKAP REALISASI PENJUALAN PER SPV SALES PER GROUP MATERIAL';
        $datetime = new DateTime(date($enddate));

        $this->pdf->subtitle='Target Bulan '.$datetime->format('F').' '.$datetime->format('Y').' dan '.'Realisasi s/d '.date('d-m-Y',strtotime($enddate));
        $this->pdf->AddPage('L',array(210,330));

        $this->pdf->SetFont('Arial','',10);
        $this->pdf->sety($this->pdf->gety()+5);

        $month = date('m',strtotime($enddate));
        $year = date('Y',strtotime($enddate));

        $prev_month_ts1 = strtotime(''.$year.'-'.$month.'-01 -3 month');
        $prev_month_ts2 = strtotime(''.$year.'-'.$month.'-01 -1 month');

        $lastmonth1 = date('Y-m-d', $prev_month_ts1);
        $lastmonth2 = date('Y-m-t', $prev_month_ts2);

        $prev_month_ts =  strtotime($year.'-'.$month.'-01');
        $month1 = date('Y-m-d', $prev_month_ts);
        $month2 = date('Y-m-t', $prev_month_ts);
        $this->pdf->text(310,15,'Per : '.$per);
        $maxtarget = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appst')")->queryScalar();
        
        $maxscale = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appss')")->queryScalar();

        $sqlminscale = "select minscale 
                        from salesscale 
                        where month(perioddate) = month('".$enddate."') and year(perioddate) = year('".$enddate."') and companyid = {$companyid} and recordstatus= ".$maxscale;
        $minscale = Yii::app()->db->createCommand($sqlminscale)->queryScalar();
        
        // check spv
        if(isset($spv) && $spv!='')
        {
            $wherespv = " and d.parentid in 
                        (select distinct a.orgstructureid
                        from employeeorgstruc a
                        join employee b on b.employeeid = a.employeeid
                        join orgstructure c on c.orgstructureid = a.orgstructureid
                        where b.fullname like '%{$spv}%' and c.companyid={$companyid})";
        }
        else
        {
            $wherespv = '';
        }
        
        $sqlspv = "select group_concat(a.employeeid) as employee, d.parentid,count(1) as hitung
                    from salestarget a
                    join employee b on b.employeeid = a.employeeid
                    join employeeorgstruc c on c.employeeid = b.employeeid
                    join orgstructure d on d.orgstructureid = c.orgstructureid and d.companyid = a.companyid
                    where a.perioddate = '{$month1}' and a.recordstatus={$maxtarget} and a.companyid={$companyid}
                    {$wherespv}
                    group by d.orgstructureid";
            /*
            $getspv = "select employeeid, fullname
                    from orgstructure c
                    join employeeorgstruc b on c.orgstructureid = b.orgstructureid 
                    join employee a on b.employeeid = a.employeeid
                    where c.companyid = {$companyid} and c.parentid = (select z.orgstructureid
                        from employeeorgstruc x
                        join orgstructure z on z.orgstructureid = x.orgstructureid
                        join employee za on za.employeeid = x.employeeid
                        where za.fullname like '%{$spv}%' and z.orgstructureid = c.parentid and z.companyid={$companyid} and x.recordstatus=1)
                        and b.recordstatus=1 group by c.orgstructureid";
        
                    $sql = "select a.employeeid, b.fullname, salestargetid
                    from salestarget a
                    join employee b on b.employeeid = a.employeeid
                    where recordstatus= {$maxtarget} and a.perioddate = '{$month1}' and a.companyid = {$companyid}
                    and b.fullname like '%{$employee}%'";
            */
        $result = Yii::app()->db->createCommand($sqlspv)->queryAll();
        $c=0;
        foreach($result as $rows)
        {   
            $totaltargetspv = 0;
            $totalqtykumspv = 0;
            $totalqtytargetspv = 0;
            $totalqtyrealisasispv = 0;
            $totalqtyplspv = 0;
            $totalrealisasispv = 0;
            $totalkumulatifspv = 0;
            $totalkomisispv = 0;
            $totaldiffspv = 0;
            
            $sqlspvname = "select substring_index(substring_index(structurename, ',', 1), ',', - 1) as structurename, 
                        a.fullname as spvname
                        from employee a
                        join employeeorgstruc b on b.employeeid = a.employeeid
                        join orgstructure c on c.orgstructureid = b.orgstructureid
                        where c.orgstructureid = {$rows['parentid']}";
            $resspvname = Yii::app()->db->createCommand($sqlspvname)->queryAll();
            
            foreach($resspvname as $spvname)
            {
                // $emp = explode(',',$rows['employee']);

                //foreach($emp as $employeeid)
                //{
                    $sql = "select a.employeeid, b.fullname, salestargetid
                            from salestarget a
                            join employee b on b.employeeid = a.employeeid
                            where recordstatus= {$maxtarget} and a.perioddate = '{$month1}' and a.companyid = {$companyid}
                            and a.employeeid in ({$rows['employee']})
                            union 
                            select 0,'{$spvname['spvname']}',0";
                    $result = Yii::app()->db->createCommand($sql)->queryAll();

                    $matgroup = "select materialgroupid, description
                                             from materialgroup
                                             where isfg = 1";
                    $material = Yii::app()->db->createCommand($matgroup)->queryAll();

                    foreach($result as $row)
                    {
                        $totaltarget = 0;
                        $totaltarget2 = 0;
                        $totalqtykum = 0;
                        $totalqtytarget = 0;
                        $totalqtyrealisasi = 0;
                        $totalqtypl = 0;
                        $totalrealisasi = 0;
                        $totalkumulatif = 0;
                        $totalkomisi = 0;
                        $totaldiff = 0;
                        
                        if($c==$rows['hitung'])
                        {
                            $whereemp_real_qty = " and xs.employeeid in({$rows['employee']})";
                            $whereemp_real_val = " and d.employeeid in ({$rows['employee']})";
                            $where_ret = " and xe.employeeid in ({$rows['employee']}) ";
                            $where_real_emp = "  d.employeeid in ({$rows['employee']}) ";
                            $where_ret_emp = "  f.employeeid in ({$rows['employee']}) ";
                        }
                        else
                        {
                            $whereemp_real_qty = " and xs.employeeid = ".$row['employeeid'];
                            $whereemp_real_val = " and d.employeeid = ".$row['employeeid'];
                            $where_ret = " and xe.employeeid = {$row['employeeid']} ";
                            $where_real_emp = "  d.employeeid = {$row['employeeid']}";
                            $where_ret_emp = "  f.employeeid = {$row['employeeid']}";
                        }

                        $this->pdf->colalign = array('C','C','C','C','C','C','C','C');
                        $this->pdf->setwidths(array(70,45,45,45,45,15,15,30));
                        $this->pdf->colheader = array('Sales dan Kelompok Barang','Target Bulan ini','Realisasi Hari ini','Realisasi Kumulatif','+ / -','Penc.','Skala','Upah Tambahan');
                        $this->pdf->RowHeader();
                        $this->pdf->coldetailalign = array('L','C','C','C','C','C','C');
                        $this->pdf->setwidths(array(70,15,30,15,30,15,30,15,30,15,15,30));
                        //$this->pdf->row(array('','Qty','Rp','Qty','Rp','Qty','Rp','Qty','Rp','RP','Rp','Rp'));
                        $this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R','R','R','R');

                        $this->pdf->SetFont('Arial','B',11);
                        $this->pdf->setwidths(array(155));
                        $this->pdf->row(array($spvname['structurename'].' : '.$spvname['spvname']));

                        $this->pdf->SetFont('Arial','B',10);
                        $this->pdf->setwidths(array(85));
                        if($c==$rows['hitung'])
                        {
                            $this->pdf->row(array('NAMA SPV = '. $row['fullname']));    
                        }
                        else
                        {
                            $this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                        }

                        $sqltarget = "select sum(qty*price) from salestargetdet a where a.salestargetid=".$row['salestargetid'];
                        if($c==$rows['hitung'])
                        {
                            $sqltarget = "select sum(qty*price) 
                                        from salestargetdet a 
                                        join salestarget b on b.salestargetid = a.salestargetid
                                        where b.employeeid in(".$rows['employee'].") and b.recordstatus = {$maxtarget}
                                        and b.companyid = {$companyid} and b.perioddate = '{$month1}'";
                            $totaltarget = Yii::app()->db->createCommand($sqltarget)->queryScalar();
                        }
                        else
                        {
                            $totaltarget = Yii::app()->db->createCommand($sqltarget)->queryScalar();
                        }
                        $sqltotal = "select sum(penj+retur) from (select ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                        from invoice a
                                        join giheader b on a.giheaderid = b.giheaderid
                                        join gidetail c on c.giheaderid = b.giheaderid
                                        join soheader d on d.soheaderid = b.soheaderid
                                        join product e on e.productid = c.productid
                                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                        join materialgroup g on g.materialgroupid = f.materialgroupid
                                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '{$month2}' 
                                        and {$where_real_emp} and g.parentmatgroupid in (select materialgroupid from materialgroup x where x.isfg=1)),0) as penj,
                                        ifnull((select -1*sum(x.qty*x.price)
                                        from notagirpro x
                                        join notagir `xa` on `xa`.notagirid = x.notagirid
                                        join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                        join giretur xc on xc.gireturid = xb.gireturid
                                        join giheader xd on xd.giheaderid = xc.giheaderid
                                        join soheader xe on xe.soheaderid = xd.soheaderid
                                        join product xf on xf.productid = x.productid
                                        join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                        join materialgroup g on g.materialgroupid = xg.materialgroupid
                                        where xc.companyid = {$companyid} and xc.gireturdate between '{$month1}' and '{$month2}' and `xa`.recordstatus=3 {$where_ret} and g.parentmatgroupid in (select materialgroupid from materialgroup x where x.isfg=1)),0) as retur) z";
                        $totalpenretur = Yii::app()->db->createCommand($sqltotal)->queryScalar();
                        $h = ($totalpenretur / $totaltarget) * 100;
                        //$h=75;

                        foreach($material as $row1)
                        {		

                                    $sql1 = "select sum(qty) as targetqty, sum(harga) as targetharga, sum(realqty) as realqty, sum(realharga) as realharga, sum(kumqty) as kumqty, sum(kumharga) as kumharga from (
                                                    select ifnull(sum(a.qty),0) as qty,
                                                    ifnull(sum(qty*price),0) as harga,
                                                     ifnull((select sum(`xb`.qty)
                                                            from giheader `xa`
                                                            join gidetail xb on `xa`.giheaderid = xb.giheaderid
                                                            join soheader xs on xs.soheaderid = `xa`.soheaderid
                                                            join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                            where `xa`.recordstatus = 3 {$whereemp_real_qty} and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) and xs.companyid = {$companyid} and `xa`.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'),0) as realqty,
                                                    ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                            from invoice a
                                                            join giheader b on a.giheaderid = b.giheaderid
                                                            join gidetail c on c.giheaderid = b.giheaderid
                                                            join soheader d on d.soheaderid = b.soheaderid
                                                            join product e on e.productid = c.productid
                                                            join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                            where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                            {$whereemp_real_val}
                                                            and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']})),0) as realharga,
                                                    ifnull((select sum(`xb`.qty)
                                                            from giheader `xa`
                                                            join gidetail xb on `xa`.giheaderid = xb.giheaderid
                                                            join soheader xs on xs.soheaderid = `xa`.soheaderid
                                                            join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                            where `xa`.recordstatus = 3 and xs.companyid = {$companyid} {$whereemp_real_qty} and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) and `xa`.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'),0) as kumqty,
                                                 ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                            from invoice a
                                                            join giheader b on a.giheaderid = b.giheaderid
                                                            join gidetail c on c.giheaderid = b.giheaderid
                                                            join soheader d on d.soheaderid = b.soheaderid
                                                            join product e on e.productid = c.productid
                                                            join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                            where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                            {$whereemp_real_val}
                                                            and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']})),0) as kumharga
                                                    from salestarget b
                                                    join salestargetdet a on a.salestargetid = b.salestargetid
                                                    join materialgroup c on c.materialgroupid = a.materialgroupid
                                                    join employee d on d.employeeid = b.employeeid
                                                    where {$where_real_emp} and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} and a.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})

                                                    union

                                                    select sum(qty) as qty, sum(harga) as harga, sum(realqty) as realqty, sum(realharga) as realharga, sum(kumqty) as kumqty, sum(kumharga) as kumharga from (
                                                            select 0 as qty,0 as harga,
                                                            ifnull((select -1*sum(x.qty)
                                                                    from notagirpro x
                                                                    join notagir `xa` on `xa`.notagirid = x.notagirid
                                                                    join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                    join giretur xc on xc.gireturid = xb.gireturid
                                                                    join giheader xd on xd.giheaderid = xc.giheaderid
                                                                    join soheader xe on xe.soheaderid = xd.soheaderid
                                                                    join product xf on xf.productid = x.productid
                                                                    join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                    where xc.companyid = {$companyid} and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 {$where_ret} and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})),0) as realqty,
                                                            ifnull((select -1*sum(x.qty*x.price)
                                                                    from notagirpro x
                                                                    join notagir `xa` on `xa`.notagirid = x.notagirid
                                                                    join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                    join giretur xc on xc.gireturid = xb.gireturid
                                                                    join giheader xd on xd.giheaderid = xc.giheaderid
                                                                    join soheader xe on xe.soheaderid = xd.soheaderid
                                                                    join product xf on xf.productid = x.productid
                                                                    join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                    where xc.companyid = {$companyid}  and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 {$where_ret} and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})),0) as realharga,
                                                             ifnull((select -1*sum(x.qty)
                                                                    from notagirpro x
                                                                    join notagir `xa` on `xa`.notagirid = x.notagirid
                                                                    join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                    join giretur xc on xc.gireturid = xb.gireturid
                                                                    join giheader xd on xd.giheaderid = xc.giheaderid
                                                                    join soheader xe on xe.soheaderid = xd.soheaderid
                                                                    join product xf on xf.productid = x.productid
                                                                    join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                    where xc.companyid = {$companyid} and xc.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 {$where_ret} and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})),0) as kumqty,
                                                            ifnull((select -1*sum(x.qty*x.price)
                                                                    from notagirpro x
                                                                    join notagir `xa` on `xa`.notagirid = x.notagirid
                                                                    join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                    join giretur xc on xc.gireturid = xb.gireturid
                                                                    join giheader xd on xd.giheaderid = xc.giheaderid
                                                                    join soheader xe on xe.soheaderid = xd.soheaderid
                                                                    join product xf on xf.productid = x.productid
                                                                    join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                    where xc.companyid = {$companyid} and xc.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 {$where_ret} and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})),0) as kumharga
                                                            from notagirpro a
                                                            join notagir b on b.notagirid = a.notagirid
                                                            join gireturdetail c on c.gireturdetailid = a.gireturdetailid
                                                            join giretur d on d.gireturid = c.gireturid
                                                            join giheader e on e.giheaderid = d.giheaderid
                                                            join soheader f on f.soheaderid = e.soheaderid
                                                            join product g on g.productid = a.productid
                                                            join productplant h on h.productid = g.productid and h.unitofissue = a.uomid and h.slocid = a.slocid
                                                            where f.companyid = {$companyid} and b.recordstatus = 3 and {$where_ret_emp}
                                                            and h.materialgroupid  in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                                                            and d.gireturdate between '{$month1}' and last_day('{$month2}') group by materialgroupid) x 
                                                    ) z ";

                                    $res1 = Yii::app()->db->createCommand($sql1)->queryAll();
                                    /*
                                    $this->pdf->SetFont('Arial','B',10);
                                    $this->pdf->setwidths(array(85));
                                    $this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                                    */
                                    $mod = 0;
                                    foreach($res1 as $row2)
                                    {
                                            $this->pdf->SetFont('Arial','',8);
                                            $this->pdf->setwidths(array(70,15,30,15,30,15,30,15,30,15,15,30));

                                            if($h>=$minscale)
                                            {
                                                if($c==$rows['hitung'])
                                                {
                                                    $sqlspvscale = "select paramspv 
                                                                from salesscale a
                                                                where a.perioddate = '{$month1}'
                                                                and a.companyid = {$companyid}
                                                                and a.recordstatus = {$maxscale}";
                                                    $spvscale = Yii::app()->db->createCommand($sqlspvscale)->queryScalar();
                                                }
                                                else
                                                {
                                                    $spvscale = 1;
                                                }
			                                    //if($row2['targetharga']*$row2['targetqty']==0)
			                                    if($row2['targetqty']==0)
                                                {
                                                        $mod = 0;
                                                }
                                                else
                                                {
                                                        $mod = ($row2['kumqty']/$row2['targetqty'])*100;
                                                        //$mod = 1;
                                                }

                                                if($row2['targetqty']==0 && $row2['kumqty']>0)
                                                {
                                                    $mod = 75;
                                                }
                                                //$this->pdf->setbordercell(array('B','B','B','B','B','B','B','B','B','B','B','B','B','B'));
                                                if($mod>=120)
                                                {
                                                        $select = 'select gt120';
                                                }
                                                else if($mod>=100)
                                                {
                                                        $select = 'select gt100';
                                                }
                                                else if($mod>=90)
                                                {
                                                        $select = 'select gt90';
                                                }
                                                else if($mod>=80)
                                                {
                                                        $select = 'select gt80';
                                                }
                                                else if($mod>=70)
                                                {
                                                        $select = 'select gt70';
                                                }
                                                else
                                                {
                                                        $select = 'select 0';
                                                }
                                                $from = " from salesscale a 
                                                                join salesscaledet b on a.salesscaleid = b.salesscaleid
                                                                where b.materialgroupid ={$row1['materialgroupid']} 
                                                                and a.perioddate = '{$year}-{$month}-01' and a.recordstatus = {$maxscale} ";
                                                $scale = Yii::app()->db->createCommand($select.$from)->queryScalar();
                                            }
                                            else
                                            {
                                                $scale=0;
                                            }
                                                
                                            $this->pdf->row(array($row1['description'],
                                            Yii::app()->format->formatNumber($row2['targetqty']),
                                            Yii::app()->format->formatCurrency(($row2['targetharga'])/$per),
                                            Yii::app()->format->formatNumber($row2['realqty']),
                                            Yii::app()->format->formatCurrency($row2['realharga']/$per),
                                            Yii::app()->format->formatNumber($row2['kumqty']),
                                            Yii::app()->format->formatCurrency($row2['kumharga']/$per),
                                            Yii::app()->format->formatNumber($row2['kumqty'] - $row2['targetqty']),
                                            Yii::app()->format->formatCurrency(($row2['kumharga'] - ($row2['targetharga']))/$per),
                                            Yii::app()->format->formatNumber($mod),
                                            Yii::app()->format->formatNumber($scale),
                                            Yii::app()->format->formatCurrency(($scale*$spvscale/100*$row2['kumharga'])/$per)
                                            ));
                                                
                                            $totaltarget2 += ($row2['targetharga'])/$per;
                                            $totalrealisasi += $row2['realharga']/$per;
                                            $totalkumulatif += $row2['kumharga']/$per;
                                            $totaldiff += $row2['kumharga'] - ($row2['targetharga']);
                                            $totalkomisi += ($scale*$spvscale/100*$row2['kumharga'])/$per;
                                            $totalqtykum += $row2['kumqty'];
                                            $totalqtytarget += $row2['targetqty'];
                                            $totalqtyrealisasi += $row2['realqty'];
                                            $totalqtypl += ($row2['kumqty'] - $row2['targetqty']);
                                            //$this->pdf->row(array(''));
                                    }
                                    $this->pdf->setFont('Arial','B',8);
                            }
                            $this->pdf->row(array('TOTAL ',$totalqtytarget, Yii::app()->format->formatCurrency($totaltarget2), $totalqtyrealisasi, Yii::app()->format->formatCurrency($totalrealisasi),$totalqtykum,Yii::app()->format->formatCurrency($totalkumulatif),$totalqtypl,Yii::app()->format->formatCurrency($totaldiff),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisi)));
                            $this->pdf->row(array(''));
                            //$this->pdf->sety($this->pdf->gety()+1);

                            $totaltargetspv += $totaltarget2/$per;
                            $totalrealisasispv += $totalrealisasi/$per;
                            $totalkumulatifspv += $totalkumulatif/$per;
                            $totaldiffspv += $totaldiff/$per;
                            $totalkomisispv += $totalkomisi/$per;
                            $totalqtykumspv += $totalqtykum;
                            $totalqtytargetspv += $totalqtytarget;
                            $totalqtyrealisasispv += $totalqtyrealisasi;
                            $totalqtyplspv += $totalqtypl;
                            
                            if($c==$rows['hitung'])
                            {
                                $c=0;
                            }
                            else
                            {
                                $c+=1;
                            }
                        $this->pdf->CheckNewPage(15);
                        $this->pdf->sety($this->pdf->gety()+5);
                    }
                //}
            }
        }
        $this->pdf->Output();
	
	}
	//80
	/*public function MonitoringReport($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		//$this->no_result();

		$connection = Yii::app()->db;
		$this->pdf->title='MONITORING REPORT';
		$datetime = new DateTime(date($enddate));

		$this->pdf->subtitle='Dari Tgl :  '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).'  s/d  '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P',array(210,310));

		$this->pdf->SetFont('Arial','b',10);
		$this->pdf->sety($this->pdf->gety()+5);

		$sql = "select a.materialgroupid,a.description
							from materialgroup a
							where a.recordstatus = 1 and a.isfg = 1
		";
		$dataReader = Yii::app()->db->createCommand($sql)->queryAll();
			
		$sqlcompanyname = 'select companyname from company where companyid='.$companyid;
		$companyname = Yii::app()->db->createCommand($sqlcompanyname)->queryScalar();

		$this->pdf->text(10,$this->pdf->gety(),'1. QTY (PENJUALAN - RETUR) vs QTY PRODUKSI');
		$this->pdf->SetFont('Arial','',10);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,94,17,22,10,17,22));
		$this->pdf->colheader = array('No','Material Group','Hari Ini','Kumulatif','VS','Hari Ini','Kumulatif');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','R','R','C','R','R');	
		$i=0;

		foreach($dataReader as $row)
		{
			$sql1 = "select ifnull(sum(qty),0) as qty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
							where b0.recordstatus = 3 and b0.invoiceno is not null and b1.companyid = {$companyid} and b0.invoiceno is not null and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z) zz
			";
			$row1 = Yii::app()->db->createCommand($sql1)->queryScalar();
			
			$sql2 = "select ifnull(sum(qty),0) as kumqty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
							where b0.recordstatus = 3 and b0.invoiceno is not null and b1.companyid = {$companyid} and b0.invoiceno is not null and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z) zz
			";
			$row2 = Yii::app()->db->createCommand($sql2)->queryScalar();
			
			$sql3 = "select ifnull(sum(qtyoutput),0) as qtyoutput
							from productoutputfg a
							join productoutput b on b.productoutputid=a.productoutputid
							join productplant c on c.productid=a.productid and c.slocid=a.slocid
							where b.companyid = {$companyid} and b.recordstatus = 3 and b.productoutputdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and c.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']})
			";
			$row3 = Yii::app()->db->createCommand($sql3)->queryScalar();
			
			$sql4 = "select ifnull(sum(qtyoutput),0) as kumqtyoutput
							from productoutputfg a
							join productoutput b on b.productoutputid=a.productoutputid
							join productplant c on c.productid=a.productid and c.slocid=a.slocid
							where b.companyid = {$companyid} and b.recordstatus = 3 and b.productoutputdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and c.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']})
			";
			$row4 = Yii::app()->db->createCommand($sql4)->queryScalar();
			
			$cmd1 = "select b.addressbookid
							from addressbook b
							where b.fullname = (select replace(a.companyname,'TRADING','PRODUKSI')
							from company a
							where a.companyid = {$companyid} and a.companyname like '%TRADING')
			";
			$addressbook = Yii::app()->db->createCommand($cmd1)->queryScalar();
			
			$cmd = "select ifnull(count(1),0)
								from company a
								where a.companyid = {$companyid} and a.companyname like '%trading'
			";
			$company = Yii::app()->db->createCommand($cmd)->queryScalar();
			
			if ($company == 0)
			{
				$row7 = $row3;
				$row8 = $row4;
			}
			else
			{
				$sql5 = "select ifnull(sum(a.qty),0) as grqty
								from productstockdet a
								join productplant b on b.productid=a.productid and b.slocid=a.slocid
								join grheader c on c.grno=a.referenceno
								join sloc d on d.slocid=a.slocid
								join plant e on e.plantid=d.plantid and e.companyid=c.companyid
								join poheader f on f.poheaderid=c.poheaderid
								where c.recordstatus=3 and c.companyid = {$companyid} and f.addressbookid = {$addressbook} and a.transdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and b.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']})
				";
				$row5 = Yii::app()->db->createCommand($sql5)->queryScalar();

				$sql6 = "select ifnull(sum(a.qty),0) as kumgrqty
								from productstockdet a
								join productplant b on b.productid=a.productid and b.slocid=a.slocid
								join grheader c on c.grno=a.referenceno
								join sloc d on d.slocid=a.slocid
								join plant e on e.plantid=d.plantid and e.companyid=c.companyid
								join poheader f on f.poheaderid=c.poheaderid
								where c.recordstatus=3 and c.companyid = {$companyid} and f.addressbookid = {$addressbook} and a.transdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and b.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']})
				";
				$row6 = Yii::app()->db->createCommand($sql6)->queryScalar();
				
				$row7 = $row5;
				$row8 = $row6;
			}

			$i+=1;
			$this->pdf->setFont('Arial','',10);
			$this->pdf->row(array(
				$i,$row['description'],
				Yii::app()->format->formatCurrency($row1),
				Yii::app()->format->formatCurrency($row2),
				'',
				Yii::app()->format->formatCurrency($row7),
				Yii::app()->format->formatCurrency($row8),
			));
			
		}

		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'2. NILAI PENJUALAN - RETUR');
		$this->pdf->SetFont('Arial','',10);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(10,94,35,40));
		$this->pdf->colheader = array('No','Material Group','Hari Ini','Kumulatif');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','R','R');	
		$i=0;$totalnilai=0;$totalkumnilai=0;
		
		foreach($dataReader as $row)
		{
			$sql1 = "select ifnull(sum(netto),0) as qty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
							where b0.recordstatus = 3 and b0.invoiceno is not null and b1.companyid = {$companyid} and b0.invoiceno is not null and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z) zz
			";
			$row1 = Yii::app()->db->createCommand($sql1)->queryScalar();
			
			$sql2 = "select ifnull(sum(netto),0) as kumqty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
							where b0.recordstatus = 3 and b0.invoiceno is not null and b1.companyid = {$companyid} and b0.invoiceno is not null and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z) zz
			";
			$row2 = Yii::app()->db->createCommand($sql2)->queryScalar();

			$i+=1;
			$this->pdf->setFont('Arial','',10);
			$this->pdf->row(array(
				$i,$row['description'],
				Yii::app()->format->formatCurrency($row1/$per),
				Yii::app()->format->formatCurrency($row2/$per),
			));
			$totalnilai += $row1/$per;
			$totalkumnilai += $row2/$per;
		}
		$this->pdf->setFont('Arial','B',10);
		$this->pdf->row(array(
			'','TOTAL NILAI PENJUALAN - RETUR ALL PRODUK >>>',
			Yii::app()->format->formatCurrency($totalnilai),
			Yii::app()->format->formatCurrency($totalkumnilai),
		));
		
		$this->pdf->CheckNewPage(5);

        $this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'3. PENCAPAIN SALES ');
		$this->pdf->SetFont('Arial','',10);
		//$first_month = '';
		$month = date('m',strtotime($startdate));
		$year = date('Y',strtotime($startdate));
		$day = $year.'-'.$month.'-01';
        //$this->pdf->setY($this->pdf->getY()+5);
			
		$sqlplant = "select plantid,plantcode,description
							from plant where companyid = ".$companyid;
		$plant = Yii::app()->db->createCommand($sqlplant)->queryAll();
		$k=1;
		foreach($plant as $rows)
		{
				$sqlpenc = "select sum(netto1) as netto, sum(netto2) as netto2, invoicedate from
							(select fullname,sum(nom) as nominal,(sum(nom)-sum(nett1)) as disc,sum(nett1) as netto1, sum(nett2) netto2, invoicedate from
							(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett1,
															ifnull((select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
															join giheader zzc on zzc.giheaderid = zzb.giheaderid
															join invoice zzd on zzd.giheaderid = zzc.giheaderid
							where zzd.recordstatus = a.recordstatus and zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid
															and zzd.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'),0) as nett2
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
                            join plant l on l.plantid = h.plantid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = {$companyid} and h.sloccode like '%%' and d.fullname like '%%' and
							e.fullname like '%%' and f.areaname like '%%' and i.productname like '%%' and a.invoiceno is not null and 
							a.invoiceno is not null and a.invoicedate between '{$day}' and
							'".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and l.plantid = {$rows['plantid']} )z group by fullname
							union
							select fullname, -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett1)) as disc, -1*sum(nett1) as netto1,ifnull(-1*sum(nett2),0) as netto2,invoicedate from
							(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,sum(a.qty*g.price) as nom,a.price as harga,sum(a.qty*a.price) as nett1,ifnull((select sum(qty*price) from notagirpro o join notagir p on o.notagirid = p.notagirid where o.notagirid = b.notagirid and p.docdate='".date(Yii::app()->params['datetodb'],strtotime($enddate))."'),0) as nett2, b.headernote,k.fullname,d.gireturdate as invoicedate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
                            join plant n on n.plantid = j.plantid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%%' 
							and k.fullname like '%%' and l.fullname like '%%' and m.areaname like '%%'
							and i.productname like '%%' and d.gireturdate between '{$day}' and
							'".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and n.plantid = {$rows['plantid']}
                            group by notagirno
                            order by notagirno,notagirproid
							)z group by fullname) zz order by fullname";
				$penc = Yii::app()->db->createCommand($sqlpenc)->queryRow();
				$this->pdf->text(14,$this->pdf->gety()+5*$k,'PENCAPAIAN '.$rows['plantcode'].' : '.Yii::app()->format->formatCurrency($penc['netto2']/$per).'/'.Yii::app()->format->formatCurrency($penc['netto']/$per));
				$k++;
                $this->pdf->setY($this->pdf->getY());
		}
        
		$this->pdf->sety($this->pdf->gety()+5+(5*$k));
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'4. TAGIHAN HARI INI / KUMULATIF TAGIHAN');
		$this->pdf->SetFont('Arial','',10);
		
		$sql10 = "select sum(a.cashamount + a.bankamount)
						from cutarinv a
						join cutar b on b.cutarid=a.cutarid
						where b.recordstatus=3 and b.companyid = ".$companyid." and b.docdate = '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
		";
		$row10=Yii::app()->db->createCommand($sql10)->queryScalar();
		
		$sql11 = "select sum(a.cashamount + a.bankamount)
						from cutarinv a
						join cutar b on b.cutarid=a.cutarid
						where b.recordstatus=3 and b.companyid = ".$companyid." and b.docdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
		";
		$row11=Yii::app()->db->createCommand($sql11)->queryScalar();
		
		$this->pdf->text(14,$this->pdf->gety()+5,Yii::app()->format->formatCurrency($row10/$per).' / '.Yii::app()->format->formatCurrency($row11/$per));
        
        $this->pdf->sety($this->pdf->gety()+15);
        $this->pdf->SetFont('Arial','B',10);
        $this->pdf->text(10,$this->pdf->gety(),'5. PERSEDIAAN ');
        $this->pdf->SetFont('Arial','',10);

        $connection = Yii::app()->db;
        $sqlfg = "call hitungsaldodate(:vfg,:vdate,:vcompanyid,@vsaldoakhir)";
        $command1 = $connection->createCommand($sqlfg);
        $command1->bindvalue(':vfg','11050101',PDO::PARAM_STR);
        $command1->bindvalue(':vdate',date(Yii::app()->params['datetodb'],strtotime($enddate)),PDO::PARAM_STR);
        $command1->bindvalue(':vcompanyid',$companyid,PDO::PARAM_STR);
        $command1->execute();

        $qfg = "select @vsaldoakhir as saldoakhir";
        $tmt1 = Yii::app()->db->createCommand($qfg);
        $tmt1->execute();
        $fg = $tmt1->queryRow();

        $sqlwip = "call hitungsaldodate(:vwip,:vdate,:vcompanyid,@vsaldoakhir)";
        $command2 = $connection->createCommand($sqlwip);
        $command2->bindvalue(':vwip','11050103',PDO::PARAM_STR);
        $command2->bindvalue(':vdate',date(Yii::app()->params['datetodb'],strtotime($enddate)),PDO::PARAM_STR);
        $command2->bindvalue(':vcompanyid',$companyid,PDO::PARAM_STR);
        $command2->execute();

        $qwip = "select @vsaldoakhir as saldoakhir";
        $tmt2 = Yii::app()->db->createCommand($qwip);
        $tmt2->execute();
        $wip = $tmt2->queryRow();

        $sqlrw = "call hitungsaldodate(:vrw,:vdate,:vcompanyid,@vsaldoakhir)";
        $command3 = $connection->createCommand($sqlrw);
        $command3->bindvalue(':vrw','11050102',PDO::PARAM_STR);
        $command3->bindvalue(':vdate',date(Yii::app()->params['datetodb'],strtotime($enddate)),PDO::PARAM_STR);
        $command3->bindvalue(':vcompanyid',$companyid,PDO::PARAM_STR);
        $command3->execute();

        $qrw = "select @vsaldoakhir as saldoakhir";
        $tmt3 = Yii::app()->db->createCommand($qrw);
        $tmt3->execute();
        $rw = $tmt3->queryRow();

        
        $this->pdf->text(14,$this->pdf->gety()+5,'PERSEDIAAN FG   :'.Yii::app()->format->formatCurrency($fg['saldoakhir']/$per));
        $this->pdf->text(14,$this->pdf->gety()+10,'PERSEDIAAN WIP :'.Yii::app()->format->formatCurrency($wip['saldoakhir']/$per));
        $this->pdf->text(14,$this->pdf->gety()+15,'PERSEDIAAN RW  :'.Yii::app()->format->formatCurrency($rw['saldoakhir']/$per));
        
        
        $this->pdf->setY($this->pdf->getY()+25);
        
        $this->pdf->SetFont('Arial','B',10);
        $this->pdf->text(10,$this->pdf->gety(),'6. HUTANG DAGANG vs PEMBAYARAN');
		$this->pdf->SetFont('Arial','',10);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C');
		$this->pdf->setwidths(array(10,60,50,10,50));
		$this->pdf->colheader = array('No','Umur','Jumlah','VS','Jumlah');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','R','C','R');
        
        $sql13 = "select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120
		from (select (amount)-(payamount) , case when umur >= 0 and umur <= 30 then amount-payamount else 0 end as a1,
		case when umur > 30 and umur <= 60 then amount-payamount else 0 end as a2,
		case when umur > 60 and umur <= 90 then amount-payamount else 0 end as a3,
		case when umur > 90 and umur <= 120 then amount-payamount else 0 end as a4,
		case when umur > 120 then amount-payamount else 0 end as a5 from (select a.amount, 
		ifnull((select sum(payamount) from cbapinv j
		left join cashbankout k on k.cashbankoutid=j.cashbankoutid
		where k.recordstatus=3 and j.invoiceapid=a.invoiceapid
		and k.docdate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
		group by invoiceapid),0) as payamount,
		datediff('".date(Yii::app()->params['datetodb'],strtotime($enddate))."',a.invoicedate) as umur
		from invoiceap a
		left join grheader b on b.grheaderid = a.grheaderid
		inner join poheader c on c.poheaderid = a.poheaderid
		inner join addressbook d on d.addressbookid = c.addressbookid
		inner join paymentmethod e on e.paymentmethodid = c.paymentmethodid
		where a.recordstatus=3 and a.invoiceno is not null and c.companyid = {$companyid}
		and a.receiptdate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."') z
		where z.amount > z.payamount ) zz  ";
		$row13=Yii::app()->db->createCommand($sql13)->queryRow();
        
        $sql15 = "select *,case when total=0 then 0 else 0sd30/total end as a1,case when total=0 then 0 else 31sd60/total end as a2,case when total=0 then 0 else 61sd90/total end as a3,case when total=0 then 0 else 91sd120/total end as a4,case when total=0 then 0 else up120/total end as a5,case when total=0 then 0 else 100 end as a6
		from (select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120,ifnull(sum(tot),0) as total from (select case when umur >= 0 and umur <= 30 then payamount else 0 end as a1, case when umur > 30 and umur <= 60 then payamount else 0 end as a2,case when umur > 60 and umur <= 90 then payamount else 0 end as a3, case when umur > 90 and umur <= 120 then payamount else 0 end as a4, case when umur > 120 then payamount else 0 end as a5,case when umur >= 0 then payamount else 0 end as tot 
		from (select (a.payamount), datediff('".date(Yii::app()->params['datetodb'],strtotime($enddate))."',b.invoicedate) as umur
		from cashbankout e
		join cbapinv a on a.cashbankoutid=e.cashbankoutid
		join invoiceap b on b.invoiceapid=a.invoiceapid
		join addressbook c on c.addressbookid=b.addressbookid
		where e.recordstatus=3 and e.companyid={$companyid} and e.docdate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."') z ) zz) zzz;";
		
		$row15=Yii::app()->db->createCommand($sql15)->queryRow();
        
        $this->pdf->SetFont('Arial','',10);
        $this->pdf->row(array('1','HUTANG DAGANG 1-30',Yii::app()->format->formatCurrency($row13['0sd30']/$per),'',Yii::app()->format->formatCurrency($row15['0sd30']/$per)));
        $this->pdf->row(array('2','HUTANG DAGANG 31-60',Yii::app()->format->formatCurrency($row13['31sd60']/$per),'',Yii::app()->format->formatCurrency($row15['31sd60']/$per)));
        $this->pdf->row(array('3','HUTANG DAGANG 61-90',Yii::app()->format->formatCurrency($row13['61sd90']/$per),'',Yii::app()->format->formatCurrency($row15['61sd90']/$per)));
        $this->pdf->row(array('4','HUTANG DAGANG 91-120',Yii::app()->format->formatCurrency($row13['91sd120']/$per),'',Yii::app()->format->formatCurrency($row15['91sd120']/$per)));
        $this->pdf->row(array('5','HUTANG DAGANG > 120',Yii::app()->format->formatCurrency($row13['up120']/$per),'',Yii::app()->format->formatCurrency($row15['up120']/$per)));
        $this->pdf->setFont('Arial','B',10);
        $this->pdf->row(array('','TOTAL HUTANG DAGANG',Yii::app()->format->formatCurrency(($row13['0sd30']+$row13['31sd60']+$row13['61sd90']+$row13['91sd120']+$row13['up120'])/$per),'',Yii::app()->format->formatCurrency(($row15['0sd30']+$row15['31sd60']+$row15['61sd90']+$row15['91sd120']+$row15['up120'])/$per)));
        
        $this->pdf->setY($this->pdf->getY()+10);
        $this->pdf->SetFont('Arial','B',10);
        $this->pdf->text(10,$this->pdf->gety(),'7. PIUTANG DAGANG');
        
        $sql9 = "select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120
                from (select case when umur >= 0 and umur <= 30 then amount-payamount else 0 end as a1,
                            case when umur > 30 and umur <= 60 then amount-payamount else 0 end as a2,
                            case when umur > 60 and umur <= 90 then amount-payamount else 0 end as a3,
                            case when umur > 90 and umur <= 120 then amount-payamount else 0 end as a4,
                            case when umur > 120 then amount-payamount else 0 end as a5
                    from (select a.amount,datediff('".date(Yii::app()->params['datetodb'], strtotime($enddate))."',a.invoicedate) as umur,
                        ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)+ifnull(f.returnamount,0)+ifnull(f.obamount,0))*ifnull(f.currencyrate,0))
                            from cutarinv f
                            join cutar g on g.cutarid=f.cutarid
                            where g.recordstatus=3 and f.invoiceid=a.invoiceid and g.docdate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'),0) as payamount
                        from invoice a
                        inner join giheader b on b.giheaderid = a.giheaderid
                        inner join soheader c on c.soheaderid = b.soheaderid
                        inner join addressbook d on d.addressbookid = c.addressbookid
                        inner join paymentmethod e on e.paymentmethodid = c.paymentmethodid
                        inner join employee ff on ff.employeeid = c.employeeid
                        left join salesarea gg on gg.salesareaid = d.salesareaid
                        where a.recordstatus=3 and a.invoiceno is not null and c.companyid = ".$companyid." and a.invoicedate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
                    where amount > payamount) zz ";
        $row9=Yii::app()->db->createCommand($sql9)->queryRow();

        $this->pdf->setFont('Arial','',10);
        $this->pdf->sety($this->pdf->gety()+3);
        $this->pdf->colalign = array('C','C','C','C');
        $this->pdf->setwidths(array(15,100,50,25));
        $this->pdf->colheader = array('No','Keterangan','Nilai','%');
        $this->pdf->RowHeader();
        $this->pdf->coldetailalign = array('C','L','R','R');
        
        //$this->pdf->setFont('Arial','',12);
        $this->pdf->row(array('1','PIUTANG DAGANG 1 - 30',
			Yii::app()->format->formatCurrency($row9['0sd30']/$per),
			Yii::app()->format->formatCurrency(($row9['0sd30']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))* 100),
        ));
        $this->pdf->row(array('2','PIUTANG DAGANG 31 - 60',
			Yii::app()->format->formatCurrency($row9['31sd60']/$per),
			Yii::app()->format->formatCurrency(($row9['31sd60']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
        ));
        $this->pdf->row(array('3','PIUTANG DAGANG 61 - 90',
			Yii::app()->format->formatCurrency($row9['61sd90']/$per),
			Yii::app()->format->formatCurrency(($row9['61sd90']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
        ));
        $this->pdf->row(array('4','PIUTANG DAGANG 91 - 120',
			Yii::app()->format->formatCurrency($row9['91sd120']/$per),
			Yii::app()->format->formatCurrency(($row9['91sd120']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
        ));
        $this->pdf->row(array('5','PIUTANG DAGANG > 120',
			Yii::app()->format->formatCurrency($row9['up120']/$per),
			Yii::app()->format->formatCurrency(($row9['up120']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
        ));
        $this->pdf->setFont('Arial','B',10);
        $this->pdf->row(array('','TOTAL PIUTANG DAGANG',
			Yii::app()->format->formatCurrency(($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120'])/$per),
			Yii::app()->format->formatCurrency('100'),
        ));
        
		$this->pdf->sety($this->pdf->gety()+25);
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'KETERANGAN :');
		$this->pdf->SetFont('Arial','',10);
		$this->pdf->text(10,$this->pdf->gety()+5,'- Hari Ini Tanggal '.date('d',strtotime($enddate)));
		$this->pdf->text(10,$this->pdf->gety()+10,'- Kumulatif Tanggal '.date('d',strtotime($startdate)).' s/d '.date('d',strtotime($enddate)));
		$this->pdf->text(10,$this->pdf->gety()+15,'- Apabila masih trading, qty produksi belum bisa menggambarkan 100%.');
		$this->pdf->text(10,$this->pdf->gety()+20,'  Karena data qty produksi diambil dari pembelian trading ke produksi.');
		$this->pdf->text(10,$this->pdf->gety()+25,'  Kecuali untuk barang jadi, apabila setiap hari selalu melakukan jual-beli antara trading dan produksi');
		$this->pdf->text(10,$this->pdf->gety()+30,'- Data bisa dikatakan Valid apabila semua transaksi sudah diinput (up to date).');

        $date = date(Yii::app()->params['datetodb'],strtotime($enddate));
        $comcode = GetCompanyCode($companyid);
		$this->pdf->Output('DailyMonitoringReport'.$date.'.pdf', 'I');
		//$this->pdf->Output('/usr/share/nginx/html/agemlive/downloads/DailyMonitoringReport_'.$comcode.'_'.$date.'.pdf','F');
	}*/
	public function MonitoringReport($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		//$this->no_result();
		
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and c.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and x1.isdisplay = ".$isdisplay." ";
			if ($isdisplay == 1) {$display = " JUST DISPLAY";}
			if ($isdisplay == 0) {$display = " WITHOUT DISPLAY";}
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
			$display = "";
		}

		$connection = Yii::app()->db;
		$this->pdf->title='MONITORING REPORT'.$display;
		$datetime = new DateTime(date($enddate));

		$this->pdf->subtitle='Dari Tgl :  '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).'  s/d  '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P',array(210,310));

		$this->pdf->SetFont('Arial','b',10);
		$this->pdf->sety($this->pdf->gety()+5);

		$sql = "select a.materialgroupid,a.description
							from materialgroup a
							where a.recordstatus = 1 and a.isfg = 1
							order by a.nourut
		";
		$dataReader = Yii::app()->db->createCommand($sql)->queryAll();
			
		$sqlcompanyname = 'select companyname from company where companyid='.$companyid;
		$companyname = Yii::app()->db->createCommand($sqlcompanyname)->queryScalar();

		$this->pdf->text(10,$this->pdf->gety(),'1. QTY (PENJUALAN - RETUR) vs QTY PRODUKSI');
		$this->pdf->SetFont('Arial','',10);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,94,17,22,10,17,22));
		$this->pdf->colheader = array('No','Material Group','Hari Ini','Kumulatif','VS','Hari Ini','Kumulatif');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','R','R','C','R','R');	
		$i=0;
        
		foreach($dataReader as $row)
		{
			$sql1 = "select ifnull(sum(qty),0) as qty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
								".($isdisplay !='' ? joinTable('soheader','x1','x1.soheaderid=b1.soheaderid'):'')."
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
								".($sloc !='' ? joinTable('sloc','b5','b5.slocid=b3.slocid'):'')."
							where b0.recordstatus = 3 and b0.invoiceno is not null and b1.companyid = {$companyid} and b0.invoiceno is not null and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
								".($sloc !='' ? " and b5.sloccode like '%{$sloc}%'" : '')."
							) z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
								".($isdisplay !='' ? joinTable('soheader','x1','x1.soheaderid=d5.soheaderid'):'')."
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
                            ".($sloc !='' ? joinTable('sloc','d8','d8.slocid=d4.slocid'):'')."
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3." ".($sloc !='' ? " and d8.sloccode like '%{$sloc}%'" : '')." ) z) zz
			";
			$row1 = Yii::app()->db->createCommand($sql1)->queryScalar();
			
			$sql2 = "select ifnull(sum(qty),0) as kumqty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
								".($isdisplay !='' ? joinTable('soheader','x1','x1.soheaderid=b1.soheaderid'):'')."
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
                            ".($sloc !='' ? joinTable('sloc','b5','b5.slocid=b3.slocid'):'')."
							where b0.recordstatus = 3 and b0.invoiceno is not null and b1.companyid = {$companyid} and b0.invoiceno is not null and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3." ".($sloc !='' ? " and b5.sloccode like '%{$sloc}%'" : '').") z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
								".($isdisplay !='' ? joinTable('soheader','x1','x1.soheaderid=d5.soheaderid'):'')."
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
                            ".($sloc !='' ? joinTable('sloc','d8','d8.slocid=d4.slocid'):'')."
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3." ".($sloc !='' ? " and d8.sloccode like '%{$sloc}%'" : '')." ) z) zz
			";
			$row2 = Yii::app()->db->createCommand($sql2)->queryScalar();
			
			$sql3 = "select ifnull(sum(qtyoutput),0) as qtyoutput
							from productoutputfg a
							join productoutput b on b.productoutputid=a.productoutputid
							join productplant c on c.productid=a.productid and c.slocid=a.slocid and c.unitofissue=a.uomid
								".($sloc !='' ? joinTable('sloc','d','d.slocid=a.slocid'):'')."
							where b.companyid = {$companyid} and b.recordstatus = 3 and b.productoutputdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and c.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) ".($sloc !='' ? " and d.sloccode like '%{$sloc}%'" : '')."
			";
			$row3 = Yii::app()->db->createCommand($sql3)->queryScalar();
			
			$sql4 = "select ifnull(sum(qtyoutput),0) as kumqtyoutput
							from productoutputfg a
							join productoutput b on b.productoutputid=a.productoutputid
							join productplant c on c.productid=a.productid and c.slocid=a.slocid and c.unitofissue=a.uomid
								".($sloc !='' ? joinTable('sloc','d','d.slocid=a.slocid'):'')."
							where b.companyid = {$companyid} and b.recordstatus = 3 and b.productoutputdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and c.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) ".($sloc !='' ? " and d.sloccode like '%{$sloc}%'" : '')."
			";
			$row4 = Yii::app()->db->createCommand($sql4)->queryScalar();
			
			$cmd1 = "select b.addressbookid
							from addressbook b
							where b.fullname = (select replace(a.companyname,'TRADING','PRODUKSI')
							from company a
							where a.companyid = {$companyid} and a.companyname like '%TRADING')
			";
			$addressbook = Yii::app()->db->createCommand($cmd1)->queryScalar();
			
			$cmd = "select ifnull(count(1),0)
								from company a
								where a.companyid = {$companyid} and a.companyname like '%trading'
			";
			$company = Yii::app()->db->createCommand($cmd)->queryScalar();
			
			if ($company == 0)
			{
				$row7 = $row3;
				$row8 = $row4;
			}
			else
			{
				$sql5 = "select ifnull(sum(a.qty),0) as grqty
								from productstockdet a
								join productplant b on b.productid=a.productid and b.slocid=a.slocid
								join grheader c on c.grno=a.referenceno
								join sloc d on d.slocid=a.slocid
								join plant e on e.plantid=d.plantid and e.companyid=c.companyid
								join poheader f on f.poheaderid=c.poheaderid
								where c.recordstatus=3 and c.companyid = {$companyid} and f.addressbookid = {$addressbook} and a.transdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and b.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']})
									".($sloc !='' ? " and d.sloccode like '%{$sloc}%'" : '')."
				";
				$row5 = Yii::app()->db->createCommand($sql5)->queryScalar();

				$sql6 = "select ifnull(sum(a.qty),0) as kumgrqty
								from productstockdet a
								join productplant b on b.productid=a.productid and b.slocid=a.slocid
								join grheader c on c.grno=a.referenceno
								join sloc d on d.slocid=a.slocid
								join plant e on e.plantid=d.plantid and e.companyid=c.companyid
								join poheader f on f.poheaderid=c.poheaderid
								where c.recordstatus=3 and c.companyid = {$companyid} and f.addressbookid = {$addressbook} and a.transdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and b.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']})
									".($sloc !='' ? " and d.sloccode like '%{$sloc}%'" : '')."
				";
				$row6 = Yii::app()->db->createCommand($sql6)->queryScalar();
				
				$row7 = $row5;
				$row8 = $row6;
			}

			$i+=1;
			$this->pdf->setFont('Arial','',10);
			$this->pdf->row(array(
				$i,$row['description'],
				Yii::app()->format->formatCurrency($row1),
				Yii::app()->format->formatCurrency($row2),
				'',
				Yii::app()->format->formatCurrency($row7),
				Yii::app()->format->formatCurrency($row8),
			));
			
		}

		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'2. NILAI PENJUALAN - RETUR');
		$this->pdf->SetFont('Arial','',10);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(10,94,35,40));
		$this->pdf->colheader = array('No','Material Group','Hari Ini','Kumulatif');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','R','R');	
		$i=0;$totalnilai=0;$totalkumnilai=0;
		
		foreach($dataReader as $row)
		{
			$sql1 = "select ifnull(sum(netto),0) as qty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
								".($isdisplay !='' ? joinTable('soheader','x1','x1.soheaderid=b1.soheaderid'):'')."
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
								".($sloc !='' ? joinTable('sloc','b5','b5.slocid=b3.slocid'):'')."
							where b0.recordstatus = 3 and b0.invoiceno is not null and b1.companyid = {$companyid} and b0.invoiceno is not null and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3." ".($sloc !='' ? " and b5.sloccode like '%{$sloc}%'" : '').") z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
								".($isdisplay !='' ? joinTable('soheader','x1','x1.soheaderid=d5.soheaderid'):'')."
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
                            ".($sloc !='' ? joinTable('sloc','d8','d8.slocid=d2.slocid'):'')."
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3." ".($sloc !='' ? " and d8.sloccode like '%{$sloc}%'" : '')."
                            ) z) zz
			";
			$row1 = Yii::app()->db->createCommand($sql1)->queryScalar();
			
			$sql2 = "select ifnull(sum(netto),0) as kumqty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
								".($isdisplay !='' ? joinTable('soheader','x1','x1.soheaderid=b1.soheaderid'):'')."
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
								".($sloc !='' ? joinTable('sloc','b5','b5.slocid=b3.slocid'):'')."
							where b0.recordstatus = 3 and b0.invoiceno is not null and b1.companyid = {$companyid} and b0.invoiceno is not null and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3." ".($sloc !='' ? " and b5.sloccode like '%{$sloc}%'" : '')." ) z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
								".($isdisplay !='' ? joinTable('soheader','x1','x1.soheaderid=d5.soheaderid'):'')."
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
                            ".($sloc !='' ? joinTable('sloc','d8','d8.slocid=d2.slocid'):'')."
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3." ".($sloc !='' ? " and d8.sloccode like '%{$sloc}%'" : '').") z) zz
			";
			$row2 = Yii::app()->db->createCommand($sql2)->queryScalar();

			$i+=1;
			$this->pdf->setFont('Arial','',10);
			$this->pdf->row(array(
				$i,$row['description'],
				Yii::app()->format->formatCurrency($row1/$per),
				Yii::app()->format->formatCurrency($row2/$per),
			));
			$totalnilai += $row1/$per;
			$totalkumnilai += $row2/$per;
		}
		$this->pdf->setFont('Arial','B',10);
		$this->pdf->row(array(
			'','TOTAL NILAI PENJUALAN - RETUR ALL PRODUK >>>',
			Yii::app()->format->formatCurrency($totalnilai),
			Yii::app()->format->formatCurrency($totalkumnilai),
		));
		
		$this->pdf->CheckNewPage(5);

        $this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'3. PENCAPAIAN SALES ');
		$this->pdf->SetFont('Arial','',10);
		//$first_month = '';
		$month = date('m',strtotime($startdate));
		$year = date('Y',strtotime($startdate));
		$day = $year.'-'.$month.'-01';
        //$this->pdf->setY($this->pdf->getY()+5);
			
		$sqlplant = "select plantid,plantcode,description
							from plant where companyid = ".$companyid;
		$plant = Yii::app()->db->createCommand($sqlplant)->queryAll();
		$k=1;
		foreach($plant as $rows)
		{
				$sqlpenc = "select sum(netto1) as netto, sum(netto2) as netto2, invoicedate from
							(select fullname,sum(nom) as nominal,(sum(nom)-sum(nett1)) as disc,sum(nett1) as netto1, sum(nett2) netto2, invoicedate from
							(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett1,
															ifnull((select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
															join giheader zzc on zzc.giheaderid = zzb.giheaderid
															join invoice zzd on zzd.giheaderid = zzc.giheaderid
							where zzd.recordstatus = a.recordstatus and zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid
															and zzd.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'),0) as nett2
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
                            join plant l on l.plantid = h.plantid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = {$companyid} and h.sloccode like '%%' and d.fullname like '%%' and
							e.fullname like '%%' and f.areaname like '%%' and i.productname like '%%' and a.invoiceno is not null and 
							a.invoiceno is not null and a.invoicedate between '{$day}' and
							'".date(Yii::app()->params['datetodb'],strtotime($enddate))."' ".$isdisplay1." and l.plantid = {$rows['plantid']} )z group by fullname
							union
							select fullname, -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett1)) as disc, -1*sum(nett1) as netto1,ifnull(-1*sum(nett2),0) as netto2,invoicedate from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,sum(a.qty*g.price) as nom,a.price as harga,sum(a.qty*a.price) as nett1,ifnull((select sum(qty*price) from notagirpro o join notagir p on o.notagirid = p.notagirid where o.notagirid = b.notagirid and p.docdate='".date(Yii::app()->params['datetodb'],strtotime($enddate))."'),0) as nett2, b.headernote,k.fullname,d.gireturdate as invoicedate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
                            join plant n on n.plantid = j.plantid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%%' 
							and k.fullname like '%%' and l.fullname like '%%' and m.areaname like '%%'
							and i.productname like '%%' and d.gireturdate between '{$day}' and
							'".date(Yii::app()->params['datetodb'],strtotime($enddate))."' ".$isdisplay2." and n.plantid = {$rows['plantid']}
                            group by notagirno
                            order by notagirno,notagirproid
							)z group by fullname) zz order by fullname";
				$penc = Yii::app()->db->createCommand($sqlpenc)->queryRow();
				$this->pdf->text(14,$this->pdf->gety()+5*$k,'PENCAPAIAN '.$rows['plantcode'].' : '.Yii::app()->format->formatCurrency($penc['netto2']/$per).'/'.Yii::app()->format->formatCurrency($penc['netto']/$per));
				$k++;
                $this->pdf->setY($this->pdf->getY());
		}
        
		$this->pdf->sety($this->pdf->gety()+5+(5*$k));
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'4. TAGIHAN HARI INI / KUMULATIF TAGIHAN');
		$this->pdf->SetFont('Arial','',10);
		
		$sql10 = "select sum(a.cashamount + a.bankamount)
						from cutarinv a
						join cutar b on b.cutarid=a.cutarid
							".(($sloc !='' or $isdisplay !='') ? joinTable('invoice','c','c.invoiceid=a.invoiceid'):'')."
							".(($sloc !='' or $isdisplay !='') ? joinTable('giheader','d','d.giheaderid=c.giheaderid'):'')."
							".($isdisplay !='' ? joinTable('soheader','x1','x1.soheaderid=d.soheaderid'):'')."
						where b.recordstatus=3 and b.companyid = ".$companyid." and b.docdate = '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
                        ".($sloc !='' ? " and d.giheaderid in( select giheaderid from gidetail x join sloc y on y.slocid = x.slocid where y.sloccode like '%{$sloc}%'and x.giheaderid = d.giheaderid )" : '')."
		";
		$row10=Yii::app()->db->createCommand($sql10)->queryScalar();
		
		$sql11 = "select sum(a.cashamount + a.bankamount)
						from cutarinv a
						join cutar b on b.cutarid=a.cutarid
							".(($sloc !='' or $isdisplay !='') ? joinTable('invoice','c','c.invoiceid=a.invoiceid'):'')."
							".(($sloc !='' or $isdisplay !='') ? joinTable('giheader','d','d.giheaderid=c.giheaderid'):'')."
							".($isdisplay !='' ? joinTable('soheader','x1','x1.soheaderid=d.soheaderid'):'')."
						where b.recordstatus=3 and b.companyid = ".$companyid." and b.docdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
                        ".($sloc !='' ? " and d.giheaderid in( select giheaderid from gidetail x join sloc y on y.slocid = x.slocid where y.sloccode like '%{$sloc}%'and x.giheaderid = d.giheaderid )" : '')."
		";
		$row11=Yii::app()->db->createCommand($sql11)->queryScalar();
		
		$this->pdf->text(14,$this->pdf->gety()+5,Yii::app()->format->formatCurrency($row10/$per).' / '.Yii::app()->format->formatCurrency($row11/$per));
        
        $this->pdf->sety($this->pdf->gety()+15);
        $this->pdf->SetFont('Arial','B',10);
        $this->pdf->text(10,$this->pdf->gety(),'5. PERSEDIAAN ');
        $this->pdf->SetFont('Arial','',10);

        $connection = Yii::app()->db;
        $sqlfg = "call hitungsaldodate(:vfg,:vdate,:vcompanyid,@vsaldoakhir)";
        $command1 = $connection->createCommand($sqlfg);
        $command1->bindvalue(':vfg','11050101',PDO::PARAM_STR);
        $command1->bindvalue(':vdate',date(Yii::app()->params['datetodb'],strtotime($enddate)),PDO::PARAM_STR);
        $command1->bindvalue(':vcompanyid',$companyid,PDO::PARAM_STR);
        $command1->execute();

        $qfg = "select @vsaldoakhir as saldoakhir";
        $tmt1 = Yii::app()->db->createCommand($qfg);
        $tmt1->execute();
        $fg = $tmt1->queryRow();

        $sqlwip = "call hitungsaldodate(:vwip,:vdate,:vcompanyid,@vsaldoakhir)";
        $command2 = $connection->createCommand($sqlwip);
        $command2->bindvalue(':vwip','11050103',PDO::PARAM_STR);
        $command2->bindvalue(':vdate',date(Yii::app()->params['datetodb'],strtotime($enddate)),PDO::PARAM_STR);
        $command2->bindvalue(':vcompanyid',$companyid,PDO::PARAM_STR);
        $command2->execute();

        $qwip = "select @vsaldoakhir as saldoakhir";
        $tmt2 = Yii::app()->db->createCommand($qwip);
        $tmt2->execute();
        $wip = $tmt2->queryRow();

        $sqlrw = "call hitungsaldodate(:vrw,:vdate,:vcompanyid,@vsaldoakhir)";
        $command3 = $connection->createCommand($sqlrw);
        $command3->bindvalue(':vrw','11050102',PDO::PARAM_STR);
        $command3->bindvalue(':vdate',date(Yii::app()->params['datetodb'],strtotime($enddate)),PDO::PARAM_STR);
        $command3->bindvalue(':vcompanyid',$companyid,PDO::PARAM_STR);
        $command3->execute();

        $qrw = "select @vsaldoakhir as saldoakhir";
        $tmt3 = Yii::app()->db->createCommand($qrw);
        $tmt3->execute();
        $rw = $tmt3->queryRow();

        
        $this->pdf->text(14,$this->pdf->gety()+5,'PERSEDIAAN FG   :'.Yii::app()->format->formatCurrency($fg['saldoakhir']/$per));
        $this->pdf->text(14,$this->pdf->gety()+10,'PERSEDIAAN WIP :'.Yii::app()->format->formatCurrency($wip['saldoakhir']/$per));
        $this->pdf->text(14,$this->pdf->gety()+15,'PERSEDIAAN RW  :'.Yii::app()->format->formatCurrency($rw['saldoakhir']/$per));
        
        
        $this->pdf->setY($this->pdf->getY()+25);
        
        $this->pdf->SetFont('Arial','B',10);
        $this->pdf->text(10,$this->pdf->gety(),'6. HUTANG DAGANG vs PEMBAYARAN');
		$this->pdf->SetFont('Arial','',10);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C');
		$this->pdf->setwidths(array(10,60,50,10,50));
		$this->pdf->colheader = array('No','Umur','Jumlah','VS','Jumlah');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','R','C','R');
        
        $sql13 = "select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120
		from (select (amount)-(payamount) , case when umur >= 0 and umur <= 30 then amount-payamount else 0 end as a1,
		case when umur > 30 and umur <= 60 then amount-payamount else 0 end as a2,
		case when umur > 60 and umur <= 90 then amount-payamount else 0 end as a3,
		case when umur > 90 and umur <= 120 then amount-payamount else 0 end as a4,
		case when umur > 120 then amount-payamount else 0 end as a5 from (select a.amount, 
		ifnull((select sum(payamount) from cbapinv j
		left join cashbankout k on k.cashbankoutid=j.cashbankoutid
		where k.recordstatus=3 and j.invoiceapid=a.invoiceapid
		and k.docdate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
		group by invoiceapid),0) as payamount,
		datediff('".date(Yii::app()->params['datetodb'],strtotime($enddate))."',a.invoicedate) as umur
		from invoiceap a
		left join grheader b on b.grheaderid = a.grheaderid
		inner join poheader c on c.poheaderid = a.poheaderid
		inner join addressbook d on d.addressbookid = c.addressbookid
		inner join paymentmethod e on e.paymentmethodid = c.paymentmethodid
		where a.recordstatus=3 and a.invoiceno is not null and c.companyid = {$companyid}
		and a.receiptdate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
        ".($sloc !='' ? " and b.grheaderid in( select grheaderid from grdetail x join sloc y on y.slocid = x.slocid where y.sloccode like '%{$sloc}%'and x.grheaderid = b.grheaderid )" : '')."
        ) z
		where z.amount > z.payamount ) zz  ";
		$row13=Yii::app()->db->createCommand($sql13)->queryRow();
        
        $sql15 = "select *,case when total=0 then 0 else 0sd30/total end as a1,case when total=0 then 0 else 31sd60/total end as a2,case when total=0 then 0 else 61sd90/total end as a3,case when total=0 then 0 else 91sd120/total end as a4,case when total=0 then 0 else up120/total end as a5,case when total=0 then 0 else 100 end as a6
		from (select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120,ifnull(sum(tot),0) as total from (select case when umur >= 0 and umur <= 30 then payamount else 0 end as a1, case when umur > 30 and umur <= 60 then payamount else 0 end as a2,case when umur > 60 and umur <= 90 then payamount else 0 end as a3, case when umur > 90 and umur <= 120 then payamount else 0 end as a4, case when umur > 120 then payamount else 0 end as a5,case when umur >= 0 then payamount else 0 end as tot 
		from (select (a.payamount), datediff('".date(Yii::app()->params['datetodb'],strtotime($enddate))."',b.invoicedate) as umur
		from cashbankout e
		join cbapinv a on a.cashbankoutid=e.cashbankoutid
		join invoiceap b on b.invoiceapid=a.invoiceapid
		join addressbook c on c.addressbookid=b.addressbookid
        ".($sloc !='' ? joinTable('grheader','f','f.grheaderid=b.grheaderid'):'')."
		where e.recordstatus=3 and e.companyid={$companyid} and e.docdate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
        ".($sloc !='' ? " and f.grheaderid in( select grheaderid from grdetail x join sloc y on y.slocid = x.slocid where y.sloccode like '%{$sloc}%'and x.grheaderid = f.grheaderid )" : '')." ) z ) zz) zzz;";
		
		$row15=Yii::app()->db->createCommand($sql15)->queryRow();
        
        $this->pdf->SetFont('Arial','',10);
        $this->pdf->row(array('1','HUTANG DAGANG 1-30',Yii::app()->format->formatCurrency($row13['0sd30']/$per),'',Yii::app()->format->formatCurrency($row15['0sd30']/$per)));
        $this->pdf->row(array('2','HUTANG DAGANG 31-60',Yii::app()->format->formatCurrency($row13['31sd60']/$per),'',Yii::app()->format->formatCurrency($row15['31sd60']/$per)));
        $this->pdf->row(array('3','HUTANG DAGANG 61-90',Yii::app()->format->formatCurrency($row13['61sd90']/$per),'',Yii::app()->format->formatCurrency($row15['61sd90']/$per)));
        $this->pdf->row(array('4','HUTANG DAGANG 91-120',Yii::app()->format->formatCurrency($row13['91sd120']/$per),'',Yii::app()->format->formatCurrency($row15['91sd120']/$per)));
        $this->pdf->row(array('5','HUTANG DAGANG > 120',Yii::app()->format->formatCurrency($row13['up120']/$per),'',Yii::app()->format->formatCurrency($row15['up120']/$per)));
        $this->pdf->setFont('Arial','B',10);
        $this->pdf->row(array('','TOTAL HUTANG DAGANG',Yii::app()->format->formatCurrency(($row13['0sd30']+$row13['31sd60']+$row13['61sd90']+$row13['91sd120']+$row13['up120'])/$per),'',Yii::app()->format->formatCurrency(($row15['0sd30']+$row15['31sd60']+$row15['61sd90']+$row15['91sd120']+$row15['up120'])/$per)));
        
        $this->pdf->setY($this->pdf->getY()+10);
        $this->pdf->SetFont('Arial','B',10);
        $this->pdf->text(10,$this->pdf->gety(),'7. PIUTANG DAGANG');
        
        $sql9 = "select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120
                from (select case when umur >= 0 and umur <= 30 then amount-payamount else 0 end as a1,
                            case when umur > 30 and umur <= 60 then amount-payamount else 0 end as a2,
                            case when umur > 60 and umur <= 90 then amount-payamount else 0 end as a3,
                            case when umur > 90 and umur <= 120 then amount-payamount else 0 end as a4,
                            case when umur > 120 then amount-payamount else 0 end as a5
                    from (select a.amount,datediff('".date(Yii::app()->params['datetodb'], strtotime($enddate))."',a.invoicedate) as umur,
                        ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)+ifnull(f.returnamount,0)+ifnull(f.obamount,0))*ifnull(f.currencyrate,0))
                            from cutarinv f
                            join cutar g on g.cutarid=f.cutarid
                            where g.recordstatus=3 and f.invoiceid=a.invoiceid and g.docdate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'),0) as payamount
                        from invoice a
                        inner join giheader b on b.giheaderid = a.giheaderid
                        inner join soheader c on c.soheaderid = b.soheaderid
                        inner join addressbook d on d.addressbookid = c.addressbookid
                        inner join paymentmethod e on e.paymentmethodid = c.paymentmethodid
                        inner join employee ff on ff.employeeid = c.employeeid
                        left join salesarea gg on gg.salesareaid = d.salesareaid
                        where a.recordstatus=3 and a.invoiceno is not null and c.companyid = ".$companyid." and a.invoicedate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay1."
                        ".($sloc !='' ? " and b.giheaderid in( select giheaderid from gidetail x join sloc y on y.slocid = x.slocid where y.sloccode like '%{$sloc}%'and x.giheaderid = b.giheaderid )" : '')."
                        ) z
                    where amount > payamount) zz ";
        $row9=Yii::app()->db->createCommand($sql9)->queryRow();

        $this->pdf->setFont('Arial','',10);
        $this->pdf->sety($this->pdf->gety()+3);
        $this->pdf->colalign = array('C','C','C','C');
        $this->pdf->setwidths(array(15,100,50,25));
        $this->pdf->colheader = array('No','Keterangan','Nilai','%');
        $this->pdf->RowHeader();
        $this->pdf->coldetailalign = array('C','L','R','R');
        
        //$this->pdf->setFont('Arial','',12);
        $this->pdf->row(array('1','PIUTANG DAGANG 1 - 30',
			Yii::app()->format->formatCurrency($row9['0sd30']/$per),
			Yii::app()->format->formatCurrency(($row9['0sd30']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))* 100),
        ));
        $this->pdf->row(array('2','PIUTANG DAGANG 31 - 60',
			Yii::app()->format->formatCurrency($row9['31sd60']/$per),
			Yii::app()->format->formatCurrency(($row9['31sd60']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
        ));
        $this->pdf->row(array('3','PIUTANG DAGANG 61 - 90',
			Yii::app()->format->formatCurrency($row9['61sd90']/$per),
			Yii::app()->format->formatCurrency(($row9['61sd90']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
        ));
        $this->pdf->row(array('4','PIUTANG DAGANG 91 - 120',
			Yii::app()->format->formatCurrency($row9['91sd120']/$per),
			Yii::app()->format->formatCurrency(($row9['91sd120']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
        ));
        $this->pdf->row(array('5','PIUTANG DAGANG > 120',
			Yii::app()->format->formatCurrency($row9['up120']/$per),
			Yii::app()->format->formatCurrency(($row9['up120']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
        ));
        $this->pdf->setFont('Arial','B',10);
        $this->pdf->row(array('','TOTAL PIUTANG DAGANG',
			Yii::app()->format->formatCurrency(($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120'])/$per),
			Yii::app()->format->formatCurrency('100'),
        ));
        
		$this->pdf->sety($this->pdf->gety()+25);
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'KETERANGAN :');
		$this->pdf->SetFont('Arial','',10);
		$this->pdf->text(10,$this->pdf->gety()+5,'- Hari Ini Tanggal '.date('d',strtotime($enddate)));
		$this->pdf->text(10,$this->pdf->gety()+10,'- Kumulatif Tanggal '.date('d',strtotime($startdate)).' s/d '.date('d',strtotime($enddate)));
		$this->pdf->text(10,$this->pdf->gety()+15,'- Apabila masih trading, qty produksi belum bisa menggambarkan 100%.');
		$this->pdf->text(10,$this->pdf->gety()+20,'  Karena data qty produksi diambil dari pembelian trading ke produksi.');
		$this->pdf->text(10,$this->pdf->gety()+25,'  Kecuali untuk barang jadi, apabila setiap hari selalu melakukan jual-beli antara trading dan produksi');
		$this->pdf->text(10,$this->pdf->gety()+30,'- Data bisa dikatakan Valid apabila semua transaksi sudah diinput (up to date).');

        $date = date(Yii::app()->params['datetodb'],strtotime($enddate));
        $comcode = GetCompanyCode($companyid);
		$this->pdf->Output('DailyMonitoringReport'.$date.'.pdf', 'I');
		//$this->pdf->Output('/usr/share/nginx/html/agemlive/downloads/DailyMonitoringReport_'.$comcode.'_'.$date.'.pdf','F');
	}
	//81
	public function LaporanCustomerBelumAdaKategori($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
		$this->pdf->title='Laporan Belum Ada Kategori Customer';
					//$this->pdf->subtitle='Per Tahun '.date('Y',strtotime($enddate));
					$this->pdf->AddPage('P');
		
		$sql = "select a.addressbookid, a.fullname, a.recordstatus, (select b.addressname from address b where b.addressbookid=a.addressbookid Limit 1) as addressname, c.areaname, d.custcategoryname
									from addressbook a
									left join salesarea c on c.salesareaid = a.salesareaid
									left join custcategory d on d.custcategoryid = a.custcategoryid
		";
		$where = "where a.iscustomer=1 and a.recordstatus=1 and a.custcategoryid is null ";
		if(isset($customer) && $customer!=''){
				$where .= " AND a.fullname LIKE '%".$customer."%' ";
		}
		if(isset($salesarea) && $salesarea!=''){
				$where .= " AND c.areaname LIKE '%".$salesarea."%' ";
		}
		$where .= " ORDER BY a.fullname";
		
		$cmd = Yii::app()->db->createCommand($sql.$where);
		$dataReader=$cmd->queryAll();
		
		$this->pdf->colalign = array('C','C','L','C','C');
		$this->pdf->setwidths(array(10,40,50,77,25));
		$this->pdf->colheader = array('No',getCatalog('fullname'),getCatalog('addressname'),getCatalog('areaname'));
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','L','L','C');
		$i=1;
		$this->pdf->setFont('Arial','',10);
		foreach($dataReader as $row)
					{
							$this->pdf->row(array(
							$i,
							$row['fullname'],
							$row['addressname'],
							$row['areaname'],
							));
							$i++;
		}
		$this->pdf->Output();
	}	
	//82
	public function LaporanCustomerSudahAdaKategori($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
		$this->pdf->title='Laporan Sudah Ada Kategori Customer';
					//$this->pdf->subtitle='Per Tahun '.date('Y',strtotime($enddate));
					$this->pdf->AddPage('P');
		
		$sql = "select a.addressbookid, a.fullname, a.recordstatus, (select b.addressname from address b where b.addressbookid=a.addressbookid Limit 1) as addressname, c.areaname, d.custcategoryname
									from addressbook a
									left join salesarea c on c.salesareaid = a.salesareaid
									left join custcategory d on d.custcategoryid = a.custcategoryid
		";
		$where = "where a.iscustomer=1 and a.recordstatus=1 and a.custcategoryid is not null ";
		if(isset($customer) && $customer!=''){
				$where .= " AND a.fullname LIKE '%".$customer."%' ";
		}
		if(isset($salesarea) && $salesarea!=''){
				$where .= " AND c.areaname LIKE '%".$salesarea."%' ";
		}
		$where .= " ORDER BY a.fullname";
		
		$cmd = Yii::app()->db->createCommand($sql.$where);
		$dataReader=$cmd->queryAll();
		
		$this->pdf->colalign = array('C','C','L','C','C');
		$this->pdf->setwidths(array(10,40,50,77,25));
		$this->pdf->colheader = array('No',getCatalog('fullname'),getCatalog('addressname'),getCatalog('areaname'));
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','L','L','C');
		$i=1;
		$this->pdf->setFont('Arial','',10);
		foreach($dataReader as $row)
					{
							$this->pdf->row(array(
							$i,
							$row['fullname'],
							$row['addressname'],
							$row['areaname'],
							));
							$i++;
		}
		$this->pdf->Output();
	}
	//83
	public function LaporanCustomerBelumAdaGrade($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
		$this->pdf->title='Laporan Customer Belum Ada Grade';
					//$this->pdf->subtitle='Per Tahun '.date('Y',strtotime($enddate));
					$this->pdf->AddPage('P');
		
		$sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname, d.custgradename
									from addressbook a
									left join address b on a.addressbookid = b.addressbookid
									left join salesarea c on c.salesareaid = a.salesareaid
									left join custgrade d on d.custgradeid = a.custgradeid
		";
		$where = "where a.iscustomer=1 and a.recordstatus=1 and a.custgradeid is null ";
		if(isset($customer) && $customer!=''){
				$where .= " AND a.fullname LIKE '%".$customer."%' ";
		}
		if(isset($salesarea) && $salesarea!=''){
				$where .= " AND c.areaname LIKE '%".$salesarea."%' ";
		}
		$where .= " ORDER BY a.fullname";
		
		$cmd = Yii::app()->db->createCommand($sql.$where);
		$dataReader=$cmd->queryAll();
		
		$this->pdf->colalign = array('C','C','L','C','C');
		$this->pdf->setwidths(array(10,40,50,77,25));
		$this->pdf->colheader = array('No',getCatalog('fullname'),getCatalog('addressname'),getCatalog('areaname'));
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','L','L','C');
		$i=1;
		$this->pdf->setFont('Arial','',10);
		foreach($dataReader as $row)
					{
							$this->pdf->row(array(
							$i,
							$row['fullname'],
							$row['addressname'],
							$row['areaname'],
							));
							$i++;
		}
		$this->pdf->Output();
	}
	//84
	public function LaporanCustomerSudahAdaGrade($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
		$this->pdf->title='Laporan Customer Sudah Ada Grade';
					//$this->pdf->subtitle='Per Tahun '.date('Y',strtotime($enddate));
					$this->pdf->AddPage('P');
		
		$sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname, d.custgradename
									from addressbook a
									left join address b on a.addressbookid = b.addressbookid
									left join salesarea c on c.salesareaid = a.salesareaid
									left join custgrade d on d.custgradeid = a.custgradeid
		";
		$where = "where a.iscustomer=1 and a.recordstatus=1 and a.custgradeid is not null ";
		if(isset($customer) && $customer!=''){
				$where .= " AND a.fullname LIKE '%".$customer."%' ";
		}
		if(isset($salesarea) && $salesarea!=''){
				$where .= " AND c.areaname LIKE '%".$salesarea."%' ";
		}
		$where .= " ORDER BY a.fullname";
		
		$cmd = Yii::app()->db->createCommand($sql.$where);
		$dataReader=$cmd->queryAll();
		
		$this->pdf->colalign = array('C','C','L','C','C');
		$this->pdf->setwidths(array(10,40,50,77,25));
		$this->pdf->colheader = array('No',getCatalog('fullname'),getCatalog('addressname'),getCatalog('areaname'));
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','L','L','C');
		$i=1;
		$this->pdf->setFont('Arial','',10);
		foreach($dataReader as $row)
					{
							$this->pdf->row(array(
							$i,
							$row['fullname'],
							$row['addressname'],
							$row['areaname'],
							));
							$i++;
		}
		$this->pdf->Output();
	}
	//85
	public function LaporanPenjualanReturPenjulanPerCabangPerSalesPerMaterialgroup($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$this->pdf->title='Laporan Penjualan - Retur Per Cabang Per Sales Per Group Material FG';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','A4');
		
		$this->pdf->setY($this->pdf->getY()+5);
		$maxrecinvoice = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appinvar')")->queryScalar();
		$maxrecnotagir = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appnotagir')")->queryScalar();
		$sql1 = "select distinct a.plantid, a.plantcode, a.description from plant a left join sloc b on b.plantid=a.plantid where a.companyid = ".$companyid." and b.sloccode like '%".$sloc."%' order by plantid desc";
		$query1 = Yii::app()->db->createCommand($sql1)->queryAll();
		
		$grandtotalqty1 = 0;
		$grandtotalqty2 = 0;
		$grandtotalnett1 = 0;
		$grandtotalnett2 = 0;
				
		foreach($query1 as $row1)
		{
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->text(10,$this->pdf->getY(),'PLANT / CABANG : ');
			$this->pdf->text(45,$this->pdf->getY(),$row1['description']);
			
            $subplantqty1 = 0;
            $subplantqty2 = 0;
            $subplantnett1 = 0;
            $subplantnett2 = 0;
            
			$sql2 = "select distinct addressbookid,fullname,salesname,employeeid from 
					(select distinct g.addressbookid,g.fullname, f.fullname as salesname,f.employeeid
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join employee f on f.employeeid = b.employeeid
					join addressbook g on g.addressbookid = b.addressbookid  
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
                    join plant l on l.plantid = i.plantid
					join invoice j on j.giheaderid = h.giheaderid
					join salesarea k on k.salesareaid = g.salesareaid
					where j.recordstatus = {$maxrecinvoice} and b.companyid = {$companyid} and l.plantid = {$row1['plantid']} and i.sloccode like '%{$sloc}%' 
					and g.fullname like '%{$customer}%' and f.fullname like '%{$employee}%'  
					and e.productname like '%{$product}%' and k.areaname like '%{$salesarea}%' 
					and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."'
					and	'".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
					union
					select distinct k.addressbookid,k.fullname,l.fullname as salesname,h.employeeid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
                    join plant n on n.plantid = j.plantid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					where h.companyid = {$companyid} and b.recordstatus = {$maxrecnotagir} and n.plantid = {$row1['plantid']} and j.sloccode like '%{$sloc}%' 
					and k.fullname like '%{$customer}%' and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and d.gireturdate between 
					'".date(Yii::app()->params['datetodb'],strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."')z group by salesname order by salesname ";
			$query2 = Yii::app()->db->createCommand($sql2)->queryAll();
			foreach($query2 as $row2)
			{
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->text(15,$this->pdf->getY()+5,'NAMA SALES : '.$row2['salesname']);
				$this->pdf->setY($this->pdf->getY()+8);
				$this->pdf->getY()+10;
				$this->pdf->setFont('Arial','',9);
				$this->pdf->colalign = array('C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,110,25,35,30,35,30));
				$this->pdf->colheader = array('No','Material Group','Qty','Kum Qty','Value','Kum. Value','H. Rata2');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('C','L','R','R','R','R','R');
				$sql3 = "select materialgroupid, description, materialgroupcode from materialgroup where isfg=1 and description like '%{$materialgroup}%'";
				$query3 = Yii::app()->db->createCommand($sql3)->queryAll();
				$i=1;
				
                $result['materialgroup'] = array();
				$subtotalqty1 = 0;
				$subtotalqty2 = 0;
				$subtotalnett1 = 0;
				$subtotalnett2 = 0;
				foreach($query3 as $row3)
				{
                    
					/*$sql4 = "select ifnull(sum(qty),0) as qty, ifnull(sum(nett),0) as netto, ifnull(sum(total),0) as total from (select sum(qty) as qty, sum(nett) as nett, sum(total) as total from (select (ss.qty), (select (getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
										 from gidetail zzb 
										 join sodetail zza on zza.sodetailid = zzb.sodetailid
										 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett,
										 ss.productid,g.price*ss.qty as total,g.price
									from invoice a
									join giheader b on b.giheaderid = a.giheaderid
									join soheader c on c.soheaderid = b.soheaderid
									join addressbook d on d.addressbookid = c.addressbookid
									join employee e on e.employeeid = c.employeeid
									join salesarea f on f.salesareaid = d.salesareaid
									-- join sodetail g on g.sodetailid = b.soheaderid
									join gidetail ss on ss.giheaderid = b.giheaderid
									join sodetail g on g.sodetailid = ss.sodetailid
									join sloc h on h.slocid = ss.slocid
									join product i on i.productid = ss.productid
									join productplant j on j.productid = i.productid and j.slocid=h.slocid
									join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
									join materialgroup l on l.materialgroupid = j.materialgroupid
									where a.recordstatus = {$maxrecinvoice} and a.invoiceno is not null and invoiceno not like '%-%-%' and
									c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid = {$row2['employeeid']} and d.fullname like '%{$customer}%' and e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
									and a.invoicedate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' 
									and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
									and l.parentmatgroupid = {$row3['materialgroupid']}) z
									union
									select 1*sum(qty) as qty,-1*sum(nett) as netto,-1*sum(nom) as nominal from 
									(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
									from notagirpro a
									join notagir b on b.notagirid=a.notagirid
									join gireturdetail c on c.gireturdetailid=a.gireturdetailid
									join giretur d on d.gireturid=b.gireturid
									join gidetail e on e.gidetailid=c.gidetailid
									join giheader f on f.giheaderid=d.giheaderid
									join sodetail g on g.sodetailid=e.sodetailid
									join soheader h on h.soheaderid=f.soheaderid
									join product i on i.productid = a.productid
									join sloc j on j.slocid = a.slocid
									join addressbook k on k.addressbookid = h.addressbookid
									join employee l on l.employeeid = h.employeeid
									join salesarea m on m.salesareaid = k.salesareaid
									join productplant n on n.productid=a.productid and n.slocid=a.slocid
									join materialgroup o on o.materialgroupid=n.materialgroupid
									where h.companyid = {$companyid} and b.recordstatus = {$maxrecnotagir} and j.sloccode like '%{$sloc}%' 
									and k.fullname like '%{$customer}%' and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
									and i.productname like '%{$product}%' and l.employeeid = {$row2['employeeid']} and d.gireturdate between 
									'".date(Yii::app()->params['datetodb'],strtotime($startdate))."' 
									and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
									and o.parentmatgroupid = {$row3['materialgroupid']}
									) x ) xx";
                                */
                        $sql4 = "select sum(qtykum) as qtykum, sum(nettokum) as nettkum, sum(qtyday) as qtyday, sum(nettday) as nettday, sum(nettokum)/sum(qtykum) as ratarata from (select 
                                ifnull(sum(qty2),0) as qtykum, ifnull(sum(nett2),0) as nettokum, ifnull(sum(qty1),0) as qtyday, sum(nett1) as nettday from (select 
                                    ifnull((select (getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                         from gidetail zzb 
                                         join sodetail zza on zza.sodetailid = zzb.sodetailid
                                         join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                         where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid
                                         and zzc.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                                         ),0) as nett1,	
                                   ifnull((select (zzb.qty)
                                        from gidetail zzb
                                        join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                        where zzb.giheaderid = b.giheaderid and zzc.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                        and zzb.gidetailid=ss.gidetailid),0) as qty1,
                                    ifnull(ss.qty,0) as qty2,
                                    ifnull((select (getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                         from gidetail zzb 
                                         join sodetail zza on zza.sodetailid = zzb.sodetailid
                                         join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                         where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid
                                         ),0) as nett2
                                from invoice a
                                join giheader b on b.giheaderid = a.giheaderid
                                join soheader c on c.soheaderid = b.soheaderid
                                join addressbook d on d.addressbookid = c.addressbookid
                                join employee e on e.employeeid = c.employeeid
                                join salesarea f on f.salesareaid = d.salesareaid
                                -- join sodetail g on g.sodetailid = b.soheaderid
                                join gidetail ss on ss.giheaderid = b.giheaderid
                                join sodetail g on g.sodetailid = ss.sodetailid
                                join sloc h on h.slocid = ss.slocid
                                join product i on i.productid = ss.productid
                                join productplant j on j.productid = i.productid and j.slocid=h.slocid
                                join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
                                join materialgroup l on l.materialgroupid = j.materialgroupid
                                where a.recordstatus = {$maxrecinvoice} and a.invoiceno is not null and invoiceno not like '%-%-%' and
                                c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid = {$row2['employeeid']} and d.fullname like '%{$customer}%' and e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
                                and a.invoicedate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."'
                                and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                                and l.parentmatgroupid = {$row3['materialgroupid']} ) z 
                                union
                                select ifnull(-1*sum(qty),0) as qtykum,ifnull(-1*sum(nett),0) as nettokum,ifnull(-1*sum(qty1),0) as qtyday,ifnull(-1*sum(nett1),0) as nettday from (
                                    select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,
                                        ifnull((select (z.qty*z.price)
                                            from notagirpro z
                                            join notagir za on za.notagirid = z.notagirid
                                            where za.notagirid=b.notagirid and za.docdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and z.notagirproid = a.notagirproid),0) as nett1,
                                        ifnull((select (z.qty)
                                            from notagirpro z
                                            join notagir za on za.notagirid = z.notagirid
                                            where za.notagirid = b.notagirid and za.docdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and z.notagirproid = a.notagirproid),0) as qty1
                                from notagirpro a
                                join notagir b on b.notagirid=a.notagirid
                                join gireturdetail c on c.gireturdetailid=a.gireturdetailid
                                join giretur d on d.gireturid=b.gireturid
                                join gidetail e on e.gidetailid=c.gidetailid
                                join giheader f on f.giheaderid=d.giheaderid
                                join sodetail g on g.sodetailid=e.sodetailid
                                join soheader h on h.soheaderid=f.soheaderid
                                join product i on i.productid = a.productid
                                join sloc j on j.slocid = a.slocid
                                join addressbook k on k.addressbookid = h.addressbookid
                                join employee l on l.employeeid = h.employeeid
                                join salesarea m on m.salesareaid = k.salesareaid
                                join productplant n on n.productid=a.productid and n.slocid=a.slocid
                                join materialgroup o on o.materialgroupid=n.materialgroupid
                                where h.companyid = {$companyid} and b.recordstatus = {$maxrecnotagir} and j.sloccode like '%{$sloc}%' 
                                and k.fullname like '%{$customer}%' and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
                                and i.productname like '%{$product}%' and l.employeeid = {$row2['employeeid']} and d.gireturdate between 
                                '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                                and o.parentmatgroupid = {$row3['materialgroupid']} ) x
                                ) xx";
											
					$query4 = Yii::app()->db->createCommand($sql4)->queryRow();
					
					$this->pdf->row(array($i,$row3['description'],
						Yii::app()->format->formatCurrency($query4['qtyday']),
						Yii::app()->format->formatCurrency($query4['qtykum']),
						Yii::app()->format->formatCurrency(($query4['nettday'])/$per),
						Yii::app()->format->formatCurrency($query4['nettkum']/$per),
						Yii::app()->format->formatCurrency($query4['ratarata']/$per)
					));
					//$this->pdf->CheckNewPage(20);
					$i++;
					$grandtotalqty1 = $grandtotalqty1 + $query4['qtyday'];
					$grandtotalqty2 = $grandtotalqty2 + $query4['qtykum'];
					$grandtotalnett1 = $grandtotalnett1 + $query4['nettday'];
					$grandtotalnett2 = $grandtotalnett2 + $query4['nettkum'];
											
					$subtotalqty1 = $subtotalqty1 + $query4['qtyday'];
					$subtotalqty2 = $subtotalqty2 + $query4['qtykum'];
					$subtotalnett1 = $subtotalnett1 + $query4['nettday'];
					$subtotalnett2 = $subtotalnett2 + $query4['nettkum'];
                    
                    $subplantqty1 = $subplantqty1 + $query4['qtyday'];
                    $subplantqty2 = $subplantqty2 + $query4['qtykum'];
                    $subplantnett1 = $subplantnett1 + $query4['nettday'];
                    $subplantnett2 = $subplantnett2 + $query4['nettkum'];
                    
				}
                
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array('','TOTAL SALES '.$row2['salesname'],
					Yii::app()->format->formatCurrency($subtotalqty1),
					Yii::app()->format->formatCurrency($subtotalqty2),
					Yii::app()->format->formatCurrency(($subtotalnett1)/$per),
					Yii::app()->format->formatCurrency($subtotalnett2/$per),
					''
				));
                
			}

            $this->pdf->setY($this->pdf->getY()+5);
            $sql5 = "select materialgroupid, description, materialgroupcode from materialgroup where isfg=1 and description like '%{$materialgroup}%'";
            $query5 = Yii::app()->db->createCommand($sql5)->queryAll();
            $this->pdf->colalign = array('C','C','C','C','C','C','C');
            $this->pdf->setwidths(array(10,110,25,35,30,35,30));
            $this->pdf->colheader = array('No','Material Group','Qty','Kum Qty','Value','Kum. Value','H. Rata2');
            $this->pdf->RowHeader();
            $this->pdf->coldetailalign = array('C','L','R','R','R','R','R');
            
            $k=1;
            foreach($query5 as $row5)
            {
                $sql6 = "select sum(qtykum) as qtykum, sum(nettokum) as nettkum, sum(qtyday) as qtyday, sum(nettday) as nettday, sum(nettokum)/sum(qtykum) as ratarata from (select 
                            ifnull(sum(qty2),0) as qtykum, ifnull(sum(nett2),0) as nettokum, ifnull(sum(qty1),0) as qtyday, sum(nett1) as nettday from (select 
                                ifnull((select (getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                     from gidetail zzb 
                                     join sodetail zza on zza.sodetailid = zzb.sodetailid
                                     join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                     where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid
                                     and zzc.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                                     ),0) as nett1,	
                               ifnull((select (zzb.qty)
                                    from gidetail zzb
                                    join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                    where zzb.giheaderid = b.giheaderid and zzc.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                    and zzb.gidetailid=ss.gidetailid),0) as qty1,
                                ifnull(ss.qty,0) as qty2,
                                ifnull((select (getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                     from gidetail zzb 
                                     join sodetail zza on zza.sodetailid = zzb.sodetailid
                                     join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                     where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid
                                     ),0) as nett2
                            from invoice a
                            join giheader b on b.giheaderid = a.giheaderid
                            join soheader c on c.soheaderid = b.soheaderid
                            join addressbook d on d.addressbookid = c.addressbookid
                            join employee e on e.employeeid = c.employeeid
                            join salesarea f on f.salesareaid = d.salesareaid
                            -- join sodetail g on g.sodetailid = b.soheaderid
                            join gidetail ss on ss.giheaderid = b.giheaderid
                            join sodetail g on g.sodetailid = ss.sodetailid
                            join sloc h on h.slocid = ss.slocid
                            join plant m on m.plantid = h.plantid
                            join product i on i.productid = ss.productid
                            join productplant j on j.productid = i.productid and j.slocid=h.slocid
                            join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
                            join materialgroup l on l.materialgroupid = j.materialgroupid
                            where a.recordstatus = {$maxrecinvoice} and a.invoiceno is not null and invoiceno not like '%-%-%' and
                            c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and d.fullname like '%{$employee}%' and e.fullname like '%{$customer}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
                            and a.invoicedate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."'
                            and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                            and l.parentmatgroupid = {$row5['materialgroupid']} and m.plantid = {$row1['plantid']}) z 
                            union
                            select ifnull(-1*sum(qty),0) as qtykum,ifnull(-1*sum(nett),0) as nettokum,ifnull(-1*sum(qty1),0) as qtyday,ifnull(-1*sum(nett1),0) as nettday from (
                                select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,
                                    ifnull((select (z.qty*z.price)
                                        from notagirpro z
                                        join notagir za on za.notagirid = z.notagirid
                                        where za.notagirid=b.notagirid and za.docdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and z.notagirproid = a.notagirproid),0) as nett1,
                                    ifnull((select (z.qty)
                                        from notagirpro z
                                        join notagir za on za.notagirid = z.notagirid
                                        where za.notagirid = b.notagirid and za.docdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and z.notagirproid = a.notagirproid),0) as qty1
                            from notagirpro a
                            join notagir b on b.notagirid=a.notagirid
                            join gireturdetail c on c.gireturdetailid=a.gireturdetailid
                            join giretur d on d.gireturid=b.gireturid
                            join gidetail e on e.gidetailid=c.gidetailid
                            join giheader f on f.giheaderid=d.giheaderid
                            join sodetail g on g.sodetailid=e.sodetailid
                            join soheader h on h.soheaderid=f.soheaderid
                            join product i on i.productid = a.productid
                            join sloc j on j.slocid = a.slocid
                            join plant p on p.plantid = j.plantid
                            join addressbook k on k.addressbookid = h.addressbookid
                            join employee l on l.employeeid = h.employeeid
                            join salesarea m on m.salesareaid = k.salesareaid
                            join productplant n on n.productid=a.productid and n.slocid=a.slocid
                            join materialgroup o on o.materialgroupid=n.materialgroupid
                            where h.companyid = {$companyid} and b.recordstatus = {$maxrecnotagir} and j.sloccode like '%{$sloc}%' 
                            and k.fullname like '%{$customer}%' and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
                            and i.productname like '%{$product}%' and d.gireturdate between 
                            '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                            and o.parentmatgroupid = {$row5['materialgroupid']} and p.plantid = {$row1['plantid']}) x
                            ) xx";
                $query6 = Yii::app()->db->createCommand($sql6)->queryRow();
                
                $this->pdf->row(array($k,'TOTAL '.$row5['description'].' - '.$row1['description'],
                    Yii::app()->format->formatCurrency($query6['qtyday']),
                    Yii::app()->format->formatCurrency($query6['qtykum']),
                    Yii::app()->format->formatCurrency(($query6['nettday'])/$per),
                    Yii::app()->format->formatCurrency($query6['nettkum']/$per),
                    Yii::app()->format->formatCurrency($query6['ratarata']/$per),
                ));
                $k++;
            }
            
            //if($row1['ssalesaname'] != ''){
                $this->pdf->setFont('Arial','B',9);
                //$this->pdf->setY($this->pdf->getY()+5);
                $this->pdf->setwidths(array(10,110,25,35,30,35,30));
                $this->pdf->row(array('','TOTAL PLANT '.$row1['description'],
					Yii::app()->format->formatCurrency($subplantqty1),
					Yii::app()->format->formatCurrency($subplantqty2),
					Yii::app()->format->formatCurrency(($subplantnett1)/$per),
					Yii::app()->format->formatCurrency($subplantnett2/$per),
					''
				));
            //}
            $this->pdf->setY($this->pdf->getY()+5);
				$this->pdf->checkPageBreak(150);
		}
        
        //$this->pdf->setFont('Arial','',10);
        $this->pdf->text(15,$this->pdf->getY()+5,'GRAND TOTAL : ');
        $this->pdf->setY($this->pdf->getY()+10);
        $sql7 = "select materialgroupid, description, materialgroupcode from materialgroup where isfg=1 and description like '%{$materialgroup}%'";
        $query7 = Yii::app()->db->createCommand($sql7)->queryAll();
        $this->pdf->colalign = array('C','C','C','C','C','C','C');
        $this->pdf->setwidths(array(10,110,25,35,30,35,30));
        $this->pdf->colheader = array('','Material Group','Qty','Kum Qty','Value','Kum. Value','H. Rata2');
        $this->pdf->RowHeader();
        $this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
		$this->pdf->colalign = array('L','L','R','R','R','R','R');
		$this->pdf->setwidths(array(10,110,25,35,30,35,30));
		$this->pdf->setFont('Arial','B',9);
        foreach($query7 as $row7)
        {
            $sql8 = "select sum(qtykum) as qtykum, sum(nettokum) as nettkum, sum(qtyday) as qtyday, sum(nettday) as nettday, sum(nettokum)/sum(qtykum) as ratarata from (select 
                            ifnull(sum(qty2),0) as qtykum, ifnull(sum(nett2),0) as nettokum, ifnull(sum(qty1),0) as qtyday, sum(nett1) as nettday from (select 
                                ifnull((select (getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                     from gidetail zzb 
                                     join sodetail zza on zza.sodetailid = zzb.sodetailid
                                     join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                     where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid
                                     and zzc.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                                     ),0) as nett1,	
                               ifnull((select (zzb.qty)
                                    from gidetail zzb
                                    join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                    where zzb.giheaderid = b.giheaderid and zzc.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                    and zzb.gidetailid=ss.gidetailid),0) as qty1,
                                ifnull(ss.qty,0) as qty2,
                                ifnull((select (getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                     from gidetail zzb 
                                     join sodetail zza on zza.sodetailid = zzb.sodetailid
                                     join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                     where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid
                                     ),0) as nett2
                            from invoice a
                            join giheader b on b.giheaderid = a.giheaderid
                            join soheader c on c.soheaderid = b.soheaderid
                            join addressbook d on d.addressbookid = c.addressbookid
                            join employee e on e.employeeid = c.employeeid
                            join salesarea f on f.salesareaid = d.salesareaid
                            -- join sodetail g on g.sodetailid = b.soheaderid
                            join gidetail ss on ss.giheaderid = b.giheaderid
                            join sodetail g on g.sodetailid = ss.sodetailid
                            join sloc h on h.slocid = ss.slocid
                            join product i on i.productid = ss.productid
                            join productplant j on j.productid = i.productid and j.slocid=h.slocid
                            join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
                            join materialgroup l on l.materialgroupid = j.materialgroupid
                            where a.recordstatus = {$maxrecinvoice} and a.invoiceno is not null and invoiceno not like '%-%-%' and
                            c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and d.fullname like '%{$employee}%' and e.fullname like '%{$customer}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
                            and a.invoicedate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."'
                            and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                            and l.parentmatgroupid = {$row7['materialgroupid']}) z 
                            union
                            select ifnull(-1*sum(qty),0) as qtykum,ifnull(-1*sum(nett),0) as nettokum,ifnull(-1*sum(qty1),0) as qtyday,ifnull(-1*sum(nett1),0) as nettday from (
                                select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,
                                    ifnull((select (z.qty*z.price)
                                        from notagirpro z
                                        join notagir za on za.notagirid = z.notagirid
                                        where za.notagirid=b.notagirid and za.docdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and z.notagirproid = a.notagirproid),0) as nett1,
                                    ifnull((select (z.qty)
                                        from notagirpro z
                                        join notagir za on za.notagirid = z.notagirid
                                        where za.notagirid = b.notagirid and za.docdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and z.notagirproid = a.notagirproid),0) as qty1
                            from notagirpro a
                            join notagir b on b.notagirid=a.notagirid
                            join gireturdetail c on c.gireturdetailid=a.gireturdetailid
                            join giretur d on d.gireturid=b.gireturid
                            join gidetail e on e.gidetailid=c.gidetailid
                            join giheader f on f.giheaderid=d.giheaderid
                            join sodetail g on g.sodetailid=e.sodetailid
                            join soheader h on h.soheaderid=f.soheaderid
                            join product i on i.productid = a.productid
                            join sloc j on j.slocid = a.slocid
                            join addressbook k on k.addressbookid = h.addressbookid
                            join employee l on l.employeeid = h.employeeid
                            join salesarea m on m.salesareaid = k.salesareaid
                            join productplant n on n.productid=a.productid and n.slocid=a.slocid
                            join materialgroup o on o.materialgroupid=n.materialgroupid
                            where h.companyid = {$companyid} and b.recordstatus = {$maxrecnotagir} and j.sloccode like '%{$sloc}%' 
                            and k.fullname like '%{$customer}%' and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
                            and i.productname like '%{$product}%' and d.gireturdate between 
                            '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                            and o.parentmatgroupid = {$row7['materialgroupid']}) x
                            ) xx";
            
            $query8 = Yii::app()->db->createCommand($sql8)->queryRow();
            $this->pdf->row(array('','GRAND TOTAL '.$row7['description'],
                    Yii::app()->format->formatCurrency($query8['qtyday']),
                    Yii::app()->format->formatCurrency($query8['qtykum']),
                    Yii::app()->format->formatCurrency(($query8['nettday'])/$per),
                    Yii::app()->format->formatCurrency($query8['nettkum']/$per),
                    Yii::app()->format->formatCurrency($query8['ratarata']/$per)
                ));
        }
		$this->pdf->row(array('',
			'GRAND TOTAL',
			Yii::app()->format->formatCurrency($grandtotalqty1),
			Yii::app()->format->formatCurrency($grandtotalqty2),
			Yii::app()->format->formatCurrency($grandtotalnett1/$per),
			Yii::app()->format->formatCurrency($grandtotalnett2/$per),
			''
		));
		$this->pdf->Output();
	}
    /*	public function LaporanPenjualanReturPenjulanPerCabangPerSalesPerMaterialgroup($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$this->pdf->title='Laporan Penjualan - Retur Per Cabang Per Sales Per Group Material FG';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P','A4');
		
		$this->pdf->setY($this->pdf->getY()+5);
		$maxrecinvoice = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appinvar')")->queryScalar();
		$maxrecnotagir = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appnotagir')")->queryScalar();
		$sql1 = "select a.plantid, a.plantcode, a.description from plant a left join sloc b on b.plantid=a.plantid where a.companyid = ".$companyid." and b.sloccode like '%".$sloc."%' order by plantid desc";
		$query1 = Yii::app()->db->createCommand($sql1)->queryAll();
		
		$grandtotalqty1 = 0;
		$grandtotalqty2 = 0;
		$grandtotalnett1 = 0;
		$grandtotalnett2 = 0;
				
		foreach($query1 as $row1)
		{
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->text(10,$this->pdf->getY(),'PLANT / CABANG : ');
			$this->pdf->text(45,$this->pdf->getY(),$row1['description']);
			
            $subplantqty1 = 0;
            $subplantqty2 = 0;
            $subplantnett1 = 0;
            $subplantnett2 = 0;
            
			$sql2 = "select distinct addressbookid,fullname,salesname,employeeid from 
					(select distinct g.addressbookid,g.fullname, f.fullname as salesname,f.employeeid
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join employee f on f.employeeid = b.employeeid
					join addressbook g on g.addressbookid = b.addressbookid  
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
									join plant l on l.plantid = i.plantid
					join invoice j on j.giheaderid = h.giheaderid
					join salesarea k on k.salesareaid = g.salesareaid
					where j.recordstatus = {$maxrecinvoice} and b.companyid = {$companyid} and l.plantid = {$row1['plantid']} and i.sloccode like '%{$sloc}%' 
					and g.fullname like '%{$customer}%' and f.fullname like '%{$employee}%'  
					and e.productname like '%{$product}%' and k.areaname like '%{$salesarea}%' 
					and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."'
					and	'".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
					union
					select distinct k.addressbookid,k.fullname,l.fullname as salesname,h.employeeid
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
									join plant n on n.plantid = j.plantid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					where h.companyid = {$companyid} and b.recordstatus = {$maxrecnotagir} and n.plantid = {$row1['plantid']} and j.sloccode like '%{$sloc}%' 
					and k.fullname like '%{$customer}%' and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
					and i.productname like '%{$product}%' and d.gireturdate between 
					'".date(Yii::app()->params['datetodb'],strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."')z group by salesname order by salesname ";
			$query2 = Yii::app()->db->createCommand($sql2)->queryAll();
			foreach($query2 as $row2)
			{
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->checkPageBreak(20);
				$this->pdf->text(15,$this->pdf->getY()+5,'NAMA SALES : '.$row2['salesname']);
				$this->pdf->setY($this->pdf->getY()+8);
				$this->pdf->getY()+10;
				$this->pdf->setFont('Arial','',9);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,80,20,30,25,30));
				$this->pdf->colheader = array('No','Material Group','Qty','Kum Qty','Value','Kum. Value');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('C','L','R','R','R','R');
				$sql3 = "select materialgroupid, description from materialgroup where isfg=1 and description like '%{$materialgroup}%'";
				$query3 = Yii::app()->db->createCommand($sql3)->queryAll();
				$i=1;
				
				$subtotalqty1 = 0;
				$subtotalqty2 = 0;
				$subtotalnett1 = 0;
				$subtotalnett2 = 0;
				foreach($query3 as $row3)
				{
					
                    $sql4 = "select sum(qtykum) as qtykum, sum(nettokum) as nettkum, sum(qtyday) as qtyday, sum(nettday) as nettday from (select 
                            ifnull(sum(qty2),0) as qtykum, ifnull(sum(nett2),0) as nettokum, ifnull(sum(qty1),0) as qtyday, sum(nett1) as nettday from (select 
                                ifnull((select (getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                     from gidetail zzb 
                                     join sodetail zza on zza.sodetailid = zzb.sodetailid
                                     join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                     where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid
                                     and zzc.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                                     ),0) as nett1,	
                               ifnull((select (zzb.qty)
                                    from gidetail zzb
                                    join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                    where zzb.giheaderid = b.giheaderid and zzc.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                    and zzb.gidetailid=ss.gidetailid),0) as qty1,
                                ifnull(ss.qty,0) as qty2,
                                ifnull((select (getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                     from gidetail zzb 
                                     join sodetail zza on zza.sodetailid = zzb.sodetailid
                                     join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                     where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid
                                     ),0) as nett2
                            from invoice a
                            join giheader b on b.giheaderid = a.giheaderid
                            join soheader c on c.soheaderid = b.soheaderid
                            join addressbook d on d.addressbookid = c.addressbookid
                            join employee e on e.employeeid = c.employeeid
                            join salesarea f on f.salesareaid = d.salesareaid
                            -- join sodetail g on g.sodetailid = b.soheaderid
                            join gidetail ss on ss.giheaderid = b.giheaderid
                            join sodetail g on g.sodetailid = ss.sodetailid
                            join sloc h on h.slocid = ss.slocid
                            join product i on i.productid = ss.productid
                            join productplant j on j.productid = i.productid and j.slocid=h.slocid
                            join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
                            join materialgroup l on l.materialgroupid = j.materialgroupid
                            where a.recordstatus = {$maxrecinvoice} and a.invoiceno is not null and invoiceno not like '%-%-%' and
                            c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid = {$row2['employeeid']} and d.fullname like '%{$customer}%' and e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
                            and a.invoicedate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."'
                            and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                            and l.parentmatgroupid = {$row3['materialgroupid']} ) z 
                            union
                            select ifnull(-1*sum(qty),0) as qtykum,ifnull(-1*sum(nett),0) as nettokum,ifnull(-1*sum(qty1),0) as qtyday,ifnull(-1*sum(nett1),0) as nettday from (
                                select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,
                                    ifnull((select (z.qty*z.price)
                                        from notagirpro z
                                        join notagir za on za.notagirid = z.notagirid
                                        where za.notagirid=b.notagirid and za.docdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and z.notagirproid = a.notagirproid),0) as nett1,
                                    ifnull((select (z.qty)
                                        from notagirpro z
                                        join notagir za on za.notagirid = z.notagirid
                                        where za.notagirid = b.notagirid and za.docdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and z.notagirproid = a.notagirproid),0) as qty1
                            from notagirpro a
                            join notagir b on b.notagirid=a.notagirid
                            join gireturdetail c on c.gireturdetailid=a.gireturdetailid
                            join giretur d on d.gireturid=b.gireturid
                            join gidetail e on e.gidetailid=c.gidetailid
                            join giheader f on f.giheaderid=d.giheaderid
                            join sodetail g on g.sodetailid=e.sodetailid
                            join soheader h on h.soheaderid=f.soheaderid
                            join product i on i.productid = a.productid
                            join sloc j on j.slocid = a.slocid
                            join addressbook k on k.addressbookid = h.addressbookid
                            join employee l on l.employeeid = h.employeeid
                            join salesarea m on m.salesareaid = k.salesareaid
                            join productplant n on n.productid=a.productid and n.slocid=a.slocid
                            join materialgroup o on o.materialgroupid=n.materialgroupid
                            where h.companyid = {$companyid} and b.recordstatus = {$maxrecnotagir} and j.sloccode like '%{$sloc}%' 
                            and k.fullname like '%{$customer}%' and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
                            and i.productname like '%{$product}%' and l.employeeid = {$row2['employeeid']} and d.gireturdate between 
                            '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                            and o.parentmatgroupid = {$row3['materialgroupid']} ) x
                            ) xx";
											
					$query4 = Yii::app()->db->createCommand($sql4)->queryRow();
					$this->pdf->row(array($i,$row3['description'],
						Yii::app()->format->formatCurrency($query4['qtyday']),
						Yii::app()->format->formatCurrency($query4['qtykum']),
						Yii::app()->format->formatCurrency(($query4['nettday'])/$per),
						Yii::app()->format->formatCurrency($query4['nettkum']/$per)
					));
					//$this->pdf->CheckNewPage(20);
					$i++;
					$grandtotalqty1 = $grandtotalqty1 + $query4['qtyday'];
					$grandtotalqty2 = $grandtotalqty2 + $query4['qtykum'];
					$grandtotalnett1 = $grandtotalnett1 + $query4['nettday'];
					$grandtotalnett2 = $grandtotalnett2 + $query4['nettkum'];
											
					$subtotalqty1 = $subtotalqty1 + $query4['qtyday'];
					$subtotalqty2 = $subtotalqty2 + $query4['qtykum'];
					$subtotalnett1 = $subtotalnett1 + $query4['nettday'];
					$subtotalnett2 = $subtotalnett2 + $query4['nettkum'];
                    
                    $subplantqty1 = $subplantqty1 + $query4['qtyday'];
                    $subplantqty2 = $subplantqty2 + $query4['qtykum'];
                    $subplantnett1 = $subplantnett1 + $query4['nettday'];
                    $subplantnett2 = $subplantnett2 + $query4['nettkum'];
				}
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array('','TOTAL SALES '.$row2['salesname'],
					Yii::app()->format->formatCurrency($subtotalqty1),
					Yii::app()->format->formatCurrency($subtotalqty2),
					Yii::app()->format->formatCurrency(($subtotalnett1)/$per),
					Yii::app()->format->formatCurrency($subtotalnett2/$per)
				));
                
			}
            //if($row1['ssalesaname'] != ''){
                $this->pdf->setFont('Arial','B',9);
                //$this->pdf->setY($this->pdf->getY()+5);
                $this->pdf->setwidths(array(10,80,20,30,25,30));
                $this->pdf->row(array('','TOTAL PLANT '.$row1['description'],
					Yii::app()->format->formatCurrency($subplantqty1),
					Yii::app()->format->formatCurrency($subplantqty2),
					Yii::app()->format->formatCurrency(($subplantnett1)/$per),
					Yii::app()->format->formatCurrency($subplantnett2/$per)
				));
            //}
            $this->pdf->setY($this->pdf->getY()+5);
		}
		$this->pdf->colalign = array('L','R','R','R','R');
		$this->pdf->setwidths(array(90,20,30,25,30));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL',
			Yii::app()->format->formatCurrency($grandtotalqty1),
			Yii::app()->format->formatCurrency($grandtotalqty2),
			Yii::app()->format->formatCurrency($grandtotalnett1/$per),
			Yii::app()->format->formatCurrency($grandtotalnett2/$per),
		));
		$this->pdf->Output();
	}
*/	
	//86
	public function RekapRealisasiPenjualanPerSPVSalesPerGroupMaterial1($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
    parent::actionDownload();
    //$this->no_result();
    
    $connection = Yii::app()->db;
    $this->pdf->title='REKAP REALISASI PENJUALAN PER SPV SALES PER GROUP MATERIAL';
    $datetime = new DateTime(date($enddate));

    $this->pdf->subtitle='Target Bulan '.$datetime->format('F').' '.$datetime->format('Y').' dan '.'Realisasi s/d '.date('d-m-Y',strtotime($enddate));
    $this->pdf->AddPage('L',array(210,330));
    
    $this->pdf->SetFont('Arial','',10);
    $this->pdf->sety($this->pdf->gety()+5);
    
    $month = date('m',strtotime($enddate));
    $year = date('Y',strtotime($enddate));
    
    $prev_month_ts1 = strtotime(''.$year.'-'.$month.'-01 -3 month');
    $prev_month_ts2 = strtotime(''.$year.'-'.$month.'-01 -1 month');
    
    $lastmonth1 = date('Y-m-d', $prev_month_ts1);
    $lastmonth2 = date('Y-m-t', $prev_month_ts2);
  
    $spvscale = Yii::app()->db->createCommand("select ifnull(spvscale/100,0) from scale where recordstatus = 5 and startdate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' order by docdate desc limit 1")->queryScalar();
    
    $prev_month_ts =  strtotime($year.'-'.$month.'-01');
    $month1 = date('Y-m-d', $prev_month_ts);
    $month2 = date('Y-m-t', $prev_month_ts);
    $this->pdf->text(310,15,'Per : '.$per);
    $maxtarget = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appst')")->queryScalar();
    $maxscale = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appss')")->queryScalar();
    
    $sqlidscale = "select scaleid
                      from scale
                      where recordstatus = getwfmaxstatbywfname('appss') 
                      -- and companyid = {$companyid}
                      and startdate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                      order by docdate desc limit 1";
    $idscale = Yii::app()->db->createCommand($sqlidscale)->queryScalar();
    
    $sql = "select l.employeeid as spvid,l.fullname,a.companyid,GROUP_CONCAT(DISTINCT f.employeeid) as employeeid,group_concat(distinct salestargetid) as salestargetid
      from salestarget a
      join employee b on b.employeeid = a.employeeid
      join employeeorgstruc f on f.employeeid=b.employeeid
      join orgstructure i ON i.orgstructureid=f.orgstructureid
      join orgstructure j ON j.orgstructureid=i.parentid
      join employeeorgstruc k on k.orgstructureid=j.orgstructureid
      JOIN employee l ON l.employeeid=k.employeeid
      where j.structurename LIKE '%spv%' and a.recordstatus= {$maxtarget} and a.perioddate = '{$month1}' and a.companyid = {$companyid} and l.fullname like '%".$spv."%'
      GROUP BY l.employeeid
      order by l.fullname asc";
    $result = Yii::app()->db->createCommand($sql)->queryAll();
    
    foreach($result as $row)
    {
      $totaltarget2 = 0;
      $totalqtykum = 0;
      $totalqtytarget = 0;
      $totalqtyrealisasi = 0;
      $totalqtypl = 0;
      $totalrealisasi = 0;
      $totalkumulatif = 0;
      $totalkomisi = 0;
      $totaldiff = 0;
      $n=1;
      
      $this->pdf->SetFont('Arial','B',10);
      $this->pdf->setwidths(array(85));
      $this->pdf->row(array('NAMA SUPERVISOR = '. $row['fullname'] .' ('.Yii::app()->format->formatCurrency($spvscale).'% )'));

                
      $sqlcustcategory = "select b.custcategoryname,a.custcategoryid as custid
        from salestargetdet a
        join custcategory b on b.custcategoryid = a.custcategoryid
        where a.salestargetid in ({$row['salestargetid']})
        -- a.salestargetid in(select salestargetid from salestarget x where x.employeeid in({$row['employeeid']}) 
        and b.custcategoryid not in (13,14)
        group by b.custcategoryid";

      $foundrows = Yii::app()->db->createCommand('select found_rows()')->queryScalar();
      
      $resultcustcategory = Yii::app()->db->createCommand($sqlcustcategory)->queryAll();
      
      foreach($resultcustcategory as $rslt)
      {
        $totaltargetcust = 0;
        $totalqtykumcust = 0;
        $totalqtytargetcust = 0;
        $totalqtyrealisasicust = 0;
        $totalqtyplcust = 0;
        $totalrealisasicust = 0;
        $totalkumulatifcust = 0;
        $totalkomisicust = 0;
        $totaldiffcust = 0;
        
    
      
        $sqlgroupkasta = "select groupkastaid,groupname from groupkasta";
        $groupkasta = Yii::app()->db->createCommand($sqlgroupkasta)->queryAll();
                  
        $sqlpencapaian = "select sum(kumharga)/sum(harga)*100 from (
        select ifnull(sum(qty*price),0) as harga,
        ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
        from invoice a
        join giheader b on a.giheaderid = b.giheaderid
        join gidetail c on c.giheaderid = b.giheaderid
        join soheader d on d.soheaderid = b.soheaderid
        join product e on e.productid = c.productid
        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
        join materialgroup h on h.materialgroupid = f.materialgroupid
        join addressbook g on g.addressbookid = d.addressbookid
        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
        and d.employeeid in ({$row['employeeid']}) 
        and g.custcategoryid = {$rslt['custid']} and h.groupkastaid in(select g2.groupkastaid from groupkasta g2)
        and d.isdisplay=0),0) as kumharga
        from salestarget b
        join salestargetdet a on a.salestargetid = b.salestargetid
        join employee d on d.employeeid = b.employeeid
        join materialgroup h on h.materialgroupid = a.materialgroupid
        where b.employeeid in ({$row['employeeid']}) and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} 
        and a.custcategoryid = {$rslt['custid']} and h.groupkastaid in(select g2.groupkastaid from groupkasta g2)
        union
        select sum(harga) as harga, sum(kumharga) as kumharga from (
        select 0 as harga,-1*sum(a.qty*a.price) as kumharga
        from notagirpro a
        join notagir b on b.notagirid = a.notagirid
        join gireturdetail c on c.gireturdetailid = a.gireturdetailid
        join giretur d on d.gireturid = c.gireturid
        join giheader e on e.giheaderid = d.giheaderid
        join soheader f on f.soheaderid = e.soheaderid
        join product g on g.productid = a.productid
        join addressbook h on h.addressbookid = f.addressbookid
        join productplant i on i.productid = a.productid and i.slocid = a.slocid and i.unitofissue = a.uomid
        join materialgroup j on j.materialgroupid = i.materialgroupid
        where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid in ({$row['employeeid']})
        and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
        and h.custcategoryid = {$rslt['custid']} and j.groupkastaid in(select g2.groupkastaid from groupkasta g2)
        and f.isdisplay=0) x 
        ) z ";
        $h = Yii::app()->db->createCommand($sqlpencapaian)->queryScalar();
                  
        $this->pdf->setFont('Arial','B',10);
        $this->pdf->setY($this->pdf->getY());
        $this->pdf->setwidths(array(85));
        $this->pdf->row(array(getCatalog('custcategory'). ' = '. $rslt['custcategoryname']));
        $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
        $this->pdf->setwidths(array(50,45,45,45,45,15,15,30,15));
        
        $this->pdf->colheader = array('Kelompok Barang',
                                'Target Bulan ini',
                                'Realisasi Hari ini',
                                'Realisasi Kumulatif',
                                '+ / -',
                                'Penc.',
                                'Skala',
                                'Komisi',
                                '');
        $this->pdf->RowHeader();
        $this->pdf->coldetailalign = array('L','C','C','C','C','C','C','C');
        $this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,15,15,30,15));
        //$this->pdf->row(array('','Qty','Rp','Qty','Rp','Qty','Rp','Qty','Rp','RP','Rp','Rp','Rp'));
        $this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R','R','R','R','R','R');
                  
        foreach($groupkasta as $group)
        {
                        
          $hgroup=0;
          $totaltargetgroup = 0;
          $totalqtykumgroup = 0;
          $totalqtytargetgroup = 0;
          $totalqtyrealisasigroup = 0;
          $totalqtyplgroup = 0;
          $totalrealisasigroup = 0;
          $totalkumulatifgroup = 0;
          $totalkomisigroup = 0;
          $totaldiffgroup = 0;
                        
          $this->pdf->SetFont('Arial','B',9);
          $this->pdf->row(array(
          $group['groupname']));
        
          $matgroup = "select * from (select z.materialgroupid as materialgroupid, description
          from salestargetdet za
          join (select parentmatgroupid,materialgroupid,description from materialgroup zx where zx.isfg=0 and zx.recordstatus=1 and groupkastaid = {$group['groupkastaid']}) z on z.materialgroupid = za.materialgroupid
          join salestarget zc on zc.salestargetid = za.salestargetid
          where za.salestargetid in( {$row['salestargetid']})
          and za.custcategoryid= {$rslt['custid']}
          and zc.companyid={$companyid} and zc.perioddate = '{$month1}'
          group by z.materialgroupid
          union 
          select g.materialgroupid, description
          from invoice a
          join giheader b on a.giheaderid = b.giheaderid
          join gidetail c on c.giheaderid = b.giheaderid
          join soheader d on d.soheaderid = b.soheaderid
          join product e on e.productid = c.productid
          join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
          join addressbook i on i.addressbookid = d.addressbookid
          join materialgroup g on g.materialgroupid = f.materialgroupid
          -- join materialgroup h on h.materialgroupid = g.parentmatgroupid
          where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
          and d.employeeid in ({$row['employeeid']}) 
          -- and h.isfg=1
          and i.custcategoryid = {$rslt['custid']}
          and d.isdisplay=0 and g.groupkastaid = {$group['groupkastaid']}
          group by g.materialgroupid 
          union
          select xh.materialgroupid, description
          from notagirpro x
          join notagir xa on xa.notagirid = x.notagirid
          join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
          join giretur xc on xc.gireturid = xb.gireturid
          join giheader xd on xd.giheaderid = xc.giheaderid
          join soheader xe on xe.soheaderid = xd.soheaderid
          join product xf on xf.productid = x.productid
          join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
          join addressbook xj on xj.addressbookid = xe.addressbookid
          join materialgroup xh on xh.materialgroupid = xg.materialgroupid
          -- join materialgroup xi on xi.materialgroupid = xh.parentmatgroupid
          where xc.companyid = {$companyid} and xc.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 
          and xe.employeeid in ({$row['employeeid']}) 
          -- and xi.isfg=1 
          and xj.custcategoryid = {$rslt['custid']}
          and xe.isdisplay=0 and xh.groupkastaid = {$group['groupkastaid']}
          group by xh.materialgroupid ) zzz
          order by zzz.materialgroupid asc ";
          $material = Yii::app()->db->createCommand($matgroup)->queryAll();
          foreach($material as $row1)
          {
            $sql1 = "select sum(qty) as targetqty, sum(harga) as targetharga, sum(realqty) as realqty, sum(realharga) as realharga, sum(kumqty) as kumqty, sum(kumharga) as kumharga from (
                select ifnull(sum(a.qty),0) as qty,
                ifnull(sum(qty*price),0) as harga,
                ifnull((select sum(xb.qty)
                    from giheader xa
                    join gidetail xb on xa.giheaderid = xb.giheaderid
                    join soheader xs on xs.soheaderid = xa.soheaderid
                    join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                    join addressbook xd on xd.addressbookid = xs.addressbookid
                    where xa.recordstatus = 3 and xs.employeeid in ({$row['employeeid']}) 
                    -- and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) 
                    and xc.materialgroupid = {$row1['materialgroupid']}
                    and xs.companyid = {$companyid} and xa.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                    and xd.custcategoryid = {$rslt['custid']}
                    and xs.isdisplay=0),0) as realqty,
                ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                    from invoice a
                    join giheader b on a.giheaderid = b.giheaderid
                    join gidetail c on c.giheaderid = b.giheaderid
                    join soheader d on d.soheaderid = b.soheaderid
                    join product e on e.productid = c.productid
                    join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                    join addressbook g on g.addressbookid = d.addressbookid
                    where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                    and d.employeeid in ({$row['employeeid']})
                    -- and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']}) 
                    and f.materialgroupid = {$row1['materialgroupid']} 
                    and g.custcategoryid = {$rslt['custid']}
                    and d.isdisplay=0),0) as realharga,
                ifnull((select sum(xb.qty)
                    from giheader xa
                    join gidetail xb on xa.giheaderid = xb.giheaderid
                    join soheader xs on xs.soheaderid = xa.soheaderid
                    join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                    join addressbook xd on xd.addressbookid = xs.addressbookid
                    where xa.recordstatus = 3 and xs.companyid = {$companyid} and xs.employeeid in ({$row['employeeid']}) 
                    -- and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) 
                    and xc.materialgroupid = {$row1['materialgroupid']}
                    and xa.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                    and xd.custcategoryid = {$rslt['custid']}
                    and xs.isdisplay=0),0) as kumqty,
                ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                    from invoice a
                    join giheader b on a.giheaderid = b.giheaderid
                    join gidetail c on c.giheaderid = b.giheaderid
                    join soheader d on d.soheaderid = b.soheaderid
                    join product e on e.productid = c.productid
                    join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                    join addressbook g on g.addressbookid = d.addressbookid
                    where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                    and d.employeeid in ({$row['employeeid']})
                    -- and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']})
                    and f.materialgroupid = {$row1['materialgroupid']}
                    and g.custcategoryid = {$rslt['custid']}
                    and d.isdisplay=0),0) as kumharga
                from salestarget b
                join salestargetdet a on a.salestargetid = b.salestargetid
                join materialgroup c on c.materialgroupid = a.materialgroupid
                join employee d on d.employeeid = b.employeeid
                where b.employeeid in ({$row['employeeid']}) and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} 
                -- and a.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                and a.materialgroupid = {$row1['materialgroupid']}
                and a.custcategoryid = {$rslt['custid']}
                union
                select 0 as qty,0 as harga,
                ifnull((select -1*sum(x.qty)
                    from notagirpro x
                    join notagir xa on xa.notagirid = x.notagirid
                    join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                    join giretur xc on xc.gireturid = xb.gireturid
                    join giheader xd on xd.giheaderid = xc.giheaderid
                    join soheader xe on xe.soheaderid = xd.soheaderid
                    join product xf on xf.productid = x.productid
                    join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                    join addressbook xh on xh.addressbookid = xe.addressbookid
                    where xc.companyid = {$companyid} and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 and xe.employeeid in ({$row['employeeid']}) 
                    -- and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) 
                    and xg.materialgroupid = {$row1['materialgroupid']}
                    and xh.custcategoryid = {$rslt['custid']}
                    and xe.isdisplay=0),0) as realqty,
                ifnull((select -1*sum(x.qty*x.price)
                    from notagirpro x
                    join notagir xa on xa.notagirid = x.notagirid
                    join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                    join giretur xc on xc.gireturid = xb.gireturid
                    join giheader xd on xd.giheaderid = xc.giheaderid
                    join soheader xe on xe.soheaderid = xd.soheaderid
                    join product xf on xf.productid = x.productid
                    join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                    join addressbook xh on xh.addressbookid = xe.addressbookid
                    where xc.companyid = {$companyid}  and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 and xe.employeeid in ({$row['employeeid']}) 
                    -- and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                    and xg.materialgroupid = {$row1['materialgroupid']}
                    and xh.custcategoryid = {$rslt['custid']}
                    and xe.isdisplay=0),0) as realharga,
                ifnull(-1*sum(a.qty),0) as kumqty,
                ifnull(-1*sum(a.qty*a.price),0) as kumharga
                from notagirpro a
                join notagir b on b.notagirid = a.notagirid
                join gireturdetail c on c.gireturdetailid = a.gireturdetailid
                join giretur d on d.gireturid = c.gireturid
                join giheader e on e.giheaderid = d.giheaderid
                join soheader f on f.soheaderid = e.soheaderid
                join product g on g.productid = a.productid
                join productplant h on h.productid = g.productid and h.unitofissue = a.uomid and h.slocid = a.slocid
                join addressbook i on i.addressbookid = f.addressbookid
                join custcategory j on j.custcategoryid = i.custcategoryid
                where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid in ({$row['employeeid']})
                -- and h.materialgroupid  in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                and h.materialgroupid = {$row1['materialgroupid']}
                and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                and j.custcategoryid = {$rslt['custid']}
                and f.isdisplay=0) z ";

                $res1 = Yii::app()->db->createCommand($sql1)->queryAll();
                /*
                $this->pdf->SetFont('Arial','B',10);
                $this->pdf->setwidths(array(85));
                $this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                */
                $mod = 0;
                foreach($res1 as $row2)
                {
                  $this->pdf->SetFont('Arial','',8);
                  $this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,15,15,30,15));

                  
                  if($row2['targetharga']*$row2['targetqty']==0)
                  {
                    $mod = 0;
                  }
                  else
                  {
                    //$mod = ($row2['kumqty']/$row2['targetqty'])*100;
                    $mod = ($row2['kumharga']/$row2['targetharga'])*100;
                    //$mod = 1;
                  }
                  if($row2['targetqty']==0 && $row2['kumqty']>0)
                  {
                    $mod = 0;
                  }
                  /*
                  if($h>=$minscale)
                  {
                      //$this->pdf->setbordercell(array('B','B','B','B','B','B','B','B','B','B','B','B','B','B'));
                      if($mod>120)
                      {
                          $select = 'select gt120';
                      }
                      else if($mod<=120 && $mod>100)
                      {
                          $select = 'select gt100';
                      }
                      else if($mod<=100 & $mod>90)
                      {
                          $select = 'select gt90';
                      }
                      else if($mod<=90 && $mod>80)
                      {
                          $select = 'select gt80';
                      }
                      else if($mod<=80 && $mod>70)
                      {
                          $select = 'select gt70';
                      }
                      else
                      {
                          $select = 'select 0';
                      }
                      $from = " from salesscale a 
                                  join salesscaledet b on a.salesscaleid = b.salesscaleid
                                  where a.companyid = {$companyid} and b.materialgroupid ={$row1['materialgroupid']} 
                                  and a.perioddate = '{$month1}' and a.recordstatus = {$maxscale} ";
                      $scale = Yii::app()->db->createCommand($select.$from)->queryScalar();
                  }
                  else
                  {
                      $scale=0;
                  }
                  */
                  $select = "select value
                            from scaledet a
                            where a.scaleid = {$idscale} and materialgroupid = {$row1['materialgroupid']}";
                  $scale = Yii::app()->db->createCommand($select)->queryScalar();
                  
                  $spvscale = Yii::app()->db->createCommand("select spvscale from scale where scaleid = {$idscale}")->queryScalar();
                  $sqlcustscale = "select value
                          from scalecat a
                          -- join salesscale b on b.salesscaleid = a.salesscaleid
                          -- where b.perioddate = '{$month1}' 
                          -- and b.companyid = {$companyid}
                          -- and b.recordstatus = {$maxscale}
                          where scaleid = {$idscale}
                          and a.custcategoryid = {$rslt['custid']}
                          ";
                  $custscale = Yii::app()->db->createCommand($sqlcustscale)->queryScalar();
                  if($mod<70)
                  {
                    $multiscale = 0;
                  }
                  else if($mod>120) 
                  {
                    $multiscale = 1.2;
                  }
                  else {
                    $multiscale = $mod/100;
                  }
                  $this->pdf->row(array($row1['description'].' - ('.Yii::app()->format->formatCurrency($scale).' )',
                          Yii::app()->format->formatCurrency($row2['targetqty']),
                          Yii::app()->format->formatCurrency(($row2['targetharga'])/$per),
                          Yii::app()->format->formatCurrency($row2['realqty']),
                          Yii::app()->format->formatCurrency($row2['realharga']/$per),
                          Yii::app()->format->formatCurrency($row2['kumqty']),
                          Yii::app()->format->formatCurrency($row2['kumharga']/$per),
                          Yii::app()->format->formatCurrency($row2['kumqty'] - $row2['targetqty']),
                          Yii::app()->format->formatCurrency(($row2['kumharga'] - ($row2['targetharga']))/$per),
                          Yii::app()->format->formatCurrency($mod),
                          Yii::app()->format->formatNumber($scale*($spvscale/100)),
                          Yii::app()->format->formatCurrency(($scale/100*($spvscale/100)*$row2['kumharga'])/$per)
                  ));
                  $totaltarget2 += ($row2['targetharga'])/$per;
                  $totalrealisasi += $row2['realharga']/$per;
                  $totalkumulatif += $row2['kumharga']/$per;
                  $totaldiff += ($row2['kumharga'] - $row2['targetharga'])/$per;
                  $totalkomisi += ($scale/100 * ($spvscale/100)*$row2['kumharga'])/$per;
                  $totalqtykum += $row2['kumqty'];
                  $totalqtytarget += $row2['targetqty'];
                  $totalqtyrealisasi += $row2['realqty'];
                  $totalqtypl += ($row2['kumqty'] - $row2['targetqty']);

                  $totaltargetcust += ($row2['targetharga'])/$per;
                  $totalrealisasicust += $row2['realharga']/$per;
                  $totalkumulatifcust += $row2['kumharga']/$per;
                  $totaldiffcust += ($row2['kumharga'] - $row2['targetharga'])/$per;
                  $totalkomisicust += ($scale/100 * ($spvscale/100)*$row2['kumharga'])/$per;
                  $totalqtykumcust += $row2['kumqty'];
                  $totalqtytargetcust += $row2['targetqty'];
                  $totalqtyrealisasicust += $row2['realqty'];
                  $totalqtyplcust += ($row2['kumqty'] - $row2['targetqty']);

                  $totaltargetgroup += ($row2['targetharga'])/$per;
                  $totalrealisasigroup += $row2['realharga']/$per;
                  $totalkumulatifgroup += $row2['kumharga']/$per;
                  $totaldiffgroup += ($row2['kumharga'] - $row2['targetharga'])/$per;
                  $totalkomisigroup += ($scale/100 * ($spvscale/100)*$row2['kumharga'])/$per;
                  $totalqtykumgroup += $row2['kumqty'];
                  $totalqtytargetgroup += $row2['targetqty'];
                  $totalqtyrealisasigroup += $row2['realqty'];
                  $totalqtyplgroup += ($row2['kumqty'] - $row2['targetqty']);
                
                  //$this->pdf->row(array(''));
                  $n++;
                  
                  if($foundrows == $n)
                  {
                      //$this->pdf->setY($this->pdf->getY()+0);
                  }
                  else
                  {
                      $this->pdf->checkNewPage(25);   
                  }
                    
                            
                }
          }
          if($totaltargetgroup===0) {
              $hgroup=0;
          }
          else {
            if ($totaltargetgroup == 0) {
              $hgroup = 0;
            }
            else {
              $hgroup = ($totalkumulatifgroup/$totaltargetgroup)*100; 
            }
          }
          $this->pdf->setFont('Arial','B',9);
          $this->pdf->row(array('TOTAL '.$group['groupname'].' : ',$totalqtytargetgroup, Yii::app()->format->formatCurrency($totaltargetgroup),$totalqtyrealisasigroup, Yii::app()->format->formatCurrency($totalrealisasigroup),$totalqtykumgroup, Yii::app()->format->formatCurrency($totalkumulatifgroup),$totalqtyplgroup, Yii::app()->format->formatCurrency($totaldiffgroup),Yii::app()->format->formatCurrency($hgroup),'',Yii::app()->format->formatCurrency($totalkomisigroup)));
          $this->pdf->setY($this->pdf->getY()+5);
        }
      
        if($totalkumulatif==0) {
            $totalkomisisub = 0;
        }
        else {
            $totalkomisisub = ($totalkomisicust/$totalkumulatifcust)*100;
        }
        $this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,18,15,30,15));
        $utglobal = ($totalkomisi/$totalkumulatif)*100;
        $utcategory = ($totalkomisisub);
        $this->pdf->setFont('Arial','B',9);
        $this->pdf->row(array('TOTAL '.getCatalog('custcategory').' : '.$rslt['custcategoryname'],$totalqtytargetcust, Yii::app()->format->formatCurrency($totaltargetcust),$totalqtyrealisasicust, Yii::app()->format->formatCurrency($totalrealisasicust),$totalqtykumcust, Yii::app()->format->formatCurrency($totalkumulatifcust),$totalqtyplcust, Yii::app()->format->formatCurrency($totaldiffcust),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisicust),Yii::app()->format->formatCurrency($totalkomisisub).'%'));
        //$this->pdf->row(array(''));

        if($h>120){
          $pengkali = 120;
        }
        else if($h<70){
          $pengkali=0;
        }
        else {
          $pengkali=$h;
        }
        
        $this->pdf->setwidths(array(50,243,15));
        $this->pdf->coldetailalign = array('L','C','R');
        $this->pdf->row(array('',"Skala Penentu Upah Tambahan (SPUT) {$rslt['custcategoryname']} adalah ".Yii::app()->format->formatNumber($pengkali)."% x ".Yii::app()->format->formatNumber($utcategory)." = ",Yii::app()->format->formatNumber($pengkali*$utcategory/100)."%"));
        $skala = $pengkali*$utglobal/100;
        //$this->pdf->setY($this->pdf->getY()+10);
        //$this->pdf->checkNewPage(22);
      }
      //$utglobal = $totalkomisi/$totalkumulatif*100;
      $this->pdf->row(array(''));
      $this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R','R','R','R','R','R');
      $this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,18,15,30,15));
      $this->pdf->row(array('TOTAL SUPERVISOR '. $row['fullname'],$totalqtytarget, Yii::app()->format->formatCurrency($totaltarget2),$totalqtyrealisasi, Yii::app()->format->formatCurrency($totalrealisasi),$totalqtykum, Yii::app()->format->formatCurrency($totalkumulatif),$totalqtypl, Yii::app()->format->formatCurrency($totaldiff),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisi),Yii::app()->format->formatNumber($utglobal)));
      $this->pdf->row(array(''));
      $deposit = (($totalkomisi)*10/100);
    
      //$sqldelete = Yii::app()->db->createCommand("delete from scalevaluespv where companyid={$companyid} and perioddate = '{$month1}' and employeeid = {$row['spvid']} and recordstatus=5 -- and perioddate > '2021-03-01' ")->execute();
      //$sqlinsert = Yii::app()->db->createCommand("insert into scalevaluespv(companyid,perioddate,employeeid,scalevalue,recordstatus)values({$companyid},'{$month1}',{$row['spvid']},{$skala},5)")->execute();
    
    
                  
        /*
        $this->pdf->setwidths(array(220,25,35,30));
        $this->pdf->colalign = array('C','R','R','L');
        $this->pdf->row(array('','Deposit 10%', Yii::app()->format->formatCurrency($deposit).' = ',Yii::app()->format->formatCurrency($totalkomisi-$deposit)));
        $this->pdf->checkNewPage(25);
        $this->pdf->setwidths(array(50,50,70,70,70));
        $this->pdf->colalign = array('C','C','C','C','C');
        $this->pdf->row(array('Diperiksa Oleh', 'Disetujui Oleh     ', 'Mengetahui      ', 'Dibayar Oleh', 'Diterima Oleh'));
        $this->pdf->setY($this->pdf->getY()+12);
        $this->pdf->setwidths(array(50,50,70,70,70));
        $this->pdf->colalign = array('C','L','C','C','C');
        $this->pdf->row(array('ACC & HEAD FINANCE','HEAD MARKETING', 'BRANCH MANAGER', 'KASIR     ', 'SALES     '));
        $this->pdf->checkNewPage(-20);
        */
    }
    $this->pdf->Output();
  }
	public function RekapRealisasiPenjualanPerSPVSalesPerGroupMaterial1_lama3($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
      parent::actionDownload();
      //$this->no_result();
      
      $connection = Yii::app()->db;
      $this->pdf->title='REKAP REALISASI PENJUALAN PER SPV SALES PER GROUP MATERIAL';
	  $this->pdf->companyid=$companyid;
      $datetime = new DateTime(date($enddate));

      $this->pdf->subtitle='Target Bulan '.$datetime->format('F').' '.$datetime->format('Y').' dan '.'Realisasi s/d '.date('d-m-Y',strtotime($enddate));
      $this->pdf->AddPage('L',array(210,330));
      
      $this->pdf->SetFont('Arial','',10);
      $this->pdf->sety($this->pdf->gety()+5);
      
      $month = date('m',strtotime($enddate));
      $year = date('Y',strtotime($enddate));
      
      $prev_month_ts1 = strtotime(''.$year.'-'.$month.'-01 -3 month');
      $prev_month_ts2 = strtotime(''.$year.'-'.$month.'-01 -1 month');
      
      $lastmonth1 = date('Y-m-d', $prev_month_ts1);
      $lastmonth2 = date('Y-m-t', $prev_month_ts2);
		
		$spvscale = Yii::app()->db->createCommand("select ifnull(spvscale/100,0) from scale where recordstatus = 5 order by docdate desc")->queryScalar();
      
      $prev_month_ts =  strtotime($year.'-'.$month.'-01');
      $month1 = date('Y-m-d', $prev_month_ts);
      $month2 = date('Y-m-t', $prev_month_ts);
      $this->pdf->text(310,15,'Per : '.$per);
      $maxtarget = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appst')")->queryScalar();
      $maxscale = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appss')")->queryScalar();
      
      $sqlidscale = "select scaleid
                        from scale
                        where recordstatus = getwfmaxstatbywfname('appss') 
                        -- and companyid = {$companyid} 
                        order by docdate desc limit 1";
      $idscale = Yii::app()->db->createCommand($sqlidscale)->queryScalar();
      
      $sql = "select l.employeeid as spvid,l.fullname,a.companyid,GROUP_CONCAT(DISTINCT f.employeeid) as employeeid,group_concat(a.salestargetid) as salestargetid
                    from salestarget a
                    join employee b on b.employeeid = a.employeeid
        join employeeorgstruc f on f.employeeid=b.employeeid
        join orgstructure i ON i.orgstructureid=f.orgstructureid
        join orgstructure j ON j.orgstructureid=i.parentid
        join employeeorgstruc k on k.orgstructureid=j.orgstructureid
        JOIN employee l ON l.employeeid=k.employeeid
                    where j.structurename LIKE '%spv%' and a.recordstatus= {$maxtarget} and a.perioddate = '{$month1}' and a.companyid = {$companyid} and l.fullname like '%".$spv."%'
					GROUP BY l.employeeid
					order by l.fullname asc
		";
      $result = Yii::app()->db->createCommand($sql)->queryAll();
      
      foreach($result as $row)
      {
          $totaltarget2 = 0;
          $totalqtykum = 0;
          $totalqtytarget = 0;
          $totalqtyrealisasi = 0;
          $totalqtypl = 0;
          $totalrealisasi = 0;
          $totalkumulatif = 0;
          $totalkomisi = 0;
          $totaldiff = 0;
                    $n=1;
          
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->setwidths(array(85));
          $this->pdf->row(array('NAMA SUPERVISOR = '. $row['fullname'] .' - '.Yii::app()->format->formatCurrency($spvscale)));
                    
                    $sqlcustcategory = "select distinct b.custcategoryname,a.custcategoryid as custid
                                       from salestargetdet a
                                       join custcategory b on b.custcategoryid = a.custcategoryid
                                       where a.salestargetid in ({$row['salestargetid']})
									   and b.custcategoryid not in (13,14)
                                       group by b.custcategoryid";
                
                    $foundrows = Yii::app()->db->createCommand('select found_rows()')->queryScalar();
          
                    $resultcustcategory = Yii::app()->db->createCommand($sqlcustcategory)->queryAll();
                    foreach($resultcustcategory as $rslt)
                    {
                        $totaltargetcust = 0;
                        $totalqtykumcust = 0;
                        $totalqtytargetcust = 0;
                        $totalqtyrealisasicust = 0;
                        $totalqtyplcust = 0;
                        $totalrealisasicust = 0;
                        $totalkumulatifcust = 0;
                        $totalkomisicust = 0;
                        $totaldiffcust = 0;
                                        
						$sqlcustscale = "select value
								 from scalecat a
								 -- join salesscale b on b.salesscaleid = a.salesscaleid
								 -- where b.perioddate = '{$month1}' 
								 -- and b.companyid = {$companyid}
								 -- and b.recordstatus = {$maxscale}
								 where scaleid = {$idscale}
								 and a.custcategoryid = {$rslt['custid']}";
						$custscale = Yii::app()->db->createCommand($sqlcustscale)->queryScalar();
                      
                        $sqlgroupkasta = "select groupkastaid,groupname from groupkasta";
$groupkasta = Yii::app()->db->createCommand($sqlgroupkasta)->queryAll();
                        
                        $sqlpencapaian = "select sum(kumharga)/sum(harga)*100 from (
                            select ifnull(sum(qty*price),0) as harga,
                            ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                            from invoice a
                            join giheader b on a.giheaderid = b.giheaderid
                            join gidetail c on c.giheaderid = b.giheaderid
                            join soheader d on d.soheaderid = b.soheaderid
                            join product e on e.productid = c.productid
                            join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                            where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                            and d.employeeid in ({$row['employeeid']}) and g.custcategoryid = {$rslt['custid']} and d.isdisplay=0),0) as kumharga
                            from salestarget b
                            join salestargetdet a on a.salestargetid = b.salestargetid
                            join employee d on d.employeeid = b.employeeid
                            where b.employeeid in ({$row['employeeid']}) and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} and a.custcategoryid = {$rslt['custid']}
                            union
                            select sum(harga) as harga, sum(kumharga) as kumharga from (
                            select 0 as harga,-1*sum(a.qty*a.price) as kumharga
                            from notagirpro a
                            join notagir b on b.notagirid = a.notagirid
                            join gireturdetail c on c.gireturdetailid = a.gireturdetailid
                            join giretur d on d.gireturid = c.gireturid
                            join giheader e on e.giheaderid = d.giheaderid
                            join soheader f on f.soheaderid = e.soheaderid
                            join product g on g.productid = a.productid
                                                        join addressbook h on h.addressbookid = f.addressbookid
                            where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid in ({$row['employeeid']})
                            and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and h.custcategoryid = {$rslt['custid']} and f.isdisplay=0) x 
                            ) z ";
                        $h = Yii::app()->db->createCommand($sqlpencapaian)->queryScalar();
                        
                        $this->pdf->setFont('Arial','B',10);
                        $this->pdf->setY($this->pdf->getY());
                        $this->pdf->row(array(getCatalog('custcategory'). ' = '. $rslt['custcategoryname'].' - '.$custscale.'%'));
                        $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
                        $this->pdf->setwidths(array(50,45,45,45,45,15,15,30,15));
                        $this->pdf->colheader = array('Kelompok Barang',
                                                'Target Bulan ini',
                                                'Realisasi Hari ini',
                                                'Realisasi Kumulatif',
                                                '+ / -',
                                                'Penc.',
                                                'Skala',
                                                'Upah Tambahan',
                                                '');
                        $this->pdf->RowHeader();
                        $this->pdf->coldetailalign = array('L','C','C','C','C','C','C','C');
						$this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,15,15,30,15));
                        //$this->pdf->row(array('','Qty','Rp','Qty','Rp','Qty','Rp','Qty','Rp','RP','Rp','Rp','Rp'));
                        $this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R','R','R','R','R','R');
                        
                        foreach($groupkasta as $group) {
                          
                            $hgroup=0;
                            $totaltargetgroup = 0;
                            $totalqtykumgroup = 0;
                            $totalqtytargetgroup = 0;
                            $totalqtyrealisasigroup = 0;
                            $totalqtyplgroup = 0;
                            $totalrealisasigroup = 0;
                            $totalkumulatifgroup = 0;
                            $totalkomisigroup = 0;
                            $totaldiffgroup = 0;
                          
                            $this->pdf->SetFont('Arial','B',9);
                            $this->pdf->row(array(
                            $group['groupname']));
                          
                            $matgroup = "select * from (select z.materialgroupid as materialgroupid, description
                            from salestargetdet za
                            join (select parentmatgroupid,materialgroupid,description from materialgroup zx where zx.isfg=0 and zx.recordstatus=1 and groupkastaid = {$group['groupkastaid']}) z on z.materialgroupid = za.materialgroupid
                            join salestarget zc on zc.salestargetid = za.salestargetid
                            where za.salestargetid in ({$row['salestargetid']})
                            and za.custcategoryid={$rslt['custid']} and zc.companyid={$companyid} and zc.perioddate = '{$month1}'
                            group by z.materialgroupid
                            union 
                            select g.materialgroupid, description
                            from invoice a
                            join giheader b on a.giheaderid = b.giheaderid
                            join gidetail c on c.giheaderid = b.giheaderid
                            join soheader d on d.soheaderid = b.soheaderid
                            join product e on e.productid = c.productid
                            join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                            join addressbook i on i.addressbookid = d.addressbookid
                            join materialgroup g on g.materialgroupid = f.materialgroupid
                            -- join materialgroup h on h.materialgroupid = g.parentmatgroupid
                            where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                            and d.employeeid in ({$row['employeeid']}) 
                            -- and h.isfg=1
                            and i.custcategoryid = {$rslt['custid']}
                            and d.isdisplay=0 and g.groupkastaid = {$group['groupkastaid']}
                            group by g.materialgroupid 
                            union
                            select xh.materialgroupid, description
                            from notagirpro x
                            join notagir xa on xa.notagirid = x.notagirid
                            join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                            join giretur xc on xc.gireturid = xb.gireturid
                            join giheader xd on xd.giheaderid = xc.giheaderid
                            join soheader xe on xe.soheaderid = xd.soheaderid
                            join product xf on xf.productid = x.productid
                            join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
join addressbook xj on xj.addressbookid = xe.addressbookid
                            join materialgroup xh on xh.materialgroupid = xg.materialgroupid
                            -- join materialgroup xi on xi.materialgroupid = xh.parentmatgroupid
                            where xc.companyid = {$companyid} and xc.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 
                            and xe.employeeid in ({$row['employeeid']}) 
                            -- and xi.isfg=1 
                            and xj.custcategoryid = {$rslt['custid']}
                            and xe.isdisplay=0 and xh.groupkastaid = {$group['groupkastaid']}
                            group by xh.materialgroupid ) zzz
                            order by zzz.materialgroupid asc ";
                            $material = Yii::app()->db->createCommand($matgroup)->queryAll();
                            foreach($material as $row1)
                            {

                                $sql1 = "select sum(qty) as targetqty, sum(harga) as targetharga, sum(realqty) as realqty, sum(realharga) as realharga, sum(kumqty) as kumqty, sum(kumharga) as kumharga from (
                                                select ifnull(sum(a.qty),0) as qty,
                                                ifnull(sum(qty*price),0) as harga,
                                                 ifnull((select sum(xb.qty)
                                                        from giheader xa
                                                        join gidetail xb on xa.giheaderid = xb.giheaderid
                                                        join soheader xs on xs.soheaderid = xa.soheaderid
                                                        join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                        join addressbook xd on xd.addressbookid = xs.addressbookid
                                                        where xa.recordstatus = 3 and xs.employeeid in ({$row['employeeid']}) 
                                                        -- and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) 
                                                        and xc.materialgroupid = {$row1['materialgroupid']}
                                                        and xs.companyid = {$companyid} and xa.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xd.custcategoryid = {$rslt['custid']} and xs.isdisplay=0),0) as realqty,
                                                ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                        from invoice a
                                                        join giheader b on a.giheaderid = b.giheaderid
                                                        join gidetail c on c.giheaderid = b.giheaderid
                                                        join soheader d on d.soheaderid = b.soheaderid
                                                        join product e on e.productid = c.productid
                                                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                                                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and d.employeeid in ({$row['employeeid']})
-- and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']}) 
                                                        and f.materialgroupid = {$row1['materialgroupid']} and g.custcategoryid = {$rslt['custid']} and d.isdisplay=0),0) as realharga,
                                                ifnull((select sum(xb.qty)
                                                        from giheader xa
                                                        join gidetail xb on xa.giheaderid = xb.giheaderid
                                                        join soheader xs on xs.soheaderid = xa.soheaderid
                                                        join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
                                                        join addressbook xd on xd.addressbookid = xs.addressbookid
                                                        where xa.recordstatus = 3 and xs.companyid = {$companyid} and xs.employeeid in ({$row['employeeid']}) 
                                                        -- and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) 
                                                        and xc.materialgroupid = {$row1['materialgroupid']}
                                                        and xa.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xd.custcategoryid = {$rslt['custid']} and xs.isdisplay=0),0) as kumqty,
                                             ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
                                                        from invoice a
                                                        join giheader b on a.giheaderid = b.giheaderid
                                                        join gidetail c on c.giheaderid = b.giheaderid
                                                        join soheader d on d.soheaderid = b.soheaderid
                                                        join product e on e.productid = c.productid
                                                        join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
                                                        join addressbook g on g.addressbookid = d.addressbookid
                                                        where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
                                                        and d.employeeid in ({$row['employeeid']})
                                                        -- and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']})
                                                        and f.materialgroupid = {$row1['materialgroupid']}
                                                        and g.custcategoryid = {$rslt['custid']} and d.isdisplay=0),0) as kumharga
                                                from salestarget b
                                                join salestargetdet a on a.salestargetid = b.salestargetid
                                                join materialgroup c on c.materialgroupid = a.materialgroupid
                                                join employee d on d.employeeid = b.employeeid
                                                where b.employeeid in ({$row['employeeid']}) and b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} 
                                                -- and a.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
and a.materialgroupid = {$row1['materialgroupid']}
                                                and a.custcategoryid = {$rslt['custid']}
                                                union

                                  select 0 as qty,0 as harga,
                                                        ifnull((select -1*sum(x.qty)
                                                                from notagirpro x
                                                                join notagir xa on xa.notagirid = x.notagirid
                                                                join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                join giretur xc on xc.gireturid = xb.gireturid
                                                                join giheader xd on xd.giheaderid = xc.giheaderid
                                                                join soheader xe on xe.soheaderid = xd.soheaderid
                                                                join product xf on xf.productid = x.productid
                                                                join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                join addressbook xh on xh.addressbookid = xe.addressbookid
                                                                where xc.companyid = {$companyid} and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 and xe.employeeid in ({$row['employeeid']}) 
                                                                -- and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) 
                                                                and xg.materialgroupid = {$row1['materialgroupid']}
                                                                and xh.custcategoryid = {$rslt['custid']} and xe.isdisplay=0),0) as realqty,
                                                        ifnull((select -1*sum(x.qty*x.price)
                                                                from notagirpro x
                                                                join notagir xa on xa.notagirid = x.notagirid
                                                                join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
                                                                join giretur xc on xc.gireturid = xb.gireturid
                                                                join giheader xd on xd.giheaderid = xc.giheaderid
                                                                join soheader xe on xe.soheaderid = xd.soheaderid
                                                                join product xf on xf.productid = x.productid
                                                                join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
                                                                join addressbook xh on xh.addressbookid = xe.addressbookid
                                                                where xc.companyid = {$companyid}  and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and xa.recordstatus=3 and xe.employeeid in ({$row['employeeid']}) 
                                                                -- and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                                                                and xg.materialgroupid = {$row1['materialgroupid']}
                                                                and xh.custcategoryid = {$rslt['custid']} and xe.isdisplay=0),0) as realharga,
                                                         ifnull(-1*sum(a.qty),0) as kumqty,
ifnull(-1*sum(a.qty*a.price),0) as kumharga
                                                        from notagirpro a
                                                        join notagir b on b.notagirid = a.notagirid
                                                        join gireturdetail c on c.gireturdetailid = a.gireturdetailid
                                                        join giretur d on d.gireturid = c.gireturid
                                                        join giheader e on e.giheaderid = d.giheaderid
                                                        join soheader f on f.soheaderid = e.soheaderid
                                                        join product g on g.productid = a.productid
                                                        join productplant h on h.productid = g.productid and h.unitofissue = a.uomid and h.slocid = a.slocid
                                                        join addressbook i on i.addressbookid = f.addressbookid
                                                        join custcategory j on j.custcategoryid = i.custcategoryid
                                                        where f.companyid = {$companyid} and b.recordstatus = 3 and employeeid in ({$row['employeeid']})
                                                        -- and h.materialgroupid  in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
                                                        and h.materialgroupid = {$row1['materialgroupid']}
                                                        and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and j.custcategoryid = ".$rslt['custid']."
                                                and f.isdisplay=0) z ";

                                    $res1 = Yii::app()->db->createCommand($sql1)->queryAll();
                                    /*
                                    $this->pdf->SetFont('Arial','B',10);
                                    $this->pdf->setwidths(array(85));
                                    $this->pdf->row(array('NAMA SALES = '. $row['fullname']));
                                    */
                                    $mod = 0;
                                    foreach($res1 as $row2)
                                    {
                                        $this->pdf->SetFont('Arial','',8);
                                        $this->pdf->setwidths(array(50,15,30,15,30,15,30,15,30,15,15,30,15));

                                        
                                        if($row2['targetharga']*$row2['targetqty']==0)
                                        {
                                            $mod = 0;
                                        }
                                        else
                                        {
                                            //$mod = ($row2['kumqty']/$row2['targetqty'])*100;
                                            $mod = ($row2['kumharga']/$row2['targetharga'])*100;
                                            //$mod = 1;
                                        }
if($row2['targetqty']==0 && $row2['kumqty']>0)
                                        {
                                            $mod = 0;
                                        }
                                        /*
                                        if($h>=$minscale)
                                        {
                                            //$this->pdf->setbordercell(array('B','B','B','B','B','B','B','B','B','B','B','B','B','B'));
                                            if($mod>120)
                                            {
                                                $select = 'select gt120';
                                            }
                                            else if($mod<=120 && $mod>100)
                                            {
                                                $select = 'select gt100';
                                            }
                                            else if($mod<=100 & $mod>90)
                                            {
                                                $select = 'select gt90';
                                            }
                                            else if($mod<=90 && $mod>80)
                                            {
                                                $select = 'select gt80';
                                            }
                                            else if($mod<=80 && $mod>70)
                                            {
                                                $select = 'select gt70';
                                            }
                                            else
                                            {
                                                $select = 'select 0';
                                            }
                                            $from = " from salesscale a 
                                                        join salesscaledet b on a.salesscaleid = b.salesscaleid
                                                        where a.companyid = {$companyid} and b.materialgroupid ={$row1['materialgroupid']} 
                                                        and a.perioddate = '{$month1}' and a.recordstatus = {$maxscale} ";
                                            $scale = Yii::app()->db->createCommand($select.$from)->queryScalar();
                                        }
                                        else
                                        {
                                            $scale=0;
                                        }
                                        */
                                        $select = "select value
                                                  from scaledet a
                                                  where a.scaleid = {$idscale} and materialgroupid = {$row1['materialgroupid']}";
                                        $scale = Yii::app()->db->createCommand($select)->queryScalar();
										
                                        if($mod<70) {
                                            $multiscale = 0;
                                        }
										else if($mod>120) {
                                            $multiscale = 1.2;
                                        }
                                        else {
                                            $multiscale = $mod/100;
                                        }
                                        $this->pdf->row(array($row1['description'].' - ('.Yii::app()->format->formatCurrency($scale).'% )',
                                                Yii::app()->format->formatCurrency($row2['targetqty']),
                                                Yii::app()->format->formatCurrency(($row2['targetharga'])/$per),
                                                Yii::app()->format->formatCurrency($row2['realqty']),
                                                Yii::app()->format->formatCurrency($row2['realharga']/$per),
                                                Yii::app()->format->formatCurrency($row2['kumqty']),
                                                Yii::app()->format->formatCurrency($row2['kumharga']/$per),
                                                Yii::app()->format->formatCurrency($row2['kumqty'] - $row2['targetqty']),
                                                Yii::app()->format->formatCurrency(($row2['kumharga'] - ($row2['targetharga']))/$per),
                                                Yii::app()->format->formatCurrency($mod),
                                                Yii::app()->format->formatNumber($scale*$multiscale*$spvscale),
                                                Yii::app()->format->formatCurrency(($scale * $spvscale/100*$row2['kumharga']*$multiscale*($custscale/100))/$per)
                                        ));
                                        $totaltarget2 += ($row2['targetharga'])/$per;
                                        $totalrealisasi += $row2['realharga']/$per;
                                        $totalkumulatif += $row2['kumharga']/$per;
                                        $totaldiff += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        $totalkomisi += ($scale * $spvscale/100*$row2['kumharga'])*$multiscale*($custscale/100)/$per;
                                        $totalqtykum += $row2['kumqty'];
                                        $totalqtytarget += $row2['targetqty'];
                                        $totalqtyrealisasi += $row2['realqty'];
                                        $totalqtypl += ($row2['kumqty'] - $row2['targetqty']);
                                    
                                        $totaltargetcust += ($row2['targetharga'])/$per;
                                        $totalrealisasicust += $row2['realharga']/$per;
                                        $totalkumulatifcust += $row2['kumharga']/$per;
                                        $totaldiffcust += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        $totalkomisicust += ($scale * $spvscale/100*$row2['kumharga'])*$multiscale*($custscale/100)/$per;
                                        $totalqtykumcust += $row2['kumqty'];
                                        $totalqtytargetcust += $row2['targetqty'];
                                        $totalqtyrealisasicust += $row2['realqty'];
                                        $totalqtyplcust += ($row2['kumqty'] - $row2['targetqty']);
                                      
                                        $totaltargetgroup += ($row2['targetharga'])/$per;
                                        $totalrealisasigroup += $row2['realharga']/$per;
                                        $totalkumulatifgroup += $row2['kumharga']/$per;
                                        $totaldiffgroup += ($row2['kumharga'] - $row2['targetharga'])/$per;
                                        $totalkomisigroup += ($scale * $spvscale/100*$row2['kumharga'])*$multiscale*($custscale/100)/$per;
                                        $totalqtykumgroup += $row2['kumqty'];
                                        $totalqtytargetgroup += $row2['targetqty'];
$totalqtyrealisasigroup += $row2['realqty'];
                                        $totalqtyplgroup += ($row2['kumqty'] - $row2['targetqty']);
                                      
                                        //$this->pdf->row(array(''));
                                        $n++;
                                        if($foundrows == $n)
                                        {
                                            //$this->pdf->setY($this->pdf->getY()+0);
                                        }
                                        else
                                        {
                                            $this->pdf->checkNewPage(25);   
                                        }
                                    
                                    }
                            }
                            if($totaltargetgroup===0) {
                                $hgroup=0;
                            }
                            else {
								if ($totaltargetgroup == 0) {
									$hgroup = 0;
								}
								else {
									$hgroup = ($totalkumulatifgroup/$totaltargetgroup)*100; 
								}
                            }
                            $this->pdf->setFont('Arial','B',9);
                            $this->pdf->row(array('TOTAL '.$group['groupname'].' : ',$totalqtytargetgroup, Yii::app()->format->formatCurrency($totaltargetgroup),$totalqtyrealisasigroup, Yii::app()->format->formatCurrency($totalrealisasigroup),$totalqtykumgroup, Yii::app()->format->formatCurrency($totalkumulatifgroup),$totalqtyplgroup, Yii::app()->format->formatCurrency($totaldiffgroup),Yii::app()->format->formatCurrency($hgroup),'',Yii::app()->format->formatCurrency($totalkomisigroup)));
                            $this->pdf->setY($this->pdf->getY()+5);
                        }
                        if($totalkumulatif==0) {
                            $totalkomisisub = 0;
                        }
                        else {
                            $totalkomisisub = ($totalkomisicust/$totalkumulatifcust)*100;
                        }
                        $this->pdf->setFont('Arial','B',9);
                        $this->pdf->row(array('TOTAL '.getCatalog('custcategory').' : '.$rslt['custcategoryname'],$totalqtytargetcust, Yii::app()->format->formatCurrency($totaltargetcust),$totalqtyrealisasicust, Yii::app()->format->formatCurrency($totalrealisasicust),$totalqtykumcust, Yii::app()->format->formatCurrency($totalkumulatifcust),$totalqtyplcust, Yii::app()->format->formatCurrency($totaldiffcust),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisicust),Yii::app()->format->formatNumber($totalkomisisub).'%'));
                        //$this->pdf->row(array(''));
                        $this->pdf->setY($this->pdf->getY()+10);
                        //$this->pdf->checkNewPage(22);
                    }
          $this->pdf->row(array('TOTAL SUPERVISOR '. $row['fullname'],$totalqtytarget, Yii::app()->format->formatCurrency($totaltarget2),$totalqtyrealisasi, Yii::app()->format->formatCurrency($totalrealisasi),$totalqtykum, Yii::app()->format->formatCurrency($totalkumulatif),$totalqtypl, Yii::app()->format->formatCurrency($totaldiff),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisi)));
          $this->pdf->row(array(''));
          $deposit = (($totalkomisi)*10/100);
                    
                    /*
          $this->pdf->setwidths(array(220,25,35,30));
          $this->pdf->colalign = array('C','R','R','L');
          $this->pdf->row(array('','Deposit 10%', Yii::app()->format->formatCurrency($deposit).' = ',Yii::app()->format->formatCurrency($totalkomisi-$deposit)));
          $this->pdf->checkNewPage(25);
          $this->pdf->setwidths(array(50,50,70,70,70));
          $this->pdf->colalign = array('C','C','C','C','C');
          $this->pdf->row(array('Diperiksa Oleh', 'Disetujui Oleh     ', 'Mengetahui      ', 'Dibayar Oleh', 'Diterima Oleh'));
          $this->pdf->setY($this->pdf->getY()+12);
$this->pdf->setwidths(array(50,50,70,70,70));
          $this->pdf->colalign = array('C','L','C','C','C');
          $this->pdf->row(array('ACC & HEAD FINANCE','HEAD MARKETING', 'BRANCH MANAGER', 'KASIR     ', 'SALES     '));
          $this->pdf->checkNewPage(-20);
                    */
      }
      $this->pdf->Output();
  
	}
	public function RekapRealisasiPenjualanPerSPVSalesPerGroupMaterial1_lama($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
			//$this->no_result();

			$connection = Yii::app()->db;
			$this->pdf->title='REKAP REALISASI PENJUALAN PER SPV SALES PER GROUP MATERIAL';
			$datetime = new DateTime(date($enddate));

			$this->pdf->subtitle='Target Bulan '.$datetime->format('F').' '.$datetime->format('Y').' dan '.'Realisasi s/d '.date('d-m-Y',strtotime($enddate));
			$this->pdf->AddPage('L',array(210,330));

			$this->pdf->SetFont('Arial','',10);
			$this->pdf->sety($this->pdf->gety()+5);

			$month = date('m',strtotime($enddate));
			$year = date('Y',strtotime($enddate));

			//$prev_month_ts1 = strtotime(''.$year.'-'.$month.'-01 -3 month');
			//$prev_month_ts2 = strtotime(''.$year.'-'.$month.'-01 -1 month');

			//$lastmonth1 = date('Y-m-d', $prev_month_ts1);
			//$lastmonth2 = date('Y-m-t', $prev_month_ts2);

			$prev_month_ts =  strtotime($year.'-'.$month.'-01');
			$month1 = date('Y-m-d', $prev_month_ts);
			$month2 = date('Y-m-t', $prev_month_ts);
			$this->pdf->text(310,15,'Per : '.$per);
			$maxtarget = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appst')")->queryScalar();
			
			$maxscale = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appss')")->queryScalar();
			
			// check spv
			if(isset($spv) && $spv!='')
			{
					$wherespv = " and d.parentid in 
					(select distinct a.orgstructureid
					from employeeorgstruc a
					join employee b on b.employeeid = a.employeeid
					join orgstructure c on c.orgstructureid = a.orgstructureid
					where b.fullname like '%{$spv}%' and c.companyid={$companyid}
					and a.recordstatus=1)";
			}
			else
			{
					$wherespv = '';
			}
			
			$sqlspv = "select group_concat(a.employeeid) as employee, d.parentid,count(1) as hitung
			from salestarget a
			join employee b on b.employeeid = a.employeeid
			join employeeorgstruc c on c.employeeid = b.employeeid
			join orgstructure d on d.orgstructureid = c.orgstructureid and d.companyid = a.companyid
			where a.perioddate = '{$month1}' and a.recordstatus={$maxtarget} and a.companyid={$companyid} and c.recordstatus=1
			{$wherespv}
			group by d.orgstructureid";
			$result = Yii::app()->db->createCommand($sqlspv)->queryAll();
			$c=0;
			
			foreach($result as $rows)
			{
					$totaltargetspv = 0;
					$totalqtykumspv = 0;
					$totalqtytargetspv = 0;
					$totalqtyrealisasispv = 0;
					$totalqtyplspv = 0;
					$totalrealisasispv = 0;
					$totalkumulatifspv = 0;
					$totalkomisispv = 0;
					$totaldiffspv = 0;
					
					$whereemp_real_qty = "";
					$whereemp_real_val = " ";
					$where_ret = " ";
					$where_real_emp = " ";
					$where_ret_emp = " ";
					$where_pen_target1 = " ";
					$where_pen_target2 = " ";
					$where_pen_retur = " ";
					$where_custid = " ";
					$where_custid2 = " ";
					$where_matgroup = " ";
					$where_matgroup1 = " ";
					$where_matgroup2 = " ";
					
					$sqlspvname = "select substring_index(substring_index(structurename, ',', 1), ',', - 1) as structurename, 
					a.fullname as spvname
					from employee a
					join employeeorgstruc b on b.employeeid = a.employeeid
					join orgstructure c on c.orgstructureid = b.orgstructureid
					where c.orgstructureid = {$rows['parentid']}";
					$resspvname = Yii::app()->db->createCommand($sqlspvname)->queryAll();
					
					if($c==$rows['hitung'])
					{
							$whereemp_real_qty = " and xs.employeeid in({$rows['employee']})";
							$whereemp_real_val = " and d.employeeid in ({$rows['employee']})";
							$where_ret = " and xe.employeeid in ({$rows['employee']}) ";
							$where_real_emp = "  d.employeeid in ({$rows['employee']}) ";
							$where_ret_emp = "  f.employeeid in ({$rows['employee']}) ";
							$where_pen_target1 = " and d.employeeid in ({$rows['employee']}) and g.custcategoryid = {$custtradisional}";
							$where_pen_target2 = " and b.employeeid in ({$rows['employee']})  and a.custcategoryid = {$custtradisional}";
							$where_pen_retur = " and employeeid in ({$rows['employee']})  and h.custcategoryid = {$custtradisional}";
							$where_custid = " and custcategoryid in ({$custtradisional})";
							$where_custid2 = " and j.custcategoryid in ({$custtradisional})";
							$where_matgroup = " where za.salestargetid in ({$slstrgt})
							and za.custcategoryid={$custtradisional}";
							$where_matgroup1 = " and d.employeeid in ({$rows['employee']}) and i.custcategoryid = {$custtradisional}";
							$where_matgroup2 = " and xe.employeeid in ({$rows['employee']}) and xj.custcategoryid in ({$slstrgt})";
							
					}
					foreach($resspvname as $spvname)
					{
							$sql = "select a.employeeid, b.fullname, salestargetid
							from salestarget a
							join employee b on b.employeeid = a.employeeid
							where recordstatus= {$maxtarget} and a.perioddate = '{$month1}' and a.companyid = {$companyid}
							and a.employeeid in ({$rows['employee']})
							union 
							select 0,'{$spvname['spvname']}',0";
							$result = Yii::app()->db->createCommand($sql)->queryAll();
							$slstrgt;
							
							foreach($result as $row)
							{
									//array_push($emp['employeeid'],$row['employeeid']);
									//array_push($emp['salestargetid'],$row['employeeid']);
									$totaltarget2 = 0;
				$totalqtykum = 0;
				$totalqtytarget = 0;
				$totalqtyrealisasi = 0;
				$totalqtypl = 0;
				$totalrealisasi = 0;
				$totalkumulatif = 0;
				$totalkomisi = 0;
				$totaldiff = 0;
									$n=1;
									
									if(@$slstrgt===null)
									{
											$slstrgt=$row['salestargetid'];
									}
									else
									{
											$slstrgt = $slstrgt.','.$row['salestargetid'];
									}
									
									$sqlcusttradisional = "select custcategoryid from custcategory where custcategoryname like '%tradisional%'";
									$custtradisional = Yii::app()->db->createCommand($sqlcusttradisional)->queryScalar();
									if($c==$rows['hitung'])
									{
											
											$where_all = " and employeeid in ({$rows['employee']})";
											$where_cust = " where salestargetid in ({$slstrgt})";
									}
									else
									{
										 
											$where_all = " and employeeid = {$row['employeeid']}";
											$where_cust = " where salestargetid = {$row['salestargetid']}";
									}
				
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->setwidths(array(85));
				if($c==$rows['hitung'])
									{
											$this->pdf->row(array('NAMA SPV = '. $row['fullname']));    
									}
									else
									{
											$this->pdf->row(array('NAMA SALES = '. $row['fullname']));
									}
									
									$sqlcustcategory = "select b.custcategoryname,a.custcategoryid as custid
									from salestargetdet a
									join custcategory b on b.custcategoryid = a.custcategoryid
									{$where_cust}
									and b.custcategoryname like '%tradisional%'
									group by b.custcategoryid";
							
									$foundrows = Yii::app()->db->createCommand('select found_rows()')->queryScalar();
				
									$resultcustcategory = Yii::app()->db->createCommand($sqlcustcategory)->queryAll();
									foreach($resultcustcategory as $rslt)
									{
											$totaltargetcust = 0;
											$totalqtykumcust = 0;
											$totalqtytargetcust = 0;
											$totalqtyrealisasicust = 0;
											$totalqtyplcust = 0;
											$totalrealisasicust = 0;
											$totalkumulatifcust = 0;
											$totalkomisicust = 0;
											$totaldiffcust = 0;
											
											if($c!=$rows['hitung'])
											{
											
													$whereemp_real_qty = " and xs.employeeid = ".$row['employeeid'];
													$whereemp_real_val = " and d.employeeid = ".$row['employeeid'];
													$where_ret = " and xe.employeeid = {$row['employeeid']} ";
													$where_real_emp = "  d.employeeid = {$row['employeeid']}";
													$where_ret_emp = "  f.employeeid = {$row['employeeid']}";
													$where_pen_target1 = " and d.employeeid = {$row['employeeid']} and g.custcategoryid = {$rslt['custid']}";
													$where_pen_target2 = " and b.employeeid = {$row['employeeid']} and a.custcategoryid = {$rslt['custid']}";
													$where_pen_retur = " and employeeid = {$row['employeeid']} and h.custcategoryid = {$rslt['custid']}";
													//$where_all = " and employeeid = {$row['employeeid']}";
													$where_custid = " and custcategoryid = {$rslt['custid']}";
													$where_custid2 = " and j.custcategoryid = {$rslt['custid']}";
													//$where_cust = " where a.salestargetid = {$row['salestargetid']}";
													$where_matgroup = " where za.salestargetid = {$row['salestargetid']} and za.custcategoryid={$rslt['custid']}";
													$where_matgroup1 = " and d.employeeid = {$row['employeeid']} and i.custcategoryid = {$rslt['custid']}";
													$where_matgroup2 = " and xe.employeeid = {$row['employeeid']} and xj.custcategoryid = {$rslt['custid']}";
													
													$sqlminscale = "select minscale 
													from salesscale 
													where month(perioddate) = month('".date(Yii::app()->params['datetodb'],strtotime($enddate))."') and year(perioddate) = year('".date(Yii::app()->params['datetodb'],strtotime($enddate))."') and companyid = {$companyid} and recordstatus= ".$maxscale;
													$minscale = Yii::app()->db->createCommand($sqlminscale)->queryScalar();
											}
											else
											{
													$whereemp_real_qty = " and xs.employeeid in({$rows['employee']})";
													$whereemp_real_val = " and d.employeeid in ({$rows['employee']})";
													$where_ret = " and xe.employeeid in ({$rows['employee']}) ";
													$where_real_emp = "  d.employeeid in ({$rows['employee']}) ";
													$where_ret_emp = "  f.employeeid in ({$rows['employee']}) ";
													$where_pen_target1 = " and d.employeeid in ({$rows['employee']}) and g.custcategoryid = {$custtradisional}";
													$where_pen_target2 = " and b.employeeid in ({$rows['employee']})  and a.custcategoryid = {$custtradisional}";
													$where_pen_retur = " and employeeid in ({$rows['employee']})  and h.custcategoryid = {$custtradisional}";
													$where_custid = " and custcategoryid in ({$custtradisional})";
													$where_custid2 = " and j.custcategoryid in ({$custtradisional})";
													$where_matgroup = " where za.salestargetid in ({$slstrgt})
													and za.custcategoryid={$custtradisional}";
													$where_matgroup1 = " and d.employeeid in ({$rows['employee']}) and i.custcategoryid = {$custtradisional}";
													$where_matgroup2 = " and xe.employeeid in ({$rows['employee']}) and xj.custcategoryid in ({$custtradisional})";
													
													$sqlminscale = "select spvscale 
													from salesscale 
													where month(perioddate) = month('".date(Yii::app()->params['datetodb'],strtotime($enddate))."') and year(perioddate) = year('".date(Yii::app()->params['datetodb'],strtotime($enddate))."') and companyid = {$companyid} and recordstatus= ".$maxscale;
													$minscale = Yii::app()->db->createCommand($sqlminscale)->queryScalar();
											}
											
											$sqlpencapaian = "select sum(kumharga)/sum(harga)*100 from (
											select ifnull(sum(qty*price),0) as harga,
											ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
											from invoice a
											join giheader b on a.giheaderid = b.giheaderid
											join gidetail c on c.giheaderid = b.giheaderid
											join soheader d on d.soheaderid = b.soheaderid
											join product e on e.productid = c.productid
											join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
											join addressbook g on g.addressbookid = d.addressbookid
											-- join custcategory h on h.custcategoryid = g.custcategoryid
											where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' {$where_pen_target1} 
										    and d.isdisplay = 0),0) as kumharga
											from salestarget b
											join salestargetdet a on a.salestargetid = b.salestargetid
											join employee d on d.employeeid = b.employeeid
											-- join custcategory e on e.custcategoryid = a.custcategoryid
											where b.perioddate = '{$month1}' {$where_pen_target2} and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} 
											union
											select sum(harga) as harga, sum(kumharga) as kumharga from (
											select 0 as harga,-1*sum(a.qty*a.price) as kumharga
											from notagirpro a
											join notagir b on b.notagirid = a.notagirid
											join gireturdetail c on c.gireturdetailid = a.gireturdetailid
											join giretur d on d.gireturid = c.gireturid
											join giheader e on e.giheaderid = d.giheaderid
											join soheader f on f.soheaderid = e.soheaderid
											join product g on g.productid = a.productid
											join addressbook h on h.addressbookid = f.addressbookid
											-- join custcategory i on i.custcategoryid = h.custcategoryid
											where f.companyid = {$companyid} and b.recordstatus = 3 
											{$where_pen_retur} and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                                            and f.isdisplay = 0) x 
											) z ";
											$h = Yii::app()->db->createCommand($sqlpencapaian)->queryScalar();
											
											$this->pdf->setFont('Arial','B',10);
											$this->pdf->setY($this->pdf->getY());
											$this->pdf->row(array(getCatalog('custcategory'). ' = '. $rslt['custcategoryname']));
											$this->pdf->colalign = array('C','C','C','C','C','C','C','C');
											$this->pdf->setwidths(array(70,45,45,45,45,15,15,30));
											$this->pdf->colheader = array('Sales dan Kelompok Barang',
																							'Target Bulan ini',
																							'Realisasi Hari ini',
																							'Realisasi Kumulatif',
																							'+ / -',
																							'Penc.',
																							'Skala',
																							'Upah Tambahan');
											$this->pdf->RowHeader();
											$this->pdf->coldetailalign = //array('L','C','C','C','C','C','C','C','C','C','C','C');
											$this->pdf->setwidths(array(70,15,30,15,30,15,30,15,30,15,15,30));
											//$this->pdf->row(array('','Qty','Rp','Qty','Rp','Qty','Rp','Qty','Rp','RP','Rp','Rp'));
											$this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R','R','R','R');
											
											$matgroup = "select z.parentmatgroupid as materialgroupid, (select description from materialgroup where materialgroupid=z.parentmatgroupid) as description
											from salestargetdet za
											join (select parentmatgroupid,materialgroupid,description from materialgroup zx where zx.isfg=0 and zx.recordstatus=1) z on z.materialgroupid = za.materialgroupid
											join salestarget zc on zc.salestargetid = za.salestargetid
											{$where_matgroup} and zc.companyid={$companyid} and zc.perioddate = '{$month1}' 
											group by z.parentmatgroupid 
											union 
											select h.materialgroupid, h.description
											from invoice a
											join giheader b on a.giheaderid = b.giheaderid
											join gidetail c on c.giheaderid = b.giheaderid
											join soheader d on d.soheaderid = b.soheaderid
											join product e on e.productid = c.productid
											join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
											join addressbook i on i.addressbookid = d.addressbookid
											join materialgroup g on g.materialgroupid = f.materialgroupid
											join materialgroup h on h.materialgroupid = g.parentmatgroupid
											where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
											and h.isfg=1 {$where_matgroup1}
                                            and d.isdisplay = 0
											group by h.materialgroupid 
											union
											select xi.materialgroupid, xi.description
											from notagirpro x
											join notagir `xa` on `xa`.notagirid = x.notagirid
											join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
											join giretur xc on xc.gireturid = xb.gireturid
											join giheader xd on xd.giheaderid = xc.giheaderid
											join soheader xe on xe.soheaderid = xd.soheaderid
											join product xf on xf.productid = x.productid
											join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
											join addressbook xj on xj.addressbookid = xe.addressbookid
											join materialgroup xh on xh.materialgroupid = xg.materialgroupid
											join materialgroup xi on xi.materialgroupid = xh.parentmatgroupid
											where xc.companyid = {$companyid} and xc.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 
											and xi.isfg=1 {$where_matgroup2}
                                            and xe.isdisplay = 0
											group by xi.materialgroupid
											order by materialgroupid";
											if($c==$rows['hitung'])
											{
													//$matgroup= 's';
											}
											$material = Yii::app()->db->createCommand($matgroup)->queryAll();
											foreach($material as $row1)
											{		

													$sql1 = "select sum(qty) as targetqty, sum(harga) as targetharga, sum(realqty) as realqty, sum(realharga) as realharga, sum(kumqty) as kumqty, sum(kumharga) as kumharga from (
													select ifnull(sum(a.qty),0) as qty,
													ifnull(sum(qty*price),0) as harga,
													ifnull((select sum(`xb`.qty)
													from giheader `xa`
													join gidetail xb on `xa`.giheaderid = xb.giheaderid
													join soheader xs on xs.soheaderid = `xa`.soheaderid
													join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
													join addressbook xd on xd.addressbookid = xs.addressbookid
													where `xa`.recordstatus = 3 {$where_all} and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) and xs.companyid = {$companyid} and `xa`.gidate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' {$where_custid} and xs.isdisplay=0),0) as realqty,
													ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
													from invoice a
													join giheader b on a.giheaderid = b.giheaderid
													join gidetail c on c.giheaderid = b.giheaderid
													join soheader d on d.soheaderid = b.soheaderid
													join product e on e.productid = c.productid
													join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
													join addressbook g on g.addressbookid = d.addressbookid
													where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
													{$where_all}
													and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']}) {$where_custid} and d.isdisplay=0),0) as realharga,
													ifnull((select sum(`xb`.qty)
													from giheader `xa`
													join gidetail xb on `xa`.giheaderid = xb.giheaderid
													join soheader xs on xs.soheaderid = `xa`.soheaderid
													join productplant xc on xc.productid = xb.productid and xc.slocid = xb.slocid and xc.unitofissue = xb.unitofmeasureid
													join addressbook xd on xd.addressbookid = xs.addressbookid
													where `xa`.recordstatus = 3 and xs.companyid = {$companyid} {$where_all} and xc.materialgroupid in (select z.materialgroupid from materialgroup z where z.parentmatgroupid =  {$row1['materialgroupid']}) and `xa`.gidate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' {$where_custid} and xs.isdisplay=0),0) as kumqty,
													ifnull((select sum(getamountdiscso(d.soheaderid,c.sodetailid,c.qty))
													from invoice a
													join giheader b on a.giheaderid = b.giheaderid
													join gidetail c on c.giheaderid = b.giheaderid
													join soheader d on d.soheaderid = b.soheaderid
													join product e on e.productid = c.productid
													join productplant f on f.productid = e.productid and f.slocid = c.slocid and f.unitofissue = c.unitofmeasureid
													join addressbook g on g.addressbookid = d.addressbookid
													where d.companyid = {$companyid} and a.recordstatus = 3 and a.invoicedate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' 
													{$where_all}
													and f.materialgroupid in (select x.materialgroupid from materialgroup x where x.parentmatgroupid = {$row1['materialgroupid']}) {$where_custid} and d.isdisplay=0),0) as kumharga
													from salestarget b
													join salestargetdet a on a.salestargetid = b.salestargetid
													join materialgroup c on c.materialgroupid = a.materialgroupid
													join employee d on d.employeeid = b.employeeid
													where b.perioddate = '{$month1}' and b.recordstatus = {$maxtarget} and b.companyid = {$companyid} and a.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) {$where_pen_target2}
													
													union

													select 0 as qty,0 as harga,
													ifnull((select -1*sum(x.qty)
													from notagirpro x
													join notagir `xa` on `xa`.notagirid = x.notagirid
													join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
													join giretur xc on xc.gireturid = xb.gireturid
													join giheader xd on xd.giheaderid = xc.giheaderid
													join soheader xe on xe.soheaderid = xd.soheaderid
													join product xf on xf.productid = x.productid
													join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
													join addressbook xh on xh.addressbookid = xe.addressbookid
													where xc.companyid = {$companyid} and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 {$where_all} and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) {$where_custid} and xe.isdisplay=0),0) as realqty,
													ifnull((select -1*sum(x.qty*x.price)
													from notagirpro x
													join notagir `xa` on `xa`.notagirid = x.notagirid
													join gireturdetail xb on xb.gireturdetailid =x.gireturdetailid
													join giretur xc on xc.gireturid = xb.gireturid
													join giheader xd on xd.giheaderid = xc.giheaderid
													join soheader xe on xe.soheaderid = xd.soheaderid
													join product xf on xf.productid = x.productid
													join productplant xg on xg.productid = xf.productid and xg.slocid = xb.slocid and xg.unitofissue = xb.uomid
													join addressbook xh on xh.addressbookid = xe.addressbookid
													where xc.companyid = {$companyid}  and xc.gireturdate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and `xa`.recordstatus=3 {$where_all} and xg.materialgroupid in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']}) {$where_custid} and xe.isdisplay=0),0) as realharga,
													ifnull(-1*sum(a.qty),0) as kumqty,
													ifnull(-1*sum(a.qty*a.price),0) as kumharga
													from notagirpro a
													join notagir b on b.notagirid = a.notagirid
													join gireturdetail c on c.gireturdetailid = a.gireturdetailid
													join giretur d on d.gireturid = c.gireturid
													join giheader e on e.giheaderid = d.giheaderid
													join soheader f on f.soheaderid = e.soheaderid
													join product g on g.productid = a.productid
													join productplant h on h.productid = g.productid and h.unitofissue = a.uomid and h.slocid = a.slocid
													join addressbook i on i.addressbookid = f.addressbookid
													join custcategory j on j.custcategoryid = i.custcategoryid
													where f.companyid = {$companyid} and b.recordstatus = 3 {$where_all}
													and h.materialgroupid  in (select materialgroupid from materialgroup where parentmatgroupid = {$row1['materialgroupid']})
													and d.gireturdate between '{$month1}' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' {$where_custid2}
                                                    and f.isdisplay=0
													) z ";

													$res1 = Yii::app()->db->createCommand($sql1)->queryAll();
													/*
													$this->pdf->SetFont('Arial','B',10);
													$this->pdf->setwidths(array(85));
													$this->pdf->row(array('NAMA SALES = '. $row['fullname']));
													*/
													$mod = 0;
													foreach($res1 as $row2)
													{
															$this->pdf->SetFont('Arial','',8);
															$this->pdf->setwidths(array(70,15,30,15,30,15,30,15,30,15,15,30));

						                                    //if($row2['targetharga']*$row2['targetqty']==0)
						                                    if($row2['targetqty']==0)
															{
																	$mod = 0;
															}
															else
															{
																	$mod = ($row2['kumqty']/$row2['targetqty'])*100;
																	//$mod = 1;
															}

															if($row2['targetqty']==0 && $row2['kumqty']>0)
															{
																	$mod = 75;
															}

															if($h>=$minscale)
															{
																	//$this->pdf->setbordercell(array('B','B','B','B','B','B','B','B','B','B','B','B','B','B'));
																	if($mod>120)
																	{
																			$select = 'select gt120';
																	}
																	else if($mod<=120 && $mod>100)
																	{
																			$select = 'select gt100';
																	}
																	else if($mod<=100 & $mod>90)
																	{
																			$select = 'select gt90';
																	}
																	else if($mod<=90 && $mod>80)
																	{
																			$select = 'select gt80';
																	}
																	else if($mod<=80 && $mod>70)
																	{
																			$select = 'select gt70';
																	}
																	else
																	{
																			$select = 'select 0';
																	}
																	$from = " from salesscale a 
																	join salesscaledet b on a.salesscaleid = b.salesscaleid
																	where a.companyid = {$companyid} and b.materialgroupid ={$row1['materialgroupid']} 
																	and a.perioddate = '{$month1}' and a.recordstatus = {$maxscale} ";
																	$scale = Yii::app()->db->createCommand($select.$from)->queryScalar();
															}
															else
															{
																	$scale=0;
															}
															if($c!=$rows['hitung'])
															{
																	$sqlcustscale = "select paramvalue
																	from salesscalecat a
																	join salesscale b on b.salesscaleid = a.salesscaleid
																	where b.perioddate = '{$month1}' 
																	and b.companyid = {$companyid}
																	and b.recordstatus = {$maxscale}
																	and a.custcategoryid = {$rslt['custid']}";
																	
																	$spvscale = 100;
																																			
															}
															else
															{
																	$sqlcustscale = "select paramvalue
																	from salesscalecat a
																	join salesscale b on b.salesscaleid = a.salesscaleid
																	where b.perioddate = '{$month1}' 
																	and b.companyid = {$companyid}
																	and b.recordstatus = {$maxscale}
																	and a.custcategoryid = ".$custtradisional;
																	
																	$sqlspvscale = "select paramspv
																	from salesscale b
																	where b.perioddate = '{$month1}' 
																	and b.companyid = {$companyid}
																	and b.recordstatus = ".$maxscale;
																	$spvscale = Yii::app()->db->createCommand($sqlspvscale)->queryScalar();
															}

															
															$custscale = Yii::app()->db->createCommand($sqlcustscale)->queryScalar();
															$this->pdf->row(array($row1['description'],
															Yii::app()->format->formatNumber($row2['targetqty']),
															Yii::app()->format->formatCurrency(($row2['targetharga'])/$per),
															Yii::app()->format->formatNumber($row2['realqty']),
															Yii::app()->format->formatCurrency($row2['realharga']/$per),
															Yii::app()->format->formatNumber($row2['kumqty']),
															Yii::app()->format->formatCurrency($row2['kumharga']/$per),
															Yii::app()->format->formatNumber($row2['kumqty'] - $row2['targetqty']),
															Yii::app()->format->formatCurrency(($row2['kumharga'] - ($row2['targetharga']))/$per),
															Yii::app()->format->formatNumber($mod),
															Yii::app()->format->formatNumber($scale),
															Yii::app()->format->formatCurrency(($scale/100*$row2['kumharga']*($custscale/100)*$spvscale/100)/$per)
															));
															$totaltarget2 += ($row2['targetharga']  )/$per;
															$totalrealisasi += $row2['realharga']/$per;
															$totalkumulatif += $row2['kumharga']/$per;
															$totaldiff += ($row2['kumharga'] - $row2['targetharga'])/$per;
															$totalkomisi += (($scale/100*$row2['kumharga']*$custscale/100)*$spvscale/100)/$per;
															$totalqtykum += $row2['kumqty'];
															$totalqtytarget += $row2['targetqty'];
															$totalqtyrealisasi += $row2['realqty'];
															$totalqtypl += ($row2['kumqty'] - $row2['targetqty']);


															$totaltargetcust += ($row2['targetharga']  )/$per;
															$totalrealisasicust += $row2['realharga']/$per;
															$totalkumulatifcust += $row2['kumharga']/$per;
															$totaldiffcust += ($row2['kumharga'] - $row2['targetharga'])/$per;
															$totalkomisicust += (($scale/100*$row2['kumharga']*$custscale/100)*$spvscale/100)/$per;
															$totalqtykumcust += $row2['kumqty'];
															$totalqtytargetcust += $row2['targetqty'];
															$totalqtyrealisasicust += $row2['realqty'];
															$totalqtyplcust += ($row2['kumqty'] - $row2['targetqty']);
															//$this->pdf->row(array(''));
															$n++;
															if($foundrows == $n)
															{
																	//$this->pdf->setY($this->pdf->getY()+0);
															}
															else
															{
																	$this->pdf->checkNewPage(25);   
															}
													}
											}
											$this->pdf->setFont('Arial','B',9);
											$this->pdf->row(array('TOTAL '.getCatalog('custcategory').' : '.$rslt['custcategoryname'],$totalqtytargetcust, Yii::app()->format->formatCurrency($totaltargetcust),$totalqtyrealisasicust, Yii::app()->format->formatCurrency($totalrealisasicust),$totalqtykumcust, Yii::app()->format->formatCurrency($totalkumulatifcust),$totalqtyplcust, Yii::app()->format->formatCurrency($totaldiffcust),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisicust)));
											//$this->pdf->row(array(''));
											$this->pdf->setY($this->pdf->getY()+0);
									}
									if($c==$rows['hitung'])
									{
											$c=0;
									}
									else
									{
											$c+=1;
									}
									$this->pdf->CheckNewPage(15);
									$this->pdf->sety($this->pdf->gety()+5);
							}
					}
					$this->pdf->row(array('TOTAL SALES '. $row['fullname'],$totalqtytarget, Yii::app()->format->formatCurrency($totaltarget2),$totalqtyrealisasi, Yii::app()->format->formatCurrency($totalrealisasi),$totalqtykum, Yii::app()->format->formatCurrency($totalkumulatif),$totalqtypl, Yii::app()->format->formatCurrency($totaldiff),Yii::app()->format->formatNumber($h),'',Yii::app()->format->formatCurrency($totalkomisi)));
					$this->pdf->row(array(''));
					$deposit = (($totalkomisi)*10/100);

					$this->pdf->setwidths(array(220,25,35,30));
					$this->pdf->colalign = array('C','R','R','L');
					$this->pdf->row(array('','Deposit 10%', Yii::app()->format->formatCurrency($deposit).' = ',Yii::app()->format->formatCurrency($totalkomisi-$deposit)));
					$this->pdf->checkNewPage(25);
					$this->pdf->setwidths(array(50,50,70,70,70));
					$this->pdf->colalign = array('C','C','C','C','C');
					$this->pdf->row(array('Diperiksa Oleh', 'Disetujui Oleh     ', 'Mengetahui      ', 'Dibayar Oleh', 'Diterima Oleh'));
					$this->pdf->setY($this->pdf->getY()+12);
					$this->pdf->setwidths(array(50,50,70,70,70));
					$this->pdf->colalign = array('C','L','C','C','C');
					$this->pdf->row(array('ACC & HEAD FINANCE','HEAD MARKETING', 'BRANCH MANAGER', 'KASIR     ', 'SALES     '));
					$this->pdf->checkNewPage(-20);
			}
			$this->pdf->Output();
	}
	//87
	public function MonitoringReport1($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownPDF();
		//$this->no_result();

		$connection = Yii::app()->db;
		$this->pdf->title='MONITORING REPORT';
		$datetime = new DateTime(date($enddate));

		$this->pdf->subtitle='Dari Tgl :  '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).'  s/d  '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P',array(210,310));

		$this->pdf->SetFont('Arial','b',10);
		$this->pdf->sety($this->pdf->gety()+5);

		$sql = "select a.materialgroupid,a.description
							from materialgroup a
							where a.recordstatus = 1 and a.isfg = 1
		";
		$dataReader = Yii::app()->db->createCommand($sql)->queryAll();
			
		$sqlcompanyname = 'select companyname from company where companyid='.$companyid;
		$companyname = Yii::app()->db->createCommand($sqlcompanyname)->queryScalar();

		$this->pdf->text(10,$this->pdf->gety(),'1. QTY (PENJUALAN - RETUR) vs QTY PRODUKSI');
		$this->pdf->SetFont('Arial','',10);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,94,17,22,10,17,22));
		$this->pdf->colheader = array('No','Material Group','Hari Ini','Kumulatif','VS','Hari Ini','Kumulatif');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','R','R','C','R','R');	
		$i=0;

		foreach($dataReader as $row)
		{
			$sql1 = "select ifnull(sum(qty),0) as qty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
							where b0.recordstatus = 3 and b0.invoiceno is not null and invoiceno not like '%-%-%' and b1.companyid = {$companyid} and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z) zz
			";
			$row1 = Yii::app()->db->createCommand($sql1)->queryScalar();
			
			$sql2 = "select ifnull(sum(qty),0) as kumqty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
							where b0.recordstatus = 3 and b0.invoiceno is not null and invoiceno not like '%-%-%' and b1.companyid = {$companyid} and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z) zz
			";
			$row2 = Yii::app()->db->createCommand($sql2)->queryScalar();
			
			$sql3 = "select ifnull(sum(qtyoutput),0) as qtyoutput
							from productoutputfg a
							join productoutput b on b.productoutputid=a.productoutputid
							join productplant c on c.productid=a.productid and c.slocid=a.slocid and c.unitofissue=a.uomid
							where b.companyid = {$companyid} and b.recordstatus = 3 and b.productoutputdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and c.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']})
			";
			$row3 = Yii::app()->db->createCommand($sql3)->queryScalar();
			
			$sql4 = "select ifnull(sum(qtyoutput),0) as kumqtyoutput
							from productoutputfg a
							join productoutput b on b.productoutputid=a.productoutputid
							join productplant c on c.productid=a.productid and c.slocid=a.slocid and c.unitofissue=a.uomid
							where b.companyid = {$companyid} and b.recordstatus = 3 and b.productoutputdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and c.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']})
			";
			$row4 = Yii::app()->db->createCommand($sql4)->queryScalar();
			
			$cmd1 = "select b.addressbookid
							from addressbook b
							where b.fullname = (select replace(a.companyname,'TRADING','PRODUKSI')
							from company a
							where a.companyid = {$companyid} and a.companyname like '%TRADING')
			";
			$addressbook = Yii::app()->db->createCommand($cmd1)->queryScalar();
			
			$cmd = "select ifnull(count(1),0)
								from company a
								where a.companyid = {$companyid} and a.companyname like '%trading'
			";
			$company = Yii::app()->db->createCommand($cmd)->queryScalar();
			
			if ($company == 0)
			{
				$row7 = $row3;
				$row8 = $row4;
			}
			else
			{
				$sql5 = "select ifnull(sum(a.qty),0) as grqty
								from productstockdet a
								join productplant b on b.productid=a.productid and b.slocid=a.slocid
								join grheader c on c.grno=a.referenceno
								join sloc d on d.slocid=a.slocid
								join plant e on e.plantid=d.plantid and e.companyid=c.companyid
								join poheader f on f.poheaderid=c.poheaderid
								where c.recordstatus=3 and c.companyid = {$companyid} and f.addressbookid = {$addressbook} and a.transdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and b.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']})
				";
				$row5 = Yii::app()->db->createCommand($sql5)->queryScalar();

				$sql6 = "select ifnull(sum(a.qty),0) as kumgrqty
								from productstockdet a
								join productplant b on b.productid=a.productid and b.slocid=a.slocid
								join grheader c on c.grno=a.referenceno
								join sloc d on d.slocid=a.slocid
								join plant e on e.plantid=d.plantid and e.companyid=c.companyid
								join poheader f on f.poheaderid=c.poheaderid
								where c.recordstatus=3 and c.companyid = {$companyid} and f.addressbookid = {$addressbook} and a.transdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and b.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']})
				";
				$row6 = Yii::app()->db->createCommand($sql6)->queryScalar();
				
				$row7 = $row5;
				$row8 = $row6;
			}

			$i+=1;
			$this->pdf->setFont('Arial','',10);
			$this->pdf->row(array(
				$i,$row['description'],
				Yii::app()->format->formatCurrency($row1),
				Yii::app()->format->formatCurrency($row2),
				'',
				Yii::app()->format->formatCurrency($row7),
				Yii::app()->format->formatCurrency($row8),
			));
			
		}

		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'2. NILAI PENJUALAN - RETUR');
		$this->pdf->SetFont('Arial','',10);
		$this->pdf->sety($this->pdf->gety()+3);
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(10,94,35,40));
		$this->pdf->colheader = array('No','Material Group','Hari Ini','Kumulatif');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','L','R','R');	
		$i=0;$totalnilai=0;$totalkumnilai=0;
		
		foreach($dataReader as $row)
		{
			$sql1 = "select ifnull(sum(netto),0) as qty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
							where b0.recordstatus = 3 and b0.invoiceno is not null and invoiceno not like '%-%-%' and b1.companyid = {$companyid} and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate = '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z) zz
			";
			$row1 = Yii::app()->db->createCommand($sql1)->queryScalar();
			
			$sql2 = "select ifnull(sum(netto),0) as kumqty
							from (select sum(qty) as qty,sum(nett) as netto
							from (select distinct b3.gidetailid,b3.qty,
							(select getamountdiscso(c1.soheaderid,c1.sodetailid,c0.qty)
							from gidetail c0 
							join sodetail c1 on c1.sodetailid = c0.sodetailid
							where c0.giheaderid = b1.giheaderid and c0.productid = b3.productid and c0.gidetailid=b3.gidetailid) as nett
							from invoice b0 
							join giheader b1 on b1.giheaderid = b0.giheaderid
							join sodetail b2 on b2.soheaderid = b1.soheaderid
							join gidetail b3 on b3.giheaderid = b1.giheaderid
							join productplant b4 on b4.productid = b3.productid and b4.slocid=b2.slocid
							where b0.recordstatus = 3 and b0.invoiceno is not null and invoiceno not like '%-%-%' and b1.companyid = {$companyid} and b4.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and b0.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							union
							select sum(qty) as qty,sum(nett) as netto from 
							(select distinct d0.notagirproid,(-1*d0.qty) as qty,(-1*d0.qty*d0.price) as nett
							from notagirpro d0
							join notagir d1 on d1.notagirid=d0.notagirid
							join gireturdetail d2 on d2.gireturdetailid=d0.gireturdetailid
							join giretur d3 on d3.gireturid=d1.gireturid
							join gidetail d4 on d4.gidetailid=d2.gidetailid
							join giheader d5 on d5.giheaderid=d3.giheaderid
							join sodetail d6 on d6.sodetailid=d4.sodetailid
							join productplant d7 on d7.productid=d0.productid and d7.slocid=d0.slocid
							where d5.companyid = {$companyid} and d1.recordstatus = 3 and d7.materialgroupid in (select o.materialgroupid from materialgroup o where o.parentmatgroupid = {$row['materialgroupid']}) and d3.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."') z) zz
			";
			$row2 = Yii::app()->db->createCommand($sql2)->queryScalar();

			$i+=1;
			$this->pdf->setFont('Arial','',10);
			$this->pdf->row(array(
				$i,$row['description'],
				Yii::app()->format->formatCurrency($row1/$per),
				Yii::app()->format->formatCurrency($row2/$per),
			));
			$totalnilai += $row1/$per;
			$totalkumnilai += $row2/$per;
		}
		$this->pdf->setFont('Arial','B',10);
		$this->pdf->row(array(
			'','TOTAL NILAI PENJUALAN - RETUR ALL PRODUK >>>',
			Yii::app()->format->formatCurrency($totalnilai),
			Yii::app()->format->formatCurrency($totalkumnilai),
		));
		
		$this->pdf->CheckNewPage(5);

		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'3. TAGIHAN HARI INI / KUMULATIF TAGIHAN');
		$this->pdf->SetFont('Arial','',10);
		
		$sql10 = "select sum(a.cashamount + a.bankamount)
						from cutarinv a
						join cutar b on b.cutarid=a.cutarid
						where b.recordstatus=3 and b.companyid = ".$companyid." and b.docdate = '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
		";
		$row10=Yii::app()->db->createCommand($sql10)->queryScalar();
		
		$sql11 = "select sum(a.cashamount + a.bankamount)
						from cutarinv a
						join cutar b on b.cutarid=a.cutarid
						where b.recordstatus=3 and b.companyid = ".$companyid." and b.docdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
		";
		$row11=Yii::app()->db->createCommand($sql11)->queryScalar();
		
		$this->pdf->text(14,$this->pdf->gety()+5,Yii::app()->format->formatCurrency($row10/$per).' / '.Yii::app()->format->formatCurrency($row11/$per));

		$this->pdf->sety($this->pdf->gety()+15);
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'4. UMUR PIUTANG DAGANG PER PLANT PER KATEGORI CUSTOMER PER TANGGAL '.date('d-m-Y',strtotime($enddate)));
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->SetFont('Arial','',10);
		
		$sqlplant = "select plantid,plantcode,description
							from plant where companyid = ".$companyid;
		$plant = Yii::app()->db->createCommand($sqlplant)->queryAll();
		foreach($plant as $rows)
		{
				
				/*
				$sql9 = "select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120
									from (select case when umur >= 0 and umur <= 30 then amount-payamount else 0 end as a1,
															case when umur > 30 and umur <= 60 then amount-payamount else 0 end as a2,
															case when umur > 60 and umur <= 90 then amount-payamount else 0 end as a3,
															case when umur > 90 and umur <= 120 then amount-payamount else 0 end as a4,
															case when umur > 120 then amount-payamount else 0 end as a5
											from (select a.amount,datediff('".date(Yii::app()->params['datetodb'], strtotime($enddate))."',a.invoicedate) as umur,
													ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)+ifnull(f.returnamount,0)+ifnull(f.obamount,0))*ifnull(f.currencyrate,0))
															from cutarinv f
															join cutar g on g.cutarid=f.cutarid
															where g.recordstatus=3 and f.invoiceid=a.invoiceid and g.docdate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'),0) as payamount
													from invoice a
													inner join giheader b on b.giheaderid = a.giheaderid
													inner join soheader c on c.soheaderid = b.soheaderid
													inner join addressbook d on d.addressbookid = c.addressbookid
													inner join paymentmethod e on e.paymentmethodid = c.paymentmethodid
													inner join employee ff on ff.employeeid = c.employeeid
													left join salesarea gg on gg.salesareaid = d.salesareaid
													where a.recordstatus=3 and a.invoiceno is not null and invoiceno not like '%-%-%' and c.companyid = ".$companyid." and a.invoicedate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
													and gg.areaname not like '%intern%' and d.fullname not like '%".$companyname."%') z
											where amount > payamount) zz ";
					$row9=Yii::app()->db->createCommand($sql9)->queryRow();
					*/
				
					$sql9 = "select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120, custcategoryid,custcategoryname
									 from (
									select case when umur >= 0 and umur <= 30 then amount-payamount else 0 end as a1,
															case when umur > 30 and umur <= 60 then amount-payamount else 0 end as a2,
															case when umur > 60 and umur <= 90 then amount-payamount else 0 end as a3,
															case when umur > 90 and umur <= 120 then amount-payamount else 0 end as a4,
															case when umur > 120 then amount-payamount else 0 end as a5, za.custcategoryname, za.custcategoryid
											from (select (a.amount) as amount,datediff('".date(Yii::app()->params['datetodb'],strtotime($enddate))."',a.invoicedate) as umur,
													ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)+ifnull(f.returnamount,0)+ifnull(f.obamount,0))*ifnull(f.currencyrate,0))
															from cutarinv f
															join cutar g on g.cutarid=f.cutarid
															where g.recordstatus=3 and f.invoiceid=a.invoiceid and g.docdate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'),0) as payamount, 
															custcategoryname,ii.custcategoryid
													from invoice a
													inner join giheader b on b.giheaderid = a.giheaderid
													inner join soheader c on c.soheaderid = b.soheaderid
													inner join addressbook d on d.addressbookid = c.addressbookid
													inner join paymentmethod e on e.paymentmethodid = c.paymentmethodid
													inner join employee ff on ff.employeeid = c.employeeid
													left join salesarea gg on gg.salesareaid = d.salesareaid
													inner join custcategory ii on ii.custcategoryid = d.custcategoryid
													where a.recordstatus=3 and a.invoiceno is not null and invoiceno not like '%-%-%' and c.companyid = {$companyid} and a.invoicedate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
													-- and gg.areaname not like '%intern%' 
													and b.giheaderid in (
						select giheaderid 
													from gidetail x
													join sloc `xa` on `xa`.slocid = x.slocid
													join plant xb on xb.plantid = `xa`.plantid
													where xb.plantid = {$rows['plantid']})
													) z
													join custcategory za on za.custcategoryid = z.custcategoryid
											 where amount > payamount
											 and za.recordstatus=1 and za.custcategoryname not like 'Cabang') zz
											 group by zz.custcategoryid";
					$rows9 = Yii::app()->db->createCommand($sql9)->queryAll();
					$found_rows = 0;
					$found_rows = Yii::app()->db->createCommand("select found_rows()")->queryScalar();
					$i=0;
					foreach($rows9 as $row9)
					{
							$this->pdf->checkNewPage(20);
							$this->pdf->SetFont('Arial','B',10);
							$this->pdf->text(10,$this->pdf->gety(),'PLANT : '.$rows['plantcode']);
							$this->pdf->text(10,$this->pdf->gety()+3,'Category Customer : '.$row9['custcategoryname']);
							$this->pdf->setY($this->pdf->getY()+5);
							$this->pdf->setFont('Arial','B',12);
							$this->pdf->colalign = array('C','C','C','C');
							$this->pdf->setwidths(array(15,100,50,25));
							$this->pdf->colheader = array('No','Keterangan','Nilai','%');
							$this->pdf->RowHeader();
							$this->pdf->coldetailalign = array('C','L','R','R');

							$this->pdf->setFont('Arial','',12);
							$this->pdf->row(array('1','Piutang Dagang 1 - 30',
									Yii::app()->format->formatCurrency($row9['0sd30']/$per),
									Yii::app()->format->formatCurrency(($row9['0sd30']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))* 100),
							));
							$this->pdf->row(array('2','Piutang Dagang 31 - 60',
									Yii::app()->format->formatCurrency($row9['31sd60']/$per),
									Yii::app()->format->formatCurrency(($row9['31sd60']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
							));
							$this->pdf->row(array('3','Piutang Dagang 61 - 90',
									Yii::app()->format->formatCurrency($row9['61sd90']/$per),
									Yii::app()->format->formatCurrency(($row9['61sd90']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
							));
							$this->pdf->row(array('4','Piutang Dagang 91 - 120',
									Yii::app()->format->formatCurrency($row9['91sd120']/$per),
									Yii::app()->format->formatCurrency(($row9['91sd120']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
							));
							$this->pdf->row(array('5','Piutang Dagang > 120',
									Yii::app()->format->formatCurrency($row9['up120']/$per),
									Yii::app()->format->formatCurrency(($row9['up120']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
							));
							$this->pdf->setFont('Arial','B',12);
							$this->pdf->row(array('','Total Piutang Dagang ',
									Yii::app()->format->formatCurrency(($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120'])/$per),
									Yii::app()->format->formatCurrency('100'),
							));
							$this->pdf->setY($this->pdf->getY()+10);
							$this->pdf->checkNewPage(20);
							$i++;
					}
				if($found_rows == $i)
				{
						$sqlcab = "select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120, addressbookid,fullname
									 from (
									select case when umur >= 0 and umur <= 30 then amount-payamount else 0 end as a1,
															case when umur > 30 and umur <= 60 then amount-payamount else 0 end as a2,
															case when umur > 60 and umur <= 90 then amount-payamount else 0 end as a3,
															case when umur > 90 and umur <= 120 then amount-payamount else 0 end as a4,
															case when umur > 120 then amount-payamount else 0 end as a5, z.addressbookid, z.fullname
											from (select (a.amount) as amount,datediff('".date(Yii::app()->params['datetodb'],strtotime($enddate))."',a.invoicedate) as umur,
													ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)+ifnull(f.returnamount,0)+ifnull(f.obamount,0))*ifnull(f.currencyrate,0))
															from cutarinv f
															join cutar g on g.cutarid=f.cutarid
															where g.recordstatus=3 and f.invoiceid=a.invoiceid and g.docdate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'),0) as payamount, 
															d.fullname,d.addressbookid
													from invoice a
													inner join giheader b on b.giheaderid = a.giheaderid
													inner join soheader c on c.soheaderid = b.soheaderid
													-- inner join gidetail f on f.giheaderid = b.giheaderid
													inner join addressbook d on d.addressbookid = c.addressbookid
													inner join paymentmethod e on e.paymentmethodid = c.paymentmethodid
													inner join employee ff on ff.employeeid = c.employeeid
													left join salesarea gg on gg.salesareaid = d.salesareaid
													inner join custcategory ii on ii.custcategoryid = d.custcategoryid
													where a.recordstatus=3 and a.invoiceno is not null and invoiceno not like '%-%-%' and c.companyid = {$companyid} and a.invoicedate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
													-- and gg.areaname not like '%intern%' 
													and b.giheaderid in (
						select giheaderid 
													from gidetail x
													join sloc `xa` on `xa`.slocid = x.slocid
													join plant xb on xb.plantid = `xa`.plantid
													where xb.plantid = {$rows['plantid']})
													) z
													join addressbook za on za.addressbookid = z.addressbookid
													join salesarea zb on zb.salesareaid = za.salesareaid
											 where amount > payamount
											 and za.recordstatus=1 and zb.areaname like '%intern%'
											 and amount > 0) zz
											 group by zz.addressbookid";
						
							$qcab = Yii::app()->db->createCommand($sqlcab)->queryAll();
							foreach($qcab as $cab)
							{
									
							
							$this->pdf->checkNewPage(20);
							$this->pdf->SetFont('Arial','B',10);
							$this->pdf->text(10,$this->pdf->gety(),'PLANT : '.$rows['plantcode']);
							$this->pdf->text(10,$this->pdf->gety()+3,'Cabang : '.$cab['fullname']);
							$this->pdf->setY($this->pdf->getY()+5);
							$this->pdf->setFont('Arial','B',12);
							$this->pdf->colalign = array('C','C','C','C');
							$this->pdf->setwidths(array(15,100,50,25));
							$this->pdf->colheader = array('No','Keterangan','Nilai','%');
							$this->pdf->RowHeader();
							$this->pdf->coldetailalign = array('C','L','R','R');

							$this->pdf->setFont('Arial','',12);
							$this->pdf->row(array('1','Piutang Dagang 1 - 30',
									Yii::app()->format->formatCurrency($cab['0sd30']/$per),
									Yii::app()->format->formatCurrency(($cab['0sd30']/($cab['0sd30']+$cab['31sd60']+$cab['61sd90']+$cab['91sd120']+$cab['up120']))* 100),
							));
							$this->pdf->row(array('2','Piutang Dagang 31 - 60',
									Yii::app()->format->formatCurrency($cab['31sd60']/$per),
									Yii::app()->format->formatCurrency(($cab['31sd60']/($cab['0sd30']+$cab['31sd60']+$cab['61sd90']+$cab['91sd120']+$cab['up120']))*100),
							));
							$this->pdf->row(array('3','Piutang Dagang 61 - 90',
									Yii::app()->format->formatCurrency($cab['61sd90']/$per),
									Yii::app()->format->formatCurrency(($cab['61sd90']/($cab['0sd30']+$cab['31sd60']+$cab['61sd90']+$cab['91sd120']+$cab['up120']))*100),
							));
							$this->pdf->row(array('4','Piutang Dagang 91 - 120',
									Yii::app()->format->formatCurrency($cab['91sd120']/$per),
									Yii::app()->format->formatCurrency(($cab['91sd120']/($cab['0sd30']+$cab['31sd60']+$cab['61sd90']+$cab['91sd120']+$cab['up120']))*100),
							));
							$this->pdf->row(array('5','Piutang Dagang > 120',
									Yii::app()->format->formatCurrency($cab['up120']/$per),
									Yii::app()->format->formatCurrency(($cab['up120']/($cab['0sd30']+$cab['31sd60']+$cab['61sd90']+$cab['91sd120']+$cab['up120']))*100),
							));
							$this->pdf->setFont('Arial','B',12);
							$this->pdf->row(array('','Total Piutang Dagang ',
									Yii::app()->format->formatCurrency(($cab['0sd30']+$cab['31sd60']+$cab['61sd90']+$cab['91sd120']+$cab['up120'])/$per),
									Yii::app()->format->formatCurrency('100'),
							));
							$this->pdf->setY($this->pdf->getY()+10);
							$this->pdf->checkNewPage(20);
							}
							$i=0;
				}
				$this->pdf->setY($this->pdf->getY()+5);
		}
				
					/*
					$sql12 = "select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120
									from (select case when umur >= 0 and umur <= 30 then amount-payamount else 0 end as a1,
															case when umur > 30 and umur <= 60 then amount-payamount else 0 end as a2,
															case when umur > 60 and umur <= 90 then amount-payamount else 0 end as a3,
															case when umur > 90 and umur <= 120 then amount-payamount else 0 end as a4,
															case when umur > 120 then amount-payamount else 0 end as a5
											from (select a.amount,datediff('".date(Yii::app()->params['datetodb'], strtotime($enddate))."',a.invoicedate) as umur,
													ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)+ifnull(f.returnamount,0)+ifnull(f.obamount,0))*ifnull(f.currencyrate,0))
															from cutarinv f
															join cutar g on g.cutarid=f.cutarid
															where g.recordstatus=3 and f.invoiceid=a.invoiceid and g.docdate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'),0) as payamount
													from invoice a
													inner join giheader b on b.giheaderid = a.giheaderid
													inner join soheader c on c.soheaderid = b.soheaderid
													inner join addressbook d on d.addressbookid = c.addressbookid
													inner join paymentmethod e on e.paymentmethodid = c.paymentmethodid
													inner join employee ff on ff.employeeid = c.employeeid
													left join salesarea gg on gg.salesareaid = d.salesareaid
													where a.recordstatus=3 and a.invoiceno is not null and invoiceno not like '%-%-%' and c.companyid = ".$companyid." and a.invoicedate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
													and gg.areaname like '%intern%' and d.fullname not like '%".$companyname."%') z
											where amount > payamount) zz ";
					$row12=Yii::app()->db->createCommand($sql12)->queryRow();

					$this->pdf->setFont('Arial','B',12);
					$this->pdf->colalign = array('C','C','C','C');
					$this->pdf->setwidths(array(15,100,50,25));
					$this->pdf->colheader = array('No','Keterangan','Nilai','%');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('C','L','R','R');

					$this->pdf->setFont('Arial','',12);
					$this->pdf->row(array('1','Piutang Dagang 1 - 30',
							Yii::app()->format->formatCurrency($row9['0sd30']/$per),
							Yii::app()->format->formatCurrency(($row9['0sd30']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))* 100),
					));
					$this->pdf->row(array('2','Piutang Dagang 31 - 60',
							Yii::app()->format->formatCurrency($row9['31sd60']/$per),
							Yii::app()->format->formatCurrency(($row9['31sd60']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
					));
					$this->pdf->row(array('3','Piutang Dagang 61 - 90',
							Yii::app()->format->formatCurrency($row9['61sd90']/$per),
							Yii::app()->format->formatCurrency(($row9['61sd90']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
					));
					$this->pdf->row(array('4','Piutang Dagang 91 - 120',
							Yii::app()->format->formatCurrency($row9['91sd120']/$per),
							Yii::app()->format->formatCurrency(($row9['91sd120']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
					));
					$this->pdf->row(array('5','Piutang Dagang > 120',
							Yii::app()->format->formatCurrency($row9['up120']/$per),
							Yii::app()->format->formatCurrency(($row9['up120']/($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120']))*100),
					));
					$this->pdf->setFont('Arial','B',12);
					$this->pdf->row(array('','Total Piutang Dagang ',
							Yii::app()->format->formatCurrency(($row9['0sd30']+$row9['31sd60']+$row9['61sd90']+$row9['91sd120']+$row9['up120'])/$per),
							Yii::app()->format->formatCurrency('100'),
					));
			
			$this->pdf->setY($this->pdf->getY()+10);
			
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety(),'5. PIUTANG DAGANG CABANG PER TANGGAL '.date('d-m-Y',strtotime($enddate)));
			$this->pdf->sety($this->pdf->gety()+3);
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->setFont('Arial','B',12);
			$this->pdf->colalign = array('C','C','C','C');
			$this->pdf->setwidths(array(15,100,50,25));
			$this->pdf->colheader = array('No','Keterangan','Nilai','%');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('C','L','R','R');
			
			$this->pdf->setFont('Arial','',12);
			$this->pdf->row(array('1','Piutang Dagang 1 - 30',
		Yii::app()->format->formatCurrency($row12['0sd30']/$per),
		Yii::app()->format->formatCurrency(($row12['0sd30']/($row12['0sd30']+$row12['31sd60']+$row12['61sd90']+$row12['91sd120']+$row12['up120']))* 100),
			));
			$this->pdf->row(array('2','Piutang Dagang 31 - 60',
		Yii::app()->format->formatCurrency($row12['31sd60']/$per),
		Yii::app()->format->formatCurrency(($row12['31sd60']/($row12['0sd30']+$row12['31sd60']+$row12['61sd90']+$row12['91sd120']+$row12['up120']))*100),
			));
			$this->pdf->row(array('3','Piutang Dagang 61 - 90',
		Yii::app()->format->formatCurrency($row12['61sd90']/$per),
		Yii::app()->format->formatCurrency(($row12['61sd90']/($row12['0sd30']+$row12['31sd60']+$row12['61sd90']+$row12['91sd120']+$row12['up120']))*100),
			));
			$this->pdf->row(array('4','Piutang Dagang 91 - 120',
		Yii::app()->format->formatCurrency($row12['91sd120']/$per),
		Yii::app()->format->formatCurrency(($row12['91sd120']/($row12['0sd30']+$row12['31sd60']+$row12['61sd90']+$row12['91sd120']+$row12['up120']))*100),
			));
			$this->pdf->row(array('5','Piutang Dagang > 120',
		Yii::app()->format->formatCurrency($row12['up120']/$per),
		Yii::app()->format->formatCurrency(($row12['up120']/($row12['0sd30']+$row12['31sd60']+$row12['61sd90']+$row12['91sd120']+$row12['up120']))*100),
			));
			$this->pdf->setFont('Arial','B',12);
			$this->pdf->row(array('','Total Piutang Dagang Cabang',
		Yii::app()->format->formatCurrency(($row12['0sd30']+$row12['31sd60']+$row12['61sd90']+$row12['91sd120']+$row12['up120'])/$per),
		Yii::app()->format->formatCurrency('100'),
			));
		
		$this->pdf->sety($this->pdf->gety()+10);
		/*
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'6. H/D HARI INI / H/D KUMULATIF VS PAYMENT HR INI / PAYMENT KUMULATIF');
		$this->pdf->SetFont('Arial','',10);
		*/
		$sql13 = "select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120
		from (select (amount)-(payamount) , case when umur >= 0 and umur <= 30 then amount-payamount else 0 end as a1,
		case when umur > 30 and umur <= 60 then amount-payamount else 0 end as a2,
		case when umur > 60 and umur <= 90 then amount-payamount else 0 end as a3,
		case when umur > 90 and umur <= 120 then amount-payamount else 0 end as a4,
		case when umur > 120 then amount-payamount else 0 end as a5 from (select a.amount, 
		ifnull((select sum(payamount) from cbapinv j
		left join cashbankout k on k.cashbankoutid=j.cashbankoutid
		where k.recordstatus=3 and j.invoiceapid=a.invoiceapid
		and k.docdate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
		group by invoiceapid),0) as payamount,
		datediff('".date(Yii::app()->params['datetodb'],strtotime($enddate))."',a.invoicedate) as umur
		from invoiceap a
		left join grheader b on b.grheaderid = a.grheaderid
		inner join poheader c on c.poheaderid = a.poheaderid
		inner join addressbook d on d.addressbookid = c.addressbookid
		inner join paymentmethod e on e.paymentmethodid = c.paymentmethodid
		where a.recordstatus=3 and a.invoiceno is not null and invoiceno not like '%-%-%' and c.companyid = 1
		and a.receiptdate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."') z
		where z.amount > z.payamount ) zz  ";
		$row13=Yii::app()->db->createCommand($sql13)->queryRow();
			
		/*
		$sql14 = "select sum(amount)-sum(payamount) from (select a.amount, 
		ifnull((select sum(payamount) from cbapinv j
	left join cashbankout k on k.cashbankoutid=j.cashbankoutid
	where k.recordstatus=3 and j.invoiceapid=a.invoiceapid
	and k.docdate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
	group by invoiceapid),0) as payamount
		from invoiceap a
		left join grheader b on b.grheaderid = a.grheaderid
		inner join poheader c on c.poheaderid = a.poheaderid
		inner join addressbook d on d.addressbookid = c.addressbookid
		inner join paymentmethod e on e.paymentmethodid = c.paymentmethodid
		where a.recordstatus=3 and a.invoiceno is not null and invoiceno not like '%-%-%' and c.companyid = {$companyid}
		and a.receiptdate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
		where z.amount > z.payamount;
		";
		$row14=Yii::app()->db->createCommand($sql14)->queryScalar();
		*/
			
		$sql15 = "select sum(a1) as 0sd30,sum(a2) as 31sd60,sum(a3) as 61sd90,sum(a4) as 91sd120,sum(a5) as up120 from (select case when umur >= 0 and umur <= 30 then payamount else 0 end as a1, case when umur > 30 and umur <= 60 then payamount else 0 end as a2,case when umur > 60 and umur <= 90 then payamount else 0 end as a3, case when umur > 90 and umur <= 120 then payamount else 0 end as a4, case when umur > 120 then payamount else 0 end as a5 
		from (select (a.payamount), datediff('".date(Yii::app()->params['datetodb'],strtotime($enddate))."',b.invoicedate) as umur
		from cashbankout e
		join cbapinv a on a.cashbankoutid=e.cashbankoutid
		join invoiceap b on b.invoiceapid=a.invoiceapid
		join addressbook c on c.addressbookid=b.addressbookid
		where e.recordstatus=3 and e.companyid={$companyid} and e.docdate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."') z ) zz;";
		
		$row15=Yii::app()->db->createCommand($sql15)->queryRow();
			
		/*
		$sql16 = "select sum(a.payamount)
		from cashbankout e
		join cbapinv a on a.cashbankoutid=e.cashbankoutid
		join invoiceap b on b.invoiceapid=a.invoiceapid
		join addressbook c on c.addressbookid=b.addressbookid
		where e.recordstatus=3 and e.companyid={$companyid} and e.docdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'";
		
		$row16=Yii::app()->db->createCommand($sql16)->queryScalar();
		*/
			
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety(),'6. HUTANG DAGANG PER TANGGAL '.date('d-m-Y',strtotime($enddate)));
			$this->pdf->sety($this->pdf->gety()+3);
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->setFont('Arial','B',12);
			$this->pdf->colalign = array('C','C','C','C');
			$this->pdf->setwidths(array(15,100,50,25));
			$this->pdf->colheader = array('No','Keterangan','Nilai','%');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('C','L','R','R');
			
			$this->pdf->setFont('Arial','',12);
			$this->pdf->row(array('1','Hutang Dagang 1 - 30',
		Yii::app()->format->formatCurrency($row13['0sd30']/$per),
		Yii::app()->format->formatCurrency(($row13['0sd30']/($row13['0sd30']+$row13['31sd60']+$row13['61sd90']+$row13['91sd120']+$row13['up120']))* 100),
			));
			$this->pdf->row(array('2','Hutang Dagang 31 - 60',
		Yii::app()->format->formatCurrency($row13['31sd60']/$per),
		Yii::app()->format->formatCurrency(($row13['31sd60']/($row13['0sd30']+$row13['31sd60']+$row13['61sd90']+$row13['91sd120']+$row13['up120']))*100),
			));
			$this->pdf->row(array('3','Hutang Dagang 61 - 90',
		Yii::app()->format->formatCurrency($row13['61sd90']/$per),
		Yii::app()->format->formatCurrency(($row13['61sd90']/($row13['0sd30']+$row13['31sd60']+$row13['61sd90']+$row13['91sd120']+$row13['up120']))*100),
			));
			$this->pdf->row(array('4','Hutang Dagang 91 - 120',
		Yii::app()->format->formatCurrency($row13['91sd120']/$per),
		Yii::app()->format->formatCurrency(($row13['91sd120']/($row13['0sd30']+$row13['31sd60']+$row13['61sd90']+$row13['91sd120']+$row13['up120']))*100),
			));
			$this->pdf->row(array('5','Hutang Dagang > 120',
		Yii::app()->format->formatCurrency($row13['up120']/$per),
		Yii::app()->format->formatCurrency(($row13['up120']/($row13['0sd30']+$row13['31sd60']+$row13['61sd90']+$row13['91sd120']+$row13['up120']))*100),
			));
			$this->pdf->setFont('Arial','B',12);
			$this->pdf->row(array('','Total Hutang Dagang ',
		Yii::app()->format->formatCurrency(($row13['0sd30']+$row13['31sd60']+$row13['61sd90']+$row13['91sd120']+$row13['up120'])/$per),
		Yii::app()->format->formatCurrency('100'),
			));
			
		$this->pdf->sety($this->pdf->gety()+10);
		$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety(),'7. PEMBAYARAN HUTANG DAGANG PER TANGGAL '.date('d-m-Y',strtotime($enddate)));
			$this->pdf->sety($this->pdf->gety()+3);
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->setFont('Arial','B',12);
			$this->pdf->colalign = array('C','C','C','C');
			$this->pdf->setwidths(array(15,100,50,25));
			$this->pdf->colheader = array('No','Keterangan','Nilai','%');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('C','L','R','R');
			
			$this->pdf->setFont('Arial','',12);
			$this->pdf->row(array('1','Hutang Dagang 1 - 30',
		Yii::app()->format->formatCurrency($row15['0sd30']/$per),
		Yii::app()->format->formatCurrency(($row15['0sd30']/($row15['0sd30']+$row15['31sd60']+$row15['61sd90']+$row15['91sd120']+$row15['up120']))* 100),
			));
			$this->pdf->row(array('2','Hutang Dagang 31 - 60',
		Yii::app()->format->formatCurrency($row15['31sd60']/$per),
		Yii::app()->format->formatCurrency(($row15['31sd60']/($row15['0sd30']+$row15['31sd60']+$row15['61sd90']+$row15['91sd120']+$row15['up120']))*100),
			));
			$this->pdf->row(array('3','Hutang Dagang 61 - 90',
		Yii::app()->format->formatCurrency($row15['61sd90']/$per),
		Yii::app()->format->formatCurrency(($row15['61sd90']/($row15['0sd30']+$row15['31sd60']+$row15['61sd90']+$row15['91sd120']+$row15['up120']))*100),
			));
			$this->pdf->row(array('4','Hutang Dagang 91 - 120',
		Yii::app()->format->formatCurrency($row15['91sd120']/$per),
		Yii::app()->format->formatCurrency(($row15['91sd120']/($row15['0sd30']+$row15['31sd60']+$row15['61sd90']+$row15['91sd120']+$row15['up120']))*100),
			));
			$this->pdf->row(array('5','Hutang Dagang > 120',
		Yii::app()->format->formatCurrency($row15['up120']/$per),
		Yii::app()->format->formatCurrency(($row15['up120']/($row15['0sd30']+$row15['31sd60']+$row15['61sd90']+$row15['91sd120']+$row15['up120']))*100),
			));
			$this->pdf->setFont('Arial','B',12);
			$this->pdf->row(array('','Total Pembayaran Hutang Dagang ',
		Yii::app()->format->formatCurrency(($row15['0sd30']+$row15['31sd60']+$row15['61sd90']+$row15['91sd120']+$row15['up120'])/$per),
		Yii::app()->format->formatCurrency('100'),
			));
			
			$this->pdf->sety($this->pdf->gety()+10);
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety(),'8. PERSEDIAAN ');
			$this->pdf->SetFont('Arial','',10);
			
			$connection = Yii::app()->db;
			$sqlfg = "call hitungsaldodate(:vfg,:vdate,:vcompanyid,@vsaldoakhir)";
			$command1 = $connection->createCommand($sqlfg);
			$command1->bindvalue(':vfg','11050101',PDO::PARAM_STR);
			$command1->bindvalue(':vdate',date(Yii::app()->params['datetodb'],strtotime($enddate)),PDO::PARAM_STR);
			$command1->bindvalue(':vcompanyid',$companyid,PDO::PARAM_STR);
			$command1->execute();
			
			$qfg = "select @vsaldoakhir as saldoakhir";
			$tmt1 = Yii::app()->db->createCommand($qfg);
			$tmt1->execute();
			$fg = $tmt1->queryRow();
			
			$sqlwip = "call hitungsaldodate(:vwip,:vdate,:vcompanyid,@vsaldoakhir)";
			$command2 = $connection->createCommand($sqlwip);
			$command2->bindvalue(':vwip','11050103',PDO::PARAM_STR);
			$command2->bindvalue(':vdate',date(Yii::app()->params['datetodb'],strtotime($enddate)),PDO::PARAM_STR);
			$command2->bindvalue(':vcompanyid',$companyid,PDO::PARAM_STR);
			$command2->execute();
			
			$qwip = "select @vsaldoakhir as saldoakhir";
			$tmt2 = Yii::app()->db->createCommand($qwip);
			$tmt2->execute();
			$wip = $tmt2->queryRow();
			
			$sqlrw = "call hitungsaldodate(:vrw,:vdate,:vcompanyid,@vsaldoakhir)";
			$command3 = $connection->createCommand($sqlrw);
			$command3->bindvalue(':vrw','11050102',PDO::PARAM_STR);
			$command3->bindvalue(':vdate',date(Yii::app()->params['datetodb'],strtotime($enddate)),PDO::PARAM_STR);
			$command3->bindvalue(':vcompanyid',$companyid,PDO::PARAM_STR);
			$command3->execute();
			
			$qrw = "select @vsaldoakhir as saldoakhir";
			$tmt3 = Yii::app()->db->createCommand($qrw);
			$tmt3->execute();
			$rw = $tmt3->queryRow();
			

			$this->pdf->text(14,$this->pdf->gety()+5,'PERSEDIAAN FG   :'.Yii::app()->format->formatCurrency($fg['saldoakhir']/$per));
			$this->pdf->text(14,$this->pdf->gety()+10,'PERSEDIAAN WIP :'.Yii::app()->format->formatCurrency($wip['saldoakhir']/$per));
			$this->pdf->text(14,$this->pdf->gety()+15,'PERSEDIAAN RW  :'.Yii::app()->format->formatCurrency($rw['saldoakhir']/$per));
			
		$this->pdf->text(14,$this->pdf->gety()+5,'PERSEDIAAN FG   :');
		$this->pdf->text(14,$this->pdf->gety()+10,'PERSEDIAAN WIP :');
		$this->pdf->text(14,$this->pdf->gety()+15,'PERSEDIAAN RW  :');
			
		$this->pdf->sety($this->pdf->gety()+25);
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'9. PENCAPAIN SALES ');
		$this->pdf->SetFont('Arial','',10);
		//$first_month = '';
		$month = date('m',strtotime($startdate));
		$year = date('Y',strtotime($startdate));
		$day = $year.'-'.$month.'-01';
			
		$sqlplant = "select plantid,plantcode,description
							from plant where companyid = ".$companyid;
		$plant = Yii::app()->db->createCommand($sqlplant)->queryAll();
		$k=1;
		foreach($plant as $rows)
		{
				$sqlpenc = "selects sum(netto1) as netto, sum(netto2) as netto2,  invoicedate from
							(select fullname,sum(nom) as nominal,(sum(nom)-sum(nett1)) as disc,sum(nett1) as netto1, sum(nett2) netto2, invoicedate from
							(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett1,
															ifnull((select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
															join giheader zzc on zzc.giheaderid = zzb.giheaderid
															join invoice zzd on zzd.giheaderid = zzc.giheaderid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid
															and zzd.invoicedate = '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'),0) as nett2
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
															join plant l on l.plantid = h.plantid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%%' and d.fullname like '%%' and
							e.fullname like '%%' and f.areaname like '%%' and i.productname like '%%'  a.invoicedate between '{$day}' and
							'".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and l.plantid = {$rows['plantid']} )z group by fullname
							union
							select fullname, -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett1)) as disc, -1*sum(nett1) as netto1,ifnull(-1*sum(nett2),0) as netto2,invoicedate from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett1,ifnull((select sum(qty*price) from notagirpro o join notagir p on o.notagirid = p.notagirid where o.notagirid = b.notagirid and p.docdate='".date(Yii::app()->params['datetodb'],strtotime($enddate))."'),0) as nett2, b.headernote,k.fullname,d.gireturdate as invoicedate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
															join plant n on n.plantid = j.plantid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%%' 
							and k.fullname like '%%' and l.fullname like '%%' and m.areaname like '%%'
							and i.productname like '%%' and d.gireturdate between '{$day}' and
							'".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and n.plantid = {$rows['plantid']}
															order by notagirno,notagirproid
							)z group by fullname) zz order by fullname";
				$penc = Yii::app()->db->createCommand($sqlpenc)->queryRow();
				$this->pdf->text(14,$this->pdf->gety()+5*$k,'PENCAPAIAN '.$rows['plantcode'].' : '.Yii::app()->format->formatCurrency($penc['netto2']).'/'.Yii::app()->format->formatCurrency($penc['netto']));
				$k++;
		}

		$this->pdf->sety($this->pdf->gety()+25);
		$this->pdf->SetFont('Arial','B',10);
		$this->pdf->text(10,$this->pdf->gety(),'KETERANGAN :');
		$this->pdf->SetFont('Arial','',10);
		$this->pdf->text(10,$this->pdf->gety()+5,'- Hari Ini Tanggal '.date('d',strtotime($enddate)));
		$this->pdf->text(10,$this->pdf->gety()+10,'- Kumulatif Tanggal '.date('d',strtotime($startdate)).' s/d '.date('d',strtotime($enddate)));
		$this->pdf->text(10,$this->pdf->gety()+15,'- Apabila masih trading, qty produksi belum bisa menggambarkan 100%.');
		$this->pdf->text(10,$this->pdf->gety()+20,'  Karena data qty produksi diambil dari pembelian trading ke produksi.');
		$this->pdf->text(10,$this->pdf->gety()+25,'  Kecuali untuk barang jadi, apabila setiap hari selalu melakukan jual-beli antara trading dan produksi');
		$this->pdf->text(10,$this->pdf->gety()+30,'- Data bisa dikatakan Valid apabila semua transaksi sudah diinput (up to date).');

		$this->pdf->Output();
	}
	//88
	public function LaporanRekapSalesTargetPerBarang($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			parent::actionDownload();
	$this->pdf->title='Laporan Rekap Sales Target Per Barang';
	$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
	$this->pdf->AddPage('P','A4');
			
			$maxtarget = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appst')")->queryScalar();
			
			$sql1 = "select c.productname, sum(b.qty) as qty, d.uomcode, e.description, f.custcategoryname, ifnull(sum(b.qty*b.price),0) as price, g.fullname, a.employeeid, parentmatgroupid
			from salestarget a
			join salestargetdet b on b.salestargetid = a.salestargetid
			join product c on c.productid = b.productid
			join unitofmeasure d on d.unitofmeasureid = b.unitofmeasureid
			left join materialgroup e on e.materialgroupid = b.materialgroupid
			left join custcategory f on f.custcategoryid = b.custcategoryid
			left join employee g on g.employeeid = a.employeeid
			where a.perioddate = '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' 
			and a.companyid = {$companyid}
			and a.recordstatus = {$maxtarget}
			group by b.productid";
			$res1 = Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->colalign = array('C','C','L','C','C','C');
	$this->pdf->setwidths(array(10,80,17,17,30,45));
	$this->pdf->colheader = array('No',getCatalog('productname'),getCatalog('qty'),getCatalog('uom'),getCatalog('price'),getCatalog('materialgroupname'));
	$this->pdf->RowHeader();
	$this->pdf->coldetailalign = array('C','L','L','C','R','L');
	$i=1;
	$this->pdf->setFont('Arial','',10);
			$totalqty=0;
			$totalprice=0;
			foreach($res1 as $row1)
			{
					$this->pdf->row(array($i,$row1['productname'],
																Yii::app()->format->formatNumber($row1['qty']),
																$row1['uomcode'],
																Yii::app()->format->formatCurrency($row1['price']/$per),
																$row1['description']));
					$i++;
					$totalqty = $totalqty + $row1['qty'];
					$totalprice = $totalprice + $row1['price'];
			}
			$this->pdf->setY($this->pdf->getY()+5);
			$this->pdf->setFont('Arial','B',10);
			$this->pdf->setwidths(array(10,80,30,80));
			$this->pdf->colalign = array('C','L','L','R');
			$this->pdf->row(array('','TOTAL ',
																Yii::app()->format->formatNumber($totalqty),
																Yii::app()->format->formatCurrency($totalprice/$per)));
			$this->pdf->Output();
	}
	//89
	public function RincianDataCustomer($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		
		$sql = "select a.*, b.areaname, c.taxcode,h.paycode,e.groupname,f.custcategoryname,g.custogradedesc, 
		if(a.recordstatus=1,'Aktif','Tidak Aktif') as status
						from addressbook a
						left join salesarea b on b.salesareaid = a.salesareaid
						left join tax c on c.taxid = a.taxid
						left join pricecategory d on d.pricecategoryid = a.pricecategoryid
						left join groupcustomer e on e.groupcustomerid = a.groupcustomerid
						left join custcategory f on f.custcategoryid = a.custcategoryid
						left join custgrade g on g.custgradeid = a.custgradeid
						left join paymentmethod h on h.paymentmethodid = a.paymentmethodid
						where a.fullname like '%".$customer."%' 
						and iscustomer=1
						and b.areaname like '%".$salesarea."%'
		";
        
		$this->pdf->title='Rincian Data Customer';
		$this->pdf->AddPage('L','A4');
        
        if(getUserObjectValues('marketing')==1) {
            
		$res = Yii::app()->db->createCommand($sql)->queryAll();
		foreach($res as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Nama Customer');
			$this->pdf->text(75,$this->pdf->gety()+5,': '.$row['fullname']);
			$this->pdf->text(10,$this->pdf->gety()+10,'Kode Pajak');
			$this->pdf->text(75,$this->pdf->gety()+10,': '.$row['taxcode']);
			$this->pdf->text(10,$this->pdf->gety()+15,'NPWP');
			$this->pdf->text(75,$this->pdf->gety()+15,': '.$row['taxno']);
			$this->pdf->text(10,$this->pdf->gety()+20,'KTP Customer');
			$this->pdf->text(75,$this->pdf->gety()+20,': '.$row['ktpno']);
			$this->pdf->text(10,$this->pdf->gety()+25,'Kredit Limit');
			$this->pdf->text(75,$this->pdf->gety()+25,': '.$row['creditlimit']);
			$this->pdf->text(10,$this->pdf->gety()+30,'Kredit Limit');
			$this->pdf->text(75,$this->pdf->gety()+30,': '.$row['creditlimit']);
			$this->pdf->text(10,$this->pdf->gety()+35,'Kode Pembayaran');
			$this->pdf->text(75,$this->pdf->gety()+35,': '.$row['paycode']);
			$this->pdf->text(10,$this->pdf->gety()+40,'Batas Limit Kaku');
			$this->pdf->text(75,$this->pdf->gety()+40,': '.$row['isstrictlimit']);
			$this->pdf->text(10,$this->pdf->gety()+45,'Area Penjualan');
			$this->pdf->text(75,$this->pdf->gety()+45,': '.$row['areaname']);
			$this->pdf->text(10,$this->pdf->gety()+50,'Customer Group');
			$this->pdf->text(75,$this->pdf->gety()+50,': '.$row['groupname']);
			$this->pdf->text(10,$this->pdf->gety()+55,'Kategori Customer');
			$this->pdf->text(75,$this->pdf->gety()+55,': '.$row['custcategoryname']);
			$this->pdf->text(10,$this->pdf->gety()+60,'Grade Customer');
			$this->pdf->text(75,$this->pdf->gety()+60,': '.$row['custogradedesc']);
			$this->pdf->text(10,$this->pdf->gety()+65,'No Akun bank');
			$this->pdf->text(75,$this->pdf->gety()+65,': '.$row['bankaccountno']);
			$this->pdf->text(10,$this->pdf->gety()+70,'Nama Bank');
			$this->pdf->text(75,$this->pdf->gety()+70,': '.$row['bankname']);
			$this->pdf->text(10,$this->pdf->gety()+75,'Pemilik Akun Bank');
			$this->pdf->text(75,$this->pdf->gety()+75,': '.$row['accountowner']);
			$this->pdf->text(10,$this->pdf->gety()+80,'Status');
			$this->pdf->text(75,$this->pdf->gety()+80,': '.$row['status']);
			$this->pdf->text(10,$this->pdf->gety()+81,'___________');
			
			$this->pdf->text(10,$this->pdf->gety()+90,'Alamat Customer');
									$sql1 = "select a.*, addresstypename, d.cityname
							from address a 
							join addressbook b on b.addressbookid = a.addressbookid
							join addresstype c on c.addresstypeid = a.addresstypeid
							join city d on d.cityid = a.cityid 
							where a.addressbookid = ".$row['addressbookid'];
			$dataReader1 = Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->setY($this->pdf->getY()+95);
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->setFont('Arial','',9);
			$this->pdf->colalign = array('L','L','L','L','L','L','L','L','L','L');
			$this->pdf->setwidths(array(10,30,55,15,28,28,28,28,30,30));
			$this->pdf->colheader = array('No','Jenis Alamat','Alamat','RT','RW','Nama Kota','Telp','Fax','Lattitude','Longitude');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','L','L','L','L','L','L','L','L');
			$i=0;
			foreach($dataReader1 as $row1)
			{
					$i+=1;
					$this->pdf->row(array(
							$i,
							$row1['addresstypename'],
							$row1['addressname'],
							$row1['rt'],
							$row1['rw'],
							$row1['cityname'],
							$row1['phoneno'],
							$row1['faxno'],
							$row1['lat'],
							$row1['lng'])
					);
			}
            
            $this->pdf->text(10,$this->pdf->gety()+5,'Kontak Customer');
									$sql1 = "select a.*, b.contacttypename
                                            from addresscontact a
                                            join contacttype b on b.contacttypeid = a.contacttypeid
                                            where a.addressbookid = ".$row['addressbookid'];
                                    
			$dataReader1 = Yii::app()->db->createCommand($sql1)->queryAll();
			
            
			$this->pdf->setY($this->pdf->getY()+10);
			//$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->setFont('Arial','',9);
			$this->pdf->colalign = array('L','L','L','L','L','L','L','L','L','L');
			$this->pdf->setwidths(array(10,25,35,25,25,28,18,30,35,35));
			foreach($dataReader1 as $row1)
			{
					$i=1;
                    $imgktp = $row1['ktp'];
                    if($row1['ktp'] != '') {
                        //$imgktp = $this->pdf->Image('images/addressbook/'.$row1['ktp'], 10, $this->pdf->gety()+20, 25,15);
                        
                        $this->pdf->colheader = array('No','Jenis Kontak','Nama Kontak','Tanggal Lahir','No Telp','No HP','No WA','Telegram ID','Email Address','NO KTP');
                        $this->pdf->RowHeader();
                        $this->pdf->coldetailalign = array('L','L','L','L','L','L','L','L','L','L');
                        
                        $this->pdf->row(array(
							$i,
							$row1['contacttypename'],
							$row1['addresscontactname'],
							//$this->pdf->Image('images/addressbook/'.$row1['ktp'], 10, $this->pdf->gety()+20, 25,15),
							$row1['phoneno'],
							$row1['mobilephone'],
							$row1['wanumber'],
							$row1['telegramid'],
							$row1['emailaddress'])
					       );
                        $this->pdf->Cell(250,0,'Lihat ','','','R',false,Yii::app()->createUrl('images/addressbook/'.$row1['ktp']));
                    }
                    else
                    {
                        $this->pdf->colheader = array(
                            'No','Jenis Kontak','Nama Kontak','NO KTP','Tanggal Lahir','No Telp','No HP','No WA','Telegram ID','Email Address');
                        $this->pdf->RowHeader();
                        $this->pdf->coldetailalign = array('L','L','L','L','L','L','L','L','L','L');
                        $i=0;
                        
                        $this->pdf->row(array(
							$i,
							$row1['contacttypename'],
							$row1['addresscontactname'],
							//$this->pdf->Image('images/addressbook/'.$row1['ktp'], 10, $this->pdf->gety()+20, 25,15),
                            $row1['ktp'],
							$row1['phoneno'],
							$row1['mobilephone'],
							$row1['wanumber'],
							$row1['telegramid'],
							$row1['emailaddress'])
					);
                    }
			}
            
			$this->pdf->setY($this->pdf->getY()+5);
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Pola Diskon');
			$sql2 = "select a.*
							from custdisc a
							where a.addressbookid = ".$row['addressbookid'];
			$dataReader2 = Yii::app()->db->createCommand($sql2)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+10);
			$this->pdf->setFont('Arial','',9);
			$this->pdf->colalign = array('L','L');
			$this->pdf->setwidths(array(10,25));
			$this->pdf->colheader = array('No','Nilai Diskon');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','R');
			$j=0;
			foreach($dataReader2 as $row2)
			{
					$j+=1;
					$this->pdf->row(array(
							$j,
							$row2['discvalue'])
					);
			}
			$this->pdf->Addpage('L','A4');
			$this->pdf->setY($this->pdf->getY()+5);
		}
        }else
        {
            $this->pdf->text(5,15,'Anda Tidak Berhak');
        }

		$this->pdf->Output();
  }
	/*public function RincianDataCustomer($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		
		$sql = "select a.*, b.areaname, c.taxcode,h.paycode,e.groupname,f.custcategoryname,g.custogradedesc, 
		if(a.recordstatus=1,'Aktif','Tidak Aktif') as status
						from addressbook a
						left join salesarea b on b.salesareaid = a.salesareaid
						left join tax c on c.taxid = a.taxid
						left join pricecategory d on d.pricecategoryid = a.pricecategoryid
						left join groupcustomer e on e.groupcustomerid = a.groupcustomerid
						left join custcategory f on f.custcategoryid = a.custcategoryid
						left join custgrade g on g.custgradeid = a.custgradeid
						left join paymentmethod h on h.paymentmethodid = a.paymentmethodid
						where a.fullname like '%".$customer."%' 
						and iscustomer=1
						and b.areaname like '%".$salesarea."%'
		";
        
		$this->pdf->title='Rincian Data Customer';
		$this->pdf->AddPage('P','A4');
        
		$res = Yii::app()->db->createCommand($sql)->queryAll();
		foreach($res as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Nama Customer');
			$this->pdf->text(75,$this->pdf->gety()+5,': '.$row['fullname']);
			$this->pdf->text(10,$this->pdf->gety()+10,'Kode Pajak');
			$this->pdf->text(75,$this->pdf->gety()+10,': '.$row['taxcode']);
			$this->pdf->text(10,$this->pdf->gety()+15,'NPWP');
			$this->pdf->text(75,$this->pdf->gety()+15,': '.$row['taxno']);
			$this->pdf->text(10,$this->pdf->gety()+20,'KTP Customer');
			$this->pdf->text(75,$this->pdf->gety()+20,': '.$row['ktpno']);
			$this->pdf->text(10,$this->pdf->gety()+25,'Kredit Limit');
			$this->pdf->text(75,$this->pdf->gety()+25,': '.$row['creditlimit']);
			$this->pdf->text(10,$this->pdf->gety()+30,'Kredit Limit');
			$this->pdf->text(75,$this->pdf->gety()+30,': '.$row['creditlimit']);
			$this->pdf->text(10,$this->pdf->gety()+35,'Kode Pembayaran');
			$this->pdf->text(75,$this->pdf->gety()+35,': '.$row['paycode']);
			$this->pdf->text(10,$this->pdf->gety()+40,'Batas Limit Kaku');
			$this->pdf->text(75,$this->pdf->gety()+40,': '.$row['isstrictlimit']);
			$this->pdf->text(10,$this->pdf->gety()+45,'Area Penjualan');
			$this->pdf->text(75,$this->pdf->gety()+45,': '.$row['areaname']);
			$this->pdf->text(10,$this->pdf->gety()+50,'Customer Group');
			$this->pdf->text(75,$this->pdf->gety()+50,': '.$row['groupname']);
			$this->pdf->text(10,$this->pdf->gety()+55,'Kategori Customer');
			$this->pdf->text(75,$this->pdf->gety()+55,': '.$row['custcategoryname']);
			$this->pdf->text(10,$this->pdf->gety()+60,'Grade Customer');
			$this->pdf->text(75,$this->pdf->gety()+60,': '.$row['custogradedesc']);
			$this->pdf->text(10,$this->pdf->gety()+65,'No Akun bank');
			$this->pdf->text(75,$this->pdf->gety()+65,': '.$row['bankaccountno']);
			$this->pdf->text(10,$this->pdf->gety()+70,'Nama Bank');
			$this->pdf->text(75,$this->pdf->gety()+70,': '.$row['bankname']);
			$this->pdf->text(10,$this->pdf->gety()+75,'Pemilik Akun Bank');
			$this->pdf->text(75,$this->pdf->gety()+75,': '.$row['accountowner']);
			$this->pdf->text(10,$this->pdf->gety()+80,'Status');
			$this->pdf->text(75,$this->pdf->gety()+80,': '.$row['status']);
			$this->pdf->text(10,$this->pdf->gety()+81,'_________________________________');
			
			$this->pdf->text(10,$this->pdf->gety()+90,'Alamat Customer');
									$sql1 = "select a.*, addresstypename, d.cityname
							from address a 
							join addressbook b on b.addressbookid = a.addressbookid
							join addresstype c on c.addresstypeid = a.addresstypeid
							join city d on d.cityid = a.cityid 
							where a.addressbookid = ".$row['addressbookid'];
			$dataReader1 = Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->setY($this->pdf->getY()+95);
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->setFont('Arial','',9);
			$this->pdf->colalign = array('L','L','L','L','L','L','L','L','L','L');
			$this->pdf->setwidths(array(10,25,35,15,15,28,18,18,20,20));
			$this->pdf->colheader = array('No','Jenis Alamat','Alamat','RT','RW','Nama Kota','Telp','Fax','Lattitude','Longitude');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','L','L','L','L','L','L','L','L');
			$i=0;
			foreach($dataReader1 as $row1)
			{
					$i+=1;
					$this->pdf->row(array(
							$i,
							$row1['addresstypename'],
							$row1['addressname'],
							$row1['rt'],
							$row1['rw'],
							$row1['cityname'],
							$row1['phoneno'],
							$row1['faxno'],
							$row1['lat'],
							$row1['lng'])
					);
			}
			$this->pdf->setY($this->pdf->getY()+5);
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Pola Diskon');
			$sql2 = "select a.*
							from custdisc a
							where a.addressbookid = ".$row['addressbookid'];
			$dataReader2 = Yii::app()->db->createCommand($sql2)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+10);
			$this->pdf->setFont('Arial','',9);
			$this->pdf->colalign = array('L','L');
			$this->pdf->setwidths(array(10,25));
			$this->pdf->colheader = array('No','Nilai Diskon');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','R');
			$j=0;
			foreach($dataReader2 as $row2)
			{
					$j+=1;
					$this->pdf->row(array(
							$j,
							$row2['discvalue'])
					);
			}
			$this->pdf->Addpage();
			$this->pdf->setY($this->pdf->getY()+5);
		}
		$this->pdf->Output();
  }*/
	//90
	public function RekapPenjualanReturPenjualanPerCustomerPerJenisMaterialPerBulanPerTahunTotalNilai($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }  
      
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	            join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Jenis Material Per Bulan - Total (Nilai)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','F4');
      
        if(isset($spv) && $spv!='')
        {                
          $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
          $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
          $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
          $this->pdf->sety($this->pdf->gety()+5);
        }
								
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,35,20,20,20,20,20,20,20,20,20,20,20,20,25));
			$this->pdf->colheader = array('No','Jenis Material','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
			$this->pdf->RowHeader();
			
			$sql1 = "select * from (select xxx.description as barang,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as januari,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as februari,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as maret,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and invoiceno not like '%-%-%'
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as april,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as mei,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as juni,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as juli,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as agustus,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as september,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 10 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as oktober,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as nopember,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 12 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as desember,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as jumlah
							from materialtype xxx
							where xxx.recordstatus = 1
							order by xxx.nourut) xxxx
							where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <>0 or juli <>0 or agustus <> 0 or september <>0 or oktober <> 0 or nopember <> 0 or desember <> 0";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
			foreach($dataReader1 as $row1)
			{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['barang'],
						Yii::app()->format->formatCurrency($row1['januari']/$per),
						Yii::app()->format->formatCurrency($row1['februari']/$per),
						Yii::app()->format->formatCurrency($row1['maret']/$per),
						Yii::app()->format->formatCurrency($row1['april']/$per),
						Yii::app()->format->formatCurrency($row1['mei']/$per),
						Yii::app()->format->formatCurrency($row1['juni']/$per),
						Yii::app()->format->formatCurrency($row1['juli']/$per),
						Yii::app()->format->formatCurrency($row1['agustus']/$per),
						Yii::app()->format->formatCurrency($row1['september']/$per),
						Yii::app()->format->formatCurrency($row1['oktober']/$per),
						Yii::app()->format->formatCurrency($row1['nopember']/$per),
						Yii::app()->format->formatCurrency($row1['desember']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per)
					));
				$totaljanuari += $row1['januari']/$per;
		    $totalfebruari += $row1['februari']/$per;
		    $totalmaret += $row1['maret']/$per;
		    $totalapril += $row1['april']/$per;
		    $totalmei += $row1['mei']/$per;
		    $totaljuni += $row1['juni']/$per;
		    $totaljuli += $row1['juli']/$per;
		    $totalagustus += $row1['agustus']/$per;
		    $totalseptember += $row1['september']/$per;
		    $totaloktober += $row1['oktober']/$per;
		    $totalnopember += $row1['nopember']/$per;
		    $totaldesember += $row1['desember']/$per;
		    $totaljumlah += $row1['jumlah']/$per;
			}
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
        '',
        'TOTAL ' . $row['fullname'],
        Yii::app()->format->formatCurrency($totaljanuari),
        Yii::app()->format->formatCurrency($totalfebruari),
        Yii::app()->format->formatCurrency($totalmaret),
        Yii::app()->format->formatCurrency($totalapril),
        Yii::app()->format->formatCurrency($totalmei),
        Yii::app()->format->formatCurrency($totaljuni),
        Yii::app()->format->formatCurrency($totaljuli),
        Yii::app()->format->formatCurrency($totalagustus),
        Yii::app()->format->formatCurrency($totalseptember),
        Yii::app()->format->formatCurrency($totaloktober),
        Yii::app()->format->formatCurrency($totalnopember),
        Yii::app()->format->formatCurrency($totaldesember),
        Yii::app()->format->formatCurrency($totaljumlah),
      ));
			$totaljanuari1 += $totaljanuari;
	    $totalfebruari1 += $totalfebruari;
	    $totalmaret1 += $totalmaret;
	    $totalapril1 += $totalapril;
	    $totalmei1 += $totalmei;
	    $totaljuni1 += $totaljuni;
	    $totaljuli1 += $totaljuli;
	    $totalagustus1 += $totalagustus;
	    $totalseptember1 += $totalseptember;
	    $totaloktober1 += $totaloktober;
	    $totalnopember1 += $totalnopember;
	    $totaldesember1 += $totaldesember;
	    $totaljumlah1 += $totaljumlah;

			$this->pdf->sety($this->pdf->gety()+3);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatCurrency($totaljanuari1),
      Yii::app()->format->formatCurrency($totalfebruari1),
      Yii::app()->format->formatCurrency($totalmaret1),
      Yii::app()->format->formatCurrency($totalapril1),
      Yii::app()->format->formatCurrency($totalmei1),
      Yii::app()->format->formatCurrency($totaljuni1),
      Yii::app()->format->formatCurrency($totaljuli1),
      Yii::app()->format->formatCurrency($totalagustus1),
      Yii::app()->format->formatCurrency($totalseptember1),
      Yii::app()->format->formatCurrency($totaloktober1),
      Yii::app()->format->formatCurrency($totalnopember1),
      Yii::app()->format->formatCurrency($totaldesember1),
      Yii::app()->format->formatCurrency($totaljumlah1),
    ));
		$this->pdf->Output();
	}
	//91
	public function RekapSalesOrderOutstandingPerTanggalKirimPerBarang($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totaljumlah2=0;
		$sql = "SELECT distinct a.delvdate
				FROM sodetail a
				JOIN soheader b ON b.soheaderid=a.soheaderid
				JOIN product c ON c.productid=a.productid
				JOIN sloc d ON d.slocid=a.slocid
				JOIN unitofmeasure e ON e.unitofmeasureid=a.unitofmeasureid
				JOIN plant f on f.plantid=d.plantid
				JOIN addressbook g on g.addressbookid=b.addressbookid
				JOIN employee h on h.employeeid=b.employeeid
				WHERE b.recordstatus = 6
				AND b.companyid = ".$companyid."
				AND a.qty > a.giqty
				AND a.delvdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				AND g.fullname like '%".$customer."%'
				AND h.fullname like '%".$employee."%'
				AND c.productname like '%".$product."%'
				ORDER BY a.delvdate ASC
		";
				
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Sales Order Outstanding Per Barang Per Tanggal Kirim';
		$this->pdf->subtitle = 'Tanggal Kirim Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P'); 
      
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Tanggal Kirim');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['delvdate']);
			
			$sql1 = "SELECT distinct a.productid,c.productname,e.uomcode,f.plantcode,sum(a.qty) as qty,sum(a.giqty) as giqty,ifnull((select sum(j.qty) from productstock j join sloc k on k.slocid=j.slocid where j.productid=a.productid and j.unitofmeasureid=a.unitofmeasureid and k.plantid=f.plantid),0) as stok,ifnull((select sum(j.qty) from productstock j join sloc k on k.slocid=j.slocid where j.productid=a.productid and j.unitofmeasureid=a.unitofmeasureid and k.plantid=f.plantid),0) - (sum(qty) - sum(giqty)) as selisih
				FROM sodetail a
				JOIN soheader b ON b.soheaderid=a.soheaderid
				JOIN product c ON c.productid=a.productid
				JOIN sloc d ON d.slocid=a.slocid
				JOIN unitofmeasure e ON e.unitofmeasureid=a.unitofmeasureid
				JOIN plant f on f.plantid=d.plantid
				JOIN addressbook g on g.addressbookid=b.addressbookid
				JOIN employee h on h.employeeid=b.employeeid
				WHERE b.recordstatus = 6
				AND b.companyid = ".$companyid."
				AND a.qty > a.giqty
				AND a.delvdate = '{$row['delvdate']}'
				AND g.fullname like '%".$customer."%'
				AND h.fullname like '%".$employee."%'
				AND c.productname like '%".$product."%'
				GROUP BY f.plantid,a.productid,a.unitofmeasureid
				ORDER BY c.productname ASC
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,70,12,25,15,15,15,25));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Kode Cabang','Qty SO','Qty GI','Qty Stok','Lebih (Kurang)');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','C','C','R','R','R','R');
				
			$totalqty1 = 0;
			$totalnominal1 = 0;
			$totaldisc1 = 0;
			$totaljumlah1 = 0;
			$i=1;
			
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','B',8);
				//$this->pdf->text(10,$this->pdf->gety()+15,'Nama Barang');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['productname']);
				
				$this->pdf->row(array(
					$i,$row1['productname'],
					$row1['uomcode'],
					$row1['plantcode'],
					Yii::app()->format->formatCurrency($row1['qty']),
					Yii::app()->format->formatCurrency($row1['giqty']),
					Yii::app()->format->formatCurrency($row1['stok']),
					Yii::app()->format->formatCurrency($row1['selisih']),
				));
				
				$sql2 = "SELECT distinct g.fullname,b.sono,a.qty,a.giqty,ifnull((select sum(j.qty) from productstock j join sloc k on k.slocid=j.slocid where j.productid=a.productid and j.unitofmeasureid=a.unitofmeasureid and k.plantid=f.plantid),0) as stok
						FROM sodetail a
						JOIN soheader b ON b.soheaderid=a.soheaderid
						JOIN product c ON c.productid=a.productid
						JOIN sloc d ON d.slocid=a.slocid
						JOIN unitofmeasure e ON e.unitofmeasureid=a.unitofmeasureid
						JOIN plant f on f.plantid=d.plantid
						JOIN addressbook g on g.addressbookid=b.addressbookid
						JOIN employee h on h.employeeid=b.employeeid
						WHERE b.recordstatus = 6
						AND b.companyid = ".$companyid."
						AND a.qty > a.giqty
						AND a.delvdate = '{$row['delvdate']}'
						AND a.productid = {$row1['productid']}
						AND g.fullname like '%".$customer."%'
						AND h.fullname like '%".$employee."%'
						AND c.productname like '%".$product."%'
						ORDER BY a.delvdate ASC
				";
				
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				$totalgrupdisc = 0;$totalgrupnominal=0;$totalgrup=0;$totalgrupqty=0;
				//$this->pdf->sety($this->pdf->gety()+5);
				$this->pdf->setFont('Arial','',8);
				$this->pdf->coldetailalign = array('L','R','L','C','R','R','R','R');
				$totalgrupqty =0;
				$totalgrupnominal =0;
				$totalgrupdisc =0;
				$totalgrup =0;
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->pdf->row(array(
						'',$row2['fullname'],
						'-',
						$row2['sono'],
						Yii::app()->format->formatCurrency($row2['qty']),
						Yii::app()->format->formatCurrency($row2['giqty']),
						'',
						'',
					));
					
				}
				$this->pdf->sety($this->pdf->gety()+5);
				$this->pdf->coldetailalign = array('L','L','C','C','R','R','R','R');
				
/*				$this->pdf->setFont('Arial','BI',8);
				$this->pdf->row(array(
					'','TOTAL '.$row1['description'],
					Yii::app()->format->formatNumber($totalgrupqty),
					Yii::app()->format->formatCurrency($totalgrupnominal),
					Yii::app()->format->formatCurrency($totalgrupdisc),
					Yii::app()->format->formatCurrency($totalgrup),
				));
					
				$totalqty1 += $totalgrupqty;
				$totalnominal1 += $totalgrupnominal;
				$totaldisc1 += $totalgrupdisc;
				$totaljumlah1 += $totalgrup;
				$this->pdf->checkPageBreak(20);
*/			}
/*			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'','TOTAL '.$row['areaname'],
				Yii::app()->format->formatNumber($totalqty1),
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totaljumlah1),
				));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totaljumlah2 += $totaljumlah1;
*/		}
/*		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(40,50,40,40));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'TOTAL',
			'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal2),
			'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc2),
			'NETTO : '.Yii::app()->format->formatCurrency($totaljumlah2),
		));
*/		$this->pdf->Output();
	}
	//999
	public function RekapPenjualanReturPenjualanPerCustomerPerJenisMaterialPerBulanPerTahunTotalNilaiCabang($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
    
		if(isset($spv)&& $spv!=''){
			$spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
		}else{
			$spvid = "";
		}
		 if(isset($spv)&& $spv!=''){
			$spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
		}else{
			$spvid1 = "";
		}
		if(isset($spv)&& $spv!=''){
			$spvid2 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
		}else{
			$spvid2 = "";
		}
		
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	            join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and g.fullname like '%".$customer."%' and b.addressbookid in (SELECT v.addressbookid FROM addressbook v JOIN company w ON w.companyname=v.fullname)
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' and k.fullname like '%".$customer."%' and h.addressbookid in (SELECT v.addressbookid FROM addressbook v JOIN company w ON w.companyname=v.fullname)
				and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Jenis Material Per Bulan - Total (Nilai)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','F4');
      
        if(isset($spv) && $spv!='')
        {                
          $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
          $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
          $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
          $this->pdf->sety($this->pdf->gety()+5);
        }
								
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,35,20,20,20,20,20,20,20,20,20,20,20,20,25));
			$this->pdf->colheader = array('No','Jenis Material','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
			$this->pdf->RowHeader();
			
			$sql1 = "select * from (select xxx.description as barang,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as januari,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as februari,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as maret,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and invoiceno not like '%-%-%'
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as april,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as mei,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as juni,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as juli,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as agustus,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as september,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 10 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as oktober,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as nopember,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 12 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as desember,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as jumlah
							from materialtype xxx
							where xxx.recordstatus = 1
							order by xxx.nourut) xxxx
							where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <>0 or juli <>0 or agustus <> 0 or september <>0 or oktober <> 0 or nopember <> 0 or desember <> 0";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
			foreach($dataReader1 as $row1)
			{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['barang'],
						Yii::app()->format->formatCurrency($row1['januari']/$per),
						Yii::app()->format->formatCurrency($row1['februari']/$per),
						Yii::app()->format->formatCurrency($row1['maret']/$per),
						Yii::app()->format->formatCurrency($row1['april']/$per),
						Yii::app()->format->formatCurrency($row1['mei']/$per),
						Yii::app()->format->formatCurrency($row1['juni']/$per),
						Yii::app()->format->formatCurrency($row1['juli']/$per),
						Yii::app()->format->formatCurrency($row1['agustus']/$per),
						Yii::app()->format->formatCurrency($row1['september']/$per),
						Yii::app()->format->formatCurrency($row1['oktober']/$per),
						Yii::app()->format->formatCurrency($row1['nopember']/$per),
						Yii::app()->format->formatCurrency($row1['desember']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per)
					));
				$totaljanuari += $row1['januari']/$per;
		    $totalfebruari += $row1['februari']/$per;
		    $totalmaret += $row1['maret']/$per;
		    $totalapril += $row1['april']/$per;
		    $totalmei += $row1['mei']/$per;
		    $totaljuni += $row1['juni']/$per;
		    $totaljuli += $row1['juli']/$per;
		    $totalagustus += $row1['agustus']/$per;
		    $totalseptember += $row1['september']/$per;
		    $totaloktober += $row1['oktober']/$per;
		    $totalnopember += $row1['nopember']/$per;
		    $totaldesember += $row1['desember']/$per;
		    $totaljumlah += $row1['jumlah']/$per;
			}
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
        '',
        'TOTAL ' . $row['fullname'],
        Yii::app()->format->formatCurrency($totaljanuari),
        Yii::app()->format->formatCurrency($totalfebruari),
        Yii::app()->format->formatCurrency($totalmaret),
        Yii::app()->format->formatCurrency($totalapril),
        Yii::app()->format->formatCurrency($totalmei),
        Yii::app()->format->formatCurrency($totaljuni),
        Yii::app()->format->formatCurrency($totaljuli),
        Yii::app()->format->formatCurrency($totalagustus),
        Yii::app()->format->formatCurrency($totalseptember),
        Yii::app()->format->formatCurrency($totaloktober),
        Yii::app()->format->formatCurrency($totalnopember),
        Yii::app()->format->formatCurrency($totaldesember),
        Yii::app()->format->formatCurrency($totaljumlah),
      ));
			$totaljanuari1 += $totaljanuari;
	    $totalfebruari1 += $totalfebruari;
	    $totalmaret1 += $totalmaret;
	    $totalapril1 += $totalapril;
	    $totalmei1 += $totalmei;
	    $totaljuni1 += $totaljuni;
	    $totaljuli1 += $totaljuli;
	    $totalagustus1 += $totalagustus;
	    $totalseptember1 += $totalseptember;
	    $totaloktober1 += $totaloktober;
	    $totalnopember1 += $totalnopember;
	    $totaldesember1 += $totaldesember;
	    $totaljumlah1 += $totaljumlah;

			$this->pdf->sety($this->pdf->gety()+3);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatCurrency($totaljanuari1),
      Yii::app()->format->formatCurrency($totalfebruari1),
      Yii::app()->format->formatCurrency($totalmaret1),
      Yii::app()->format->formatCurrency($totalapril1),
      Yii::app()->format->formatCurrency($totalmei1),
      Yii::app()->format->formatCurrency($totaljuni1),
      Yii::app()->format->formatCurrency($totaljuli1),
      Yii::app()->format->formatCurrency($totalagustus1),
      Yii::app()->format->formatCurrency($totalseptember1),
      Yii::app()->format->formatCurrency($totaloktober1),
      Yii::app()->format->formatCurrency($totalnopember1),
      Yii::app()->format->formatCurrency($totaldesember1),
      Yii::app()->format->formatCurrency($totaljumlah1),
    ));
		$this->pdf->Output();
	}
	
	
	public function actionDownXLS()
	{
	  parent::actionDownXLS();
		if (isset($_GET['lro']) && isset($_GET['company']) && isset($_GET['sloc']) && isset($_GET['materialgroup']) && isset($_GET['customer']) && isset($_GET['sales']) && isset($_GET['spvid']) && isset($_GET['product']) && isset($_GET['salesarea']) && isset($_GET['isdisplay']) && isset($_GET['startdate']) && isset($_GET['enddate']) && isset($_GET['per']))
		{
			if ($_GET['lro'] == 1)
			{
				$this->RincianPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 2)
			{
				$this->RekapPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 3)
			{
				$this->RekapPenjualanPerCustomerXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 4)
			{
				$this->RekapPenjualanPerSalesXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 5)
			{
				$this->RekapPenjualanPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 6)
			{
				$this->RekapPenjualanPerAreaXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 7)
			{
				$this->RekapPenjualanPerCustomerPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 8)
			{
				$this->RekapPenjualanPerCustomerPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 9)
			{
				$this->RekapPenjualanPerSalesPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 10)
			{
				$this->RekapPenjualanPerSalesPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 11)
			{
				$this->RekapPenjualanPerAreaPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 12)
			{
				$this->RekapPenjualanPerAreaPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 13)
			{
				$this->RincianReturPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 14)
			{
				$this->RekapReturPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 15)
			{
				$this->RekapReturPenjualanPerCustomerXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 16)
			{
				$this->RekapReturPenjualanPerSalesXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 17)
			{
				$this->RekapReturPenjualanPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 18)
			{
				$this->RekapReturPenjualanPerAreaXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 19)
			{
				$this->RekapReturPenjualanPerCustomerPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 20)
			{
				$this->RekapReturPenjualanPerCustomerPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 21)
			{
				$this->RekapReturPenjualanPerSalesPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 22)
			{
				$this->RekapReturPenjualanPerSalesPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 23)
			{
				$this->RekapReturPenjualanPerAreaPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 24)
			{
				$this->RekapReturPenjualanPerAreaPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 25)
			{
				$this->RincianPenjualanReturPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 26)
			{
				$this->RekapPenjualanReturPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 27)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 28)
			{
				$this->RekapPenjualanReturPenjualanPerSalesXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 29)
			{
				$this->RekapPenjualanReturPenjualanPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 30)
			{
				$this->RekapPenjualanReturPenjualanPerAreaXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 31)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 32)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 33)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 34)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 35)
			{
				$this->RekapPenjualanReturPenjualanPerAreaPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 36)
			{
				$this->RekapPenjualanReturPenjualanPerAreaPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 37)
			{
				$this->RincianSalesOrderPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
            else
			if ($_GET['lro'] == 38)
			{
				$this->RincianSalesOrderOutstandingXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
            else
			if ($_GET['lro'] == 39)
			{
				$this->RekapSuratJalanBelumDibuatkanFakturXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 40)
			{
				$this->RekapPenjualanPerCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 41)
			{
				$this->RekapReturPenjualanPerCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 42)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 43)
			{
				$this->RekapPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 44)
			{
				$this->RekapReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 45)
			{
				$this->RekapPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 46)
			{
				$this->RekapTotalPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 47)
			{
				$this->RekapTotalReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 48)
			{
				$this->RekapTotalPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 49)
			{
				$this->RekapPenjualanPerBarangPerBulanQtyXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 50)
			{
				$this->RekapPenjualanPerBarangPerBulanNilaiXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 51)
			{
				$this->RekapPenjualanPerBarangPerBulanQtydanNilaiXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 52)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalNilaiXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 53)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianNilaiXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 54)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalQtyXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 55)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianQtyXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 56)
			{
				$this->RekapSalesOrderOutstandingPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 57)
			{
				$this->RekapSOPerDokumentBelumStatusMaxXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 58)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBulanPerTahunTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
            if($_GET['lro'] == 59)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBarangPerBulanPerTahunTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
            }
			else
			if($_GET['lro'] == 60)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerCustomerBulanPerTahunTotalXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
            }
			else
			if ($_GET['lro'] == 61)
			{
				$this->RekapPenjualanReturAreaCustomerBarangPerBulanPerTahunRincianNilaiXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 62)
			{
				$this->RekapPenjualanReturAreaCustomerBarangPerBulanPerTahunRincianQtyXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 63)
			{
				$this->LaporanLatLngXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 64)
			{
				$this->LaporanFotoXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
      }
			else
			if($_GET['lro'] == 65)
			{
				$this->LaporanCustomerBelumAdaKTPXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 66)
			{
				$this->LaporanCustomerBelumAdaNPWPXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
      }    
			else
      if($_GET['lro'] == 67)
			{
				$this->LaporanSudahLengkapLokasiXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
      }
      else
			if($_GET['lro'] == 68)
			{
				$this->LaporanSudaFotoXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
      else
      if($_GET['lro'] == 69)
			{
				$this->LaporanCustomerSudahAdaKTPXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
      } 
      else
      if($_GET['lro'] == 70)
			{
				$this->LaporanCustomerSudahAdaNPWPXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
      }
			else
			if($_GET['lro'] == 71)
			{
				$this->RekapRealisasiPenjualanPerSalesPerGroupMaterialXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 72)
			{
				$this->RincianRealisasiPenjualanPerSalesPerGroupMaterialXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 73)
			{
				$this->RekapPenjualanVSProduksiVSSaldoAkhirXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 74)
			{
				$this->RekapTTNTPerDokumenStatusBelumMaxXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 75)
			{
				$this->RekapTTFPerDokumenStatusBelumMaxXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 76)
			{
				$this->RekapSkalaKomisiPenjualanPerDokumenStatusBelumMaxXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 77)
			{
				$this->RekapTargetPenjualanPerDokumenStatusBelumMaxXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 78)
			{
				$this->RekapPerubahanPlafonPerDokumenStatusBelumMaxXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 79)
			{
				$this->RekapRealisasiPenjualanPerSPVSalesPerGroupMaterialXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 81)
			{
				$this->LaporanCustomerBelumAdaKategoriXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 82)
			{
				$this->LaporanCustomerSudahAdaKategoriXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 83)
			{
				$this->LaporanCustomerBelumAdaGradeXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 84)
			{
				$this->LaporanCustomerSudahAdaGradeXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 85)
			{
				$this->LaporanPenjualanReturPenjulanPerCabangPerSalesPerMaterialgroupXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 86)
			{
				$this->RekapRealisasiPenjualanPerSPVSalesPerGroupMaterial1XLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 87)
			{
				$this->MonitoringReport1XLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 88)
			{
				$this->LaporanRekapSalesTargetPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 89)
			{
				$this->RincianDataCustomerXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 90)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerJenisMaterialPerBulanPerTahunTotalNilaiXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['customer'],$_GET['sales'],$_GET['spvid'],$_GET['product'],$_GET['salesarea'],$_GET['isdisplay'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			{
				echo getCatalog('reportdoesnotexist');
			}
		}
	}
	//1
	public function RincianPenjualanPerDokumenXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rincianpenjualanperdokumen';
		parent::actionDownXLS();	
		$total1=0;$totaldisc1=0;$totalnetto1=0;					
		$sql = "select a.invoiceid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno, b.gino, a.invoicedate, d.fullname as customer,h.fullname as sales, e.paydays, c.shipto, a.headernote
				from invoice a
				join giheader b on b.giheaderid = a.giheaderid
				join soheader c on c.soheaderid = b.soheaderid
				join addressbook d on d.addressbookid = c.addressbookid
				join paymentmethod e on e.paymentmethodid = c.paymentmethodid
				join gidetail f on f.giheaderid = b.giheaderid
				join sloc g on g.slocid = f.slocid
				join employee h on h.employeeid = c.employeeid
				join product i on i.productid = f.productid
				join salesarea j on j.salesareaid = d.salesareaid
				where a.recordstatus = 3 and invoiceno not like '%-%-%' and c.companyid = ".$companyid." and g.sloccode like '%".$sloc."%'
				and d.fullname like '%".$customer."%'  and h.fullname like '%".$employee."%' and i.productname like '%".$product."%'
				and j.areaname like '%".$salesarea."%' and b.gino is not null
				and a.invoicedate between 
					'".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
		";
		if(isset($spv) && ($spv != ''))
		{
			$where .= " and (c.spvid = '".$spv."' or c.employeeid ='".$spv."') ";
		}
		if(isset($isdisplay) && ($isdisplay != ''))
		{
			$where .= " and c.isdisplay = ".$isdisplay." ";
		}
		$where .= " group by invoiceno order by invoicedate";
		$dataReader=Yii::app()->db->createCommand($sql.$where)->queryAll();
		
		foreach($dataReader as $row)
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;			
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No. Bukti')
				->setCellValueByColumnAndRow(1,$line,': '.$row['invoiceno'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,$row['invoicedate']);
				
			$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sales'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'Kepada Yth,');
				
			$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No. SJ')
				->setCellValueByColumnAndRow(1,$line,': '.$row['gino'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,$row['customer']);
				
			$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'T.O.P')
				->setCellValueByColumnAndRow(1,$line,': '.$row['paydays'].' HARI')
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,$row['shipto']);				
			
			$line++;						
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Unit')
				->setCellValueByColumnAndRow(4,$line,'Price')
				->setCellValueByColumnAndRow(5,$line,'Total');
			$line++;
			$sql1 = "select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,i.productname,k.uomcode,ss.qty,
									(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
									(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nominal,
									(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
									from gidetail zzb 
									join sodetail zza on zza.sodetailid = zzb.sodetailid
									where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
									from invoice a 
									join giheader b on b.giheaderid = a.giheaderid
									join soheader c on c.soheaderid = b.soheaderid
									join addressbook d on d.addressbookid = c.addressbookid
									join employee e on e.employeeid = c.employeeid
									join salesarea f on f.salesareaid = d.salesareaid
									join sodetail g on g.soheaderid = b.soheaderid
									join gidetail ss on ss.giheaderid = b.giheaderid
									join sloc h on h.slocid = ss.slocid
									join product i on i.productid = ss.productid
									join productplant j on j.productid = i.productid
									join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
									where a.recordstatus = 3 and invoiceno not like '%-%-%' and c.companyid = ".$companyid." 
									and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' 
									and e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' 
									and i.productname like '%".$product."%' and a.invoiceid = ".$row['invoiceid']." 
									and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
									and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'";
		
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty=0;$i=0;$total=0;$diskon=0;$netto=0;
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$i+=1)
						->setCellValueByColumnAndRow(1,$line,$row1['productname'])
						->setCellValueByColumnAndRow(2,$line,$row1['qty'])
						->setCellValueByColumnAndRow(3,$line,$row1['uomcode'])
						->setCellValueByColumnAndRow(4,$line,$row1['price']/$per)
						->setCellValueByColumnAndRow(5,$line,$row1['nominal']/$per);
						$line++;						
						$totalqty += $row1['qty'];
						$total += $row1['nominal']/$per;							
						$netto += $row1['nett']/$per;
						$diskon += ($row1['nominal']/$per) - ($row1['nett']/$per);
						$bilangan = explode(".",$netto);
			}
			$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'')
						->setCellValueByColumnAndRow(1,$line,'Total')
						->setCellValueByColumnAndRow(2,$line,$totalqty)
						->setCellValueByColumnAndRow(3,$line,'')
						->setCellValueByColumnAndRow(4,$line,'Nominal')
						->setCellValueByColumnAndRow(5,$line,$total);
						$line+= 1;
						
			$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'')
						->setCellValueByColumnAndRow(1,$line,'')
						->setCellValueByColumnAndRow(2,$line,'')
						->setCellValueByColumnAndRow(3,$line,'')
						->setCellValueByColumnAndRow(4,$line,'Diskon')
						->setCellValueByColumnAndRow(5,$line,$diskon);
			
			$line++;	
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'Terbilang : '.eja($bilangan[0]))
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'Netto')
				->setCellValueByColumnAndRow(5,$line,$netto);		
				
				
			$line++;	
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'Note : '.$row['headernote']);
				
				$line+= 2;
				$total1 += $total;
				$totaldisc1 += $diskon;
				$totalnetto1 += $netto;
		}
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'')	
			->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(2,$line,'')
			->setCellValueByColumnAndRow(3,$line,'TOTAL DISCOUNT')				
			->setCellValueByColumnAndRow(4,$line,'')
			->setCellValueByColumnAndRow(5,$line,'TOTAL NETTO');
			
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'')
			->setCellValueByColumnAndRow(1,$line,$total1)
			->setCellValueByColumnAndRow(2,$line,'')
			->setCellValueByColumnAndRow(3,$line,$totaldisc1)
			->setCellValueByColumnAndRow(4,$line,'')
			->setCellValueByColumnAndRow(5,$line,$totalnetto1);
	
	$this->getFooterXLS($this->phpExcel);
	}
	//2
	public function RekapPenjualanPerDokumenXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperdokumen';
		parent::actionDownXLS();
		if(isset($spv) && $spv!='')
		{
			$spvid = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay = "";
		}
		$sql = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,c.spvid,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						    from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid                                
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
                            c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' ".$spvid." ".$isdisplay." and d.fullname like '%".$customer."%' and e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'  ) z group by invoiceno order by invoiceno
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		$i=0;$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'No. Bukti')
				->setCellValueByColumnAndRow(2,$line,'Tanggal')
				->setCellValueByColumnAndRow(3,$line,'Customer')
				->setCellValueByColumnAndRow(4,$line,'Nominal')
				->setCellValueByColumnAndRow(5,$line,'Disc')
				->setCellValueByColumnAndRow(6,$line,'Netto')
				->setCellValueByColumnAndRow(7,$line,'Keterangan');					
				$line++;
		foreach($dataReader as $row)
		{												
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$i+=1)
						->setCellValueByColumnAndRow(1,$line,$row['invoiceno'])
						->setCellValueByColumnAndRow(2,$line,$row['invoicedate'])
						->setCellValueByColumnAndRow(3,$line,$row['fullname'])
						->setCellValueByColumnAndRow(4,$line,($row['nominal']/$per))
						->setCellValueByColumnAndRow(5,$line,($row['disc']/$per))
						->setCellValueByColumnAndRow(6,$line,($row['netto']/$per))
						->setCellValueByColumnAndRow(7,$line,$row['headernote']);
						$line++;
				
				$line+= 0;
				$totalnominal1 += $row['nominal']/$per;
				$totaldisc1 += $row['disc']/$per;
				$totaljumlah1 += $row['netto']/$per;				
						
		}
			$line++;
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'')	
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,'')
			->setCellValueByColumnAndRow(3,$line,'TOTAL')				
			->setCellValueByColumnAndRow(4,$line,($totalnominal1))
			->setCellValueByColumnAndRow(5,$line,($totaldisc1))
			->setCellValueByColumnAndRow(6,$line,($totaljumlah1));
		
		$this->getFooterXLS($this->phpExcel);
	}
	//3
	public function RekapPenjualanPerCustomerXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpercustomer';
		parent::actionDownXLS();
		if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
			$spvid2 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
		$sql = "select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
                join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1."
                and e.productname like '%".$product."%' and k.areaname like '%".$salesarea."%'
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$sql1 = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						  from gidetail zzb 
						  join sodetail zza on zza.sodetailid = zzb.sodetailid
						  where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							left join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%'  and i.productname like '%".$product."%' and  a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							and d.addressbookid = ".$row['addressbookid']." order by invoiceno)z group by invoiceno"; 
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'No Dokumen')
				->setCellValueByColumnAndRow(2,$line,'Tanggal')
				->setCellValueByColumnAndRow(3,$line,'Nominal')
				->setCellValueByColumnAndRow(4,$line,'Disc')
				->setCellValueByColumnAndRow(5,$line,'Netto')
				->setCellValueByColumnAndRow(6,$line,'Keterangan')
				;
			foreach($dataReader1 as $row1)
			{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['invoiceno'])
				->setCellValueByColumnAndRow(2,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($row1['invoicedate'])))
				->setCellValueByColumnAndRow(3,$line,($row1['nominal']))
				->setCellValueByColumnAndRow(4,$line,($row1['disc']))
				->setCellValueByColumnAndRow(5,$line,($row1['netto']))
				->setCellValueByColumnAndRow(6,$line,$row1['headernote']);
				$totalnominal += $row1['nominal'];
				$totaldisc += $row1['disc'];
				$total += $row1['netto'];
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Customer '. $row['fullname'])
				->setCellValueByColumnAndRow(3,$line,($totalnominal))
				->setCellValueByColumnAndRow(4,$line,($totaldisc))
				->setCellValueByColumnAndRow(5,$line,($total));
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totaljumlah1 += $total;
			$line += 2;
		}
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total ')
				->setCellValueByColumnAndRow(3,$line,($totalnominal1))
				->setCellValueByColumnAndRow(4,$line,($totaldisc1))
				->setCellValueByColumnAndRow(5,$line,($totaljumlah1));
		$this->getFooterXLS($this->phpExcel);
	}
	//4
	public function RekapPenjualanPerSalesXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpersales';
		parent::actionDownXLS();
		$totalnominal1=0;$totaldisc1=0;$total1=0;	
		if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
			$spvid2 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$sql = "select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
		->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
		->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
		->setCellValueByColumnAndRow(4,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'');
				
			$line++;						
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Customer')
				->setCellValueByColumnAndRow(2,$line,'Nominal')
				->setCellValueByColumnAndRow(3,$line,'Disc')
				->setCellValueByColumnAndRow(4,$line,'Netto');
			$line++;				
			$sql1 = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
									(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
									(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
									(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
									(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
									from gidetail zzb 
									join sodetail zza on zza.sodetailid = zzb.sodetailid
									where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
									from invoice a 
									join giheader b on b.giheaderid = a.giheaderid
									join soheader c on c.soheaderid = b.soheaderid
									join addressbook d on d.addressbookid = c.addressbookid
									join employee e on e.employeeid = c.employeeid
									join salesarea f on f.salesareaid = d.salesareaid
									join sodetail g on g.soheaderid = b.soheaderid
									join gidetail ss on ss.giheaderid = b.giheaderid
									join sloc h on h.slocid = ss.slocid
									join product i on i.productid = ss.productid
									join productplant j on j.productid = i.productid
									join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
									where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
									c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
									e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and  a.invoicedate between 
									'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
									'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
									and e.employeeid = ".$row['employeeid']." order by fullname
									)z group by fullname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$i+=1)
						->setCellValueByColumnAndRow(1,$line,$row1['fullname'])
						->setCellValueByColumnAndRow(2,$line,$row1['nominal']/$per)
						->setCellValueByColumnAndRow(3,$line,$row1['disc']/$per)
						->setCellValueByColumnAndRow(4,$line,$row1['netto']/$per);
						$line++;						
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += $row1['disc']/$per;							
						$total += $row1['netto']/$per;							
			}
			$this->phpExcel->setActiveSheetIndex(0)							
						->setCellValueByColumnAndRow(1,$line,'Total Sales')
						->setCellValueByColumnAndRow(2,$line,$totalnominal)
						->setCellValueByColumnAndRow(3,$line,$totaldisc)
						->setCellValueByColumnAndRow(4,$line,$total);
						$line+= 2;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$total1 += $total;
		}
		$this->phpExcel->setActiveSheetIndex(0)							
						->setCellValueByColumnAndRow(1,$line,'TOTAL')
						->setCellValueByColumnAndRow(2,$line,$totalnominal1)
						->setCellValueByColumnAndRow(3,$line,$totaldisc1)
						->setCellValueByColumnAndRow(4,$line,$total1);
		$this->getFooterXLS($this->phpExcel);
	}
	//5
	public function RekapPenjualanPerBarangXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperbarang';
		parent::actionDownXLS();
		$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;	
		if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
			$spvid2 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
				from soheader za 
				join giheader zb on zb.soheaderid = za.soheaderid
				join gidetail zc on zc.giheaderid = zb.giheaderid
				join sodetail zs on zs.sodetailid = zc.sodetailid
				left join employee zd on zd.employeeid = za.employeeid
				join product ze on ze.productid = zs.productid
				left join addressbook zf on zf.addressbookid = za.addressbookid
				left join salesarea zg on zg.salesareaid = zf.salesareaid
				join sloc zh on zh.slocid = zc.slocid
				join invoice zi on zi.giheaderid = zc.giheaderid
				join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
				join materialgroup zk on zk.materialgroupid=zj.materialgroupid
				where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
				zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and ze.productname like '%".$product."%' and zg.areaname like '%".$salesarea."%' and zk.description like '%".$materialgroup."%' and zh.sloccode like '%".$sloc."%'
				and zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
		->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
		->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
		->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Divisi')
				->setCellValueByColumnAndRow(1,$line,': '.$row['description'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'');
				
			$line++;						
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Price')
				->setCellValueByColumnAndRow(4,$line,'Total')
				->setCellValueByColumnAndRow(5,$line,'Disc')
				->setCellValueByColumnAndRow(6,$line,'Netto');
			$line++;
			$sql1 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row['materialgroupid']."
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
								)zz group by productid order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty=0;$totalnetto=0;$totaldisc=0;$totalnominal=0;$i=0;
			
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$i+=1)
						->setCellValueByColumnAndRow(1,$line,$row1['productname'])
						->setCellValueByColumnAndRow(2,$line,$row1['giqty'])
						->setCellValueByColumnAndRow(3,$line,$row1['harga']/$per)
						->setCellValueByColumnAndRow(4,$line,$row1['nominal']/$per)
						->setCellValueByColumnAndRow(5,$line,($row1['nominal']/$per) - ($row1['netto']/$per))
						->setCellValueByColumnAndRow(6,$line,$row1['netto']/$per);
						$line++;						
						$totalqty += $row1['giqty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)							
						->setCellValueByColumnAndRow(1,$line,'Total '.$row['description'])
						->setCellValueByColumnAndRow(2,$line,$totalqty)
						->setCellValueByColumnAndRow(4,$line,$totalnominal)
						->setCellValueByColumnAndRow(5,$line,$totaldisc)
						->setCellValueByColumnAndRow(6,$line,$totalnetto);
						$line+= 2;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
		}
		$this->phpExcel->setActiveSheetIndex(0)							
						->setCellValueByColumnAndRow(1,$line,'TOTAL')
						->setCellValueByColumnAndRow(4,$line,$totalnominal1)
						->setCellValueByColumnAndRow(5,$line,$totaldisc1)
						->setCellValueByColumnAndRow(6,$line,$totalnetto1);
						$line+= 2;
	
		$this->getFooterXLS($this->phpExcel);
	}
	//6
	public function RekapPenjualanPerAreaXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperarea';
		parent::actionDownXLS();
		if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
			$spvid2 = " and (g.spvid='".$spv."' or g.employeeid='".$spv."')";
			$spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and g.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totaljumlah2=0;
		$sql = "select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%' ".$spvid."
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
          group by zg.areaname order by areaname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)
		{		
				$sql1 = "select distinct a.materialgroupid,a.description,b.productid
								from materialgroup a
								join productplant b on b.materialgroupid = a.materialgroupid
								join product c on c.productid = b.productid
								join sloc d on d.slocid = b.slocid
								join gidetail e on e.productid = c.productid
								join giheader f on f.giheaderid = e.giheaderid
								join soheader g on g.soheaderid = f.soheaderid
								join addressbook h on h.addressbookid = g.addressbookid
								join salesarea i on i.salesareaid = h.salesareaid
								join invoice j on j.giheaderid = f.giheaderid
								join employee k on k.employeeid = g.employeeid
								where j.recordstatus = 3 and g.companyid = ".$companyid." and i.salesareaid = ".$row['salesareaid']." and k.fullname like '%".$employee."%' 
								and c.productname like '%".$product."%' and d.sloccode like '%".$sloc."%' and h.fullname like '%".$customer."%' 
								and j.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by a.description";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Area')
						->setCellValueByColumnAndRow(1,$line,': '.$row['areaname'])
						->setCellValueByColumnAndRow(2,$line,'')
						->setCellValueByColumnAndRow(3,$line,'')
						->setCellValueByColumnAndRow(4,$line,'');						
				$line++;
				$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
				
				foreach($dataReader1 as $row1)
				{							
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Grup Material')
						->setCellValueByColumnAndRow(1,$line,': '.$row1['description'])
						->setCellValueByColumnAndRow(2,$line,'')
						->setCellValueByColumnAndRow(3,$line,'')
						->setCellValueByColumnAndRow(4,$line,'');			
			
					$line++;						
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')					
						->setCellValueByColumnAndRow(3,$line,'Nominal')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
					$line++;
					$sql2 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								 from gidetail zzb 
								 join sodetail zza on zza.sodetailid = zzb.sodetailid
								 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
									c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
									e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and  
									a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
											 '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
									and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']."
								) zz group by productid";
					
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					
					$totalgrupdisc = 0;$totalgrupnominal=0;$totalgrup=0;$i=0;$totalgrupqty=0;
					
					foreach($dataReader2 as $row2)
					{
						$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row2['productname'])
							->setCellValueByColumnAndRow(2,$line,$row2['giqty'])							
							->setCellValueByColumnAndRow(3,$line,$row2['nominal']/$per)
							->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per) - ($row2['netto']/$per))
							->setCellValueByColumnAndRow(5,$line,$row2['netto']/$per);
							$line++;
						$totalgrupqty += $row2['giqty'];
						$totalgrupnominal += $row2['nominal']/$per;
						$totalgrupdisc += (($row2['nominal']/$per) - ($row2['netto']/$per));
						$totalgrup += $row2['netto']/$per;
					}
					$this->phpExcel->setActiveSheetIndex(0)							
							->setCellValueByColumnAndRow(1,$line,'Total '.$row1['description'])
							->setCellValueByColumnAndRow(2,$line,$totalgrupqty)
							->setCellValueByColumnAndRow(3,$line,$totalgrupnominal)
							->setCellValueByColumnAndRow(4,$line,$totalgrupdisc)
							->setCellValueByColumnAndRow(5,$line,$totalgrup);
					$line+= 1;
					$totalqty1 += $totalgrupqty;
					$totalnominal1 += $totalgrupnominal;
					$totaldisc1 += $totalgrupdisc;
					$totaljumlah1 += $totalgrup;
							
				}
				$this->phpExcel->setActiveSheetIndex(0)							
							->setCellValueByColumnAndRow(1,$line,'Total '.$row['areaname'])
							->setCellValueByColumnAndRow(2,$line,$totalqty1)
							->setCellValueByColumnAndRow(3,$line,$totalnominal1)
							->setCellValueByColumnAndRow(4,$line,$totaldisc1)
							->setCellValueByColumnAndRow(5,$line,$totaljumlah1);
				$line+= 2;		
				
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totaljumlah2 += $totaljumlah1;
		}
		$this->phpExcel->setActiveSheetIndex(0)							
				->setCellValueByColumnAndRow(1,$line,'TOTAL')
				->setCellValueByColumnAndRow(3,$line,$totalnominal2)
				->setCellValueByColumnAndRow(4,$line,$totaldisc2)
				->setCellValueByColumnAndRow(5,$line,$totaljumlah2);
		$line+= 2;
							
	$this->getFooterXLS($this->phpExcel);
	}
	//7
	public function RekapPenjualanPerCustomerPerBarangTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpercustomerperbarangtotal';
		parent::actionDownXLS();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
		if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		
		$sql = "select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid."
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$sql1 = "select productid,productname,description as barang,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,l.description,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)zz group by barang"; 
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Material Group')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Total')
				->setCellValueByColumnAndRow(4,$line,'Disc')
				->setCellValueByColumnAndRow(5,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['barang'])
				->setCellValueByColumnAndRow(2,$line,($row1['giqty']))
				->setCellValueByColumnAndRow(3,$line,($row1['nominal']/$per))
				->setCellValueByColumnAndRow(4,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
				->setCellValueByColumnAndRow(5,$line,($row1['netto']/$per));
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$total += $row1['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Customer '. $row['fullname'])
				->setCellValueByColumnAndRow(3,$line,($totalnominal))
				->setCellValueByColumnAndRow(4,$line,($totaldisc))
				->setCellValueByColumnAndRow(5,$line,($total));
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totaljumlah1 += $total;
			$line += 2;
		}
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total ')
				->setCellValueByColumnAndRow(3,$line,($totalnominal1))
				->setCellValueByColumnAndRow(4,$line,($totaldisc1))
				->setCellValueByColumnAndRow(5,$line,($totaljumlah1));
		$this->getFooterXLS($this->phpExcel);
	}
	//8
	public function RekapPenjualanPerCustomerPerBarangRincianXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpercustomerperbarangrincian';
		parent::actionDownXLS();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid."
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
			$sql1 = "select distinct a.materialgroupid,a.materialgroupcode,a.description
						from materialgroup a
						join productplant b on b.materialgroupid = a.materialgroupid
						join product c on c.productid = b.productid
						join sloc d on d.slocid = b.slocid
						join plant e on e.plantid = d.plantid
						join company f on f.companyid = e.companyid
						where f.companyid = ".$companyid." and b.productid in
						(
						select zc.productid
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						where zi.recordstatus = 3 and zc.slocid = b.slocid and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.addressbookid = ".$row['addressbookid']." and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') order by description asc"; 
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
						$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Price')
				->setCellValueByColumnAndRow(4,$line,'Total')
				->setCellValueByColumnAndRow(5,$line,'Disc')
				->setCellValueByColumnAndRow(6,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Material Group')
				->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
				$totalqty = 0;$totaldisc = 0;$totalnominal=0;$totalnetto=0;$i=0;
				$sql2 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				
				foreach($dataReader2 as $row2)
				{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row2['productname'])
				->setCellValueByColumnAndRow(2,$line,($row2['giqty']))
				->setCellValueByColumnAndRow(3,$line,($row2['harga']/$per))
				->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,(($row2['nominal']/$per) - ($row2['netto']/$per)))
				->setCellValueByColumnAndRow(6,$line,($row2['netto']/$per));
				$totalqty += $row2['giqty'];
				$totalnominal += $row2['nominal']/$per;
				$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
				$totalnetto += $row2['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Material Group '. $row1['description'])
				->setCellValueByColumnAndRow(2,$line,($totalqty))
				->setCellValueByColumnAndRow(4,$line,($totalnominal))
				->setCellValueByColumnAndRow(5,$line,($totaldisc))
				->setCellValueByColumnAndRow(6,$line,($totalnetto));
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Customer '. $row['fullname'])
				->setCellValueByColumnAndRow(2,$line,($totalqty1))
				->setCellValueByColumnAndRow(4,$line,($totalnominal1))
				->setCellValueByColumnAndRow(5,$line,($totaldisc1))
				->setCellValueByColumnAndRow(6,$line,($totalnetto1));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			$line+= 2;
		}
		$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Grand Total')
				->setCellValueByColumnAndRow(2,$line,($totalqty2))
				->setCellValueByColumnAndRow(4,$line,($totalnominal2))
				->setCellValueByColumnAndRow(5,$line,($totaldisc2))
				->setCellValueByColumnAndRow(6,$line,($totalnetto2));
		$line += 1;
		$this->getFooterXLS($this->phpExcel);
	}
	//9
	public function RekapPenjualanPerSalesPerBarangTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpersalesperbarangtotal';
		parent::actionDownXLS();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
		
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$sql1 = "select productid,productname,description as barang,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,l.description,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and 
						  e.employeeid = ".$row['employeeid']." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)zz group by barang"; 
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Material Group')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Total')
				->setCellValueByColumnAndRow(4,$line,'Disc')
				->setCellValueByColumnAndRow(5,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['barang'])
				->setCellValueByColumnAndRow(2,$line,($row1['giqty']))
				->setCellValueByColumnAndRow(3,$line,($row1['nominal']/$per))
				->setCellValueByColumnAndRow(4,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
				->setCellValueByColumnAndRow(5,$line,($row1['netto']/$per));
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$total += $row1['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Sales '. $row['fullname'])
				->setCellValueByColumnAndRow(3,$line,($totalnominal))
				->setCellValueByColumnAndRow(4,$line,($totaldisc))
				->setCellValueByColumnAndRow(5,$line,($total));
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totaljumlah1 += $total;
			$line += 2;
		}
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total ')
				->setCellValueByColumnAndRow(3,$line,($totalnominal1))
				->setCellValueByColumnAndRow(4,$line,($totaldisc1))
				->setCellValueByColumnAndRow(5,$line,($totaljumlah1));
		$this->getFooterXLS($this->phpExcel);
	}
	//10
	public function RekapPenjualanPerSalesPerBarangRincianXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpersalesperbarangrincian';
		parent::actionDownXLS();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
			$sql1 = "select distinct a.materialgroupid,a.materialgroupcode,a.description
						from materialgroup a
						join productplant b on b.materialgroupid = a.materialgroupid
						join product c on c.productid = b.productid
						join sloc d on d.slocid = b.slocid
						join plant e on e.plantid = d.plantid
						join company f on f.companyid = e.companyid
						where f.companyid = ".$companyid." and b.productid in
						(
						select zc.productid
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						where zi.recordstatus = 3 and zc.slocid = b.slocid and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%'  and zd.employeeid = ".$row['employeeid']." and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') order by description asc"; 
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
						$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Price')
				->setCellValueByColumnAndRow(4,$line,'Total')
				->setCellValueByColumnAndRow(5,$line,'Disc')
				->setCellValueByColumnAndRow(6,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Material Group')
				->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
				$totalqty = 0;$totaldisc = 0;$totalnominal=0;$totalnetto=0;$i=0;
				$sql2 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.employeeid = ".$row['employeeid']." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				
				foreach($dataReader2 as $row2)
				{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row2['productname'])
				->setCellValueByColumnAndRow(2,$line,($row2['giqty']))
				->setCellValueByColumnAndRow(3,$line,($row2['harga']/$per))
				->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,(($row2['nominal']/$per) - ($row2['netto']/$per)))
				->setCellValueByColumnAndRow(6,$line,($row2['netto']/$per));
				$totalqty += $row2['giqty'];
				$totalnominal += $row2['nominal']/$per;
				$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
				$totalnetto += $row2['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Material Group '. $row1['description'])
				->setCellValueByColumnAndRow(2,$line,($totalqty))
				->setCellValueByColumnAndRow(4,$line,($totalnominal))
				->setCellValueByColumnAndRow(5,$line,($totaldisc))
				->setCellValueByColumnAndRow(6,$line,($totalnetto));
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Sales '. $row['fullname'])
				->setCellValueByColumnAndRow(2,$line,($totalqty1))
				->setCellValueByColumnAndRow(4,$line,($totalnominal1))
				->setCellValueByColumnAndRow(5,$line,($totaldisc1))
				->setCellValueByColumnAndRow(6,$line,($totalnetto1));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			$line+= 2;
		}
		$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Grand Total')
				->setCellValueByColumnAndRow(2,$line,($totalqty2))
				->setCellValueByColumnAndRow(4,$line,($totalnominal2))
				->setCellValueByColumnAndRow(5,$line,($totaldisc2))
				->setCellValueByColumnAndRow(6,$line,($totalnetto2));
		$line += 1;
		$this->getFooterXLS($this->phpExcel);
	}
	//11
	public function RekapPenjualanPerAreaPerBarangTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperareaperbarangtotal';
		parent::actionDownXLS();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
		
        if(isset($spv)&& $spv!=''){
          $spvid = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct zg.salesareaid,zg.areaname
				   from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				   join addressbook zf on zf.addressbookid = za.addressbookid
				   left join salesarea zg on zg.salesareaid = zf.salesareaid
				   join product zh on zh.productid = zc.productid
				   join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%' ".$spvid."
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                group by zg.areaname order by zg.areaname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Area')
				->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
			$sql1 = "select productid,productname,description as barang,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,l.description,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and 
						  e.fullname like '%".$employee."%' and f.salesareaid = ".$row['salesareaid']." and i.productname like '%".$product."%' 
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)zz group by barang"; 
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Material Group')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Total')
				->setCellValueByColumnAndRow(4,$line,'Disc')
				->setCellValueByColumnAndRow(5,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['barang'])
				->setCellValueByColumnAndRow(2,$line,($row1['giqty']))
				->setCellValueByColumnAndRow(3,$line,($row1['nominal']/$per))
				->setCellValueByColumnAndRow(4,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
				->setCellValueByColumnAndRow(5,$line,($row1['netto']/$per));
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$total += $row1['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Area '. $row['areaname'])
				->setCellValueByColumnAndRow(3,$line,($totalnominal))
				->setCellValueByColumnAndRow(4,$line,($totaldisc))
				->setCellValueByColumnAndRow(5,$line,($total));
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totaljumlah1 += $total;
			$line += 2;
		}
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total ')
				->setCellValueByColumnAndRow(3,$line,($totalnominal1))
				->setCellValueByColumnAndRow(4,$line,($totaldisc1))
				->setCellValueByColumnAndRow(5,$line,($totaljumlah1));
		$this->getFooterXLS($this->phpExcel);
	}
	//12
	public function RekapPenjualanPerAreaPerBarangRincianXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperareaperbarangrincian';
		parent::actionDownXLS();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
        if(isset($spv)&& $spv!=''){
          $spvid = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct zg.salesareaid,zg.areaname
				   from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				   join addressbook zf on zf.addressbookid = za.addressbookid
				   left join salesarea zg on zg.salesareaid = zf.salesareaid
				   join product zh on zh.productid = zc.productid
				   join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%' ".$spvid."
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                group by zg.areaname order by zg.areaname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Area')
				->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
			$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
			$sql1 = "select distinct a.materialgroupid,a.materialgroupcode,a.description
						from materialgroup a
						join productplant b on b.materialgroupid = a.materialgroupid
						join product c on c.productid = b.productid
						join sloc d on d.slocid = b.slocid
						join plant e on e.plantid = d.plantid
						join company f on f.companyid = e.companyid
						where f.companyid = ".$companyid." and b.productid in
						(
						select zc.productid
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						where zi.recordstatus = 3 and zc.slocid = b.slocid and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%'  and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.salesareaid = ".$row['salesareaid']." and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') order by description asc"; 
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
						$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Price')
				->setCellValueByColumnAndRow(4,$line,'Total')
				->setCellValueByColumnAndRow(5,$line,'Disc')
				->setCellValueByColumnAndRow(6,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Material Group')
				->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
				$totalqty = 0;$totaldisc = 0;$totalnominal=0;$totalnetto=0;$i=0;
				$sql2 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.salesareaid = ".$row['salesareaid']." and i.productname like '%".$product."%' 
							and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				
				foreach($dataReader2 as $row2)
				{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row2['productname'])
				->setCellValueByColumnAndRow(2,$line,($row2['giqty']))
				->setCellValueByColumnAndRow(3,$line,($row2['harga']/$per))
				->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,(($row2['nominal']/$per) - ($row2['netto']/$per)))
				->setCellValueByColumnAndRow(6,$line,($row2['netto']/$per));
				$totalqty += $row2['giqty'];
				$totalnominal += $row2['nominal']/$per;
				$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
				$totalnetto += $row2['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Material Group '. $row1['description'])
				->setCellValueByColumnAndRow(2,$line,($totalqty))
				->setCellValueByColumnAndRow(4,$line,($totalnominal))
				->setCellValueByColumnAndRow(5,$line,($totaldisc))
				->setCellValueByColumnAndRow(6,$line,($totalnetto));
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Area '. $row['areaname'])
				->setCellValueByColumnAndRow(2,$line,($totalqty1))
				->setCellValueByColumnAndRow(4,$line,($totalnominal1))
				->setCellValueByColumnAndRow(5,$line,($totaldisc1))
				->setCellValueByColumnAndRow(6,$line,($totalnetto1));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			$line+= 2;
		}
		$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Grand Total')
				->setCellValueByColumnAndRow(2,$line,($totalqty2))
				->setCellValueByColumnAndRow(4,$line,($totalnominal2))
				->setCellValueByColumnAndRow(5,$line,($totaldisc2))
				->setCellValueByColumnAndRow(6,$line,($totalnetto2));
		$line += 1;
		$this->getFooterXLS($this->phpExcel);
	}
	//13
	public function RincianReturPenjualanPerDokumenXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rincianreturpenjualanperdokumen';
		parent::actionDownXLS();
		$totalqty1=0;$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;
         if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct b.notagirid,b.notagirno,i.fullname as customer,d.gireturdate,j.paycode,h.taxid,b.headernote
						from notagirpro a
						left join notagir b on b.notagirid=a.notagirid
						left join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						left join giretur d on d.gireturid=b.gireturid
						left join product e on e.productid=a.productid
						left join gidetail f on f.gidetailid=c.gidetailid
						left join giheader g on g.giheaderid=d.giheaderid
						left join soheader h on h.soheaderid=g.soheaderid
						left join addressbook i on i.addressbookid=h.addressbookid
						left join paymentmethod j on j.paymentmethodid=h.paymentmethodid
						left join sloc k on k.slocid=a.slocid
						left join employee l on l.employeeid = h.employeeid
						where k.sloccode like '%".$sloc."%' and b.recordstatus = 3 and i.fullname like '%".$customer."%' and 
						h.companyid = ".$companyid." and e.productname like '%".$product."%' and l.fullname like '%".$employee."%' ".$spvid." and
						d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Dokumen')
				->setCellValueByColumnAndRow(1,$line,': '.$row['notagirno'])
				->setCellValueByColumnAndRow(4,$line,'Tanggal')
				->setCellValueByColumnAndRow(5,$line,': '.$row['gireturdate']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['customer'])
				->setCellValueByColumnAndRow(4,$line,'T.O.P')
				->setCellValueByColumnAndRow(5,$line,': '.$row['paycode'].' HARI');
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Harga')
				->setCellValueByColumnAndRow(4,$line,'Jumlah')
				->setCellValueByColumnAndRow(5,$line,'Keterangan');
			$line++;
			$sql1 = "select *,(nominal-netto) as disc from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and b.notagirid = ".$row['notagirid']." 
							and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)z order by notagirno,notagirproid";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$i=0;$totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['productname'])
				->setCellValueByColumnAndRow(2,$line,($row1['qty']))
				->setCellValueByColumnAndRow(3,$line,($row1['price']/$per))
				->setCellValueByColumnAndRow(4,$line,($row1['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,$row['headernote']);
				$line++;
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total')
				->setCellValueByColumnAndRow(2,$line,($totalqty));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Keterangan : '.$row1['headernote'])
				->setCellValueByColumnAndRow(4,$line,'Nominal')
				->setCellValueByColumnAndRow(5,$line,($totalnominal));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(4,$line,'Diskon')
				->setCellValueByColumnAndRow(5,$line,($totaldiskon));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(4,$line,'Netto')
				->setCellValueByColumnAndRow(5,$line,($totalnetto));
			$line++;
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$line+=1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
				->setCellValueByColumnAndRow(1,$line,($totalnominal1))
				->setCellValueByColumnAndRow(2,$line,'TOTAL DISCOUNT')
				->setCellValueByColumnAndRow(3,$line,($totaldiskon1))
				->setCellValueByColumnAndRow(4,$line,'TOTAL NETTO')
				->setCellValueByColumnAndRow(5,$line,($totalnetto1));
			$line++;
			
			
			
		
		$this->getFooterXLS($this->phpExcel);
	}
	//14
	public function RekapReturPenjualanPerDokumenXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperdokumen';
		parent::actionDownXLS();
		$nominal=0;$diskon=0;$netto=0;		
		if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid."and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		foreach($dataReader as $row)
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		$i=0;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Dokumen')
				->setCellValueByColumnAndRow(2,$line,'Tanggal')
				->setCellValueByColumnAndRow(3,$line,'Customer')
				->setCellValueByColumnAndRow(4,$line,'Nominal')
				->setCellValueByColumnAndRow(5,$line,'Diskon')
				->setCellValueByColumnAndRow(6,$line,'Netto');
		$line++;
		foreach($dataReader as $row)
		{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row['notagirno'])
					->setCellValueByColumnAndRow(2,$line,$row['gireturdate'])
					->setCellValueByColumnAndRow(3,$line,$row['fullname'])
					->setCellValueByColumnAndRow(4,$line,($row['nominal']/$per))
					->setCellValueByColumnAndRow(5,$line,(($row['nominal']/$per) - ($row['netto']/$per)))
					->setCellValueByColumnAndRow(6,$line,($row['netto']/$per));
				$line++;
				$nominal += $row['nominal']/$per;
				$diskon += ($row['nominal']/$per) - ($row['netto']/$per);
				$netto += $row['netto']/$per;
		}
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'GRAND TOTAL')
				->setCellValueByColumnAndRow(4,$line,($nominal))				
				->setCellValueByColumnAndRow(5,$line,($diskon))				
				->setCellValueByColumnAndRow(6,$line,($netto));
			$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//15
	public function RekapReturPenjualanPerCustomerXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomer';
		parent::actionDownXLS();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;$totalnominal2=0;$totaldiskon2=0;$totalnetto2=0;
         if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
				
            $dataReader=Yii::app()->db->createCommand($sql)->queryAll();
            
            
            foreach($dataReader as $row)
						$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
						foreach($dataReader as $row)	
						{
							$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'Customer')
								->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
							$line++;
							
							$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'No')
								->setCellValueByColumnAndRow(1,$line,'No. Dokumen')
								->setCellValueByColumnAndRow(2,$line,'Tanggal')
								->setCellValueByColumnAndRow(3,$line,'Nominal')
								->setCellValueByColumnAndRow(4,$line,'Diskon')
								->setCellValueByColumnAndRow(5,$line,'Netto')
								->setCellValueByColumnAndRow(6,$line,'Keterangan');
							$line++;
							$sql1 = "select *, sum(nom) as nominal, sum(nett) as netto from
												(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
												g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
												from notagirpro a
												join notagir b on b.notagirid=a.notagirid
												join gireturdetail c on c.gireturdetailid=a.gireturdetailid
												join giretur d on d.gireturid=b.gireturid
												join gidetail e on e.gidetailid=c.gidetailid
												join giheader f on f.giheaderid=d.giheaderid
												join sodetail g on g.sodetailid=e.sodetailid
												join soheader h on h.soheaderid=f.soheaderid
												join product i on i.productid = a.productid
												join sloc j on j.slocid = a.slocid
												join addressbook k on k.addressbookid = h.addressbookid
												join employee l on l.employeeid = h.employeeid
												join salesarea m on m.salesareaid = k.salesareaid
												where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
												and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
												and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
												'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
												and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
												)z group by notagirno";
				
										$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
										
										$totaldiskon= 0;$totalnominal=0;$totalnetto=0;$i=0;
				
							foreach($dataReader1 as $row1)
							{
								$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['notagirno'])
									->setCellValueByColumnAndRow(2,$line,$row1['gireturdate'])									
									->setCellValueByColumnAndRow(3,$line,($row1['nominal']/$per))
									->setCellValueByColumnAndRow(4,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,($row1['netto']/$per))
									->setCellValueByColumnAndRow(6,$line,$row1['headernote']);
								$line++;
								$totalnominal += $row1['nominal']/$per;
								$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;
								
							}
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'Total')
									->setCellValueByColumnAndRow(3,$line,($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,($totaldiskon))				
									->setCellValueByColumnAndRow(5,$line,($totalnetto));
								$line++;
								$totalnominal1 += $totalnominal;
								$totaldiskon1 += $totaldiskon;
								$totalnetto1 += $totalnetto;
								
								$line+=1;
						}
						$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'TOTAL')
									->setCellValueByColumnAndRow(1,$line,'NOMINAL')
									->setCellValueByColumnAndRow(2,$line,($totalnominal1))
									->setCellValueByColumnAndRow(3,$line,'DISKON')
									->setCellValueByColumnAndRow(4,$line,($totaldiskon1))
									->setCellValueByColumnAndRow(5,$line,'NETTO')
									->setCellValueByColumnAndRow(6,$line,($totalnetto1));
								$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//16
	public function RekapReturPenjualanPerSalesXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpersales';
		parent::actionDownXLS();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;$totalnominal2=0;$totaldiskon2=0;$totalnetto2=0;
        if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
		
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(4,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'Sales')
								->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
							$line++;
							
				$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'No')
								->setCellValueByColumnAndRow(1,$line,'Nama Customer')
								->setCellValueByColumnAndRow(2,$line,'Nominal')
								->setCellValueByColumnAndRow(3,$line,'Diskon')
								->setCellValueByColumnAndRow(4,$line,'Netto');
							$line++;
							$sql1 = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
				
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$totaldiskon = 0;$totalnominal=0;$totalnetto=0;$i=0;
				
				foreach($dataReader1 as $row1)
				{
					$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['fullname'])																	
									->setCellValueByColumnAndRow(2,$line,($row1['nominal']/$per))
									->setCellValueByColumnAndRow(3,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(4,$line,($row1['netto']/$per));
								$line++;
								$totalnominal += $row1['nominal']/$per;
								$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;
				}	
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'Total Sales')
									->setCellValueByColumnAndRow(2,$line,($totalnominal))				
									->setCellValueByColumnAndRow(3,$line,($totaldiskon))				
									->setCellValueByColumnAndRow(4,$line,($totalnetto));
								$line++;
								$totalnominal1 += $totalnominal;
								$totaldiskon1 += $totaldiskon;
								$totalnetto1 += $totalnetto;
								$line+=1;
								
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL')
									->setCellValueByColumnAndRow(2,$line,($totalnominal1))									
									->setCellValueByColumnAndRow(3,$line,($totaldiskon1))									
									->setCellValueByColumnAndRow(4,$line,($totalnetto1));
								$line++;
			
		$this->getFooterXLS($this->phpExcel);
	}
	//17
	public function RekapReturPenjualanPerBarangXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperbarang';
		parent::actionDownXLS();
		$totalnominal1 = 0;
					$totaldiskon1 = 0;
					$totalnetto1 = 0;
            if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct o.materialgroupid,o.materialgroupcode,o.description
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				join productplant n on n.productid=a.productid and n.slocid=a.slocid
				join materialgroup o on o.materialgroupid=n.materialgroupid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%' and o.description like '%".$materialgroup."%'	and i.productname like '%".$product."%'
				and d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
			
            $dataReader=Yii::app()->db->createCommand($sql)->queryAll();
            
            
            foreach($dataReader as $row)
						$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
						foreach($dataReader as $row)
						{
							$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'Divisi')
								->setCellValueByColumnAndRow(1,$line,': '.$row['description']);
							$line++;
							
							$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'No')
								->setCellValueByColumnAndRow(1,$line,'Nama Barang')
								->setCellValueByColumnAndRow(2,$line,'Qty')
								->setCellValueByColumnAndRow(3,$line,'Price')
								->setCellValueByColumnAndRow(4,$line,'Total')
								->setCellValueByColumnAndRow(5,$line,'Disc')
								->setCellValueByColumnAndRow(6,$line,'Netto');
							$line++;
							$sql1 = "select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and n.materialgroupid = ".$row['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by productname";
                $dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
                
                $totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;$i=0;
								
							foreach($dataReader1 as $row1)
							{
								$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['productname'])
									->setCellValueByColumnAndRow(2,$line,($row1['qty']))							
									->setCellValueByColumnAndRow(3,$line,($row1['price']/$per))
									->setCellValueByColumnAndRow(4,$line,($row1['nominal']/$per))
									->setCellValueByColumnAndRow(5,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(6,$line,($row1['netto']/$per));
								$line++;
								$totalqty += $row1['qty'];
                $totalnominal += $row1['nominal']/$per;
								$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
                $totalnetto += $row1['netto']/$per;
								
							}	
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'Total : '.$row['description'])
									->setCellValueByColumnAndRow(2,$line,($totalqty))
									->setCellValueByColumnAndRow(4,$line,($totalnominal))				
									->setCellValueByColumnAndRow(5,$line,($totaldiskon))				
									->setCellValueByColumnAndRow(6,$line,($totalnetto));
								$line++;
								$totalnominal1 += $totalnominal;
								$totaldiskon1 += $totaldiskon;
								$totalnetto1 += $totalnetto;
								$line+=1;
						}
						$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')								
									->setCellValueByColumnAndRow(4,$line,($totalnominal1))				
									->setCellValueByColumnAndRow(5,$line,($totaldiskon1))				
									->setCellValueByColumnAndRow(6,$line,($totalnetto1));
								$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//18
	public function RekapReturPenjualanPerAreaXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperarea';
		parent::actionDownXLS();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;								
		
        if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Area')
					->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
					$line++;
			$sql1 = "select distinct a.materialgroupid,a.description,f.productid
					from materialgroup a
					join productplant b on b.materialgroupid = a.materialgroupid
					join gireturdetail e on e.productid = b.productid
					join gidetail c on c.gidetailid = e.gidetailid
					join product f on f.productid = e.productid
					join giheader g on g.giheaderid = c.giheaderid
					join soheader h on h.soheaderid = g.soheaderid
					join addressbook i on i.addressbookid = h.addressbookid
					join salesarea j on j.salesareaid = i.salesareaid
					join giretur k on k.gireturid = e.gireturid
					where k.recordstatus = 3 and h.companyid = ".$companyid." and f.productname like '%".$product."%'
					and j.salesareaid = ".$row['salesareaid']."
					and k.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					group by description";
			
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Grup Material')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
					$line++;
					
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Nominal')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
					$line++;
					$sql2 = "select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
							and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid";
					
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					$totalnetto = 0;$totalnominal=0;$totaldiskon=0;$i=0;$totalqty=0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row2['productname'])
									->setCellValueByColumnAndRow(2,$line,($row2['qty']))							
									->setCellValueByColumnAndRow(3,$line,($row2['nominal']/$per))									
									->setCellValueByColumnAndRow(4,$line,(($row2['nominal']/$per) - ($row2['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,($row2['netto']/$per));
								$line++;
								$totalqty += $row2['qty'];
								$totalnominal += $row2['nominal']/$per;
								$totaldiskon += ($row2['nominal']/$per) - ($row2['netto']/$per);
								$totalnetto += $row2['netto']/$per;
								
					}
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'Total '.$row1['description'])
									->setCellValueByColumnAndRow(2,$line,($totalqty))
									->setCellValueByColumnAndRow(3,$line,($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,($totaldiskon))				
									->setCellValueByColumnAndRow(5,$line,($totalnetto));
								$line++;
								$totalnominal1 += $totalnominal;
								$totaldiskon1 += $totaldiskon;
								$totalnetto1 += $totalnetto;
								
								$line+=1;
				}
				
		}
		$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL')								
									->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,($totaldiskon1))				
									->setCellValueByColumnAndRow(5,$line,($totalnetto1));
								$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//19
	public function RekapReturPenjualanPerCustomerPerBarangTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangtotal';
		parent::actionDownXLS();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
        if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
					$line++;
					
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Material Group')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Total')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
					$line++;
					$sql1 = "select *,sum(nom) as nominal,sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,
							k.fullname,d.gireturdate,n.materialgroupid,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by materialgroupid order by barang";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;								
								
				foreach($dataReader1 as $row1)
				{
					$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['barang'])
									->setCellValueByColumnAndRow(2,$line,($row1['qty']))							
									->setCellValueByColumnAndRow(3,$line,($row1['nominal']/$per))									
									->setCellValueByColumnAndRow(4,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,($row1['netto']/$per));
								$line++;
								$totalqty += $row1['qty'];
								$totalnominal += $row1['nominal']/$per;
								$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL CUSTOMER '.$row1['fullname'])
									->setCellValueByColumnAndRow(2,$line,($totalqty))
									->setCellValueByColumnAndRow(3,$line,($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,($totaldisc))				
									->setCellValueByColumnAndRow(5,$line,($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
								
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')	
									->setCellValueByColumnAndRow(2,$line,($totalqty1))
									->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,($totalnetto1));
								$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//20
	public function RekapReturPenjualanPerCustomerPerBarangRincianXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangrincian';
		parent::actionDownXLS();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
        if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
					$line++;
					$totaldisc1=0;$totalqty1=0;$totalnominal1=0;$totalnetto1=0;
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Price')
						->setCellValueByColumnAndRow(4,$line,'Total')
						->setCellValueByColumnAndRow(5,$line,'Disc')
						->setCellValueByColumnAndRow(6,$line,'Netto');
					$line++;
					$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
							and m.areaname like '%".$salesarea."%' and k.addressbookid = ".$row['addressbookid']."
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
					$line++;
					
					$sql2 = "select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']."
							and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by productname";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row2['productname'])
									->setCellValueByColumnAndRow(2,$line,($row2['qty']))
									->setCellValueByColumnAndRow(3,$line,($row2['harga']/$per))
									->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per))									
									->setCellValueByColumnAndRow(5,$line,(($row2['nominal']/$per) - ($row2['netto']/$per)))
									->setCellValueByColumnAndRow(6,$line,($row2['netto']/$per));
								$line++;
								
								$totalqty += $row2['qty'];
								$totalnominal += $row2['nominal']/$per;
								$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
								$totalnetto += $row2['netto']/$per;	
					}
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row1['description'])
									->setCellValueByColumnAndRow(2,$line,($totalqty))
									->setCellValueByColumnAndRow(4,$line,($totalnominal))				
									->setCellValueByColumnAndRow(5,$line,($totaldisc))				
									->setCellValueByColumnAndRow(6,$line,($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,($totalqty1))
									->setCellValueByColumnAndRow(4,$line,($totalnominal1))				
									->setCellValueByColumnAndRow(5,$line,($totaldisc1))				
									->setCellValueByColumnAndRow(6,$line,($totalnetto1));
								$line++;
								$totalqty2 += $totalqty1;
								$totalnominal2 += $totalnominal1;
								$totaldisc2 += $totaldisc1;
								$totalnetto2 += $totalnetto1;
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,($totalqty2))
									->setCellValueByColumnAndRow(4,$line,($totalnominal2))				
									->setCellValueByColumnAndRow(5,$line,($totaldisc2))				
									->setCellValueByColumnAndRow(6,$line,($totalnetto2));
								$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//21
	public function RekapReturPenjualanPerSalesPerBarangTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpersalesperbarangtotal';
		parent::actionDownXLS();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
        if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Sales')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
				$line++;
					
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Material Group')
						->setCellValueByColumnAndRow(2,$line,'Qty')						
						->setCellValueByColumnAndRow(3,$line,'Total')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
				$line++;
				$sql1 = "select *,sum(nom) as nominal,sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,
							k.fullname,d.gireturdate,n.materialgroupid,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by materialgroupid order by barang";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;							
								
				foreach($dataReader1 as $row1)
				{
					$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['barang'])
									->setCellValueByColumnAndRow(2,$line,($row1['qty']))									
									->setCellValueByColumnAndRow(3,$line,($row1['nominal']/$per))									
									->setCellValueByColumnAndRow(4,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,($row1['netto']/$per));
								$line++;
								$totalqty += $row1['qty'];
								$totalnominal += $row1['nominal']/$per;
								$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;	
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL SALES '.$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,($totalqty))
									->setCellValueByColumnAndRow(3,$line,($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,($totaldisc))				
									->setCellValueByColumnAndRow(5,$line,($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,($totalqty1))
									->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,($totalnetto1));
								$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//22
	public function RekapReturPenjualanPerSalesPerBarangRincianXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpersalesperbarangrincian';
		parent::actionDownXLS();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
        if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Sales')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Price')
						->setCellValueByColumnAndRow(4,$line,'Total')
						->setCellValueByColumnAndRow(5,$line,'Disc')
						->setCellValueByColumnAndRow(6,$line,'Netto');
					$line++;
					$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
							and m.areaname like '%".$salesarea."%' and l.employeeid = ".$row['employeeid']."
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;						
								
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
					$line++;
					$sql2 = "select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']."
							and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by productname";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row2['productname'])
									->setCellValueByColumnAndRow(2,$line,($row2['qty']))
									->setCellValueByColumnAndRow(3,$line,($row2['harga']/$per))
									->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per))									
									->setCellValueByColumnAndRow(5,$line,(($row2['nominal']/$per) - ($row2['netto']/$per)))
									->setCellValueByColumnAndRow(6,$line,($row2['netto']/$per));
								$line++;
								$totalqty += $row2['qty'];
								$totalnominal += $row2['nominal']/$per;
								$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
								$totalnetto += $row2['netto']/$per;
					}
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row1['description'])
									->setCellValueByColumnAndRow(2,$line,($totalqty))
									->setCellValueByColumnAndRow(4,$line,($totalnominal))				
									->setCellValueByColumnAndRow(5,$line,($totaldisc))				
									->setCellValueByColumnAndRow(6,$line,($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL SALES '.$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,($totalqty1))
									->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,($totalnetto1));
								$line++;
								$totalqty2 += $totalqty1;
								$totalnominal2 += $totalnominal1;
								$totaldisc2 += $totaldisc1;
								$totalnetto2 += $totalnetto1;
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,($totalqty2))
									->setCellValueByColumnAndRow(4,$line,($totalnominal2))				
									->setCellValueByColumnAndRow(5,$line,($totaldisc2))				
									->setCellValueByColumnAndRow(6,$line,($totalnetto2));
								$line++;
			
		$this->getFooterXLS($this->phpExcel);
	}
	//23
	public function RekapReturPenjualanPerAreaPerBarangTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperareaperbarangtotal';
		parent::actionDownXLS();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
        if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Area')
					->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Material Group')
						->setCellValueByColumnAndRow(2,$line,'Qty')						
						->setCellValueByColumnAndRow(3,$line,'Total')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
				$line++;
				$sql1 = "select *,sum(nom) as nominal,sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,
							k.fullname,d.gireturdate,n.materialgroupid,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by materialgroupid order by barang";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;
				foreach($dataReader1 as $row1)
				{
					$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['barang'])
									->setCellValueByColumnAndRow(2,$line,($row1['qty']))									
									->setCellValueByColumnAndRow(3,$line,($row1['nominal']/$per))									
									->setCellValueByColumnAndRow(4,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,($row1['netto']/$per));
								$line++;
								$totalqty += $row1['qty'];
								$totalnominal += $row1['nominal']/$per;
								$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;	
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL AREA '.$row['areaname'])
									->setCellValueByColumnAndRow(2,$line,($totalqty))
									->setCellValueByColumnAndRow(3,$line,($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,($totaldisc))				
									->setCellValueByColumnAndRow(5,$line,($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,($totalqty1))
									->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,($totalnetto1));
								$line++;
		
		
		$this->getFooterXLS($this->phpExcel);
	}
	//24
	public function RekapReturPenjualanPerAreaPerBarangRincianXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperareaperbarangrincian';
		parent::actionDownXLS();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
        if(isset($spv)&& $spv!=''){
          $spvid = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Area')
					->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Price')
						->setCellValueByColumnAndRow(4,$line,'Total')
						->setCellValueByColumnAndRow(5,$line,'Disc')
						->setCellValueByColumnAndRow(6,$line,'Netto');
				$line++;
				$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
							and m.areaname like '%".$salesarea."%' and m.salesareaid = ".$row['salesareaid']."
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;	
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
					$line++;
					$sql2 = "select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']."
							and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by productname";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row2['productname'])
									->setCellValueByColumnAndRow(2,$line,($row2['qty']))
									->setCellValueByColumnAndRow(3,$line,($row2['harga']/$per))
									->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per))									
									->setCellValueByColumnAndRow(5,$line,(($row2['nominal']/$per) - ($row2['netto']/$per)))
									->setCellValueByColumnAndRow(6,$line,($row2['netto']/$per));
								$line++;
								$totalqty += $row2['qty'];
								$totalnominal += $row2['nominal']/$per;
								$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
								$totalnetto += $row2['netto']/$per;
					}
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row1['description'])
									->setCellValueByColumnAndRow(2,$line,($totalqty))
									->setCellValueByColumnAndRow(4,$line,($totalnominal))				
									->setCellValueByColumnAndRow(5,$line,($totaldisc))				
									->setCellValueByColumnAndRow(6,$line,($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL AREA '.$row['areaname'])
									->setCellValueByColumnAndRow(2,$line,($totalqty1))
									->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,($totalnetto1));
								$line++;
								$totalqty2 += $totalqty1;
								$totalnominal2 += $totalnominal1;
								$totaldisc2 += $totaldisc1;
								$totalnetto2 += $totalnetto1;
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,($totalqty2))
									->setCellValueByColumnAndRow(4,$line,($totalnominal2))				
									->setCellValueByColumnAndRow(5,$line,($totaldisc2))				
									->setCellValueByColumnAndRow(6,$line,($totalnetto2));
								$line++;	
			
		$this->getFooterXLS($this->phpExcel);		
	}
	//25
	public function RincianPenjualanReturPenjualanPerDokumenXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rincianpenjualanperdokumen';
		parent::actionDownXLS();
		if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."')";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."')";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
		}
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and c.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$sql = "select a.invoiceid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno, b.gino, a.invoicedate, d.fullname as customer,h.fullname as sales, e.paydays, c.shipto, a.headernote
				from invoice a
				join giheader b on b.giheaderid = a.giheaderid
				join soheader c on c.soheaderid = b.soheaderid
				join addressbook d on d.addressbookid = c.addressbookid
				join paymentmethod e on e.paymentmethodid = c.paymentmethodid
				join gidetail f on f.giheaderid = b.giheaderid
				join sloc g on g.slocid = f.slocid
				join employee h on h.employeeid = c.employeeid
				join product i on i.productid = f.productid
				join salesarea j on j.salesareaid = d.salesareaid
				where a.recordstatus = 3 and invoiceno not like '%-%-%' and c.companyid = ".$companyid." and g.sloccode like '%".$sloc."%'
				and d.fullname like '%".$customer."%' and h.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and i.productname like '%".$product."%'
				and j.areaname like '%".$salesarea."%' and b.gino is not null
				and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by invoiceno order by invoicedate
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		$totalqty1=0;$total1=0;$totaldisc1=0;$totalnetto1=0;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No. Bukti')
				->setCellValueByColumnAndRow(1,$line,': '.$row['invoiceno'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,$row['invoicedate']);
				
			$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sales'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'Kepada Yth,');
				
			$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No. SJ')
				->setCellValueByColumnAndRow(1,$line,': '.$row['gino'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,$row['customer']);
				
			$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'T.O.P')
				->setCellValueByColumnAndRow(1,$line,': '.$row['paydays'].' HARI')
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,$row['shipto']);				
			
			$line++;						
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Unit')
				->setCellValueByColumnAndRow(4,$line,'Price')
				->setCellValueByColumnAndRow(5,$line,'Total');
			$line++;
			$sql1 = "select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,i.productname,k.uomcode,ss.qty,
									(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
									(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nominal,
									(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
									from gidetail zzb 
									join sodetail zza on zza.sodetailid = zzb.sodetailid
									where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
									from invoice a 
									join giheader b on b.giheaderid = a.giheaderid
									join soheader c on c.soheaderid = b.soheaderid
									join addressbook d on d.addressbookid = c.addressbookid
									join employee e on e.employeeid = c.employeeid
									join salesarea f on f.salesareaid = d.salesareaid
									join sodetail g on g.soheaderid = b.soheaderid
									join gidetail ss on ss.giheaderid = b.giheaderid
									join sloc h on h.slocid = ss.slocid
									join product i on i.productid = ss.productid
									join productplant j on j.productid = i.productid
									join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
									where a.recordstatus = 3 and c.companyid = ".$companyid." 
									and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' 
									and e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' 
									and i.productname like '%".$product."%' and a.invoiceid = ".$row['invoiceid']." 
									and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
									and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty=0;$i=0;$total=0;$diskon=0;$netto=0;
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i+=1)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,($row1['qty']))
					->setCellValueByColumnAndRow(3,$line,$row1['uomcode'])
					->setCellValueByColumnAndRow(4,$line,($row1['price']/$per))
					->setCellValueByColumnAndRow(5,$line,($row1['nominal']/$per));
				$line++;						
				$totalqty += $row1['qty'];
				$total += $row1['nominal']/$per;							
				$netto += $row1['nett']/$per;
				$diskon += ($row1['nominal']/$per) - ($row1['nett']/$per);
				$bilangan = explode(".",$netto);
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'Total')
				->setCellValueByColumnAndRow(2,$line,($totalqty))
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'Nominal')
				->setCellValueByColumnAndRow(5,$line,($total));
			$line+= 1;
						
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'Diskon')
				->setCellValueByColumnAndRow(5,$line,($diskon));
			
			$line++;	
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'Terbilang : '.eja($bilangan[0]))
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'Netto')
				->setCellValueByColumnAndRow(5,$line,($netto));		
				
			$line++;	
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'Note : '.$row['headernote']);
				
			$line+= 2;
			$total1 += $total;
			$totaldisc1 += $diskon;
			$totalnetto1 += $netto;
			$totalqty1 += $totalqty;
		}
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)					
			->setCellValueByColumnAndRow(0,$line,'TOTAL PENJUALAN')				
			->setCellValueByColumnAndRow(2,$line,'QTY : '.($totalqty1))			
			->setCellValueByColumnAndRow(3,$line,'NOMINAL : '.($total1))
			->setCellValueByColumnAndRow(4,$line,'DISKON : '.($totaldisc1))
			->setCellValueByColumnAndRow(5,$line,'NETTO : '.($totalnetto1));
			
			
			
			
			
		$line++;			
		$totalnom1=0;$totaldisk1=0;$totalnett1=0;$totqty1=0;
		$sql = "select distinct b.notagirid,b.notagirno,i.fullname as customer,d.gireturdate,j.paycode,h.taxid,b.headernote
					from notagirpro a
					left join notagir b on b.notagirid=a.notagirid
					left join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					left join giretur d on d.gireturid=b.gireturid
					left join product e on e.productid=a.productid
					left join gidetail f on f.gidetailid=c.gidetailid
					left join giheader g on g.giheaderid=d.giheaderid
					left join soheader h on h.soheaderid=g.soheaderid
					left join addressbook i on i.addressbookid=h.addressbookid
					left join paymentmethod j on j.paymentmethodid=h.paymentmethodid
					left join sloc k on k.slocid=a.slocid
					left join employee l on l.employeeid = h.employeeid
					where k.sloccode like '%".$sloc."%' and b.recordstatus = 3 and i.fullname like '%".$customer."%' and 
					h.companyid = ".$companyid." and e.productname like '%".$product."%' and l.fullname like '%".$employee."%' and
					d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
					order by notagirno
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		$line++;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
	
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Dokumen')
				->setCellValueByColumnAndRow(1,$line,': '.$row['notagirno'])
				->setCellValueByColumnAndRow(4,$line,'Tanggal')
				->setCellValueByColumnAndRow(5,$line,': '.$row['gireturdate']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['customer'])
				->setCellValueByColumnAndRow(4,$line,'T.O.P')
				->setCellValueByColumnAndRow(5,$line,': '.$row['paycode'].' HARI');
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Harga')
				->setCellValueByColumnAndRow(4,$line,'Jumlah')
				->setCellValueByColumnAndRow(5,$line,'Keterangan');
			$line++;
			
			$sql1 = "select *,(nominal-netto) as disc from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and b.notagirid = ".$row['notagirid']." 
							and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)z order by notagirno,notagirproid
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$i=0;$totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['productname'])
				->setCellValueByColumnAndRow(2,$line,($row1['qty']))
				->setCellValueByColumnAndRow(3,$line,($row1['price']/$per))
				->setCellValueByColumnAndRow(4,$line,($row1['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,$row['headernote']);
			$line++;
			$totalqty += $row1['qty'];
			$totalnominal += $row1['nominal']/$per;
			$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
			$totalnetto += $row1['netto']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total')
				->setCellValueByColumnAndRow(2,$line,($totalqty));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Keterangan : '.$row1['headernote'])
				->setCellValueByColumnAndRow(4,$line,'Nominal')
				->setCellValueByColumnAndRow(5,$line,($totalnominal));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(4,$line,'Diskon')
				->setCellValueByColumnAndRow(5,$line,($totaldiskon));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(4,$line,'Netto')
				->setCellValueByColumnAndRow(5,$line,($totalnetto));
			$line++;
			$totqty1 += $totalqty;
			$totalnom1 += $totalnominal;
			$totaldisk1 += $totaldiskon;
			$totalnett1 += $totalnetto;
			$line+=1;
		}
		$this->phpExcel->setActiveSheetIndex(0)					
			->setCellValueByColumnAndRow(0,$line,'TOTAL RETUR PENJUALAN')				
			->setCellValueByColumnAndRow(2,$line,'QTY : '.($totqty1))			
			->setCellValueByColumnAndRow(3,$line,'NOMINAL : '.($totalnom1))
			->setCellValueByColumnAndRow(4,$line,'DISKON : '.($totaldisk1))
			->setCellValueByColumnAndRow(5,$line,'NETTO : '.($totalnett1));				
		$line++;
		
		$line+=1;			
		$this->phpExcel->setActiveSheetIndex(0)					
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')				
			->setCellValueByColumnAndRow(2,$line,'QTY : '.($totalqty1 - $totqty1))			
			->setCellValueByColumnAndRow(3,$line,'NOMINAL : '.($total1 - $totalnom1))
			->setCellValueByColumnAndRow(4,$line,'DISKON : '.($totaldisc1 - $totaldisk1))
			->setCellValueByColumnAndRow(5,$line,'NETTO : '.($totalnetto1 - $totalnett1));
		
		$this->getFooterXLS($this->phpExcel);
	}
	//26
	public function RekapPenjualanReturPenjualanPerDokumenXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturperdokumen';
		parent::actionDownXLS();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and c.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$sql = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
				(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
						where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
                  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
                  e.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by invoiceno
                  )z group by invoiceno
		"; 
		
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		$i=0;$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No')
			->setCellValueByColumnAndRow(1,$line,'No. Bukti')
			->setCellValueByColumnAndRow(2,$line,'Tanggal')
			->setCellValueByColumnAndRow(3,$line,'Customer')
			->setCellValueByColumnAndRow(4,$line,'Nominal')
			->setCellValueByColumnAndRow(5,$line,'Disc')
			->setCellValueByColumnAndRow(6,$line,'Netto')
			->setCellValueByColumnAndRow(7,$line,'Keterangan');					
		$line++;
		foreach($dataReader as $row)
		{												
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i+=1)
				->setCellValueByColumnAndRow(1,$line,$row['invoiceno'])
				->setCellValueByColumnAndRow(2,$line,$row['invoicedate'])
				->setCellValueByColumnAndRow(3,$line,$row['fullname'])
				->setCellValueByColumnAndRow(4,$line,($row['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,($row['disc']/$per))
				->setCellValueByColumnAndRow(6,$line,($row['netto']/$per))
				->setCellValueByColumnAndRow(7,$line,$row['headernote']);
			$line++;				
					
			$totalnominal1 += $row['nominal']/$per;
			$totaldisc1 += $row['disc']/$per;
			$totaljumlah1 += $row['netto']/$per;	
		}
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)				
			->setCellValueByColumnAndRow(3,$line,'TOTAL PENJUALAN')				
			->setCellValueByColumnAndRow(4,$line,($totalnominal1))
			->setCellValueByColumnAndRow(5,$line,($totaldisc1))
			->setCellValueByColumnAndRow(6,$line,($totaljumlah1));

			
			
		$line++;
		$nominal=0;$diskon=0;$netto=0;		
		$sql = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)		
		$line++;
		$i=0;
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No')
			->setCellValueByColumnAndRow(1,$line,'Dokumen')
			->setCellValueByColumnAndRow(2,$line,'Tanggal')
			->setCellValueByColumnAndRow(3,$line,'Customer')
			->setCellValueByColumnAndRow(4,$line,'Nominal')
			->setCellValueByColumnAndRow(5,$line,'Diskon')
			->setCellValueByColumnAndRow(6,$line,'Netto');
		$line++;
		foreach($dataReader as $row)
		{
			$i+=1;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row['notagirno'])
				->setCellValueByColumnAndRow(2,$line,$row['gireturdate'])
				->setCellValueByColumnAndRow(3,$line,$row['fullname'])
				->setCellValueByColumnAndRow(4,$line,($row['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,(($row['nominal']/$per) - ($row['netto']/$per)))
				->setCellValueByColumnAndRow(6,$line,($row['netto']/$per));
			$line++;
			$nominal += $row['nominal']/$per;
			$diskon += ($row['nominal']/$per) - ($row['netto']/$per);
			$netto += $row['netto']/$per;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(3,$line,'TOTAL RETUR')
			->setCellValueByColumnAndRow(4,$line,($nominal))				
			->setCellValueByColumnAndRow(5,$line,($diskon))				
			->setCellValueByColumnAndRow(6,$line,($netto));
		$line++;
		
		
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)				
			->setCellValueByColumnAndRow(3,$line,'GRAND TOTAL')				
			->setCellValueByColumnAndRow(4,$line,($totalnominal1 - $nominal))
			->setCellValueByColumnAndRow(5,$line,($totaldisc1 - $diskon))
			->setCellValueByColumnAndRow(6,$line,($totaljumlah1 - $netto));
		$this->getFooterXLS($this->phpExcel);
	}
	//27
	public function RekapPenjualanReturPenjualanPerCustomerXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpercustomer';
		parent::actionDownXLS();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;$totalnominal2=0;$totaldiskon2=0;$totalnetto2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1."  
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
            
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;
			
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'No. Dokumen')
				->setCellValueByColumnAndRow(2,$line,'Tanggal')
				->setCellValueByColumnAndRow(3,$line,'Nominal')
				->setCellValueByColumnAndRow(4,$line,'Diskon')
				->setCellValueByColumnAndRow(5,$line,'Netto')
				->setCellValueByColumnAndRow(6,$line,'Keterangan');
			$line++;
			$sql1 = "select * from
					(select invoiceno as dokumen,invoicedate as tanggal,sum(nom) as nominal,(sum(nom)-sum(nett)) as diskon,sum(nett) as netto,headernote from
					(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
					(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
					(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
					(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
					from gidetail zzb 
					join sodetail zza on zza.sodetailid = zzb.sodetailid
					where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
					from invoice a 
					join giheader b on b.giheaderid = a.giheaderid
					join soheader c on c.soheaderid = b.soheaderid
					join addressbook d on d.addressbookid = c.addressbookid
					join employee e on e.employeeid = c.employeeid
					join salesarea f on f.salesareaid = d.salesareaid
					join sodetail g on g.soheaderid = b.soheaderid
					join gidetail ss on ss.giheaderid = b.giheaderid
					join sloc h on h.slocid = ss.slocid
					join product i on i.productid = ss.productid
					join productplant j on j.productid = i.productid
					join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
					where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
					c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
					e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
					and d.addressbookid = ".$row['addressbookid']." order by invoiceno)z group by invoiceno
					union
					select notagirno as dokumen,gireturdate as tanggal,sum(nom) as nominal,sum(disc) as diskon,sum(nett) as netto,headernote from
					(select distinct a.notagirproid,b.notagirno,(-1*a.qty*g.price) as nom,(-1*a.qty*g.price)-(-1*a.qty*a.price) as disc,
					(-1*a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
					and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
					and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
					order by notagirno,notagirproid
					)z group by notagirno)zz order by dokumen
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totaldiskon = 0;$totalnominal=0;$totalnetto=0;$i=0;
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i)
							->setCellValueByColumnAndRow(1,$line,$row1['dokumen'])
							->setCellValueByColumnAndRow(2,$line,$row1['tanggal'])									
							->setCellValueByColumnAndRow(3,$line,($row1['nominal']/$per))
							->setCellValueByColumnAndRow(4,$line,($row1['diskon']/$per))
							->setCellValueByColumnAndRow(5,$line,($row1['netto']/$per))
							->setCellValueByColumnAndRow(6,$line,$row1['headernote']);
				$line++;
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += $row1['diskon']/$per;
				$totalnetto += $row1['netto']/$per;
				
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL')
				->setCellValueByColumnAndRow(3,$line,($totalnominal))				
				->setCellValueByColumnAndRow(4,$line,($totaldiskon))				
				->setCellValueByColumnAndRow(5,$line,($totalnetto));
			$line++;
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$line+=1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,'TOTAL')
			->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
			->setCellValueByColumnAndRow(4,$line,($totaldiskon1))				
			->setCellValueByColumnAndRow(5,$line,($totalnetto1));
		$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//28
	public function RekapPenjualanReturPenjualanPerSalesXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpersales';
		parent::actionDownXLS();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct employeeid,fullname from
			(select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(4,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
						
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Customer')
				->setCellValueByColumnAndRow(2,$line,'Nominal')
				->setCellValueByColumnAndRow(3,$line,'Disc')
				->setCellValueByColumnAndRow(4,$line,'Netto');
			$line++;
			$sql1 = "select fullname,sum(nominal) as nominal,sum(disc) as disc,sum(netto) as netto from
							(select fullname,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							and e.employeeid = ".$row['employeeid'].")z group by fullname
							union
							select fullname, -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							order by notagirno,notagirproid
							)z group by fullname) zz group by fullname order by fullname
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['fullname'])															
					->setCellValueByColumnAndRow(2,$line,($row1['nominal']/$per))
					->setCellValueByColumnAndRow(3,$line,($row1['disc']/$per))
					->setCellValueByColumnAndRow(4,$line,($row1['netto']/$per));
				$line++;
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += $row1['disc']/$per;
				$total += $row1['netto']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL SALES')
				->setCellValueByColumnAndRow(2,$line,($totalnominal))				
				->setCellValueByColumnAndRow(3,$line,($totaldisc))				
				->setCellValueByColumnAndRow(4,$line,($total));
			$line++;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totaljumlah1 += $total;
			$line += 1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,'TOTAL')
			->setCellValueByColumnAndRow(2,$line,($totalnominal1))				
			->setCellValueByColumnAndRow(3,$line,($totaldisc1))				
			->setCellValueByColumnAndRow(4,$line,($totaljumlah1));
		$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//29
	public function RekapPenjualanReturPenjualanPerBarangXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturperbarang';
		parent::actionDownXLS();
		$totalqty1 = 0;$totalnominal1 = 0;$totaldiskon1 = 0;$totalnetto1 = 0;	
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct materialgroupid,materialgroupcode,description from 
						(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and ze.productname like '%".$product."%' and zg.areaname like '%".$salesarea."%' and zk.description like '%".$materialgroup."%' and zh.sloccode like '%".$sloc."%'
						and zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
						union
						select distinct o.materialgroupid,o.materialgroupcode,o.description
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						join materialgroup o on o.materialgroupid=n.materialgroupid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%' and o.description like '%".$materialgroup."%' and i.productname like '%".$product."%'
						and d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
    
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
					
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Divisi')
				->setCellValueByColumnAndRow(1,$line,': '.$row['description']);
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Price')
				->setCellValueByColumnAndRow(4,$line,'Total')
				->setCellValueByColumnAndRow(5,$line,'Disc')
				->setCellValueByColumnAndRow(6,$line,'Netto');					
			$line++;
			$sql1 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
							(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and j.materialgroupid = ".$row['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							)z group by productname
							union
							select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and n.materialgroupid = ".$row['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							)z group by productname)zz 
							group by productname order by productname
			";
      $dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
            
			$totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;$i=0;
					
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i+=1)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,($row1['qty']))
					->setCellValueByColumnAndRow(3,$line,($row1['harga']))
					->setCellValueByColumnAndRow(4,$line,($row1['nominal']/$per))
					->setCellValueByColumnAndRow(5,$line,($row1['nominal']/$per - $row1['netto']/$per))
					->setCellValueByColumnAndRow(6,$line,($row1['netto']/$per));
				$line++;
				
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL : '.$row['description'])
				->setCellValueByColumnAndRow(2,$line,($totalqty))	
				->setCellValueByColumnAndRow(4,$line,($totalnominal))				
				->setCellValueByColumnAndRow(5,$line,($totaldiskon))				
				->setCellValueByColumnAndRow(6,$line,($totalnetto));
			$line++;
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$line += 1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(2,$line,($totalqty1))	
			->setCellValueByColumnAndRow(4,$line,($totalnominal1))				
			->setCellValueByColumnAndRow(5,$line,($totaldiskon1))				
			->setCellValueByColumnAndRow(6,$line,($totalnetto1));
		$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//30
	public function RekapPenjualanReturPenjualanPerAreaXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturperarea';
		parent::actionDownXLS();
		$totalqty2=0;$totalnominal2=0;$totaldiskon2=0;$totalnetto2=0;	
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' ".$spvid1."  ".$isdisplay1." and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
							
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Area')
				->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
			$line++;
			$sql1 = "select materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'	".$spv1."	".$isdisplay1."
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))." ".$spvid2." ".$isdisplay2."
							')z order by description
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
			$totalqty1=0;$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;				
					
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Group Material')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
				$line++;
					
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Barang')
					->setCellValueByColumnAndRow(2,$line,'Qty')					
					->setCellValueByColumnAndRow(3,$line,'Nominal')
					->setCellValueByColumnAndRow(4,$line,'Disc')
					->setCellValueByColumnAndRow(5,$line,'Netto');					
				$line++;
				$sql2 = "select productname,sum(qty) as qty,sum(harga)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
								)z group by productname
								union
								select productname,-1*sum(qty),-1*sum(price)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,a.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
								)z group by productname)zz 
								group by productname order by productname
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
				$totalnetto = 0;$totalnominal=0;$totaldiskon=0;$i=0;$totalqty=0;
					
				foreach($dataReader2 as $row2)
				{
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$i+=1)
						->setCellValueByColumnAndRow(1,$line,$row2['productname'])
						->setCellValueByColumnAndRow(2,$line,($row2['qty']))							
						->setCellValueByColumnAndRow(3,$line,($row2['nominal']/$per))
						->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per - $row2['netto']/$per))
						->setCellValueByColumnAndRow(5,$line,($row2['netto']/$per));
					$line++;
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldiskon += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;
				}
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,'Total '.$row1['description'])
					->setCellValueByColumnAndRow(2,$line,($totalqty))	
					->setCellValueByColumnAndRow(3,$line,($totalnominal))				
					->setCellValueByColumnAndRow(4,$line,($totaldiskon))				
					->setCellValueByColumnAndRow(5,$line,($totalnetto));
				$line++;
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldiskon1 += $totaldiskon;
				$totalnetto1 += $totalnetto;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['areaname'])
				->setCellValueByColumnAndRow(2,$line,($totalqty1))	
				->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
				->setCellValueByColumnAndRow(4,$line,($totaldiskon1))				
				->setCellValueByColumnAndRow(5,$line,($totalnetto1));
			$line++;
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldiskon2 += $totaldiskon1;
			$totalnetto2 += $totalnetto1;
			
			$line += 1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(2,$line,($totalqty2))	
			->setCellValueByColumnAndRow(3,$line,($totalnominal2))				
			->setCellValueByColumnAndRow(4,$line,($totaldiskon2))				
			->setCellValueByColumnAndRow(5,$line,($totalnetto2));
		$line++;
						
		$this->getFooterXLS($this->phpExcel);
	}
	//31
	public function RekapPenjualanReturPenjualanPerCustomerPerBarangTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpercustomerperbarangtotal';
		parent::actionDownXLS();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Material Group')
					->setCellValueByColumnAndRow(2,$line,'Qty')
					->setCellValueByColumnAndRow(3,$line,'Total')
					->setCellValueByColumnAndRow(4,$line,'Disc')
					->setCellValueByColumnAndRow(5,$line,'Netto');
			$line++;
			
			$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from
						(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,ss.qty,l.description as barang,
						(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
						(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						 from gidetail zzb 
						 join sodetail zza on zza.sodetailid = zzb.sodetailid
						 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
						from invoice a 
						join giheader b on b.giheaderid = a.giheaderid
						join soheader c on c.soheaderid = b.soheaderid
						join addressbook d on d.addressbookid = c.addressbookid
						join employee e on e.employeeid = c.employeeid
						join salesarea f on f.salesareaid = d.salesareaid
						join sodetail g on g.soheaderid = b.soheaderid
						join gidetail ss on ss.giheaderid = b.giheaderid
						join sloc h on h.slocid = ss.slocid
						join product i on i.productid = ss.productid
						join productplant j on j.productid = i.productid and j.slocid=g.slocid
						join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
						join materialgroup l on l.materialgroupid = j.materialgroupid
						where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
						e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
						)zz group by barang
						union
						select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
						(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						join materialgroup o on o.materialgroupid=n.materialgroupid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
						'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
						) z group by barang) zz group by barang order by barang
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;							
							
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['barang'])
					->setCellValueByColumnAndRow(2,$line,($row1['qty']))									
					->setCellValueByColumnAndRow(3,$line,($row1['nominal']/$per))									
					->setCellValueByColumnAndRow(4,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
					->setCellValueByColumnAndRow(5,$line,($row1['netto']/$per));
				$line++;
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;	
							
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL CUSTOMER '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,($totalqty))
				->setCellValueByColumnAndRow(3,$line,($totalnominal))				
				->setCellValueByColumnAndRow(4,$line,($totaldisc))				
				->setCellValueByColumnAndRow(5,$line,($totalnetto));
			$line++;
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;					
			
			$line+=1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(2,$line,($totalqty1))
			->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
			->setCellValueByColumnAndRow(4,$line,($totaldisc1))				
			->setCellValueByColumnAndRow(5,$line,($totalnetto1));
		$line++;
								
		$this->getFooterXLS($this->phpExcel);
	}
	//32
	public function RekapPenjualanReturPenjualanPerCustomerPerBarangRincianXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpercustomerperbarangrincian';
		parent::actionDownXLS();
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totalnetto2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid4 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
			$spvid4 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay4 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
			$isdisplay4 = "";
		}
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$line++;
			$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'	".$spvid3."	".$isdisplay3."					
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							)z order by description
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
			$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;							
							
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Barang')
					->setCellValueByColumnAndRow(2,$line,'Qty')
					->setCellValueByColumnAndRow(3,$line,'Price')
					->setCellValueByColumnAndRow(4,$line,'Total')
					->setCellValueByColumnAndRow(5,$line,'Disc')
					->setCellValueByColumnAndRow(6,$line,'Netto');
				$line++;
					
				$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
							(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and j.materialgroupid = ".$row1['materialgroupid']." and d.addressbookid = ".$row['addressbookid']." 
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid4." ".$isdisplay4."
							)z group by productname
							union
							select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
							and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							)z group by productname)zz group by productname order by productname
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;						
							
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$i)
						->setCellValueByColumnAndRow(1,$line,$row2['productname'])
						->setCellValueByColumnAndRow(2,$line,($row2['qty']))
						->setCellValueByColumnAndRow(3,$line,($row2['harga']/$per))
						->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per))									
						->setCellValueByColumnAndRow(5,$line,(($row2['nominal']/$per) - ($row2['netto']/$per)))
						->setCellValueByColumnAndRow(6,$line,($row2['netto']/$per));
					$line++;
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;
				}
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,'Total '.$row1['description'])
					->setCellValueByColumnAndRow(2,$line,($totalqty))
					->setCellValueByColumnAndRow(4,$line,($totalnominal))				
					->setCellValueByColumnAndRow(5,$line,($totaldisc))				
					->setCellValueByColumnAndRow(6,$line,($totalnetto));
				$line++;
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totalnetto1 += $totalnetto;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL CUSTOMER '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,($totalqty1))
				->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
				->setCellValueByColumnAndRow(4,$line,($totaldisc1))				
				->setCellValueByColumnAndRow(5,$line,($totalnetto1));
			$line++;
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			$line+=1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(2,$line,($totalqty2))
			->setCellValueByColumnAndRow(4,$line,($totalnominal2))				
			->setCellValueByColumnAndRow(5,$line,($totaldisc2))				
			->setCellValueByColumnAndRow(6,$line,($totalnetto2));
		$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//33
	public function RekapPenjualanReturPenjualanPerSalesPerBarangTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpersalesperbarangtotal';
		parent::actionDownXLS();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct employeeid,fullname from
			(select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
							
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Material Group')
				->setCellValueByColumnAndRow(2,$line,'Qty')						
				->setCellValueByColumnAndRow(3,$line,'Total')
				->setCellValueByColumnAndRow(4,$line,'Disc')
				->setCellValueByColumnAndRow(5,$line,'Netto');
			$line++;
			$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from
							(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and e.employeeid = ".$row['employeeid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							)zz group by barang
							union
							select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							) z group by barang) zz group by barang order by barang
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;					
					
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['barang'])
					->setCellValueByColumnAndRow(2,$line,($row1['qty']))									
					->setCellValueByColumnAndRow(3,$line,($row1['nominal']/$per))									
					->setCellValueByColumnAndRow(4,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
					->setCellValueByColumnAndRow(5,$line,($row1['netto']/$per));
				$line++;
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL SALES  '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,($totalqty))
				->setCellValueByColumnAndRow(3,$line,($totalnominal))				
				->setCellValueByColumnAndRow(4,$line,($totaldisc))				
				->setCellValueByColumnAndRow(5,$line,($totalnetto));
			$line++;
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			$line += 1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(2,$line,($totalqty1))
			->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
			->setCellValueByColumnAndRow(4,$line,($totaldisc1))				
			->setCellValueByColumnAndRow(5,$line,($totalnetto1));
		$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//34
	public function RekapPenjualanReturPenjualanPerSalesPerBarangRincianXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpersalesperbarangrincian';
		parent::actionDownXLS();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid4 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
			$spvid4 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay4 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
			$isdisplay4 = "";
		}
		$sql = "select distinct employeeid,fullname from
			(select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1."
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Barang')
					->setCellValueByColumnAndRow(2,$line,'Qty')
					->setCellValueByColumnAndRow(3,$line,'Price')
					->setCellValueByColumnAndRow(4,$line,'Total')
					->setCellValueByColumnAndRow(5,$line,'Disc')
					->setCellValueByColumnAndRow(6,$line,'Netto');
			$line++;
			$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zd.employeeid = ".$row['employeeid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							)z order by description
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;						
					
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
				$line++;
				$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." and e.employeeid = ".$row['employeeid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid4." ".$isdisplay4."
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
								)z group by productname)zz group by productname order by productname
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;				
					
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$i)
						->setCellValueByColumnAndRow(1,$line,$row2['productname'])
						->setCellValueByColumnAndRow(2,$line,($row2['qty']))
						->setCellValueByColumnAndRow(3,$line,($row2['harga']/$per))
						->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per))									
						->setCellValueByColumnAndRow(5,$line,(($row2['nominal']/$per) - ($row2['netto']/$per)))
						->setCellValueByColumnAndRow(6,$line,($row2['netto']/$per));
					$line++;
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;	
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row1['description'])
					->setCellValueByColumnAndRow(2,$line,($totalqty))
					->setCellValueByColumnAndRow(4,$line,($totalnominal))				
					->setCellValueByColumnAndRow(5,$line,($totaldisc))				
					->setCellValueByColumnAndRow(6,$line,($totalnetto));
				$line++;
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totalnetto1 += $totalnetto;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL SALES '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,($totalqty1))
				->setCellValueByColumnAndRow(4,$line,($totalnominal1))				
				->setCellValueByColumnAndRow(5,$line,($totaldisc1))				
				->setCellValueByColumnAndRow(6,$line,($totalnetto1));
			$line++;
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			$line += 1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(2,$line,($totalqty2))
			->setCellValueByColumnAndRow(4,$line,($totalnominal2))				
			->setCellValueByColumnAndRow(5,$line,($totaldisc2))				
			->setCellValueByColumnAndRow(6,$line,($totalnetto2));
		$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//35
	public function RekapPenjualanReturPenjualanPerAreaPerBarangTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturperareaperbarangtotal';
		parent::actionDownXLS();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Area')
				->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Material Group')
				->setCellValueByColumnAndRow(2,$line,'Qty')						
				->setCellValueByColumnAndRow(3,$line,'Total')
				->setCellValueByColumnAndRow(4,$line,'Disc')
				->setCellValueByColumnAndRow(5,$line,'Netto');
			$line++;
			
			$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from
							(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and f.salesareaid = ".$row['salesareaid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
							)zz group by barang
							union
							select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							) z group by barang) zz group by barang order by barang
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;									
					
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['barang'])
					->setCellValueByColumnAndRow(2,$line,($row1['qty']))									
					->setCellValueByColumnAndRow(3,$line,($row1['nominal']/$per))									
					->setCellValueByColumnAndRow(4,$line,(($row1['nominal']/$per) - ($row1['netto']/$per)))
					->setCellValueByColumnAndRow(5,$line,($row1['netto']/$per));
				$line++;
						
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;	
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL AREA '.$row['areaname'])
				->setCellValueByColumnAndRow(2,$line,($totalqty))
				->setCellValueByColumnAndRow(3,$line,($totalnominal))				
				->setCellValueByColumnAndRow(4,$line,($totaldisc))				
				->setCellValueByColumnAndRow(5,$line,($totalnetto));
			$line++;
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			
			$line += 1;		
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(2,$line,($totalqty1))
			->setCellValueByColumnAndRow(3,$line,($totalnominal1))				
			->setCellValueByColumnAndRow(4,$line,($totaldisc1))				
			->setCellValueByColumnAndRow(5,$line,($totalnetto1));
		$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//36
	public function RekapPenjualanReturPenjualanPerAreaPerBarangRincianXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturperareaperbarangrincian';
		parent::actionDownXLS();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (za.spvid = '".$spv."' or za.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and za.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Area')
				->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Price')
				->setCellValueByColumnAndRow(4,$line,'Total')
				->setCellValueByColumnAndRow(5,$line,'Disc')
				->setCellValueByColumnAndRow(6,$line,'Netto');
			$line++;
			
			$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'	".$spvid1."	".$isdisplay1."				
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
							)z order by description
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;	
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
				$line++;
				
				$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid3." ".$isdisplay3."
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$spvid2." ".$isdisplay2."
								)z group by productname)zz group by productname order by productname
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;					
							
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$i)
						->setCellValueByColumnAndRow(1,$line,$row2['productname'])
						->setCellValueByColumnAndRow(2,$line,($row2['qty']))
						->setCellValueByColumnAndRow(3,$line,($row2['harga']/$per))
						->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per))									
						->setCellValueByColumnAndRow(5,$line,(($row2['nominal']/$per) - ($row2['netto']/$per)))
						->setCellValueByColumnAndRow(6,$line,($row2['netto']/$per));
					$line++;
					$totalqty += $row2['qty'];
					$totalnominal += $row2['nominal']/$per;
					$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
					$totalnetto += $row2['netto']/$per;	
				}
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row1['description'])
					->setCellValueByColumnAndRow(2,$line,($totalqty))
					->setCellValueByColumnAndRow(4,$line,($totalnominal))				
					->setCellValueByColumnAndRow(5,$line,($totaldisc))				
					->setCellValueByColumnAndRow(6,$line,($totalnetto));
				$line++;
				$totalqty1 += $totalqty;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totalnetto1 += $totalnetto;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL AREA '.$row['areaname'])
				->setCellValueByColumnAndRow(2,$line,($totalqty1))
				->setCellValueByColumnAndRow(4,$line,($totalnominal1))				
				->setCellValueByColumnAndRow(5,$line,($totaldisc1))				
				->setCellValueByColumnAndRow(6,$line,($totalnetto1));
			$line++;
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			$line += 1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(2,$line,($totalqty2))
			->setCellValueByColumnAndRow(4,$line,($totalnominal2))				
			->setCellValueByColumnAndRow(5,$line,($totaldisc2))				
			->setCellValueByColumnAndRow(6,$line,($totalnetto2));
		$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//37
	public function RincianSalesOrderPerDokumenXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rinciansalesorderperdokumen';
		parent::actionDownXLS();
    if(isset($spv) && $spv!='')
		{
			$spvid = " and (a.spvid = '".$spv."' or a.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay = " and a.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay = "";
		}
		$sql = "select a.soheaderid,a.sodate,a.sono,b.fullname as customer,d.fullname as sales,g.slocid,a.headernote,
					c.paydays
					from soheader a
					join addressbook b on b.addressbookid = a.addressbookid
					join paymentmethod c on c.paymentmethodid = a.paymentmethodid
					join employee d on d.employeeid = a.employeeid
					join salesarea e on e.salesareaid = b.salesareaid
					join sodetail f on f.soheaderid = a.soheaderid
					join sloc g on g.slocid = f.slocid
					where a.recordstatus = 6 and b.fullname like '%".$customer."%' and a.companyid = ".$companyid." and 
					d.fullname like '%".$employee."%' ".$spvid." ".$isdisplay." and e.areaname like '%".$salesarea."%' and 
					a.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
					and f.productid in 
					(select x.productid 
					from productplant x 
					join product xx on xx.productid = x.productid 
					join sloc xa on xa.slocid = x.slocid
					where xx.productname like '%".$product."%' and 
					xa.sloccode like '%".$sloc."%') group by soheaderid
		";	
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
			
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No. SO')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sono'])								
				->setCellValueByColumnAndRow(4,$line,'Tgl. SO')
				->setCellValueByColumnAndRow(5,$line,': '.$row['sodate']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sales'])							
				->setCellValueByColumnAndRow(4,$line,'T.O.P')
				->setCellValueByColumnAndRow(5,$line,': '.$row['paydays']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['customer']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')				
				->setCellValueByColumnAndRow(3,$line,'Satuan')
				->setCellValueByColumnAndRow(4,$line,'Harga')
				->setCellValueByColumnAndRow(5,$line,'Jumlah');
			$line++;
				
			$sql1 = "select b.productname, a.qty,c.uomcode,a.price,(qty * price) + (e.taxvalue * qty * price / 100) as jumlah,
					gettotalamountdiscso(a.soheaderid) as amountafterdisc
					from sodetail a 
					inner join product b on b.productid = a.productid
					inner join unitofmeasure c on c.unitofmeasureid = a.unitofmeasureid
					left join currency d on d.currencyid = a.currencyid
					left join soheader f on f.soheaderid = a.soheaderid 
					left join tax e on e.taxid = f.taxid
					where b.productname like '%".$product."%' and a.soheaderid = '".$row['soheaderid']."'";
			
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$i=0;$totalqty=0;$total=0;$disc=0;
			
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i+=1)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,$row1['qty'])							
					->setCellValueByColumnAndRow(3,$line,$row1['uomcode'])
					->setCellValueByColumnAndRow(4,$line,$row1['price']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['jumlah']/$per);
				$line++;
				
				$totalqty += $row1['qty'];
				$total += $row1['jumlah']/$per;
				$disc = ($row1['amountafterdisc']/$per) - $total;
			}
				$this->phpExcel->setActiveSheetIndex(0)														
						->setCellValueByColumnAndRow(1,$line,'Total')
						->setCellValueByColumnAndRow(2,$line,$totalqty)						
						->setCellValueByColumnAndRow(5,$line,$total);
				$line++;
											
				$this->phpExcel->setActiveSheetIndex(0)														
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,$disc);
				$line++;	
				
				$this->phpExcel->setActiveSheetIndex(0)														
						->setCellValueByColumnAndRow(4,$line,'Netto')
						->setCellValueByColumnAndRow(5,$line,$row1['amountafterdisc']/$per);				
				$line+=2;
				
			}
		
		$this->getFooterXLS($this->phpExcel);
	}
	//38
	public function RincianSalesOrderOutstandingXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rinciansalesorderoutstanding';
		parent::actionDownXLS();
		$totalnetto=0;
    if(isset($spv) && $spv!='')
		{
			$spvid = " and (a.spvid = '".$spv."' or a.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay = " and a.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay = "";
		}
		$sql = "select a.soheaderid,a.sodate,a.sono,b.fullname as customer,d.fullname as sales,g.slocid,a.headernote,
						c.paydays
						from soheader a
						join addressbook b on b.addressbookid = a.addressbookid
						join paymentmethod c on c.paymentmethodid = a.paymentmethodid
						join employee d on d.employeeid = a.employeeid
						join salesarea e on e.salesareaid = b.salesareaid
						join sodetail f on f.soheaderid = a.soheaderid
						join sloc g on g.slocid = f.slocid
						where a.recordstatus = 6 and f.qty > f.giqty and a.companyid = ".$companyid." and 
						d.fullname like '%".$employee."%' ".$spvid." ".$isdisplay." and b.fullname like '%".$customer."%' and e.areaname like '%".$salesarea."%' and 
						a.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
						'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and f.productid in 
						(select x.productid 
						from sodetail x 
						join product xx on xx.productid = x.productid 
						join sloc xa on xa.slocid = x.slocid
						where xx.productname like '%".$product."%' and x.giqty < x.qty and xx.isstock = 1 and 
						xa.sloccode like '%".$sloc."%') group by soheaderid
		";	
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
		->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
		->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
		->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No. SO')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sono'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'')
				->setCellValueByColumnAndRow(5,$line,'')
				->setCellValueByColumnAndRow(6,$line,'')
				->setCellValueByColumnAndRow(7,$line,'Tgl. SO')
				->setCellValueByColumnAndRow(8,$line,': '.$row['sodate']);
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sales'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'')
				->setCellValueByColumnAndRow(5,$line,'')
				->setCellValueByColumnAndRow(6,$line,'')
				->setCellValueByColumnAndRow(6,$line,'T.O.P')
				->setCellValueByColumnAndRow(7,$line,': '.$row['paydays']);
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['customer'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'')
				->setCellValueByColumnAndRow(5,$line,'')
				->setCellValueByColumnAndRow(6,$line,'')
				->setCellValueByColumnAndRow(7,$line,'');
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Qty Gi')
				->setCellValueByColumnAndRow(4,$line,'Stock')
				->setCellValueByColumnAndRow(5,$line,'Stock Sumber')
				->setCellValueByColumnAndRow(6,$line,'Satuan')
				->setCellValueByColumnAndRow(7,$line,'Harga')
				->setCellValueByColumnAndRow(8,$line,'Jumlah');
			$line++;
				
			$sql1 = "select productname, giqty, qty, price, uomcode, sisa*price as jumlah, amountafterdisc, stock,stockissource from (select b.productname, a.qty, a.giqty, c.uomcode,a.price, a.qty-ifnull(a.giqty,0) as sisa, GetTotalAmountDiscPendinganSO(a.soheaderid) as amountafterdisc, (select sum(qty) from productstock x where x.productid = a.productid and x.slocid = a.slocid and x.unitofmeasureid = a.unitofmeasureid) as stock,(select sum(qty) from productstock x 
                    join productplant y on y.productid = x.productid and y.slocid = x.slocid and y.unitofissue = x.unitofmeasureid and y.issource=1
                    join sloc z on z.slocid = y.slocid 
                    where x.productid = a.productid and x.unitofmeasureid = a.unitofmeasureid and z.plantid = j.plantid) as stockissource
										from sodetail a 
										inner join sloc j on j.slocid=a.slocid
										inner join product b on b.productid = a.productid
										inner join unitofmeasure c on c.unitofmeasureid = a.unitofmeasureid
										left join currency d on d.currencyid = a.currencyid
										left join soheader f on f.soheaderid = a.soheaderid 
										left join tax e on e.taxid = f.taxid
										join product g on g.productid = a.productid
										where b.productname like '%".$product."%' and g.isstock = 1 and a.soheaderid = '".$row['soheaderid']."') z 
										where sisa > 0
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
			$total = 0;$i=0;$totalqty=0;$totalgiqty=0;$totalstock=0;$totalissource=0;
			
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i+=1)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,$row1['qty'])
					->setCellValueByColumnAndRow(3,$line,$row1['giqty'])
					->setCellValueByColumnAndRow(4,$line,$row1['stock'])
					->setCellValueByColumnAndRow(5,$line,$row1['stockissource'])
					->setCellValueByColumnAndRow(6,$line,$row1['uomcode'])
					->setCellValueByColumnAndRow(7,$line,$row1['price']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['jumlah']/$per);
				$line++;
				$totalqty += $row1['qty'];
				$totalgiqty += $row1['giqty'];
				$total += $row1['jumlah']/$per;
				$disc = ($row1['amountafterdisc']/$per) - $total;
				$totalstock += $row1['stock'];
				$totalissource += $row1['stockissource'];
			}
			$this->phpExcel->setActiveSheetIndex(0)														
				->setCellValueByColumnAndRow(1,$line,'Total')
				->setCellValueByColumnAndRow(2,$line,$totalqty)
				->setCellValueByColumnAndRow(3,$line,$totalgiqty)
				->setCellValueByColumnAndRow(4,$line,$totalstock)
				->setCellValueByColumnAndRow(5,$line,$totalissource)
				->setCellValueByColumnAndRow(8,$line,($total));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)														
				->setCellValueByColumnAndRow(7,$line,'Disc')
				->setCellValueByColumnAndRow(8,$line,($disc));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)														
				->setCellValueByColumnAndRow(7,$line,'Netto')
				->setCellValueByColumnAndRow(8,$line,($row1['amountafterdisc']/$per));
			$line++;
			$line+= 1;
			$totalnetto+=$row1['amountafterdisc']/$per;
		}
		$this->phpExcel->setActiveSheetIndex(0)														
			->setCellValueByColumnAndRow(3,$line,'Total Netto')
			->setCellValueByColumnAndRow(8,$line,($totalnetto/$per));
		
		$this->getFooterXLS($this->phpExcel);
	}
  //39
	public function RekapSuratJalanBelumDibuatkanFakturXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapsuratjalanbelumdibuatkanfaktur';
		parent::actionDownXLS();
		 if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select a.gino,a.gidate,c.fullname as customer,d.fullname as sales,a.headernote
                        from giheader a
                        join soheader b on b.soheaderid = a.soheaderid
                        join addressbook c on c.addressbookid = b.addressbookid
                        join employee d on d.employeeid = b.employeeid
                        join salesarea e on e.salesareaid = c.salesareaid
                        join gidetail f on f.giheaderid = a.giheaderid
                        join sloc g on g.slocid = f.slocid
                        join product h on h.productid = f.productid
                        where a.recordstatus = 3
												and a.giheaderid not in
                        (select t.giheaderid from invoice t)
                        and a.gino is not null
                        and b.companyid = ".$companyid." and g.sloccode like '%".$sloc."%' and c.fullname like '%".$customer."%' and
                         d.fullname like '%".$employee."%' ".$spvid." and e.areaname like '%".$salesarea."%' and h.productname like '%".$product."%' and
                         a.gidate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
			and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by gino,customer,sales order by gino";
		
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			$i=0;
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
			$line=4;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'No. Bukti')
				->setCellValueByColumnAndRow(2,$line,'Tanggal')
				->setCellValueByColumnAndRow(3,$line,'Customer')
				->setCellValueByColumnAndRow(4,$line,'Sales')
				->setCellValueByColumnAndRow(5,$line,'Keterangan');
				$line++;
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row['gino'])
							->setCellValueByColumnAndRow(2,$line,$row['gidate'])
							->setCellValueByColumnAndRow(3,$line,$row['customer'])
							->setCellValueByColumnAndRow(4,$line,$row['sales'])
							->setCellValueByColumnAndRow(5,$line,$row['headernote']);
							$line++;
			}
		
		$this->getFooterXLS($this->phpExcel);
	}
	//40
	public function RekapPenjualanPerCustomerPerBulanPerTahunXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpercustomerperbulanpertahun';
		parent::actionDownXLS();
		$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
		 if(isset($spv)&& $spv!=''){
          $spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
                    join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null order by fullname asc) zz
					where zz.jumlah <> 0"; 
		
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;
			
		foreach($dataReader as $row)
		{
			$i=$i+1;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$row['januari']/$per)
				->setCellValueByColumnAndRow(3,$line,$row['februari']/$per)
				->setCellValueByColumnAndRow(4,$line,$row['maret']/$per)
				->setCellValueByColumnAndRow(5,$line,$row['april']/$per)
				->setCellValueByColumnAndRow(6,$line,$row['mei']/$per)
				->setCellValueByColumnAndRow(7,$line,$row['juni']/$per)
				->setCellValueByColumnAndRow(8,$line,$row['juli']/$per)
				->setCellValueByColumnAndRow(9,$line,$row['agustus']/$per)
				->setCellValueByColumnAndRow(10,$line,$row['september']/$per)
				->setCellValueByColumnAndRow(11,$line,$row['oktober']/$per)
				->setCellValueByColumnAndRow(12,$line,$row['nopember']/$per)
				->setCellValueByColumnAndRow(13,$line,$row['desember']/$per)
				->setCellValueByColumnAndRow(14,$line,$row['jumlah']/$per);
			$line++;
			
			$totaljanuari += $row['januari']/$per;
			$totalfebruari += $row['februari']/$per;
			$totalmaret += $row['maret']/$per;
			$totalapril += $row['april']/$per;
			$totalmei += $row['mei']/$per;
			$totaljuni += $row['juni']/$per;
			$totaljuli += $row['juli']/$per;
			$totalagustus += $row['agustus']/$per;
			$totalseptember += $row['september']/$per;
			$totaloktober += $row['oktober']/$per;
			$totalnopember += $row['nopember']/$per;
			$totaldesember += $row['desember']/$per;
			$totaljumlah += $row['jumlah']/$per;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari)
			->setCellValueByColumnAndRow(4,$line,$totalmaret)
			->setCellValueByColumnAndRow(5,$line,$totalapril)
			->setCellValueByColumnAndRow(6,$line,$totalmei)
			->setCellValueByColumnAndRow(7,$line,$totaljuni)
			->setCellValueByColumnAndRow(8,$line,$totaljuli)
			->setCellValueByColumnAndRow(9,$line,$totalagustus)
			->setCellValueByColumnAndRow(10,$line,$totalseptember)
			->setCellValueByColumnAndRow(11,$line,$totaloktober)
			->setCellValueByColumnAndRow(12,$line,$totalnopember)
			->setCellValueByColumnAndRow(13,$line,$totaldesember)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah);
		$line+=2;
		
			
		$this->getFooterXLS($this->phpExcel);
	}
	//41
	public function RekapReturPenjualanPerCustomerPerBulanPerTahunXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbulanpertahun';
		parent::actionDownXLS();
		
      
		if(isset($spv)&& $spv!=''){
          $spvid = " and (e.spvid='".$spv."' or e.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null order by fullname asc) zz
				where zz.jumlah <> 0"; 
		
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;
			
		foreach($dataReader as $row)
		{
			$i=$i+1;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$row['januari']/$per)
				->setCellValueByColumnAndRow(3,$line,$row['februari']/$per)
				->setCellValueByColumnAndRow(4,$line,$row['maret']/$per)
				->setCellValueByColumnAndRow(5,$line,$row['april']/$per)
				->setCellValueByColumnAndRow(6,$line,$row['mei']/$per)
				->setCellValueByColumnAndRow(7,$line,$row['juni']/$per)
				->setCellValueByColumnAndRow(8,$line,$row['juli']/$per)
				->setCellValueByColumnAndRow(9,$line,$row['agustus']/$per)
				->setCellValueByColumnAndRow(10,$line,$row['september']/$per)
				->setCellValueByColumnAndRow(11,$line,$row['oktober']/$per)
				->setCellValueByColumnAndRow(12,$line,$row['nopember']/$per)
				->setCellValueByColumnAndRow(13,$line,$row['desember']/$per)
				->setCellValueByColumnAndRow(14,$line,$row['jumlah']/$per);
			$line++;
			
			$totaljanuari += $row['januari']/$per;
			$totalfebruari += $row['februari']/$per;
			$totalmaret += $row['maret']/$per;
			$totalapril += $row['april']/$per;
			$totalmei += $row['mei']/$per;
			$totaljuni += $row['juni']/$per;
			$totaljuli += $row['juli']/$per;
			$totalagustus += $row['agustus']/$per;
			$totalseptember += $row['september']/$per;
			$totaloktober += $row['oktober']/$per;
			$totalnopember += $row['nopember']/$per;
			$totaldesember += $row['desember']/$per;
			$totaljumlah += $row['jumlah']/$per;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari)
			->setCellValueByColumnAndRow(4,$line,$totalmaret)
			->setCellValueByColumnAndRow(5,$line,$totalapril)
			->setCellValueByColumnAndRow(6,$line,$totalmei)
			->setCellValueByColumnAndRow(7,$line,$totaljuni)
			->setCellValueByColumnAndRow(8,$line,$totaljuli)
			->setCellValueByColumnAndRow(9,$line,$totalagustus)
			->setCellValueByColumnAndRow(10,$line,$totalseptember)
			->setCellValueByColumnAndRow(11,$line,$totaloktober)
			->setCellValueByColumnAndRow(12,$line,$totalnopember)
			->setCellValueByColumnAndRow(13,$line,$totaldesember)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah);
		$line+=2;
		
			
		$this->getFooterXLS($this->phpExcel);
	}
	//42
	public function RekapPenjualanReturPenjualanPerCustomerPerBulanPerTahunXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpenjualanpercustomerperbulanpertahun';
		parent::actionDownXLS();
		$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
		if(isset($spv)&& $spv!='')
		{
				$spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
				$spvid1 = " and (e.spvid='".$spv."' or e.employeeid='".$spv."')";
		}
		else
		{
				$spvid = "";
				$spvid1 = "";
		}
		
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and aaa.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and e.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
    
		if(isset($product) && $product!='')
		{
				$product1 = " and (aa.giheaderid in (select a1.giheaderid from gidetail a1 join product a2 on a2.productid=a1.productid where a2.productname like '%".$product."%'))";
				$product2 = " and (d.giheaderid in (select a1.giheaderid from gidetail a1 join product a2 on a2.productid=a1.productid where a2.productname like '%".$product."%'))";
		}
		else
		{
				$product1 = "";
				$product2 = "";
		}
    
		if($salesarea!=='')
		{
				$joinsalesarea1 = " join addressbook g1 on g1.addressbookid=aaa.addressbookid join salesarea h1 on h1.salesareaid=g1.salesareaid ";
				$wheresalesarea1 = " and h1.areaname like '%".$salesarea."%' ";
				$joinsalesarea2 = " join addressbook g2 on g2.addressbookid=e.addressbookid join salesarea h2 on h2.salesareaid=g2.salesareaid ";
				$wheresalesarea2 = " and h2.areaname like '%".$salesarea."%' ";
		}
		else
		{
				$joinsalesarea1 = " ";
				$wheresalesarea1 = "  ";
				$joinsalesarea2 = " ";
				$wheresalesarea2 = " ";
		}
    
		if($sloc!=='')
		{
				$sloc1 = " and (aa.giheaderid in (select a1.giheaderid from gidetail a1 join sloc a2 on a2.slocid=a1.slocid where a2.sloccode like '%".$sloc."%'))";
				$sloc2 = " and (d.giheaderid in (select a1.giheaderid from gidetail a1 join sloc a2 on a2.slocid=a1.slocid where a2.sloccode like '%".$sloc."%'))";
		}
		else
		{
				$sloc1 = " ";
				$sloc2 = " ";
		}
		
		$sql = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				{$joinsalesarea1}
				where a.recordstatus=3 {$wheresalesarea1} and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid." ".$isdisplay1." ".$product1." ".$sloc1." and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				{$joinsalesarea2}
				where b.recordstatus=3 {$wheresalesarea2} and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay2." ".$product2." ".$sloc2." and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null and z.fullname like '%".$customer."%'
                order by fullname asc) zz
				where zz.jumlah <> 0
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;
			
		foreach($dataReader as $row)
		{
			$i=$i+1;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$row['januari']/$per)
				->setCellValueByColumnAndRow(3,$line,$row['februari']/$per)
				->setCellValueByColumnAndRow(4,$line,$row['maret']/$per)
				->setCellValueByColumnAndRow(5,$line,$row['april']/$per)
				->setCellValueByColumnAndRow(6,$line,$row['mei']/$per)
				->setCellValueByColumnAndRow(7,$line,$row['juni']/$per)
				->setCellValueByColumnAndRow(8,$line,$row['juli']/$per)
				->setCellValueByColumnAndRow(9,$line,$row['agustus']/$per)
				->setCellValueByColumnAndRow(10,$line,$row['september']/$per)
				->setCellValueByColumnAndRow(11,$line,$row['oktober']/$per)
				->setCellValueByColumnAndRow(12,$line,$row['nopember']/$per)
				->setCellValueByColumnAndRow(13,$line,$row['desember']/$per)
				->setCellValueByColumnAndRow(14,$line,$row['jumlah']/$per);
			$line++;
			
			$totaljanuari += $row['januari']/$per;
			$totalfebruari += $row['februari']/$per;
			$totalmaret += $row['maret']/$per;
			$totalapril += $row['april']/$per;
			$totalmei += $row['mei']/$per;
			$totaljuni += $row['juni']/$per;
			$totaljuli += $row['juli']/$per;
			$totalagustus += $row['agustus']/$per;
			$totalseptember += $row['september']/$per;
			$totaloktober += $row['oktober']/$per;
			$totalnopember += $row['nopember']/$per;
			$totaldesember += $row['desember']/$per;
			$totaljumlah += $row['jumlah']/$per;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari)
			->setCellValueByColumnAndRow(4,$line,$totalmaret)
			->setCellValueByColumnAndRow(5,$line,$totalapril)
			->setCellValueByColumnAndRow(6,$line,$totalmei)
			->setCellValueByColumnAndRow(7,$line,$totaljuni)
			->setCellValueByColumnAndRow(8,$line,$totaljuli)
			->setCellValueByColumnAndRow(9,$line,$totalagustus)
			->setCellValueByColumnAndRow(10,$line,$totalseptember)
			->setCellValueByColumnAndRow(11,$line,$totaloktober)
			->setCellValueByColumnAndRow(12,$line,$totalnopember)
			->setCellValueByColumnAndRow(13,$line,$totaldesember)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah);
		$line+=2;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//43
	public function RekapPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownXLS();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					join salesarea d on d.salesareaid=a.salesareaid
					where c.companyid=".$companyid." ";
					
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'JENIS CUSTOMER')
				->setCellValueByColumnAndRow(2,$line,': '.$row['jenis']);
			$line++;
			$sql1 = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."') ) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					join addressaccount za on za.addressbookid=z.addressbookid
					join salesarea zb on zb.salesareaid=z.salesareaid
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
					and za.recordstatus =1 and za.companyid=".$companyid."  and zb.areaname like '%".$salesarea."%'
					and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
					where zz.jumlah <> 0"; 
			
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No.')
				->setCellValueByColumnAndRow(1,$line,'Customer')
				->setCellValueByColumnAndRow(2,$line,'Januari')
				->setCellValueByColumnAndRow(3,$line,'Februari')
				->setCellValueByColumnAndRow(4,$line,'Maret')
				->setCellValueByColumnAndRow(5,$line,'April')
				->setCellValueByColumnAndRow(6,$line,'Mei')
				->setCellValueByColumnAndRow(7,$line,'Juni')
				->setCellValueByColumnAndRow(8,$line,'Juli')
				->setCellValueByColumnAndRow(9,$line,'Agustus')
				->setCellValueByColumnAndRow(10,$line,'September')
				->setCellValueByColumnAndRow(11,$line,'Oktober')
				->setCellValueByColumnAndRow(12,$line,'Nopember')
				->setCellValueByColumnAndRow(13,$line,'Desember')
				->setCellValueByColumnAndRow(14,$line,'Total');
				$line++;
			
			foreach($dataReader1 as $row1)
			{
				$i=$i+1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['fullname'])
					->setCellValueByColumnAndRow(2,$line,$row1['januari']/$per)
					->setCellValueByColumnAndRow(3,$line,$row1['februari']/$per)
					->setCellValueByColumnAndRow(4,$line,$row1['maret']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['april']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['mei']/$per)
					->setCellValueByColumnAndRow(7,$line,$row1['juni']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['juli']/$per)
					->setCellValueByColumnAndRow(9,$line,$row1['agustus']/$per)
					->setCellValueByColumnAndRow(10,$line,$row1['september']/$per)
					->setCellValueByColumnAndRow(11,$line,$row1['oktober']/$per)
					->setCellValueByColumnAndRow(12,$line,$row1['nopember']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['desember']/$per)
					->setCellValueByColumnAndRow(14,$line,$row1['jumlah']/$per);
				$line++;
				
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line+=2;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//44
	public function RekapReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownXLS();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
        if(isset($spv)&& $spv!=''){
          $spvid = " and e.spvid='".$spv."'";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'JENIS CUSTOMER')
				->setCellValueByColumnAndRow(2,$line,': '.$row['jenis']);
			$line++;
			$sql1 = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No.')
				->setCellValueByColumnAndRow(1,$line,'Customer')
				->setCellValueByColumnAndRow(2,$line,'Januari')
				->setCellValueByColumnAndRow(3,$line,'Februari')
				->setCellValueByColumnAndRow(4,$line,'Maret')
				->setCellValueByColumnAndRow(5,$line,'April')
				->setCellValueByColumnAndRow(6,$line,'Mei')
				->setCellValueByColumnAndRow(7,$line,'Juni')
				->setCellValueByColumnAndRow(8,$line,'Juli')
				->setCellValueByColumnAndRow(9,$line,'Agustus')
				->setCellValueByColumnAndRow(10,$line,'September')
				->setCellValueByColumnAndRow(11,$line,'Oktober')
				->setCellValueByColumnAndRow(12,$line,'Nopember')
				->setCellValueByColumnAndRow(13,$line,'Desember')
				->setCellValueByColumnAndRow(14,$line,'Total');
				$line++;
			
			foreach($dataReader1 as $row1)
			{
				$i=$i+1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['fullname'])
					->setCellValueByColumnAndRow(2,$line,$row1['januari']/$per)
					->setCellValueByColumnAndRow(3,$line,$row1['februari']/$per)
					->setCellValueByColumnAndRow(4,$line,$row1['maret']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['april']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['mei']/$per)
					->setCellValueByColumnAndRow(7,$line,$row1['juni']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['juli']/$per)
					->setCellValueByColumnAndRow(9,$line,$row1['agustus']/$per)
					->setCellValueByColumnAndRow(10,$line,$row1['september']/$per)
					->setCellValueByColumnAndRow(11,$line,$row1['oktober']/$per)
					->setCellValueByColumnAndRow(12,$line,$row1['nopember']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['desember']/$per)
					->setCellValueByColumnAndRow(14,$line,$row1['jumlah']/$per);
				$line++;
				
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line+=2;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//45
	public function RekapPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownXLS();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		if(isset($spv) && $spv!='')
		{
			$spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
			$spvid1 = " and (e.spvid='".$spv."' or e.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
			$spvid1 = "";
		}
		
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and aaa.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and e.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid."
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		if(isset($spv) && $spv!='')
		{                
			$sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
			$fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR')
				->setCellValueByColumnAndRow(1,$line,': '.$fullname);
			$line++;
		}
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'JENIS CUSTOMER')
				->setCellValueByColumnAndRow(2,$line,': '.$row['jenis']);
			$line++;
			$sql1 = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0
			"; 
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No.')
				->setCellValueByColumnAndRow(1,$line,'Customer')
				->setCellValueByColumnAndRow(2,$line,'Januari')
				->setCellValueByColumnAndRow(3,$line,'Februari')
				->setCellValueByColumnAndRow(4,$line,'Maret')
				->setCellValueByColumnAndRow(5,$line,'April')
				->setCellValueByColumnAndRow(6,$line,'Mei')
				->setCellValueByColumnAndRow(7,$line,'Juni')
				->setCellValueByColumnAndRow(8,$line,'Juli')
				->setCellValueByColumnAndRow(9,$line,'Agustus')
				->setCellValueByColumnAndRow(10,$line,'September')
				->setCellValueByColumnAndRow(11,$line,'Oktober')
				->setCellValueByColumnAndRow(12,$line,'Nopember')
				->setCellValueByColumnAndRow(13,$line,'Desember')
				->setCellValueByColumnAndRow(14,$line,'Total');
				$line++;
			
			foreach($dataReader1 as $row1)
			{
				$i=$i+1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['fullname'])
					->setCellValueByColumnAndRow(2,$line,$row1['januari']/$per)
					->setCellValueByColumnAndRow(3,$line,$row1['februari']/$per)
					->setCellValueByColumnAndRow(4,$line,$row1['maret']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['april']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['mei']/$per)
					->setCellValueByColumnAndRow(7,$line,$row1['juni']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['juli']/$per)
					->setCellValueByColumnAndRow(9,$line,$row1['agustus']/$per)
					->setCellValueByColumnAndRow(10,$line,$row1['september']/$per)
					->setCellValueByColumnAndRow(11,$line,$row1['oktober']/$per)
					->setCellValueByColumnAndRow(12,$line,$row1['nopember']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['desember']/$per)
					->setCellValueByColumnAndRow(14,$line,$row1['jumlah']/$per);
				$line++;
				
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line+=2;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//46
	public function RekapTotalPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekaptotalpenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownXLS();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;		
		
		foreach($dataReader as $row)
		{
			$sql1 = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					join addressaccount za on za.addressbookid=z.addressbookid
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
					and za.recordstatus =1 and za.companyid=".$companyid." 
					and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
					where zz.jumlah <> 0"; 
			
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			
					
			foreach($dataReader1 as $row1)
			{
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line++;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//47
	public function RekapTotalReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekaptotalreturpenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownXLS();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (e.spvid='".$spv."' or e.employeeid='".$spv."')";
        }else{
          $spvid = "";
        } 
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;		
		
		foreach($dataReader as $row)
		{
			$sql1 = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid." and e.addressbookid=z.addressbookid and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			
					
			foreach($dataReader1 as $row1)
			{
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line++;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//48
	public function RekapTotalPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekaptotalpenjualanreturpenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownXLS();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		if(isset($spv) && $spv!='')
		{
			$spvid = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
			$spvid1 = " and (e.spvid='".$spv."' or e.employeeid='".$spv."')";
		}
		else
		{
			$spvid = "";
			$spvid1 = "";
		}
		
		if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and aaa.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and e.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
		}
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;		
		
		foreach($dataReader as $row)
		{
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$sql1 = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=1 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=2 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=3 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=4 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=5 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=6 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=7 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=8 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=9 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=10 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=11 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and month(c.gireturdate)=12 and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and invoiceno not like '%-%-%' and aaa.companyid = ".$companyid." ".$spvid." ".$isdisplay1." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." ".$spvid1." ".$isdisplay2." and e.addressbookid=z.addressbookid and year(c.gireturdate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
							
			
					
			foreach($dataReader1 as $row1)
			{
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line++;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//49
	public function RekapPenjualanPerBarangPerBulanQtyXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperbarangperbulanqty';
		parent::actionDownXLS();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
    
        
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid." and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Nama Barang')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;		
		

		foreach($dataReader as $row)
		{		
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'MATERIAL GROUP')
			->setCellValueByColumnAndRow(1,$line,$row['description']);
				$line++;

			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$sql1 = "select *
							from (select distinct v.productname,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as januari,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as februari,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as maret,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as april,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as mei,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juni,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juli,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as agustus,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as september,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as oktober,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as nopember,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as desember,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							join addressbook aaaa on aaaa.addressbookid=aaa.addressbookid
							where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and aaaa.fullname like '%".$customer."%'
							and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as jumlah
							from productplant z
							join product v on v.productid = z.productid
							join sloc w on w.slocid = z.slocid
							join plant x on x.plantid = w.plantid
							where x.companyid = ".$companyid." and z.recordstatus=1 and v.productname like '%".$product."%'
							and z.materialgroupid = ".$row['materialgroupid']." ) zz
							where januari<>0 or februari <>0 or maret <>0 or april <>0 or mei <>0 or juni <>0 or juli <>0 or
							agustus <>0 or september <>0 or oktober <>0 or nopember <>0 or desember <>0 ";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();			
			
					$no=0;
			foreach($dataReader1 as $row1)
			{
				$no=$no+1;

				$totaljanuari += $row1['januari'];
				$totalfebruari += $row1['februari'];
				$totalmaret += $row1['maret'];
				$totalapril += $row1['april'];
				$totalmei += $row1['mei'];
				$totaljuni += $row1['juni'];
				$totaljuli += $row1['juli'];
				$totalagustus += $row1['agustus'];
				$totalseptember += $row1['september'];
				$totaloktober += $row1['oktober'];
				$totalnopember += $row1['nopember'];
				$totaldesember += $row1['desember'];
				$totaljumlah += $row1['jumlah'];


$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$no)
				->setCellValueByColumnAndRow(1,$line,$row1['productname'])
				->setCellValueByColumnAndRow(2,$line,$row1['januari'])
				->setCellValueByColumnAndRow(3,$line,$row1['februari'])
				->setCellValueByColumnAndRow(4,$line,$row1['maret'])
				->setCellValueByColumnAndRow(5,$line,$row1['april'])
				->setCellValueByColumnAndRow(6,$line,$row1['mei'])
				->setCellValueByColumnAndRow(7,$line,$row1['juni'])
				->setCellValueByColumnAndRow(8,$line,$row1['juli'])
				->setCellValueByColumnAndRow(9,$line,$row1['agustus'])
				->setCellValueByColumnAndRow(10,$line,$row1['september'])
				->setCellValueByColumnAndRow(11,$line,$row1['oktober'])
				->setCellValueByColumnAndRow(12,$line,$row1['nopember'])
				->setCellValueByColumnAndRow(13,$line,$row1['desember'])
				->setCellValueByColumnAndRow(14,$line,$row1['jumlah']);
			$line++;
			

			}

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Total :')
				->setCellValueByColumnAndRow(1,$line,$row['description'])
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line++;
			
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}	
	//50
	public function RekapPenjualanPerBarangPerBulanNilaiXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperbarangperbulannilai';
		parent::actionDownXLS();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		 if(isset($spv)&& $spv!=''){
          $spvid = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (d.spvid='".$spv."' or d.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid." and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Nama Barang')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;		
		

		foreach($dataReader as $row)
		{		
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'MATERIAL GROUP')
			->setCellValueByColumnAndRow(1,$line,$row['description']);
				$line++;

			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$sql1 = "select *
							from (select distinct v.productname,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=1 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as januari,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=2 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as februari,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=3 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as maret,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=4 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as april,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=5 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as mei,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=6 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as juni,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=7 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as juli,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=8 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as agustus,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=9 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as september,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=10 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as oktober,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=11 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as nopember,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." ".$spvid1." and c.recordstatus=3 and month(c.invoicedate)=12 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as desember,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a 
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = 1 and c.recordstatus=3 and year(c.invoicedate)='2016-09-30'
							and a.productid=v.productid group by a.productid),0) as jumlah					
							from productplant z
							join product v on v.productid = z.productid
							where z.recordstatus=1 and z.materialgroupid = ".$row['materialgroupid'].") zz 
							where januari<>0 or februari<>0 or maret<>0 or april<>0 or mei<>0 or juni<>0 or juli<>0 or agustus<>0 
							or september<>0 or oktober<>0 or nopember<>0 or desember<>0 ";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
					$no=0;
			foreach($dataReader1 as $row1)
			{
				$no=$no+1;

				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;


$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$no)
				->setCellValueByColumnAndRow(1,$line,$row1['productname'])
				->setCellValueByColumnAndRow(2,$line,$row1['januari']/$per)
				->setCellValueByColumnAndRow(3,$line,$row1['februari']/$per)
				->setCellValueByColumnAndRow(4,$line,$row1['maret']/$per)
				->setCellValueByColumnAndRow(5,$line,$row1['april']/$per)
				->setCellValueByColumnAndRow(6,$line,$row1['mei']/$per)
				->setCellValueByColumnAndRow(7,$line,$row1['juni']/$per)
				->setCellValueByColumnAndRow(8,$line,$row1['juli']/$per)
				->setCellValueByColumnAndRow(9,$line,$row1['agustus']/$per)
				->setCellValueByColumnAndRow(10,$line,$row1['september']/$per)
				->setCellValueByColumnAndRow(11,$line,$row1['oktober']/$per)
				->setCellValueByColumnAndRow(12,$line,$row1['nopember']/$per)
				->setCellValueByColumnAndRow(13,$line,$row1['desember']/$per)
				->setCellValueByColumnAndRow(14,$line,$row1['jumlah']/$per);
			$line++;
			

			}

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Total :')
				->setCellValueByColumnAndRow(1,$line,$row['description'])
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line++;
			
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//51
	public function RekapPenjualanPerBarangPerBulanQtydanNilaiXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperbarangperbulanqtydannilai';
		parent::actionDownXLS();
		$i=0;$totaljanuariqty1=0;$totaljanuarinil1=0;$totalfebruariqty1=0;$totalfebruarinil1=0;$totalmaretqty1=0;$totalmaretnil1=0;$totalaprilqty1=0;$totalaprilnil1=0;$totalmeiqty1=0;$totalmeinil1=0;$totaljuniqty1=0;$totaljuninil1=0;$totaljuliqty1=0;$totaljulinil1=0;$totalagustusqty1=0;$totalagustusnil1=0;$totalseptemberqty1=0;$totalseptembernil1=0;$totaloktoberqty1=0;$totaloktobernil1=0;$totalnopemberqty1=0;$totalnopembernil1=0;$totaldesemberqty1=0;$totaldesembernil1=0;$totaljumlahqty1=0;$totaljumlahnil1=0;
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (aaa.spvid='".$spv."' or aaa.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (d.spvid='".$spv."' or d.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }
      
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' ".$spvid." and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Nama Barang')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(4,$line,'Februari')
			->setCellValueByColumnAndRow(6,$line,'Maret')
			->setCellValueByColumnAndRow(8,$line,'April')
			->setCellValueByColumnAndRow(10,$line,'Mei')
			->setCellValueByColumnAndRow(12,$line,'Juni')
			->setCellValueByColumnAndRow(14,$line,'Juli')
			->setCellValueByColumnAndRow(16,$line,'Agustus')
			->setCellValueByColumnAndRow(18,$line,'September')
			->setCellValueByColumnAndRow(20,$line,'Oktober')
			->setCellValueByColumnAndRow(22,$line,'November')
			->setCellValueByColumnAndRow(24,$line,'Desember')
			->setCellValueByColumnAndRow(26,$line,'Total');
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,'Qty')
			->setCellValueByColumnAndRow(3,$line,'Nilai')
			->setCellValueByColumnAndRow(4,$line,'Qty')
			->setCellValueByColumnAndRow(5,$line,'Nilai')
			->setCellValueByColumnAndRow(6,$line,'Qty')
			->setCellValueByColumnAndRow(7,$line,'Nilai')
			->setCellValueByColumnAndRow(8,$line,'Qty')
			->setCellValueByColumnAndRow(9,$line,'Nilai')
			->setCellValueByColumnAndRow(10,$line,'Qty')
			->setCellValueByColumnAndRow(11,$line,'Nilai')
			->setCellValueByColumnAndRow(12,$line,'Qty')
			->setCellValueByColumnAndRow(13,$line,'Nilai')
			->setCellValueByColumnAndRow(14,$line,'Qty')
			->setCellValueByColumnAndRow(15,$line,'Nilai')
			->setCellValueByColumnAndRow(16,$line,'Qty')
			->setCellValueByColumnAndRow(17,$line,'Nilai')
			->setCellValueByColumnAndRow(18,$line,'Qty')
			->setCellValueByColumnAndRow(19,$line,'Nilai')
			->setCellValueByColumnAndRow(20,$line,'Qty')
			->setCellValueByColumnAndRow(21,$line,'Nilai')
			->setCellValueByColumnAndRow(22,$line,'Qty')
			->setCellValueByColumnAndRow(23,$line,'Nilai')
			->setCellValueByColumnAndRow(24,$line,'Qty')
			->setCellValueByColumnAndRow(25,$line,'Nilai')
			->setCellValueByColumnAndRow(26,$line,'Total Qty')
			->setCellValueByColumnAndRow(27,$line,'Total Nilai');
			
		$line++;			
		

		foreach($dataReader as $row)
		{		
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'MATERIAL GROUP')
			->setCellValueByColumnAndRow(1,$line,$row['description']);
				$line++;

			$i=0;$totaljanuariqty=0;$totaljanuarinil=0;$totalfebruariqty=0;$totalfebruarinil=0;$totalmaretqty=0;$totalmaretnil=0;$totalaprilqty=0;$totalaprilnil=0;$totalmeiqty=0;$totalmeinil=0;$totaljuniqty=0;$totaljuninil=0;$totaljuliqty=0;$totaljulinil=0;$totalagustusqty=0;$totalagustusnil=0;$totalseptemberqty=0;$totalseptembernil=0; $totaloktoberqty=0;$totaloktobernil=0;$totalnopemberqty=0;$totalnopembernil=0;$totaldesemberqty=0;$totaldesembernil=0;$totaljumlahqty=0;$totaljumlahnil=0;
			$sql1 = "select *
                      from (select distinct v.productname,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as januariqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=1 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as januarinil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as februariqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=2 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as februarinil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as maretqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=3 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as maretnil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as aprilqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=4 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as aprilnil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as meiqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=5 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as meinil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juniqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=6 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as juninil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juliqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=7 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as julinil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as agustusqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=8 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as agustusnil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as septemberqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=9 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as septembernil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as oktoberqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=10 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as oktobernil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as nopemberqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=11 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as nopembernil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid
                      and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as desemberqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and month(c.invoicedate)=12 
                      and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
                      group by a.productid),0) as desembernil,
                      ifnull((select sum(a.qty) 
                      from gidetail a 
                      join giheader aa on aa.giheaderid = a.giheaderid
                      join soheader aaa on aaa.soheaderid=aa.soheaderid
                      where aaa.companyid = ".$companyid." ".$spvid1." and aa.recordstatus=3 and a.productid=v.productid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as jumlahqty,
                      ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
                      from gidetail a 
                      left join giheader b on b.giheaderid=a.giheaderid
                      left join invoice c on c.giheaderid=a.giheaderid
                      left join soheader d on d.soheaderid=b.soheaderid
                      left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
                      where d.companyid = ".$companyid." ".$spvid2." and c.recordstatus=3 and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                      and a.productid=v.productid group by a.productid),0) as jumlahnil	
                      from productplant z
                      join product v on v.productid = z.productid
                      where z.recordstatus=1 and v.productname like '%".$product."%'
                      and z.materialgroupid = ".$row['materialgroupid']." ) zz
                      where januarinil<>0 or januariqty  or februariqty <>0 or februarinil <>0 or maretqty <>0 or maretnil <>0 or aprilqty <>0  or aprilnil <>0 or meiqty <>0 or meinil <>0 or juniqty <>0 or juninil <>0 or juliqty <>0 or julinil <>0 or
                      agustusqty <>0 or agustusnil <>0 or septemberqty <>0 or septemberqty <>0 or  oktoberqty <>0 or oktobernil <>0 or nopemberqty <>0 or nopembernil <>0 or desemberqty <>0 or desembernil <>0";

				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();		
			
					$no=0;
			foreach($dataReader1 as $row1)
			{
				$no=$no+1;

					$totaljanuariqty += $row1['januariqty'];
					$totaljanuarinil += $row1['januarinil'];
					$totalfebruariqty += $row1['februariqty'];
					$totalfebruarinil += $row1['februarinil'];
					$totalmaretqty += $row1['maretqty'];
					$totalmaretnil += $row1['maretnil'];
					$totalaprilqty += $row1['aprilqty'];
					$totalaprilnil += $row1['aprilnil'];
					$totalmeiqty += $row1['meiqty'];
					$totalmeinil += $row1['meinil'];
					$totaljuniqty += $row1['juniqty'];
					$totaljuninil += $row1['juninil'];
					$totaljuliqty += $row1['juliqty'];
					$totaljulinil += $row1['julinil'];
					$totalagustusqty += $row1['agustusqty'];
					$totalagustusnil += $row1['agustusnil'];
					$totalseptemberqty += $row1['septemberqty'];
					$totalseptembernil += $row1['septembernil'];
					$totaloktoberqty += $row1['oktoberqty'];
					$totaloktobernil += $row1['oktobernil'];
					$totalnopemberqty += $row1['nopemberqty'];
					$totalnopembernil += $row1['nopembernil'];
					$totaldesemberqty += $row1['desemberqty'];
					$totaldesembernil += $row1['desembernil'];
					$totaljumlahqty += $row1['jumlahqty'];
					$totaljumlahnil += $row1['jumlahnil'];


$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$no)
				->setCellValueByColumnAndRow(1,$line,$row1['productname'])
				->setCellValueByColumnAndRow(2,$line,$row1['januariqty'])
				->setCellValueByColumnAndRow(3,$line,$row1['januarinil'])
				->setCellValueByColumnAndRow(4,$line,$row1['februariqty'])
				->setCellValueByColumnAndRow(5,$line,$row1['februarinil'])
				->setCellValueByColumnAndRow(6,$line,$row1['maretqty'])
				->setCellValueByColumnAndRow(7,$line,$row1['maretnil'])
				->setCellValueByColumnAndRow(8,$line,$row1['aprilqty'])
				->setCellValueByColumnAndRow(9,$line,$row1['aprilnil'])
				->setCellValueByColumnAndRow(10,$line,$row1['meiqty'])
				->setCellValueByColumnAndRow(11,$line,$row1['meinil'])
				->setCellValueByColumnAndRow(12,$line,$row1['juniqty'])
				->setCellValueByColumnAndRow(13,$line,$row1['juninil'])
				->setCellValueByColumnAndRow(14,$line,$row1['juliqty'])
				->setCellValueByColumnAndRow(15,$line,$row1['julinil'])
				->setCellValueByColumnAndRow(16,$line,$row1['agustusqty'])
				->setCellValueByColumnAndRow(17,$line,$row1['agustusnil'])
				->setCellValueByColumnAndRow(18,$line,$row1['septemberqty'])
				->setCellValueByColumnAndRow(19,$line,$row1['septembernil'])
				->setCellValueByColumnAndRow(20,$line,$row1['oktoberqty'])
				->setCellValueByColumnAndRow(21,$line,$row1['oktobernil'])
				->setCellValueByColumnAndRow(22,$line,$row1['nopemberqty'])
				->setCellValueByColumnAndRow(23,$line,$row1['nopembernil'])
				->setCellValueByColumnAndRow(24,$line,$row1['desemberqty'])
				->setCellValueByColumnAndRow(25,$line,$row1['desembernil'])
				->setCellValueByColumnAndRow(26,$line,$row1['jumlahqty'])
				->setCellValueByColumnAndRow(27,$line,$row1['jumlahnil']);
			$line++;
			

			}

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Total :')
				->setCellValueByColumnAndRow(1,$line,$row['description'])
				->setCellValueByColumnAndRow(2,$line,$totaljanuariqty)
				->setCellValueByColumnAndRow(3,$line,$totaljanuarinil)
				->setCellValueByColumnAndRow(4,$line,$totalfebruariqty)
				->setCellValueByColumnAndRow(5,$line,$totalfebruarinil)
				->setCellValueByColumnAndRow(6,$line,$totalmaretqty)
				->setCellValueByColumnAndRow(7,$line,$totalmaretnil)
				->setCellValueByColumnAndRow(8,$line,$totalaprilqty)
				->setCellValueByColumnAndRow(9,$line,$totalaprilnil)
				->setCellValueByColumnAndRow(10,$line,$totalmeiqty)
				->setCellValueByColumnAndRow(11,$line,$totalmeinil)
				->setCellValueByColumnAndRow(12,$line,$totaljuniqty)
				->setCellValueByColumnAndRow(13,$line,$totaljuninil)
				->setCellValueByColumnAndRow(14,$line,$totaljuliqty)
				->setCellValueByColumnAndRow(15,$line,$totaljulinil)
				->setCellValueByColumnAndRow(16,$line,$totalagustusqty)
				->setCellValueByColumnAndRow(17,$line,$totalagustusnil)
				->setCellValueByColumnAndRow(18,$line,$totalseptemberqty)
				->setCellValueByColumnAndRow(19,$line,$totalseptembernil)
				->setCellValueByColumnAndRow(20,$line,$totaloktoberqty)
				->setCellValueByColumnAndRow(21,$line,$totaloktobernil)
				->setCellValueByColumnAndRow(22,$line,$totalnopemberqty)
				->setCellValueByColumnAndRow(23,$line,$totalnopembernil)
				->setCellValueByColumnAndRow(24,$line,$totaldesemberqty)
				->setCellValueByColumnAndRow(25,$line,$totaldesembernil)
				->setCellValueByColumnAndRow(26,$line,$totaljumlahqty)
				->setCellValueByColumnAndRow(27,$line,$totaljumlahnil);
			$line++;
			
			
			$totaljanuariqty1 += $totaljanuariqty;
			$totaljanuarinil1 += $totaljanuarinil;
			$totalfebruariqty1 += $totalfebruariqty;
			$totalfebruarinil1 += $totalfebruarinil;
			$totalmaretqty1 += $totalmaretqty;
			$totalmaretnil1 += $totalmaretnil;
			$totalaprilqty1 += $totalaprilqty;
			$totalaprilnil1 += $totalaprilnil;
			$totalmeiqty1 += $totalmeiqty;
			$totalmeinil1 += $totalmeinil;
			$totaljuniqty1 += $totaljuniqty;
			$totaljuninil1 += $totaljuninil;
			$totaljuliqty1 += $totaljuliqty;
			$totaljulinil1 += $totaljulinil;
			$totalagustusqty1 += $totalagustusqty;
			$totalagustusnil1 += $totalagustusnil;
			$totalseptemberqty1 += $totalseptemberqty;
			$totalseptembernil1 += $totalseptembernil;
			$totaloktoberqty1 += $totaloktoberqty;
			$totaloktobernil1 += $totaloktobernil;
			$totalnopemberqty1 += $totalnopemberqty;
			$totalnopembernil1 += $totalnopembernil;
			$totaldesemberqty1 += $totaldesemberqty;
			$totaldesembernil1 += $totaldesembernil;
			$totaljumlahqty1 += $totaljumlahqty;
			$totaljumlahnil1 += $totaljumlahnil;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuariqty1)
			->setCellValueByColumnAndRow(3,$line,$totaljanuarinil1)
			->setCellValueByColumnAndRow(4,$line,$totalfebruariqty1)
			->setCellValueByColumnAndRow(5,$line,$totalfebruarinil1)
			->setCellValueByColumnAndRow(6,$line,$totalmaretqty1)
			->setCellValueByColumnAndRow(7,$line,$totalmaretnil1)
			->setCellValueByColumnAndRow(8,$line,$totalaprilqty1)
			->setCellValueByColumnAndRow(9,$line,$totalaprilnil1)
			->setCellValueByColumnAndRow(10,$line,$totalmeiqty1)
			->setCellValueByColumnAndRow(11,$line,$totalmeinil1)
			->setCellValueByColumnAndRow(12,$line,$totaljuniqty1)
			->setCellValueByColumnAndRow(13,$line,$totaljuninil1)
			->setCellValueByColumnAndRow(14,$line,$totaljuliqty1)
			->setCellValueByColumnAndRow(15,$line,$totaljulinil1)
			->setCellValueByColumnAndRow(16,$line,$totalagustusqty1)
			->setCellValueByColumnAndRow(17,$line,$totalagustusnil1)
			->setCellValueByColumnAndRow(18,$line,$totalseptemberqty1)
			->setCellValueByColumnAndRow(19,$line,$totalseptembernil1)
			->setCellValueByColumnAndRow(20,$line,$totaloktoberqty1)
			->setCellValueByColumnAndRow(21,$line,$totaloktobernil1)
			->setCellValueByColumnAndRow(22,$line,$totalnopemberqty1)
			->setCellValueByColumnAndRow(23,$line,$totalnopembernil1)
			->setCellValueByColumnAndRow(24,$line,$totaldesemberqty1)
			->setCellValueByColumnAndRow(25,$line,$totaldesembernil1)
			->setCellValueByColumnAndRow(26,$line,$totaljumlahqty1)
			->setCellValueByColumnAndRow(27,$line,$totaljumlahnil1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//52
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalNilaiXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangperbulanpertahuntotalnilai';
		parent::actionDownXLS();
		$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;
		$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
    if(isset($spv) && $spv!='')
		{
			$spvid1 = " and (b.spvid = '".$spv."' or b.employeeid = '".$spv."') ";
			$spvid2 = " and (h.spvid = '".$spv."' or h.employeeid = '".$spv."') ";
			$spvid3 = " and (c.spvid = '".$spv."' or c.employeeid = '".$spv."') ";
		}
		else
		{
			$spvid1 = "";
			$spvid2 = "";
			$spvid3 = "";
		}
    if(isset($isdisplay) && $isdisplay!='')
		{
			$isdisplay1 = " and b.isdisplay = ".$isdisplay." ";
			$isdisplay2 = " and h.isdisplay = ".$isdisplay." ";
			$isdisplay3 = " and c.isdisplay = ".$isdisplay." ";
		}
		else
		{
			$isdisplay1 = "";
			$isdisplay2 = "";
			$isdisplay3 = "";
		}
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	            join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid1." ".$isdisplay1." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(14,1,GetCompanyCode($companyid));
		$line=4;				
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Nama Barang')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Jumlah');
		$line++;
		
		$sql1 = "select * from (select xxx.description as barang,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as januari,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as februari,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as maret,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and invoiceno not like '%-%-%'
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as april,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as mei,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juni,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juli,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as agustus,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as september,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 10 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as oktober,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as nopember,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 12 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as desember,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid3." ".$isdisplay3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid2." ".$isdisplay2." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as jumlah
							from materialgroup xxx) xxxx where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <>0 
							or juli <>0 or agustus <> 0 or september <>0 or oktober <> 0 or nopember <> 0 or desember <> 0";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;
			$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
			foreach($dataReader1 as $row1)
			{
				$i=$i+1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['barang'])
					->setCellValueByColumnAndRow(2,$line,$row1['januari']/$per)
					->setCellValueByColumnAndRow(3,$line,$row1['februari']/$per)
					->setCellValueByColumnAndRow(4,$line,$row1['maret']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['april']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['mei']/$per)
					->setCellValueByColumnAndRow(7,$line,$row1['juni']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['juli']/$per)
					->setCellValueByColumnAndRow(9,$line,$row1['agustus']/$per)
					->setCellValueByColumnAndRow(10,$line,$row1['september']/$per)
					->setCellValueByColumnAndRow(11,$line,$row1['oktober']/$per)
					->setCellValueByColumnAndRow(12,$line,$row1['nopember']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['desember']/$per)
					->setCellValueByColumnAndRow(14,$line,$row1['jumlah']/$per);
				$line++;
				
				$totaljanuari += $row1['januari']/$per;
		    $totalfebruari += $row1['februari']/$per;
		    $totalmaret += $row1['maret']/$per;
		    $totalapril += $row1['april']/$per;
		    $totalmei += $row1['mei']/$per;
		    $totaljuni += $row1['juni']/$per;
		    $totaljuli += $row1['juli']/$per;
		    $totalagustus += $row1['agustus']/$per;
		    $totalseptember += $row1['september']/$per;
		    $totaloktober += $row1['oktober']/$per;
		    $totalnopember += $row1['nopember']/$per;
		    $totaldesember += $row1['desember']/$per;
		    $totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line+=2;
			
			$totaljanuari1 += $totaljanuari;
	    $totalfebruari1 += $totalfebruari;
	    $totalmaret1 += $totalmaret;
	    $totalapril1 += $totalapril;
	    $totalmei1 += $totalmei;
	    $totaljuni1 += $totaljuni;
	    $totaljuli1 += $totaljuli;
	    $totalagustus1 += $totalagustus;
	    $totalseptember1 += $totalseptember;
	    $totaloktober1 += $totaloktober;
	    $totalnopember1 += $totalnopember;
	    $totaldesember1 += $totaldesember;
	    $totaljumlah1 += $totaljumlah;
		
		}
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
				->setCellValueByColumnAndRow(4,$line,$totalmaret1)
				->setCellValueByColumnAndRow(5,$line,$totalapril1)
				->setCellValueByColumnAndRow(6,$line,$totalmei1)
				->setCellValueByColumnAndRow(7,$line,$totaljuni1)
				->setCellValueByColumnAndRow(8,$line,$totaljuli1)
				->setCellValueByColumnAndRow(9,$line,$totalagustus1)
				->setCellValueByColumnAndRow(10,$line,$totalseptember1)
				->setCellValueByColumnAndRow(11,$line,$totaloktober1)
				->setCellValueByColumnAndRow(12,$line,$totalnopember1)
				->setCellValueByColumnAndRow(13,$line,$totaldesember1)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
			$line+=2;
		
		
		
		$this->getFooterXLS($this->phpExcel);
	}
	//53
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianNilaiXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangperbulanpertahunrinciannilai';
		parent::actionDownXLS();
		$totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
		 if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }  
        if(isset($spv)&& $spv!=''){
          $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid3 = "";
        }  
        
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) =	year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
					->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
					->setCellValueByColumnAndRow(14,1,GetCompanyCode($companyid));
			$line=4;
			
			
			
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Customer')
						->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);				
				$line++;
				
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid2." and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')					
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by description";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
				$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;			$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
				
				
				
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Material Group')
						->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);				
					$line++;
					
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,'No.')
							->setCellValueByColumnAndRow(1,$line,'Nama Barang')
							->setCellValueByColumnAndRow(2,$line,'Januari')
							->setCellValueByColumnAndRow(3,$line,'Februari')
							->setCellValueByColumnAndRow(4,$line,'Maret')
							->setCellValueByColumnAndRow(5,$line,'April')
							->setCellValueByColumnAndRow(6,$line,'Mei')
							->setCellValueByColumnAndRow(7,$line,'Juni')
							->setCellValueByColumnAndRow(8,$line,'Juli')
							->setCellValueByColumnAndRow(9,$line,'Agustus')
							->setCellValueByColumnAndRow(10,$line,'September')
							->setCellValueByColumnAndRow(11,$line,'Oktober')
							->setCellValueByColumnAndRow(12,$line,'November')
							->setCellValueByColumnAndRow(13,$line,'Desember')
							->setCellValueByColumnAndRow(14,$line,'Jumlah');
					$line++;
					
					$sql2 = "select *
								from (select o.productname,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 1
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 1
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as januari,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 2
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 2
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as februari,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 3
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 3
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as maret,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 4
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 4
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as april,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 5
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 5
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as mei,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 6
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 6
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juni,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 7
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 7
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juli,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 8
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 8
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as agustus,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 9
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 9
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as september,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 10
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 10
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as oktober,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 11
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 11
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as nopember,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 12
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 12
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as desember,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']."
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']."
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as jumlah
								from product o 
								order by productname) zzz
								where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
								";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
										
					$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;			$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;					
					
					$i=0;
					foreach($dataReader2 as $row2)
					{
						$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,$i+=1)
								->setCellValueByColumnAndRow(1,$line,$row2['productname'])
								->setCellValueByColumnAndRow(2,$line,$row2['januari']/$per)
								->setCellValueByColumnAndRow(3,$line,$row2['februari']/$per)
								->setCellValueByColumnAndRow(4,$line,$row2['maret']/$per)
								->setCellValueByColumnAndRow(5,$line,$row2['april']/$per)
								->setCellValueByColumnAndRow(6,$line,$row2['mei']/$per)
								->setCellValueByColumnAndRow(7,$line,$row2['juni']/$per)
								->setCellValueByColumnAndRow(8,$line,$row2['juli']/$per)
								->setCellValueByColumnAndRow(9,$line,$row2['agustus']/$per)
								->setCellValueByColumnAndRow(10,$line,$row2['september']/$per)
								->setCellValueByColumnAndRow(11,$line,$row2['oktober']/$per)
								->setCellValueByColumnAndRow(12,$line,$row2['nopember']/$per)
								->setCellValueByColumnAndRow(13,$line,$row2['desember']/$per)
								->setCellValueByColumnAndRow(14,$line,$row2['jumlah']/$per) ;
						$line++;
						
						$totaljanuari += $row2['januari']/$per;
						$totalfebruari += $row2['februari']/$per;
						$totalmaret += $row2['maret']/$per;
						$totalapril += $row2['april']/$per;
						$totalmei += $row2['mei']/$per;
						$totaljuni += $row2['juni']/$per;
						$totaljuli += $row2['juli']/$per;
						$totalagustus += $row2['agustus']/$per;
						$totalseptember += $row2['september']/$per;
						$totaloktober += $row2['oktober']/$per;
						$totalnopember += $row2['nopember']/$per;
						$totaldesember += $row2['desember']/$per;
						$totaljumlah += $row2['jumlah']/$per;
					}
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,$line,'JUMLAH '.$row1['description'])
							->setCellValueByColumnAndRow(2,$line,$totaljanuari)
							->setCellValueByColumnAndRow(3,$line,$totalfebruari)
							->setCellValueByColumnAndRow(4,$line,$totalmaret)
							->setCellValueByColumnAndRow(5,$line,$totalapril)
							->setCellValueByColumnAndRow(6,$line,$totalmei)
							->setCellValueByColumnAndRow(7,$line,$totaljuni)
							->setCellValueByColumnAndRow(8,$line,$totaljuli)
							->setCellValueByColumnAndRow(9,$line,$totalagustus)
							->setCellValueByColumnAndRow(10,$line,$totalseptember)
							->setCellValueByColumnAndRow(11,$line,$totaloktober)
							->setCellValueByColumnAndRow(12,$line,$totalnopember)
							->setCellValueByColumnAndRow(13,$line,$totaldesember)
							->setCellValueByColumnAndRow(14,$line,$totaljumlah) ;
						$line+=2;
						
						$totaljanuari1 += $totaljanuari;
						$totalfebruari1 += $totalfebruari;
						$totalmaret1 += $totalmaret;
						$totalapril1 += $totalapril;
						$totalmei1 += $totalmei;
						$totaljuni1 += $totaljuni;
						$totaljuli1 += $totaljuli;
						$totalagustus1 += $totalagustus;
						$totalseptember1 += $totalseptember;
						$totaloktober1 += $totaloktober;
						$totalnopember1 += $totalnopember;
						$totaldesember1 += $totaldesember;
						$totaljumlah1 += $totaljumlah;
					
				}
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'])
						->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
						->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
						->setCellValueByColumnAndRow(4,$line,$totalmaret1)
						->setCellValueByColumnAndRow(5,$line,$totalapril1)
						->setCellValueByColumnAndRow(6,$line,$totalmei1)
						->setCellValueByColumnAndRow(7,$line,$totaljuni1)
						->setCellValueByColumnAndRow(8,$line,$totaljuli1)
						->setCellValueByColumnAndRow(9,$line,$totalagustus1)
						->setCellValueByColumnAndRow(10,$line,$totalseptember1)
						->setCellValueByColumnAndRow(11,$line,$totaloktober1)
						->setCellValueByColumnAndRow(12,$line,$totalnopember1)
						->setCellValueByColumnAndRow(13,$line,$totaldesember1)
						->setCellValueByColumnAndRow(14,$line,$totaljumlah1) ;
				$line++;
				
				$totaljanuari2 += $totaljanuari1;
				$totalfebruari2 += $totalfebruari1;
				$totalmaret2 += $totalmaret1;
				$totalapril2 += $totalapril1;
				$totalmei2 += $totalmei1;
				$totaljuni2 += $totaljuni1;
				$totaljuli2 += $totaljuli1;
				$totalagustus2 += $totalagustus1;
				$totalseptember2 += $totalseptember1;
				$totaloktober2 += $totaloktober1;
				$totalnopember2 += $totalnopember1;
				$totaldesember2 += $totaldesember1;
				$totaljumlah2 += $totaljumlah1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
					->setCellValueByColumnAndRow(2,$line,$totaljanuari2)
					->setCellValueByColumnAndRow(3,$line,$totalfebruari2)
					->setCellValueByColumnAndRow(4,$line,$totalmaret2)
					->setCellValueByColumnAndRow(5,$line,$totalapril2)
					->setCellValueByColumnAndRow(6,$line,$totalmei2)
					->setCellValueByColumnAndRow(7,$line,$totaljuni2)
					->setCellValueByColumnAndRow(8,$line,$totaljuli2)
					->setCellValueByColumnAndRow(9,$line,$totalagustus2)
					->setCellValueByColumnAndRow(10,$line,$totalseptember2)
					->setCellValueByColumnAndRow(11,$line,$totaloktober2)
					->setCellValueByColumnAndRow(12,$line,$totalnopember2)
					->setCellValueByColumnAndRow(13,$line,$totaldesember2)
					->setCellValueByColumnAndRow(14,$line,$totaljumlah2) ;
				$line++;		
		
		$this->getFooterXLS($this->phpExcel);
	}
	//54
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalQtyXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangperbulanpertahuntotalqty';
		parent::actionDownXLS();
		$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;
		$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }  
       
        
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(14,1,GetCompanyCode($companyid));
		$line=4;				
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Material Group')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Jumlah');
		$line++;
		
		$sql1 = "select * from (select xxx.description as barang,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as januari,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as februari,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as maret,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as april,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as mei,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juni,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juli,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as agustus,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as september,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 10 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as oktober,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as nopember,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 12 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as desember,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as jumlah
							from materialgroup xxx) xxxx where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <>0 
							or juli <>0 or agustus <> 0 or september <>0 or oktober <> 0 or nopember <> 0 or desember <> 0";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;
			$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
			foreach($dataReader1 as $row1)
			{
				$i=$i+1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['barang'])
					->setCellValueByColumnAndRow(2,$line,$row1['januari'])
					->setCellValueByColumnAndRow(3,$line,$row1['februari'])
					->setCellValueByColumnAndRow(4,$line,$row1['maret'])
					->setCellValueByColumnAndRow(5,$line,$row1['april'])
					->setCellValueByColumnAndRow(6,$line,$row1['mei'])
					->setCellValueByColumnAndRow(7,$line,$row1['juni'])
					->setCellValueByColumnAndRow(8,$line,$row1['juli'])
					->setCellValueByColumnAndRow(9,$line,$row1['agustus'])
					->setCellValueByColumnAndRow(10,$line,$row1['september'])
					->setCellValueByColumnAndRow(11,$line,$row1['oktober'])
					->setCellValueByColumnAndRow(12,$line,$row1['nopember'])
					->setCellValueByColumnAndRow(13,$line,$row1['desember'])
					->setCellValueByColumnAndRow(14,$line,$row1['jumlah']);
				$line++;
				
				$totaljanuari += $row1['januari'];
		    $totalfebruari += $row1['februari'];
		    $totalmaret += $row1['maret'];
		    $totalapril += $row1['april'];
		    $totalmei += $row1['mei'];
		    $totaljuni += $row1['juni'];
		    $totaljuli += $row1['juli'];
		    $totalagustus += $row1['agustus'];
		    $totalseptember += $row1['september'];
		    $totaloktober += $row1['oktober'];
		    $totalnopember += $row1['nopember'];
		    $totaldesember += $row1['desember'];
		    $totaljumlah += $row1['jumlah'];
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line+=2;
			
			$totaljanuari1 += $totaljanuari;
	    $totalfebruari1 += $totalfebruari;
	    $totalmaret1 += $totalmaret;
	    $totalapril1 += $totalapril;
	    $totalmei1 += $totalmei;
	    $totaljuni1 += $totaljuni;
	    $totaljuli1 += $totaljuli;
	    $totalagustus1 += $totalagustus;
	    $totalseptember1 += $totalseptember;
	    $totaloktober1 += $totaloktober;
	    $totalnopember1 += $totalnopember;
	    $totaldesember1 += $totaldesember;
	    $totaljumlah1 += $totaljumlah;
		
		}
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
				->setCellValueByColumnAndRow(4,$line,$totalmaret1)
				->setCellValueByColumnAndRow(5,$line,$totalapril1)
				->setCellValueByColumnAndRow(6,$line,$totalmei1)
				->setCellValueByColumnAndRow(7,$line,$totaljuni1)
				->setCellValueByColumnAndRow(8,$line,$totaljuli1)
				->setCellValueByColumnAndRow(9,$line,$totalagustus1)
				->setCellValueByColumnAndRow(10,$line,$totalseptember1)
				->setCellValueByColumnAndRow(11,$line,$totaloktober1)
				->setCellValueByColumnAndRow(12,$line,$totalnopember1)
				->setCellValueByColumnAndRow(13,$line,$totaldesember1)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
			$line+=2;
		
		
		
		$this->getFooterXLS($this->phpExcel);
	}
	//55
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianQtyXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangperbulanpertahunrincianqty';
		parent::actionDownXLS();
		$totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
		if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid3 = "";
        }  
       
        
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) =	year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
					->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
					->setCellValueByColumnAndRow(14,1,GetCompanyCode($companyid));
			$line=4;
			
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Customer')
						->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);				
				$line++;
				
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid2." and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by description";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Material Group')
						->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);				
					$line++;
					
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,'No.')
							->setCellValueByColumnAndRow(1,$line,'Nama Barang')
							->setCellValueByColumnAndRow(2,$line,'Januari')
							->setCellValueByColumnAndRow(3,$line,'Februari')
							->setCellValueByColumnAndRow(4,$line,'Maret')
							->setCellValueByColumnAndRow(5,$line,'April')
							->setCellValueByColumnAndRow(6,$line,'Mei')
							->setCellValueByColumnAndRow(7,$line,'Juni')
							->setCellValueByColumnAndRow(8,$line,'Juli')
							->setCellValueByColumnAndRow(9,$line,'Agustus')
							->setCellValueByColumnAndRow(10,$line,'September')
							->setCellValueByColumnAndRow(11,$line,'Oktober')
							->setCellValueByColumnAndRow(12,$line,'November')
							->setCellValueByColumnAndRow(13,$line,'Desember')
							->setCellValueByColumnAndRow(14,$line,'Jumlah');
					$line++;
					
					$sql2 = "select *
								from (select o.productname,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 1
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 1
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as januari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 2
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 2
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as februari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 3
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 3
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as maret,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 4
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 4
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as april,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 5
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 5
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as mei,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 6
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 6
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juni,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 7
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 7
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juli,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 8
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 8
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as agustus,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 9
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 9
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as september,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 10
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 10
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as oktober,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 11
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 11
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as nopember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 12
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 12
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as desember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']."
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']."
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as jumlah
								from product o 
								order by productname) zzz
								where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
								";
					$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
					$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;			$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;	
					
					$i=0;
					foreach($dataReader2 as $row2)
					{
						$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,$i+=1)
								->setCellValueByColumnAndRow(1,$line,$row2['productname'])
								->setCellValueByColumnAndRow(2,$line,$row2['januari'])
								->setCellValueByColumnAndRow(3,$line,$row2['februari'])
								->setCellValueByColumnAndRow(4,$line,$row2['maret'])
								->setCellValueByColumnAndRow(5,$line,$row2['april'])
								->setCellValueByColumnAndRow(6,$line,$row2['mei'])
								->setCellValueByColumnAndRow(7,$line,$row2['juni'])
								->setCellValueByColumnAndRow(8,$line,$row2['juli'])
								->setCellValueByColumnAndRow(9,$line,$row2['agustus'])
								->setCellValueByColumnAndRow(10,$line,$row2['september'])
								->setCellValueByColumnAndRow(11,$line,$row2['oktober'])
								->setCellValueByColumnAndRow(12,$line,$row2['nopember'])
								->setCellValueByColumnAndRow(13,$line,$row2['desember'])
								->setCellValueByColumnAndRow(14,$line,$row2['jumlah']) ;
						$line++;
						
						$totaljanuari += $row2['januari'];
						$totalfebruari += $row2['februari'];
						$totalmaret += $row2['maret'];
						$totalapril += $row2['april'];
						$totalmei += $row2['mei'];
						$totaljuni += $row2['juni'];
						$totaljuli += $row2['juli'];
						$totalagustus += $row2['agustus'];
						$totalseptember += $row2['september'];
						$totaloktober += $row2['oktober'];
						$totalnopember += $row2['nopember'];
						$totaldesember += $row2['desember'];
						$totaljumlah += $row2['jumlah'];
					}
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,$line,'JUMLAH '.$row1['description'])
							->setCellValueByColumnAndRow(2,$line,$totaljanuari)
							->setCellValueByColumnAndRow(3,$line,$totalfebruari)
							->setCellValueByColumnAndRow(4,$line,$totalmaret)
							->setCellValueByColumnAndRow(5,$line,$totalapril)
							->setCellValueByColumnAndRow(6,$line,$totalmei)
							->setCellValueByColumnAndRow(7,$line,$totaljuni)
							->setCellValueByColumnAndRow(8,$line,$totaljuli)
							->setCellValueByColumnAndRow(9,$line,$totalagustus)
							->setCellValueByColumnAndRow(10,$line,$totalseptember)
							->setCellValueByColumnAndRow(11,$line,$totaloktober)
							->setCellValueByColumnAndRow(12,$line,$totalnopember)
							->setCellValueByColumnAndRow(13,$line,$totaldesember)
							->setCellValueByColumnAndRow(14,$line,$totaljumlah) ;
						$line+=2;
						
						$totaljanuari1 += $totaljanuari;
						$totalfebruari1 += $totalfebruari;
						$totalmaret1 += $totalmaret;
						$totalapril1 += $totalapril;
						$totalmei1 += $totalmei;
						$totaljuni1 += $totaljuni;
						$totaljuli1 += $totaljuli;
						$totalagustus1 += $totalagustus;
						$totalseptember1 += $totalseptember;
						$totaloktober1 += $totaloktober;
						$totalnopember1 += $totalnopember;
						$totaldesember1 += $totaldesember;
						$totaljumlah1 += $totaljumlah;
				}
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'])
						->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
						->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
						->setCellValueByColumnAndRow(4,$line,$totalmaret1)
						->setCellValueByColumnAndRow(5,$line,$totalapril1)
						->setCellValueByColumnAndRow(6,$line,$totalmei1)
						->setCellValueByColumnAndRow(7,$line,$totaljuni1)
						->setCellValueByColumnAndRow(8,$line,$totaljuli1)
						->setCellValueByColumnAndRow(9,$line,$totalagustus1)
						->setCellValueByColumnAndRow(10,$line,$totalseptember1)
						->setCellValueByColumnAndRow(11,$line,$totaloktober1)
						->setCellValueByColumnAndRow(12,$line,$totalnopember1)
						->setCellValueByColumnAndRow(13,$line,$totaldesember1)
						->setCellValueByColumnAndRow(14,$line,$totaljumlah1) ;
				$line++;
				
				$totaljanuari2 += $totaljanuari1;
				$totalfebruari2 += $totalfebruari1;
				$totalmaret2 += $totalmaret1;
				$totalapril2 += $totalapril1;
				$totalmei2 += $totalmei1;
				$totaljuni2 += $totaljuni1;
				$totaljuli2 += $totaljuli1;
				$totalagustus2 += $totalagustus1;
				$totalseptember2 += $totalseptember1;
				$totaloktober2 += $totaloktober1;
				$totalnopember2 += $totalnopember1;
				$totaldesember2 += $totaldesember1;
				$totaljumlah2 += $totaljumlah1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
					->setCellValueByColumnAndRow(2,$line,$totaljanuari2)
					->setCellValueByColumnAndRow(3,$line,$totalfebruari2)
					->setCellValueByColumnAndRow(4,$line,$totalmaret2)
					->setCellValueByColumnAndRow(5,$line,$totalapril2)
					->setCellValueByColumnAndRow(6,$line,$totalmei2)
					->setCellValueByColumnAndRow(7,$line,$totaljuni2)
					->setCellValueByColumnAndRow(8,$line,$totaljuli2)
					->setCellValueByColumnAndRow(9,$line,$totalagustus2)
					->setCellValueByColumnAndRow(10,$line,$totalseptember2)
					->setCellValueByColumnAndRow(11,$line,$totaloktober2)
					->setCellValueByColumnAndRow(12,$line,$totalnopember2)
					->setCellValueByColumnAndRow(13,$line,$totaldesember2)
					->setCellValueByColumnAndRow(14,$line,$totaljumlah2) ;
			$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//56
	public function RekapSalesOrderOutstandingPerBarangXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekapsalesorderoutstandingperbarang';
		parent::actionDownXLS();
		$totalqty1=0;$totalgiqty1=0;$totalsisa1=0;		
		if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         
		$sql = "select distinct f.materialgroupid, f.description
						from sodetail a 
						join soheader b on b.soheaderid=a.soheaderid
						join product c on c.productid=a.productid
						join unitofmeasure d on d.unitofmeasureid=a.unitofmeasureid
						join productplant e on e.productid=a.productid and e.slocid=a.slocid
						join materialgroup f on f.materialgroupid=e.materialgroupid
						join sloc g on g.slocid=a.slocid
						join addressbook h on h.addressbookid=b.addressbookid
						join employee i on i.employeeid=b.employeeid
						join salesarea j on j.salesareaid=h.salesareaid
						where b.recordstatus = 6 and c.isstock = 1
						and b.companyid = ".$companyid."
						and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and a.qty <> a.giqty and g.sloccode like '%".$sloc."%'	and h.fullname like '%".$customer."%' 
						and i.fullname like '%".$employee."%'	".$spvid." and c.productname like '%".$product."%'
						and j.areaname like '%".$salesarea."%' group by productname";	
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
				
		
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
				->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
				->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
		
		if ($customer == '') {$cust = 'ALL';} else {$cust = $customer;}
		
		$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer : ')
					->setCellValueByColumnAndRow(1,$line,$cust);
		$line++;
		foreach($dataReader as $row)
		{		
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row['description']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Satuan')				
						->setCellValueByColumnAndRow(3,$line,'Qty SO')
						->setCellValueByColumnAndRow(4,$line,'Qty Kirim')
						->setCellValueByColumnAndRow(5,$line,'Qty Belum Kirim')
						->setCellValueByColumnAndRow(6,$line,'Stok Tersedia');
			$line++;
			
			$sql1 = "select c.productname, d.uomcode, sum(a.qty) as qty, sum(a.giqty) as giqty, sum(a.qty-a.giqty) as sisa,
							(select ifnull(sum(k.qty),0) from productstock k where k.productid=a.productid and k.slocid=a.slocid and k.unitofmeasureid=a.unitofmeasureid) as stok
						from sodetail a 
						join soheader b on b.soheaderid=a.soheaderid
						join product c on c.productid=a.productid
						join unitofmeasure d on d.unitofmeasureid=a.unitofmeasureid
						join productplant e on e.productid=a.productid and e.slocid=a.slocid
						join materialgroup f on f.materialgroupid=e.materialgroupid
						join sloc g on g.slocid=a.slocid
						join addressbook h on h.addressbookid=b.addressbookid
						join employee i on i.employeeid=b.employeeid
						join salesarea j on j.salesareaid=h.salesareaid
						where b.recordstatus = 6 and c.isstock = 1 and e.recordstatus = 1 and f.materialgroupid = '".$row['materialgroupid']."'
						and b.companyid = ".$companyid."
						and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and a.qty <> a.giqty and g.sloccode like '%".$sloc."%'	and h.fullname like '%".$customer."%' 
						and i.fullname like '%".$employee."%'	".$spvid." and c.productname like '%".$product."%'
						and j.areaname like '%".$salesarea."%' group by productname";
				
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$i=0;$totalqty=0;$totalgiqty=0;$totalsisa=0;
			
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row1['productname'])
							->setCellValueByColumnAndRow(2,$line,$row1['uomcode'])							
							->setCellValueByColumnAndRow(3,$line,$row1['qty'])
							->setCellValueByColumnAndRow(4,$line,$row1['giqty'])
							->setCellValueByColumnAndRow(5,$line,$row1['sisa'])
							->setCellValueByColumnAndRow(6,$line,$row1['stok']);
				$line++;
				
				$totalqty += $row1['qty'];
				$totalgiqty += $row1['giqty'];
				$totalsisa += $row1['sisa'];
			}
			$this->phpExcel->setActiveSheetIndex(0)		
					->setCellValueByColumnAndRow(1,$line,'Total '.$row['description'])
					->setCellValueByColumnAndRow(3,$line,$totalqty)
					->setCellValueByColumnAndRow(4,$line,$totalgiqty)						
					->setCellValueByColumnAndRow(5,$line,$totalsisa);
			$line+=2;
			
			$totalqty1 += $totalqty;
			$totalgiqty1 += $totalgiqty;
			$totalsisa1 += $totalsisa;
		}		
		$this->phpExcel->setActiveSheetIndex(0)		
					->setCellValueByColumnAndRow(1,$line,'TOTAL')
					->setCellValueByColumnAndRow(3,$line,$totalqty1)
					->setCellValueByColumnAndRow(4,$line,$totalgiqty1)						
					->setCellValueByColumnAndRow(5,$line,$totalsisa1);
		$line+=2;
		
		$this->getFooterXLS($this->phpExcel);
	}
  //57
    
	//58
	public function RekapPenjualanReturPenjualanPerSalesPerBulanPerTahunTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='rekappenjualanreturpenjualanpersalesperbulanpertahuntotal';
	parent::actionDownXLS();
		$i=0;
		$jumlah[1]=0;$jumlah[2]=0;$jumlah[3]=0;$jumlah[4]=0;$jumlah[5]=0;$jumlah[6]=0;$jumlah[7]=0;$jumlah[8]=0;$jumlah[9]=0;$jumlah[10]=0;$jumlah[11]=0;$jumlah[12]=0;$jumlah[13]=0;
			$nilai = array();
			$year = date('Y',strtotime($enddate));
		$sql = "select distinct employeeid,fullname from
			(select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null and invoiceno not like '%-%-%' 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%'
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and year(j.invoicedate)={$year}
				union
				select distinct l.employeeid,l.fullname
                from notagirpro a
                join notagir b on b.notagirid=a.notagirid
                join gireturdetail c on c.gireturdetailid=a.gireturdetailid
                join giretur d on d.gireturid=b.gireturid
                join gidetail e on e.gidetailid=c.gidetailid
                join giheader f on f.giheaderid=d.giheaderid
                join sodetail g on g.sodetailid=e.sodetailid
                join soheader h on h.soheaderid=f.soheaderid
                join product i on i.productid = a.productid
                join sloc j on j.slocid = a.slocid
                join addressbook k on k.addressbookid = h.addressbookid
                join employee l on l.employeeid = h.employeeid
                join salesarea m on m.salesareaid = k.salesareaid
                where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
                and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
                and i.productname like '%".$product."%' and year(d.gireturdate)={$year})z order by fullname";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
		->setCellValueByColumnAndRow(1,2,$year)
		->setCellValueByColumnAndRow(6,2,GetCompanyCode($companyid));
	$line=4;
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Sales')
					->setCellValueByColumnAndRow(2,$line,'January')				
					->setCellValueByColumnAndRow(3,$line,'February')
					->setCellValueByColumnAndRow(4,$line,'March')
					->setCellValueByColumnAndRow(5,$line,'April')
					->setCellValueByColumnAndRow(6,$line,'Mei')
					->setCellValueByColumnAndRow(7,$line,'June')
					->setCellValueByColumnAndRow(8,$line,'July')
					->setCellValueByColumnAndRow(9,$line,'August')
					->setCellValueByColumnAndRow(10,$line,'September')
					->setCellValueByColumnAndRow(11,$line,'October')
					->setCellValueByColumnAndRow(12,$line,'November')
					->setCellValueByColumnAndRow(13,$line,'December')
					->setCellValueByColumnAndRow(14,$line,'Summary');
		$line++;
			foreach($dataReader as $row){
					$sub = 0;					
			$nilai[13]=0;
					for($l=1; $l<=12; $l++){
				$sql1 = "
							select distinct sum(netto) as netto from
							(select sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productname,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = 1 and h.sloccode like '%%' and d.fullname like '%%' and
							e.fullname like '%%' and f.areaname like '%%' and i.productname like '%%' and a.invoicedate between '".$year."-".$l."-01' and '".$year."-".$l."-31'  
							and e.employeeid = {$row['employeeid']})z group by fullname
							union
							select -1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productname,(a.qty*a.price) as nett,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = 1 and b.recordstatus = 3 and j.sloccode like '%%' 
							and k.fullname like '%%' and l.fullname like '%%' and m.areaname like '%%'
							and i.productname like '%%' and l.employeeid = {$row['employeeid']} and d.gireturdate between '".$year."-".$l."-01' and '".$year."-".$l."-31'  
							)z ) zz ";
                    
				$res=Yii::app()->db->createCommand($sql1)->queryRow();
									$nilai[$l] = $res['netto'];
									$nilai[13] = $nilai[13] + $nilai[$l];
							}
					$i+=1;
		
		
					
		$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row['fullname'])
					->setCellValueByColumnAndRow(2,$line,$nilai[1])				
					->setCellValueByColumnAndRow(3,$line,$nilai[2])				
					->setCellValueByColumnAndRow(4,$line,$nilai[3])				
					->setCellValueByColumnAndRow(5,$line,$nilai[4])				
					->setCellValueByColumnAndRow(6,$line,$nilai[5])				
					->setCellValueByColumnAndRow(7,$line,$nilai[6])				
					->setCellValueByColumnAndRow(8,$line,$nilai[7])				
					->setCellValueByColumnAndRow(9,$line,$nilai[8])				
					->setCellValueByColumnAndRow(10,$line,$nilai[9])				
					->setCellValueByColumnAndRow(11,$line,$nilai[10])				
					->setCellValueByColumnAndRow(12,$line,$nilai[11])				
					->setCellValueByColumnAndRow(13,$line,$nilai[12])				
					->setCellValueByColumnAndRow(14,$line,$nilai[13]);
		$line++;		
			
		$jumlah[1] += $nilai[1];
		$jumlah[2] += $nilai[2];
		$jumlah[3] += $nilai[3];
		$jumlah[4] += $nilai[4];
		$jumlah[5] += $nilai[5];
		$jumlah[6] += $nilai[6];
		$jumlah[7] += $nilai[7];
		$jumlah[8] += $nilai[8];
		$jumlah[9] += $nilai[9];
		$jumlah[10] += $nilai[10];
		$jumlah[11] += $nilai[11];
		$jumlah[12] += $nilai[12];
		$jumlah[13] += $nilai[13];
			}
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,'TOTAL ')
					->setCellValueByColumnAndRow(2,$line,$jumlah[1])				
					->setCellValueByColumnAndRow(3,$line,$jumlah[2])				
					->setCellValueByColumnAndRow(4,$line,$jumlah[3])				
					->setCellValueByColumnAndRow(5,$line,$jumlah[4])				
					->setCellValueByColumnAndRow(6,$line,$jumlah[5])				
					->setCellValueByColumnAndRow(7,$line,$jumlah[6])				
					->setCellValueByColumnAndRow(8,$line,$jumlah[7])				
					->setCellValueByColumnAndRow(9,$line,$jumlah[8])				
					->setCellValueByColumnAndRow(10,$line,$jumlah[9])				
					->setCellValueByColumnAndRow(11,$line,$jumlah[10])				
					->setCellValueByColumnAndRow(12,$line,$jumlah[11])				
					->setCellValueByColumnAndRow(13,$line,$jumlah[12])				
					->setCellValueByColumnAndRow(14,$line,$jumlah[13]);
			$this->getFooterXLS($this->phpExcel);
	}
	//59
	public function RekapPenjualanReturPenjualanPerSalesPerBarangPerBulanPerTahunTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='rekappenjualanreturpenjualanpersalesperbarangperbulanpertahuntotal';
	parent::actionDownXLS();
		 $year = date('Y',strtotime($enddate));
		 $exp = array();
		$total[1][0]=0;$total[2][0]=0;$total[3][0]=0;$total[4][0]=0;$total[5][0]=0;$total[6][0]=0;$total[7][0]=0;$total[8][0]=0;$total[9][0]=0;$total[10][0]=0;$total[11][0]=0;$total[12][0]=0;$total[13][0]=0;
		$total[1][1]=0;$total[2][1]=0;$total[3][1]=0;$total[4][1]=0;$total[5][1]=0;$total[6][1]=0;$total[7][1]=0;$total[8][1]=0;$total[9][1]=0;$total[10][1]=0;$total[11][1]=0;$total[12][1]=0;$total[13][1]=0;
	$sql = "select employeeid, fullname from 
			(select distinct f.employeeid,f.fullname
							from soheader b
							join addressbook c on c.addressbookid = b.addressbookid
							join salesarea k on k.salesareaid = c.salesareaid
							join giheader h on h.soheaderid = b.soheaderid
							join gidetail d on d.giheaderid = h.giheaderid
							join product e on e.productid = d.productid
							join employee f on f.employeeid = b.employeeid
							join sloc i on i.slocid = d.slocid
							join invoice j on j.giheaderid = h.giheaderid  
			where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
			and f.fullname like '%".$employee."%' 
			and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
			and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
			union
							select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
		->setCellValueByColumnAndRow(1,2,$year)
		->setCellValueByColumnAndRow(6,2,GetCompanyCode($companyid));
	$line=4;
			$i=0;
			
			foreach($dataReader as $row){
			$this->phpExcel->getActiveSheet()->getStyle("A".$line.":B".$line)->getFont()->setSize("12");;
			$this->phpExcel->getActiveSheet()->getStyle("A".$line.":B".$line)->getFont()->setBold(true);
			$this->phpExcel->setActiveSheetIndex(0)
	->setCellValueByColumnAndRow(0,$line,'Nama Sales')
	->setCellValueByColumnAndRow(1,$line,$row['fullname']);
			$i=0;
			$jumlah[1][0]=0;$jumlah[2][0]=0;$jumlah[3][0]=0;$jumlah[4][0]=0;$jumlah[5][0]=0;$jumlah[6][0]=0;$jumlah[7][0]=0;$jumlah[8][0]=0;$jumlah[9][0]=0;$jumlah[10][0]=0;$jumlah[11][0]=0;$jumlah[12][0]=0;$jumlah[13][0]=0;
			$jumlah[1][1]=0;$jumlah[2][1]=0;$jumlah[3][1]=0;$jumlah[4][1]=0;$jumlah[5][1]=0;$jumlah[6][1]=0;$jumlah[7][1]=0;$jumlah[8][1]=0;$jumlah[9][1]=0;$jumlah[10][1]=0;$jumlah[11][1]=0;$jumlah[12][1]=0;$jumlah[13][1]=0;
					
			$line++;
			$x = $line+1;
			$style = array(
			'alignment' => array(
					'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
					'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
			));
					
			$this->phpExcel->getActiveSheet()->getStyle("A{$line}:A{$x}")->applyFromArray($style);
			$this->phpExcel->getActiveSheet()->getStyle("B{$line}:B{$x}")->applyFromArray($style);
			$this->phpExcel->setActiveSheetIndex(0)
					->mergeCells("A{$line}:A{$x}")
					->mergeCells("B{$line}:B{$x}")
					->mergeCells("C{$line}:D{$line}")
					->mergeCells("E{$line}:F{$line}")
					->mergeCells("G{$line}:H{$line}")
					->mergeCells("I{$line}:J{$line}")
					->mergeCells("K{$line}:L{$line}")
					->mergeCells("M{$line}:N{$line}")
					->mergeCells("O{$line}:P{$line}")
					->mergeCells("Q{$line}:R{$line}")
					->mergeCells("S{$line}:T{$line}")
					->mergeCells("U{$line}:V{$line}")
					->mergeCells("W{$line}:X{$line}")
					->mergeCells("Y{$line}:Z{$line}")
					->mergeCells("AA{$line}:AB{$line}");
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Material Group')
					->setCellValueByColumnAndRow(2,$line,'January')				
					->setCellValueByColumnAndRow(4,$line,'February')
					->setCellValueByColumnAndRow(6,$line,'March')
					->setCellValueByColumnAndRow(8,$line,'April')
					->setCellValueByColumnAndRow(10,$line,'Mei')
					->setCellValueByColumnAndRow(12,$line,'June')
					->setCellValueByColumnAndRow(14,$line,'July')
					->setCellValueByColumnAndRow(16,$line,'August')
					->setCellValueByColumnAndRow(18,$line,'September')
					->setCellValueByColumnAndRow(20,$line,'October')
					->setCellValueByColumnAndRow(22,$line,'November')
					->setCellValueByColumnAndRow(24,$line,'December')
					->setCellValueByColumnAndRow(26,$line,'Summary');
		$line++;   
					
					$sql1 = "select barang, bulan1, bulan2, bulan3, bulan4, bulan5, bulan6, bulan7, bulan8, bulan9, bulan10, bulan11, bulan12, jumlah from 
							(select xxx.description as barang, 
							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan1,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan2,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan3,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan4,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 5 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan5,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan6,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan7,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan8,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan9,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 10
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan10,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan11,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 12
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as bulan12,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid 
							union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by materialgroupid) zz
							where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),'0,0') as jumlah
							from materialgroup xxx) xxxx where bulan1 <> 0 or bulan2 <> 0 or bulan3 <> 0 or bulan4 <> 0 or bulan5 <> 0 or bulan6 <>0 
							or bulan7 <>0 or bulan8 <> 0 or bulan9 <>0 or bulan10 <> 0 or bulan11 <> 0 or bulan12 <> 0";
					
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(2,$line,'Nilai')
					->setCellValueByColumnAndRow(3,$line,'Qty')
											->setCellValueByColumnAndRow(4,$line,'Nilai')
					->setCellValueByColumnAndRow(5,$line,'Qty')
											->setCellValueByColumnAndRow(6,$line,'Nilai')
					->setCellValueByColumnAndRow(7,$line,'Qty')
											->setCellValueByColumnAndRow(8,$line,'Nilai')
					->setCellValueByColumnAndRow(9,$line,'Qty')
											->setCellValueByColumnAndRow(10,$line,'Nilai')
					->setCellValueByColumnAndRow(11,$line,'Qty')
											->setCellValueByColumnAndRow(12,$line,'Nilai')
					->setCellValueByColumnAndRow(13,$line,'Qty')
											->setCellValueByColumnAndRow(14,$line,'Nilai')
					->setCellValueByColumnAndRow(15,$line,'Qty')
											->setCellValueByColumnAndRow(16,$line,'Nilai')
					->setCellValueByColumnAndRow(17,$line,'Qty')
											->setCellValueByColumnAndRow(18,$line,'Nilai')
					->setCellValueByColumnAndRow(19,$line,'Qty')
											->setCellValueByColumnAndRow(20,$line,'Nilai')
					->setCellValueByColumnAndRow(21,$line,'Qty')
											->setCellValueByColumnAndRow(22,$line,'Nilai')
					->setCellValueByColumnAndRow(23,$line,'Qty')
											->setCellValueByColumnAndRow(24,$line,'Nilai')
					->setCellValueByColumnAndRow(25,$line,'Qty')
											->setCellValueByColumnAndRow(26,$line,'Nilai')
					->setCellValueByColumnAndRow(27,$line,'Qty');
					$line++;
							
					$dataReader1 = Yii::app()->db->createCommand($sql1)->queryAll();
					foreach($dataReader1 as $row1){
								 $i+=1;
							for($j=1; $j<=12; $j++){
									$exp[$j] = explode(',',$row1['bulan'.$j]);
							}
							$exp['jumlah'] = explode(',',$row1['jumlah']);
							$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['barang'])
					->setCellValueByColumnAndRow(2,$line,$exp[1][0]/$per)
					->setCellValueByColumnAndRow(3,$line,$exp[1][1]/$per)
											->setCellValueByColumnAndRow(4,$line,$exp[2][0]/$per)
					->setCellValueByColumnAndRow(5,$line,$exp[2][1]/$per)
											->setCellValueByColumnAndRow(6,$line,$exp[3][0]/$per)
					->setCellValueByColumnAndRow(7,$line,$exp[3][1]/$per)
											->setCellValueByColumnAndRow(8,$line,$exp[4][0]/$per)
					->setCellValueByColumnAndRow(9,$line,$exp[4][1]/$per)
											->setCellValueByColumnAndRow(10,$line,$exp[5][0]/$per)
					->setCellValueByColumnAndRow(11,$line,$exp[5][1]/$per)
											->setCellValueByColumnAndRow(12,$line,$exp[6][0]/$per)
					->setCellValueByColumnAndRow(13,$line,$exp[6][1]/$per)
											->setCellValueByColumnAndRow(14,$line,$exp[7][0]/$per)
					->setCellValueByColumnAndRow(15,$line,$exp[7][1]/$per)
											->setCellValueByColumnAndRow(16,$line,$exp[8][0]/$per)
					->setCellValueByColumnAndRow(17,$line,$exp[8][1]/$per)
											->setCellValueByColumnAndRow(18,$line,$exp[9][0]/$per)
					->setCellValueByColumnAndRow(19,$line,$exp[9][1]/$per)
											->setCellValueByColumnAndRow(20,$line,$exp[10][0]/$per)
					->setCellValueByColumnAndRow(21,$line,$exp[10][1]/$per)
											->setCellValueByColumnAndRow(22,$line,$exp[11][0]/$per)
					->setCellValueByColumnAndRow(23,$line,$exp[11][1]/$per)
											->setCellValueByColumnAndRow(24,$line,$exp[12][0]/$per)
					->setCellValueByColumnAndRow(25,$line,$exp[12][1]/$per)
											->setCellValueByColumnAndRow(26,$line,$exp['jumlah'][0]/$per)
					->setCellValueByColumnAndRow(27,$line,$exp['jumlah'][1]/$per);
							$line++;
				$jumlah[1][0] += $exp[1][0]/$per;
				$jumlah[2][0] += $exp[2][0]/$per;
				$jumlah[3][0] += $exp[3][0]/$per;
				$jumlah[4][0] += $exp[4][0]/$per;
				$jumlah[5][0] += $exp[5][0]/$per;
				$jumlah[6][0] += $exp[6][0]/$per;
				$jumlah[7][0] += $exp[7][0]/$per;
				$jumlah[8][0] += $exp[8][0]/$per;
				$jumlah[9][0] += $exp[9][0]/$per;
				$jumlah[10][0] += $exp[10][0]/$per;
				$jumlah[11][0] += $exp[11][0]/$per;
				$jumlah[12][0] += $exp[12][0]/$per;
				$jumlah[13][0] += $exp['jumlah'][0]/$per;
				$jumlah[1][1] += $exp[1][1];
				$jumlah[2][1] += $exp[2][1];
				$jumlah[3][1] += $exp[3][1];
				$jumlah[4][1] += $exp[4][1];
				$jumlah[5][1] += $exp[5][1];
				$jumlah[6][1] += $exp[6][1];
				$jumlah[7][1] += $exp[7][1];
				$jumlah[8][1] += $exp[8][1];
				$jumlah[9][1] += $exp[9][1];
				$jumlah[10][1] += $exp[10][1];
				$jumlah[11][1] += $exp[11][1];
				$jumlah[12][1] += $exp[12][1];
				$jumlah[13][1] += $exp['jumlah'][1];
			}
			$this->phpExcel->getActiveSheet()->getStyle("A".$line.":AB".$line)->getFont()->setBold(true);
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'JUMLAH '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$jumlah[1][0])
				->setCellValueByColumnAndRow(3,$line,$jumlah[1][1])
										->setCellValueByColumnAndRow(4,$line,$jumlah[2][0])
				->setCellValueByColumnAndRow(5,$line,$jumlah[2][1])
										->setCellValueByColumnAndRow(6,$line,$jumlah[3][0])
				->setCellValueByColumnAndRow(7,$line,$jumlah[3][1])
										->setCellValueByColumnAndRow(8,$line,$jumlah[4][0])
				->setCellValueByColumnAndRow(9,$line,$jumlah[4][1])
										->setCellValueByColumnAndRow(10,$line,$jumlah[5][0])
				->setCellValueByColumnAndRow(11,$line,$jumlah[5][1])
										->setCellValueByColumnAndRow(12,$line,$jumlah[6][0])
				->setCellValueByColumnAndRow(13,$line,$jumlah[6][1])
										->setCellValueByColumnAndRow(14,$line,$jumlah[7][0])
				->setCellValueByColumnAndRow(15,$line,$jumlah[7][1])
										->setCellValueByColumnAndRow(16,$line,$jumlah[8][0])
				->setCellValueByColumnAndRow(17,$line,$jumlah[8][1])
										->setCellValueByColumnAndRow(18,$line,$jumlah[9][0])
				->setCellValueByColumnAndRow(19,$line,$jumlah[9][1])
										->setCellValueByColumnAndRow(20,$line,$jumlah[10][0])
				->setCellValueByColumnAndRow(21,$line,$jumlah[10][1])
										->setCellValueByColumnAndRow(22,$line,$jumlah[11][0])
				->setCellValueByColumnAndRow(23,$line,$jumlah[11][1])
										->setCellValueByColumnAndRow(24,$line,$jumlah[12][0])
				->setCellValueByColumnAndRow(25,$line,$jumlah[12][1])
										->setCellValueByColumnAndRow(26,$line,$jumlah[13][0])
				->setCellValueByColumnAndRow(27,$line,$jumlah[13][1]);
			$line = $line+2;
			
			$total[1][0] += $jumlah[1][0];
			$total[2][0] += $jumlah[2][0];
			$total[3][0] += $jumlah[3][0];
			$total[4][0] += $jumlah[4][0];
			$total[5][0] += $jumlah[5][0];
			$total[6][0] += $jumlah[6][0];
			$total[7][0] += $jumlah[7][0];
			$total[8][0] += $jumlah[8][0];
			$total[9][0] += $jumlah[9][0];
			$total[10][0] += $jumlah[10][0];
			$total[11][0] += $jumlah[11][0];
			$total[12][0] += $jumlah[12][0];
			$total[13][0] += $jumlah[13][0];
			$total[1][1] += $jumlah[1][1];
			$total[2][1] += $jumlah[2][1];
			$total[3][1] += $jumlah[3][1];
			$total[4][1] += $jumlah[4][1];
			$total[5][1] += $jumlah[5][1];
			$total[6][1] += $jumlah[6][1];
			$total[7][1] += $jumlah[7][1];
			$total[8][1] += $jumlah[8][1];
			$total[9][1] += $jumlah[9][1];
			$total[10][1] += $jumlah[10][1];
			$total[11][1] += $jumlah[11][1];
			$total[12][1] += $jumlah[12][1];
			$total[13][1] += $jumlah[13][1];
		}
		$this->phpExcel->getActiveSheet()->getStyle("A".$line.":AB".$line)->getFont()->setSize("11");
		$this->phpExcel->getActiveSheet()->getStyle("A".$line.":AB".$line)->getFont()->setBold(true);
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(2,$line,$total[1][0])
			->setCellValueByColumnAndRow(3,$line,$total[1][1])
									->setCellValueByColumnAndRow(4,$line,$total[2][0])
			->setCellValueByColumnAndRow(5,$line,$total[2][1])
									->setCellValueByColumnAndRow(6,$line,$total[3][0])
			->setCellValueByColumnAndRow(7,$line,$total[3][1])
									->setCellValueByColumnAndRow(8,$line,$total[4][0])
			->setCellValueByColumnAndRow(9,$line,$total[4][1])
									->setCellValueByColumnAndRow(10,$line,$total[5][0])
			->setCellValueByColumnAndRow(11,$line,$total[5][1])
									->setCellValueByColumnAndRow(12,$line,$total[6][0])
			->setCellValueByColumnAndRow(13,$line,$total[6][1])
									->setCellValueByColumnAndRow(14,$line,$total[7][0])
			->setCellValueByColumnAndRow(15,$line,$total[7][1])
									->setCellValueByColumnAndRow(16,$line,$total[8][0])
			->setCellValueByColumnAndRow(17,$line,$total[8][1])
									->setCellValueByColumnAndRow(18,$line,$total[9][0])
			->setCellValueByColumnAndRow(19,$line,$total[9][1])
									->setCellValueByColumnAndRow(20,$line,$total[10][0])
			->setCellValueByColumnAndRow(21,$line,$total[10][1])
									->setCellValueByColumnAndRow(22,$line,$total[11][0])
			->setCellValueByColumnAndRow(23,$line,$total[11][1])
									->setCellValueByColumnAndRow(24,$line,$total[12][0])
			->setCellValueByColumnAndRow(25,$line,$total[12][1])
									->setCellValueByColumnAndRow(26,$line,$total[13][0])
			->setCellValueByColumnAndRow(27,$line,$total[13][1]);
			$this->getFooterXLS($this->phpExcel);
	}
	//60
	public function RekapPenjualanReturPenjualanPerSalesPerCustomerBulanPerTahunTotalXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpenjualanpersalespercustomerperbulanpertahuntotal';
		parent::actionDownXLS();
		$year = date('Y',strtotime($enddate));
		$exp = array();
		$total[1][0]=0;$total[2][0]=0;$total[3][0]=0;$total[4][0]=0;$total[5][0]=0;$total[6][0]=0;$total[7][0]=0;$total[8][0]=0;$total[9][0]=0;$total[10][0]=0;$total[11][0]=0;$total[12][0]=0;$total[13][0]=0;
		$total[1][1]=0;$total[2][1]=0;$total[3][1]=0;$total[4][1]=0;$total[5][1]=0;$total[6][1]=0;$total[7][1]=0;$total[8][1]=0;$total[9][1]=0;$total[10][1]=0;$total[11][1]=0;$total[12][1]=0;$total[13][1]=0;
		$sql = "select employeeid, fullname from 
						(select distinct f.employeeid,f.fullname
							from soheader b
							join addressbook c on c.addressbookid = b.addressbookid
							join salesarea k on k.salesareaid = c.salesareaid
							join giheader h on h.soheaderid = b.soheaderid
							join gidetail d on d.giheaderid = h.giheaderid
							join product e on e.productid = d.productid
							join employee f on f.employeeid = b.employeeid
							join sloc i on i.slocid = d.slocid
							join invoice j on j.giheaderid = h.giheaderid  
					where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
					and f.fullname like '%".$employee."%' 
					and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
					and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
					union
							select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,$year)
			->setCellValueByColumnAndRow(6,2,GetCompanyCode($companyid));
		$line=4;
			
		foreach($dataReader as $row)
		{
			$this->phpExcel->getActiveSheet()->getStyle("A".$line.":B".$line)->getFont()->setSize("12");
			$this->phpExcel->getActiveSheet()->getStyle("A".$line.":B".$line)->getFont()->setBold(true);
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Nama Sales')
				->setCellValueByColumnAndRow(1,$line,$row['fullname']);
			
			$i=0;
			$jumlah[1][0]=0;$jumlah[2][0]=0;$jumlah[3][0]=0;$jumlah[4][0]=0;$jumlah[5][0]=0;$jumlah[6][0]=0;$jumlah[7][0]=0;$jumlah[8][0]=0;$jumlah[9][0]=0;$jumlah[10][0]=0;$jumlah[11][0]=0;$jumlah[12][0]=0;$jumlah[13][0]=0;
			$jumlah[1][1]=0;$jumlah[2][1]=0;$jumlah[3][1]=0;$jumlah[4][1]=0;$jumlah[5][1]=0;$jumlah[6][1]=0;$jumlah[7][1]=0;$jumlah[8][1]=0;$jumlah[9][1]=0;$jumlah[10][1]=0;$jumlah[11][1]=0;$jumlah[12][1]=0;$jumlah[13][1]=0;
					
			$line++;
			$x = $line+1;
			$style = array(
				'alignment' => array(
				'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER,
				'vertical' => PHPExcel_Style_Alignment::VERTICAL_CENTER
			));
					
			$this->phpExcel->getActiveSheet()->getStyle("A{$line}:AB{$line}")->applyFromArray($style);
			$this->phpExcel->setActiveSheetIndex(0)
				->mergeCells("A{$line}:A{$x}")
				->mergeCells("B{$line}:B{$x}")
				->mergeCells("C{$line}:D{$line}")
				->mergeCells("E{$line}:F{$line}")
				->mergeCells("G{$line}:H{$line}")
				->mergeCells("I{$line}:J{$line}")
				->mergeCells("K{$line}:L{$line}")
				->mergeCells("M{$line}:N{$line}")
				->mergeCells("O{$line}:P{$line}")
				->mergeCells("Q{$line}:R{$line}")
				->mergeCells("S{$line}:T{$line}")
				->mergeCells("U{$line}:V{$line}")
				->mergeCells("W{$line}:X{$line}")
				->mergeCells("Y{$line}:Z{$line}")
				->mergeCells("AA{$line}:AB{$line}");
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Customer')
				->setCellValueByColumnAndRow(2,$line,'January')				
				->setCellValueByColumnAndRow(4,$line,'February')
				->setCellValueByColumnAndRow(6,$line,'March')
				->setCellValueByColumnAndRow(8,$line,'April')
				->setCellValueByColumnAndRow(10,$line,'Mei')
				->setCellValueByColumnAndRow(12,$line,'June')
				->setCellValueByColumnAndRow(14,$line,'July')
				->setCellValueByColumnAndRow(16,$line,'August')
				->setCellValueByColumnAndRow(18,$line,'September')
				->setCellValueByColumnAndRow(20,$line,'October')
				->setCellValueByColumnAndRow(22,$line,'November')
				->setCellValueByColumnAndRow(24,$line,'December')
				->setCellValueByColumnAndRow(26,$line,'Summary');
			$line++;
					
			$sql1 = "select custname, bulan1, bulan2, bulan3, bulan4, bulan5, bulan6, bulan7, bulan8, bulan9, bulan10, bulan11, bulan12, jumlah from 
							(select xxx.fullname as custname, 
							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan1,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan2,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan3,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan4,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 5 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan5,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan6,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan7,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan8,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan9,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 10
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan10,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan11,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and month (a.invoicedate) = 12
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as bulan12,

							ifnull((select cast(concat(round(sum(netto),2),',',round(sum(qty),0)) as char) as netto from
							(select addressbookid,sum(qty) as qty,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,d.addressbookid,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = {$companyid} and h.sloccode like '%{$sloc}%' and e.employeeid= {$row['employeeid']} and
							e.fullname like '%{$employee}%' and f.areaname like '%{$salesarea}%' and i.productname like '%{$product}%' 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by addressbookid 
							union
							select addressbookid,-1*sum(qty) as qty,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*a.price) as nett,k.addressbookid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = {$companyid} and b.recordstatus = 3 and j.sloccode like '%{$sloc}%' 
							and l.fullname like '%{$employee}%' and m.areaname like '%{$salesarea}%'
							and i.productname like '%{$product}%' and l.employeeid = {$row['employeeid']}
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z group by addressbookid) zz
							where zz.addressbookid = xxx.addressbookid group by addressbookid),'0,0') as jumlah
							from addressbook xxx) xxxx where bulan1 <> 0 or bulan2 <> 0 or bulan3 <> 0 or bulan4 <> 0 or bulan5 <> 0 or bulan6 <>0 
							or bulan7 <>0 or bulan8 <> 0 or bulan9 <>0 or bulan10 <> 0 or bulan11 <> 0 or bulan12 <> 0";
			
			$this->phpExcel->getActiveSheet()->getStyle("A{$line}:AB{$line}")->applyFromArray($style);
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(2,$line,'Nilai')
				->setCellValueByColumnAndRow(3,$line,'Qty')
										->setCellValueByColumnAndRow(4,$line,'Nilai')
				->setCellValueByColumnAndRow(5,$line,'Qty')
										->setCellValueByColumnAndRow(6,$line,'Nilai')
				->setCellValueByColumnAndRow(7,$line,'Qty')
										->setCellValueByColumnAndRow(8,$line,'Nilai')
				->setCellValueByColumnAndRow(9,$line,'Qty')
										->setCellValueByColumnAndRow(10,$line,'Nilai')
				->setCellValueByColumnAndRow(11,$line,'Qty')
										->setCellValueByColumnAndRow(12,$line,'Nilai')
				->setCellValueByColumnAndRow(13,$line,'Qty')
										->setCellValueByColumnAndRow(14,$line,'Nilai')
				->setCellValueByColumnAndRow(15,$line,'Qty')
										->setCellValueByColumnAndRow(16,$line,'Nilai')
				->setCellValueByColumnAndRow(17,$line,'Qty')
										->setCellValueByColumnAndRow(18,$line,'Nilai')
				->setCellValueByColumnAndRow(19,$line,'Qty')
										->setCellValueByColumnAndRow(20,$line,'Nilai')
				->setCellValueByColumnAndRow(21,$line,'Qty')
										->setCellValueByColumnAndRow(22,$line,'Nilai')
				->setCellValueByColumnAndRow(23,$line,'Qty')
										->setCellValueByColumnAndRow(24,$line,'Nilai')
				->setCellValueByColumnAndRow(25,$line,'Qty')
										->setCellValueByColumnAndRow(26,$line,'Nilai')
				->setCellValueByColumnAndRow(27,$line,'Qty');
			$line++;
							
			$dataReader1 = Yii::app()->db->createCommand($sql1)->queryAll();
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				for($j=1; $j<=12; $j++)
				{
					$exp[$j] = explode(',',$row1['bulan'.$j]);
				}
				$exp['jumlah'] = explode(',',$row1['jumlah']);
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['custname'])
					->setCellValueByColumnAndRow(2,$line,$exp[1][0]/$per)
					->setCellValueByColumnAndRow(3,$line,$exp[1][1]/$per)
											->setCellValueByColumnAndRow(4,$line,$exp[2][0]/$per)
					->setCellValueByColumnAndRow(5,$line,$exp[2][1]/$per)
											->setCellValueByColumnAndRow(6,$line,$exp[3][0]/$per)
					->setCellValueByColumnAndRow(7,$line,$exp[3][1]/$per)
											->setCellValueByColumnAndRow(8,$line,$exp[4][0]/$per)
					->setCellValueByColumnAndRow(9,$line,$exp[4][1]/$per)
											->setCellValueByColumnAndRow(10,$line,$exp[5][0]/$per)
					->setCellValueByColumnAndRow(11,$line,$exp[5][1]/$per)
											->setCellValueByColumnAndRow(12,$line,$exp[6][0]/$per)
					->setCellValueByColumnAndRow(13,$line,$exp[6][1]/$per)
											->setCellValueByColumnAndRow(14,$line,$exp[7][0]/$per)
					->setCellValueByColumnAndRow(15,$line,$exp[7][1]/$per)
											->setCellValueByColumnAndRow(16,$line,$exp[8][0]/$per)
					->setCellValueByColumnAndRow(17,$line,$exp[8][1]/$per)
											->setCellValueByColumnAndRow(18,$line,$exp[9][0]/$per)
					->setCellValueByColumnAndRow(19,$line,$exp[9][1]/$per)
											->setCellValueByColumnAndRow(20,$line,$exp[10][0]/$per)
					->setCellValueByColumnAndRow(21,$line,$exp[10][1]/$per)
											->setCellValueByColumnAndRow(22,$line,$exp[11][0]/$per)
					->setCellValueByColumnAndRow(23,$line,$exp[11][1]/$per)
											->setCellValueByColumnAndRow(24,$line,$exp[12][0]/$per)
					->setCellValueByColumnAndRow(25,$line,$exp[12][1]/$per)
											->setCellValueByColumnAndRow(26,$line,$exp['jumlah'][0]/$per)
					->setCellValueByColumnAndRow(27,$line,$exp['jumlah'][1]/$per);
				$line++;
				$jumlah[1][0] += $exp[1][0]/$per;
				$jumlah[2][0] += $exp[2][0]/$per;
				$jumlah[3][0] += $exp[3][0]/$per;
				$jumlah[4][0] += $exp[4][0]/$per;
				$jumlah[5][0] += $exp[5][0]/$per;
				$jumlah[6][0] += $exp[6][0]/$per;
				$jumlah[7][0] += $exp[7][0]/$per;
				$jumlah[8][0] += $exp[8][0]/$per;
				$jumlah[9][0] += $exp[9][0]/$per;
				$jumlah[10][0] += $exp[10][0]/$per;
				$jumlah[11][0] += $exp[11][0]/$per;
				$jumlah[12][0] += $exp[12][0]/$per;
				$jumlah[13][0] += $exp['jumlah'][0]/$per;
				$jumlah[1][1] += $exp[1][1];
				$jumlah[2][1] += $exp[2][1];
				$jumlah[3][1] += $exp[3][1];
				$jumlah[4][1] += $exp[4][1];
				$jumlah[5][1] += $exp[5][1];
				$jumlah[6][1] += $exp[6][1];
				$jumlah[7][1] += $exp[7][1];
				$jumlah[8][1] += $exp[8][1];
				$jumlah[9][1] += $exp[9][1];
				$jumlah[10][1] += $exp[10][1];
				$jumlah[11][1] += $exp[11][1];
				$jumlah[12][1] += $exp[12][1];
				$jumlah[13][1] += $exp['jumlah'][1];
			}
			$this->phpExcel->getActiveSheet()->getStyle("A".$line.":AB".$line)->getFont()->setBold(true);
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'JUMLAH '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$jumlah[1][0])
				->setCellValueByColumnAndRow(3,$line,$jumlah[1][1])
										->setCellValueByColumnAndRow(4,$line,$jumlah[2][0])
				->setCellValueByColumnAndRow(5,$line,$jumlah[2][1])
										->setCellValueByColumnAndRow(6,$line,$jumlah[3][0])
				->setCellValueByColumnAndRow(7,$line,$jumlah[3][1])
										->setCellValueByColumnAndRow(8,$line,$jumlah[4][0])
				->setCellValueByColumnAndRow(9,$line,$jumlah[4][1])
										->setCellValueByColumnAndRow(10,$line,$jumlah[5][0])
				->setCellValueByColumnAndRow(11,$line,$jumlah[5][1])
										->setCellValueByColumnAndRow(12,$line,$jumlah[6][0])
				->setCellValueByColumnAndRow(13,$line,$jumlah[6][1])
										->setCellValueByColumnAndRow(14,$line,$jumlah[7][0])
				->setCellValueByColumnAndRow(15,$line,$jumlah[7][1])
										->setCellValueByColumnAndRow(16,$line,$jumlah[8][0])
				->setCellValueByColumnAndRow(17,$line,$jumlah[8][1])
										->setCellValueByColumnAndRow(18,$line,$jumlah[9][0])
				->setCellValueByColumnAndRow(19,$line,$jumlah[9][1])
										->setCellValueByColumnAndRow(20,$line,$jumlah[10][0])
				->setCellValueByColumnAndRow(21,$line,$jumlah[10][1])
										->setCellValueByColumnAndRow(22,$line,$jumlah[11][0])
				->setCellValueByColumnAndRow(23,$line,$jumlah[11][1])
										->setCellValueByColumnAndRow(24,$line,$jumlah[12][0])
				->setCellValueByColumnAndRow(25,$line,$jumlah[12][1])
										->setCellValueByColumnAndRow(26,$line,$jumlah[13][0])
				->setCellValueByColumnAndRow(27,$line,$jumlah[13][1]);
			$line = $line+2;
			
			$total[1][0] += $jumlah[1][0];
			$total[2][0] += $jumlah[2][0];
			$total[3][0] += $jumlah[3][0];
			$total[4][0] += $jumlah[4][0];
			$total[5][0] += $jumlah[5][0];
			$total[6][0] += $jumlah[6][0];
			$total[7][0] += $jumlah[7][0];
			$total[8][0] += $jumlah[8][0];
			$total[9][0] += $jumlah[9][0];
			$total[10][0] += $jumlah[10][0];
			$total[11][0] += $jumlah[11][0];
			$total[12][0] += $jumlah[12][0];
			$total[13][0] += $jumlah[13][0];
			$total[1][1] += $jumlah[1][1];
			$total[2][1] += $jumlah[2][1];
			$total[3][1] += $jumlah[3][1];
			$total[4][1] += $jumlah[4][1];
			$total[5][1] += $jumlah[5][1];
			$total[6][1] += $jumlah[6][1];
			$total[7][1] += $jumlah[7][1];
			$total[8][1] += $jumlah[8][1];
			$total[9][1] += $jumlah[9][1];
			$total[10][1] += $jumlah[10][1];
			$total[11][1] += $jumlah[11][1];
			$total[12][1] += $jumlah[12][1];
			$total[13][1] += $jumlah[13][1];
		}
		$this->phpExcel->getActiveSheet()->getStyle("A".$line.":AB".$line)->getFont()->setSize("11");
		$this->phpExcel->getActiveSheet()->getStyle("A".$line.":AB".$line)->getFont()->setBold(true);
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(2,$line,$total[1][0])
			->setCellValueByColumnAndRow(3,$line,$total[1][1])
									->setCellValueByColumnAndRow(4,$line,$total[2][0])
			->setCellValueByColumnAndRow(5,$line,$total[2][1])
									->setCellValueByColumnAndRow(6,$line,$total[3][0])
			->setCellValueByColumnAndRow(7,$line,$total[3][1])
									->setCellValueByColumnAndRow(8,$line,$total[4][0])
			->setCellValueByColumnAndRow(9,$line,$total[4][1])
									->setCellValueByColumnAndRow(10,$line,$total[5][0])
			->setCellValueByColumnAndRow(11,$line,$total[5][1])
									->setCellValueByColumnAndRow(12,$line,$total[6][0])
			->setCellValueByColumnAndRow(13,$line,$total[6][1])
									->setCellValueByColumnAndRow(14,$line,$total[7][0])
			->setCellValueByColumnAndRow(15,$line,$total[7][1])
									->setCellValueByColumnAndRow(16,$line,$total[8][0])
			->setCellValueByColumnAndRow(17,$line,$total[8][1])
									->setCellValueByColumnAndRow(18,$line,$total[9][0])
			->setCellValueByColumnAndRow(19,$line,$total[9][1])
									->setCellValueByColumnAndRow(20,$line,$total[10][0])
			->setCellValueByColumnAndRow(21,$line,$total[10][1])
									->setCellValueByColumnAndRow(22,$line,$total[11][0])
			->setCellValueByColumnAndRow(23,$line,$total[11][1])
									->setCellValueByColumnAndRow(24,$line,$total[12][0])
			->setCellValueByColumnAndRow(25,$line,$total[12][1])
									->setCellValueByColumnAndRow(26,$line,$total[13][0])
			->setCellValueByColumnAndRow(27,$line,$total[13][1]);
		$this->getFooterXLS($this->phpExcel);
	}
	//61
	public function RekapPenjualanReturAreaCustomerBarangPerBulanPerTahunRincianNilaiXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturareacustomerbarangperbulanpertahunrinciannilai';
		parent::actionDownXLS();
		$i=0; 
 $totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
		if(isset($spv)&& $spv!=''){
				$spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
			}else{
				$spvid = "";
			}
			 if(isset($spv)&& $spv!=''){
				$spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
			}else{
				$spvid1 = "";
			}
			if(isset($spv)&& $spv!=''){
				$spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
			}else{
				$spvid2 = "";
			}
			if(isset($spv)&& $spv!=''){
				$spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
			}else{
				$spvid3 = "";
			}  
			
	$sql = "select distinct salesareaid,areaname from 
			(select distinct k.salesareaid,k.areaname
			from soheader b
			join sodetail c on c.soheaderid = b.soheaderid
			join gidetail d on d.sodetailid = c.sodetailid
			join product e on e.productid = d.productid
			join employee f on f.employeeid = b.employeeid
			join addressbook g on g.addressbookid = b.addressbookid  
			join giheader h on h.giheaderid = d.giheaderid
			join sloc i on i.slocid = d.slocid
			join invoice j on j.giheaderid = h.giheaderid
			join salesarea k on k.salesareaid = g.salesareaid
			where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
			and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
			and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
			and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) =	year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
			union
			select distinct m.salesareaid,m.areaname
			from notagirpro a
			join notagir b on b.notagirid=a.notagirid
			join gireturdetail c on c.gireturdetailid=a.gireturdetailid
			join giretur d on d.gireturid=b.gireturid
			join gidetail e on e.gidetailid=c.gidetailid
			join giheader f on f.giheaderid=d.giheaderid
			join sodetail g on g.sodetailid=e.sodetailid
			join soheader h on h.soheaderid=f.soheaderid
			join product i on i.productid = a.productid
			join sloc j on j.slocid = a.slocid
			join addressbook k on k.addressbookid = h.addressbookid
			join employee l on l.employeeid = h.employeeid
			join salesarea m on m.salesareaid = k.salesareaid
			where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
			and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
			and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by areaname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
									->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
									->setCellValueByColumnAndRow(16,1,GetCompanyCode($companyid));
					$line=4;
	
	
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Wilayah')
									->setCellValueByColumnAndRow(2,$line,'Customer')				
									->setCellValueByColumnAndRow(3,$line,'Nama Barang')
									->setCellValueByColumnAndRow(4,$line,'Januari')
									->setCellValueByColumnAndRow(5,$line,'Februari')
									->setCellValueByColumnAndRow(6,$line,'Maret')
									->setCellValueByColumnAndRow(7,$line,'April')
									->setCellValueByColumnAndRow(8,$line,'Mei')
									->setCellValueByColumnAndRow(9,$line,'Juni')
									->setCellValueByColumnAndRow(10,$line,'Juli')
									->setCellValueByColumnAndRow(11,$line,'Agustus')
									->setCellValueByColumnAndRow(12,$line,'September')
									->setCellValueByColumnAndRow(13,$line,'Oktober')
									->setCellValueByColumnAndRow(14,$line,'Nopember')
									->setCellValueByColumnAndRow(15,$line,'Desember')
									->setCellValueByColumnAndRow(16,$line,'Jumlah') ;
				 $line++;
		
		foreach($dataReader as $row)
		{              
							$sql1 = "select distinct addressbookid,fullname from 
						(select distinct zf.addressbookid,zf.fullname
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid2." and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')						
						union
						select distinct k.addressbookid,k.fullname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						join materialgroup o on o.materialgroupid=n.materialgroupid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();			
					$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
			foreach($dataReader1 as $row1)
							{
							$sql2 = "select *
							from (select o.productname,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 1
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as januari,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 2
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as februari,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 3
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as maret,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 4
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as april,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as mei,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 6
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as juni,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 7
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as juli,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 8
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as agustus,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 9
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as september,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 10
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as oktober,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as nopember,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 12
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as desember,
						ifnull((select sum(netto) as netto from 
							(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and f.salesareaid = ".$row['salesareaid']." 
							and d.addressbookid = ".$row1['addressbookid']."
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
							union
							select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
							(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
							and k.addressbookid = ".$row1['addressbookid']."
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
							where zz.productid = o.productid),0) as jumlah
							from product o 
							order by productname) zzz
							where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
							";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				foreach($dataReader2 as $row2)
									{
										$this->phpExcel->setActiveSheetIndex(0)
												->setCellValueByColumnAndRow(0,$line,$i+=1)
												->setCellValueByColumnAndRow(1,$line,$row['areaname'])
												->setCellValueByColumnAndRow(2,$line,$row1['fullname'])							
												->setCellValueByColumnAndRow(3,$line,$row2['productname'])
												->setCellValueByColumnAndRow(4,$line,$row2['januari']/$per)
												->setCellValueByColumnAndRow(5,$line,$row2['februari']/$per)
												->setCellValueByColumnAndRow(6,$line,$row2['maret']/$per)
												->setCellValueByColumnAndRow(7,$line,$row2['april']/$per)
												->setCellValueByColumnAndRow(8,$line,$row2['mei']/$per)
												->setCellValueByColumnAndRow(9,$line,$row2['juni']/$per)
												->setCellValueByColumnAndRow(10,$line,$row2['juli']/$per)
												->setCellValueByColumnAndRow(11,$line,$row2['agustus']/$per)
												->setCellValueByColumnAndRow(12,$line,$row2['september']/$per)
												->setCellValueByColumnAndRow(13,$line,$row2['oktober']/$per)
												->setCellValueByColumnAndRow(14,$line,$row2['nopember']/$per)
												->setCellValueByColumnAndRow(15,$line,$row2['desember']/$per)
												->setCellValueByColumnAndRow(16,$line,$row2['jumlah']/$per);
						$line++;
										$totaljanuari += $row2['januari']/$per;
										$totalfebruari += $row2['februari']/$per;
										$totalmaret += $row2['maret']/$per;
										$totalapril += $row2['april']/$per;
										$totalmei += $row2['mei']/$per;
										$totaljuni += $row2['juni']/$per;
										$totaljuli += $row2['juli']/$per;
										$totalagustus += $row2['agustus']/$per;
										$totalseptember += $row2['september']/$per;
										$totaloktober += $row2['oktober']/$per;
										$totalnopember += $row2['nopember']/$per;
										$totaldesember += $row2['desember']/$per;
										$totaljumlah += $row2['jumlah']/$per;
									}
									$totaljanuari1 += $totaljanuari;
									$totalfebruari1 += $totalfebruari;
									$totalmaret1 += $totalmaret;
									$totalapril1 += $totalapril;
									$totalmei1 += $totalmei;
									$totaljuni1 += $totaljuni;
									$totaljuli1 += $totaljuli;
									$totalagustus1 += $totalagustus;
									$totalseptember1 += $totalseptember;
									$totaloktober1 += $totaloktober;
									$totalnopember1 += $totalnopember;
									$totaldesember1 += $totaldesember;
									$totaljumlah1 += $totaljumlah;
							}
								$totaljanuari2 += $totaljanuari1;
								$totalfebruari2 += $totalfebruari1;
								$totalmaret2 += $totalmaret1;
								$totalapril2 += $totalapril1;
								$totalmei2 += $totalmei1;
								$totaljuni2 += $totaljuni1;
								$totaljuli2 += $totaljuli1;
								$totalagustus2 += $totalagustus1;
								$totalseptember2 += $totalseptember1;
								$totaloktober2 += $totaloktober1;
								$totalnopember2 += $totalnopember1;
								$totaldesember2 += $totaldesember1;
								$totaljumlah2 += $totaljumlah1;
					}
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
									->setCellValueByColumnAndRow(4,$line,$totaljanuari2)
									->setCellValueByColumnAndRow(5,$line,$totalfebruari2)
									->setCellValueByColumnAndRow(6,$line,$totalmaret2)
									->setCellValueByColumnAndRow(7,$line,$totalapril2)
									->setCellValueByColumnAndRow(8,$line,$totalmei2)
									->setCellValueByColumnAndRow(9,$line,$totaljuni2)
									->setCellValueByColumnAndRow(10,$line,$totaljuli2)
									->setCellValueByColumnAndRow(11,$line,$totalagustus2)
									->setCellValueByColumnAndRow(12,$line,$totalseptember2)
									->setCellValueByColumnAndRow(13,$line,$totaloktober2)
									->setCellValueByColumnAndRow(14,$line,$totalnopember2)
									->setCellValueByColumnAndRow(15,$line,$totaldesember2)
									->setCellValueByColumnAndRow(16,$line,$totaljumlah2);
							$line+=2;
		$this->getFooterXLS($this->phpExcel);
	}
	//62
	public function RekapPenjualanReturAreaCustomerBarangPerBulanPerTahunRincianQtyXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturareacustomerbarangperbulanpertahunrincianqty';
		parent::actionDownXLS();
		$i=0; 
 $totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
		if(isset($spv)&& $spv!=''){
				$spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
			}else{
				$spvid = "";
			}
			 if(isset($spv)&& $spv!=''){
				$spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
			}else{
				$spvid1 = "";
			}
			if(isset($spv)&& $spv!=''){
				$spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
			}else{
				$spvid2 = "";
			}
			if(isset($spv)&& $spv!=''){
				$spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
			}else{
				$spvid3 = "";
			}  
			
			
	$sql = "select distinct salesareaid,areaname from 
			(select distinct k.salesareaid,k.areaname
			from soheader b
			join sodetail c on c.soheaderid = b.soheaderid
			join gidetail d on d.sodetailid = c.sodetailid
			join product e on e.productid = d.productid
			join employee f on f.employeeid = b.employeeid
			join addressbook g on g.addressbookid = b.addressbookid  
			join giheader h on h.giheaderid = d.giheaderid
			join sloc i on i.slocid = d.slocid
			join invoice j on j.giheaderid = h.giheaderid
			join salesarea k on k.salesareaid = g.salesareaid
			where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
			and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
			and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
			and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) =	year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
			union
			select distinct m.salesareaid,m.areaname
			from notagirpro a
			join notagir b on b.notagirid=a.notagirid
			join gireturdetail c on c.gireturdetailid=a.gireturdetailid
			join giretur d on d.gireturid=b.gireturid
			join gidetail e on e.gidetailid=c.gidetailid
			join giheader f on f.giheaderid=d.giheaderid
			join sodetail g on g.sodetailid=e.sodetailid
			join soheader h on h.soheaderid=f.soheaderid
			join product i on i.productid = a.productid
			join sloc j on j.slocid = a.slocid
			join addressbook k on k.addressbookid = h.addressbookid
			join employee l on l.employeeid = h.employeeid
			join salesarea m on m.salesareaid = k.salesareaid
			where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
			and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
			and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by areaname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
									->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
									->setCellValueByColumnAndRow(16,1,GetCompanyCode($companyid));
					$line=4;
	
	
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Wilayah')
									->setCellValueByColumnAndRow(2,$line,'Customer')				
									->setCellValueByColumnAndRow(3,$line,'Nama Barang')
									->setCellValueByColumnAndRow(4,$line,'Januari')
									->setCellValueByColumnAndRow(5,$line,'Februari')
									->setCellValueByColumnAndRow(6,$line,'Maret')
									->setCellValueByColumnAndRow(7,$line,'April')
									->setCellValueByColumnAndRow(8,$line,'Mei')
									->setCellValueByColumnAndRow(9,$line,'Juni')
									->setCellValueByColumnAndRow(10,$line,'Juli')
									->setCellValueByColumnAndRow(11,$line,'Agustus')
									->setCellValueByColumnAndRow(12,$line,'September')
									->setCellValueByColumnAndRow(13,$line,'Oktober')
									->setCellValueByColumnAndRow(14,$line,'Nopember')
									->setCellValueByColumnAndRow(15,$line,'Desember')
									->setCellValueByColumnAndRow(16,$line,'Jumlah') ;
				 $line++;
		
		foreach($dataReader as $row)
		{              
						 $sql1 = "select distinct addressbookid,fullname from 
						(select distinct zf.addressbookid,zf.fullname
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and invoiceno not like '%-%-%' and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' ".$spvid2." and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')						
						union
						select distinct k.addressbookid,k.fullname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join productplant n on n.productid=a.productid and n.slocid=a.slocid
						join materialgroup o on o.materialgroupid=n.materialgroupid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();				
					$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
			foreach($dataReader1 as $row1)
							{
						 $sql2 = "select *
								from (select o.productname,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 1
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 1
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as januari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 2
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 2
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as februari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 3
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 3
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as maret,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 4
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 4
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as april,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 5
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 5
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as mei,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 6
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 6
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juni,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 7
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 7
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juli,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 8
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 8
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as agustus,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 9
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 9
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as september,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 10
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 10
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as oktober,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 11
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 11
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as nopember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']." and month(a.invoicedate) = 12
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']." and month(d.gireturdate) = 12
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as desember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and f.salesareaid = ".$row['salesareaid']." 
								and d.addressbookid = ".$row1['addressbookid']."
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." 
								and k.addressbookid = ".$row1['addressbookid']."
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as jumlah
								from product o 
								order by productname) zzz
								where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
								";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				foreach($dataReader2 as $row2)
									{
										$this->phpExcel->setActiveSheetIndex(0)
												->setCellValueByColumnAndRow(0,$line,$i+=1)
												->setCellValueByColumnAndRow(1,$line,$row['areaname'])
												->setCellValueByColumnAndRow(2,$line,$row1['fullname'])							
												->setCellValueByColumnAndRow(3,$line,$row2['productname'])
												->setCellValueByColumnAndRow(4,$line,$row2['januari'])
												->setCellValueByColumnAndRow(5,$line,$row2['februari'])
												->setCellValueByColumnAndRow(6,$line,$row2['maret'])
												->setCellValueByColumnAndRow(7,$line,$row2['april'])
												->setCellValueByColumnAndRow(8,$line,$row2['mei'])
												->setCellValueByColumnAndRow(9,$line,$row2['juni'])
												->setCellValueByColumnAndRow(10,$line,$row2['juli'])
												->setCellValueByColumnAndRow(11,$line,$row2['agustus'])
												->setCellValueByColumnAndRow(12,$line,$row2['september'])
												->setCellValueByColumnAndRow(13,$line,$row2['oktober'])
												->setCellValueByColumnAndRow(14,$line,$row2['nopember'])
												->setCellValueByColumnAndRow(15,$line,$row2['desember'])
												->setCellValueByColumnAndRow(16,$line,$row2['jumlah']) ;
						$line++;
										$totaljanuari += $row2['januari'];
										$totalfebruari += $row2['februari'];
										$totalmaret += $row2['maret'];
										$totalapril += $row2['april'];
										$totalmei += $row2['mei'];
										$totaljuni += $row2['juni'];
										$totaljuli += $row2['juli'];
										$totalagustus += $row2['agustus'];
										$totalseptember += $row2['september'];
										$totaloktober += $row2['oktober'];
										$totalnopember += $row2['nopember'];
										$totaldesember += $row2['desember'];
										$totaljumlah += $row2['jumlah'];
									}
									$totaljanuari1 += $totaljanuari;
									$totalfebruari1 += $totalfebruari;
									$totalmaret1 += $totalmaret;
									$totalapril1 += $totalapril;
									$totalmei1 += $totalmei;
									$totaljuni1 += $totaljuni;
									$totaljuli1 += $totaljuli;
									$totalagustus1 += $totalagustus;
									$totalseptember1 += $totalseptember;
									$totaloktober1 += $totaloktober;
									$totalnopember1 += $totalnopember;
									$totaldesember1 += $totaldesember;
									$totaljumlah1 += $totaljumlah;
							}
								$totaljanuari2 += $totaljanuari1;
								$totalfebruari2 += $totalfebruari1;
								$totalmaret2 += $totalmaret1;
								$totalapril2 += $totalapril1;
								$totalmei2 += $totalmei1;
								$totaljuni2 += $totaljuni1;
								$totaljuli2 += $totaljuli1;
								$totalagustus2 += $totalagustus1;
								$totalseptember2 += $totalseptember1;
								$totaloktober2 += $totaloktober1;
								$totalnopember2 += $totalnopember1;
								$totaldesember2 += $totaldesember1;
								$totaljumlah2 += $totaljumlah1;
					}
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
									->setCellValueByColumnAndRow(4,$line,$totaljanuari2)
									->setCellValueByColumnAndRow(5,$line,$totalfebruari2)
									->setCellValueByColumnAndRow(6,$line,$totalmaret2)
									->setCellValueByColumnAndRow(7,$line,$totalapril2)
									->setCellValueByColumnAndRow(8,$line,$totalmei2)
									->setCellValueByColumnAndRow(9,$line,$totaljuni2)
									->setCellValueByColumnAndRow(10,$line,$totaljuli2)
									->setCellValueByColumnAndRow(11,$line,$totalagustus2)
									->setCellValueByColumnAndRow(12,$line,$totalseptember2)
									->setCellValueByColumnAndRow(13,$line,$totaloktober2)
									->setCellValueByColumnAndRow(14,$line,$totalnopember2)
									->setCellValueByColumnAndRow(15,$line,$totaldesember2)
									->setCellValueByColumnAndRow(16,$line,$totaljumlah2);
							$line+=2;
		$this->getFooterXLS($this->phpExcel);
	}
	//63
	public function LaporanLatLngXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='laporanlatlng';
			parent::actionDownXLS();
			
			$sql = "select distinct a.addressbookid, a.fullname, e.cityname, e.cityid, c.addressname, c.rt, c.rw, d.mobilephone, d.phoneno, d.emailaddress, c.lat, c.lng, b.areaname
            from addressbook a
            left join salesarea b on b.salesareaid = a.salesareaid
            left join address c on c.addressbookid = a.addressbookid
            left join addresscontact d on d.addressbookid = a.addressbookid
            left join city e on e.cityid = c.cityid ";
			
			$where = "where ((c.lat = 0 ) or (c.lng = 0))";
			if(isset($customer) && $customer!=''){
					$where .= " and a.fullname like '%".$customer."%' ";
			}
			if(isset($salesarea) && $salesarea!=''){
					$where .= " and b.areaname like '%".$salesarea."%' ";
			}
			#$where .= " AND b.startdate BETWEEN '".$startdate."' AND '".$enddate."' ORDER BY a.empplanid DESC";
			#$where .= " GROUP BY a.addressbookid";
			
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
									->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
									->setCellValueByColumnAndRow(16,1,GetCompanyCode($companyid));
					$line=4;
	
	
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Nama Customer')
									->setCellValueByColumnAndRow(2,$line,'Alamat')				
									->setCellValueByColumnAndRow(3,$line,'Kota')
									->setCellValueByColumnAndRow(4,$line,'No HP')
									->setCellValueByColumnAndRow(5,$line,'No Telp')
									->setCellValueByColumnAndRow(6,$line,'Email');
				 $line++;
		$i=0;
			$result = Yii::app()->db->createCommand($sql.$where)->queryAll();
			foreach($result as $row){
					 $this->phpExcel->setActiveSheetIndex(0)
												->setCellValueByColumnAndRow(0,$line,$i+=1)
												->setCellValueByColumnAndRow(1,$line,$row['fullname'])
												->setCellValueByColumnAndRow(2,$line,$row['addressname'].' RT '.$row['rw'].' RW '.$row['rw'])							
												->setCellValueByColumnAndRow(3,$line,$row['cityname'])
												->setCellValueByColumnAndRow(4,$line,$row['mobilephone'])
												->setCellValueByColumnAndRow(5,$line,$row['phoneno'])
												->setCellValueByColumnAndRow(6,$line,$row['emailaddress']);
						$line++;
			}
			$this->getFooterXLS($this->phpExcel);
	}
	//64
	public function LaporanFotoXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='laporanfoto';
			parent::actionDownXLS();
			
			$sql = "SELECT a.addressbookid, a.fullname, e.cityname, e.cityid, c.addressname, c.rt, c.rw, d.mobilephone, d.phoneno, d.emailaddress
							FROM addressbook a
							LEFT JOIN salesarea b ON b.salesareaid = a.salesareaid
							LEFT JOIN address c ON c.addressbookid = a.addressbookid
							LEFT JOIN addresscontact d ON d.addressbookid = a.addressbookid
							LEFT JOIN city e ON e.cityid = c.cityid ";
			
			$where = "WHERE (c.foto IS NULL OR c.foto='') AND a.iscustomer='1' AND a.recordstatus='1' ";
			if(isset($customer) && $customer!=''){
					$where .= " AND a.fullname LIKE '%".$customer."%' ";
			}
			if(isset($salesarea) && $salesarea!=''){
					$where .= " AND b.areaname LIKE '%".$salesarea."%' ";
			}
			#$where .= " AND b.startdate BETWEEN '".$startdate."' AND '".$enddate."' ORDER BY a.empplanid DESC";
			$where .= " GROUP BY a.addressbookid";
			
			
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
									->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
									->setCellValueByColumnAndRow(16,1,GetCompanyCode($companyid));
					$line=4;
	
	
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Nama Customer')				
									->setCellValueByColumnAndRow(2,$line,'Alamat')
									->setCellValueByColumnAndRow(3,$line,'Kota')
									->setCellValueByColumnAndRow(4,$line,'No Hp')
									->setCellValueByColumnAndRow(5,$line,'No Tlp') 
									->setCellValueByColumnAndRow(6,$line,'Email') ;
				 $line++;
			$i=0;
			$result=Yii::app()->db->createCommand($sql.$where)->queryAll();
			foreach($result as $row){
					 $this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i+=1)
									->setCellValueByColumnAndRow(1,$line,$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,$row['addressname'].' RT '.$row['rt'].' RW '.$row['rw'])				
									->setCellValueByColumnAndRow(3,$line,$row['cityname'])
									->setCellValueByColumnAndRow(4,$line,$row['mobilephone'])
									->setCellValueByColumnAndRow(5,$line,$row['phoneno'])
									->setCellValueByColumnAndRow(6,$line,$row['emailaddress']) ;
				 $line++;
			}
		
			$this->getFooterXLS($this->phpExcel);
	}
	//65
	public function LaporanCustomerBelumAdaKTPXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='laporancustbelumadaktp';
	parent::actionDownxls();
			$connection = Yii::app()->db;
			
			$sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname
							from addressbook a
							join address b on a.addressbookid = b.addressbookid
							join salesarea c on c.salesareaid = a.salesareaid ";
			$where = "where a.iscustomer=1 AND a.recordstatus='1' and (a.ktpno is null or a.ktpno='-' or a.ktpno='') ";
			
			if(isset($salesarea) && $salesarea!=''){
					$where .= " and c.areaname like '%".$salesarea."%' ";
			}
			$dataReader = $connection->createCommand($sql.$where)->queryAll();
			
			
		foreach($dataReader as $row)
		
		$line=3;				
					$i=1;
		foreach($dataReader as $row)
					{
							 $this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)	
									->setCellValueByColumnAndRow(1,$line,$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,$row['addressname'])
									->setCellValueByColumnAndRow(3,$line,$row['areaname'])				
									->setCellValueByColumnAndRow(4,$line,$row['recordstatus']==1 ? 'Active' : 'Not Active');
				 $line++;
							 $i++;
					}
			$this->getFooterXLS($this->phpExcel);	
	}
	//66
	public function LaporanCustomerBelumAdaNPWPXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='laporancustbelumadanpwp';
	parent::actionDownxls();
			
			$sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname
							from addressbook a
							join address b on a.addressbookid = b.addressbookid
							join salesarea c on c.salesareaid = a.salesareaid
							where a.iscustomer=1 AND a.recordstatus='1' and a.taxno is null or a.taxno='-' or a.taxno=' '";
			$cmd = Yii::app()->db->createCommand($sql);
			$dataReader=$cmd->queryAll();
			
			
		foreach($dataReader as $row)
		
		$line=3;				
					$i=1;
		foreach($dataReader as $row)
					{
							 $this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)	
									->setCellValueByColumnAndRow(1,$line,$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,$row['addressname'])
									->setCellValueByColumnAndRow(3,$line,$row['areaname'])				
									->setCellValueByColumnAndRow(4,$line,$row['recordstatus']==1 ? 'Active' : 'Not Active');
				 $line++;
							 $i++;
					}
			$this->getFooterXLS($this->phpExcel);	
	}
	//67
	public function LaporanSudahLengkapLokasiXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='LaporanSudahLengkapLokasi';
			parent::actionDownXLS();
			
			$sql = "select distinct a.addressbookid, a.fullname, e.cityname, e.cityid, c.addressname, c.rt, c.rw, d.mobilephone, d.phoneno, d.emailaddress, c.lat, c.lng
							from addressbook a
							left join salesarea b ON b.salesareaid = a.salesareaid
							left join address c ON c.addressbookid = a.addressbookid
							left join addresscontact d ON d.addressbookid = a.addressbookid
							left join city e ON e.cityid = c.cityid ";
			
			$where = "where ((c.lat <> 0 ) and (c.lng <> 0))";
			if(isset($customer) && $customer!=''){
					$where .= " and a.fullname like '%".$customer."%' ";
			}
			if(isset($salesarea) && $salesarea!=''){
					$where .= " and b.areaname like '%".$salesarea."%' ";
			}
			#$where .= " AND b.startdate BETWEEN '".$startdate."' AND '".$enddate."' ORDER BY a.empplanid DESC";
			#$where .= " GROUP BY a.addressbookid";
			
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
									->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
									->setCellValueByColumnAndRow(16,1,GetCompanyCode($companyid));
					$line=4;
	
	
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Nama Customer')
									->setCellValueByColumnAndRow(2,$line,'Alamat')				
									->setCellValueByColumnAndRow(3,$line,'Kota')
									->setCellValueByColumnAndRow(4,$line,'No HP')
									->setCellValueByColumnAndRow(5,$line,'No Telp')
									->setCellValueByColumnAndRow(6,$line,'Email')
									->setCellValueByColumnAndRow(7,$line,'Latitude')
									->setCellValueByColumnAndRow(8,$line,'langutude');
				 $line++;
		$i=0;
			$result = Yii::app()->db->createCommand($sql.$where)->queryAll();
			foreach($result as $row){
					 $this->phpExcel->setActiveSheetIndex(0)
												->setCellValueByColumnAndRow(0,$line,$i+=1)
												->setCellValueByColumnAndRow(1,$line,$row['fullname'])
												->setCellValueByColumnAndRow(2,$line,$row['addressname'].' RT '.$row['rw'].' RW '.$row['rw'])							
												->setCellValueByColumnAndRow(3,$line,$row['cityname'])
												->setCellValueByColumnAndRow(4,$line,$row['mobilephone'])
												->setCellValueByColumnAndRow(5,$line,$row['phoneno'])
												->setCellValueByColumnAndRow(6,$line,$row['emailaddress'])
												->setCellValueByColumnAndRow(7,$line,$row['lat'])
												->setCellValueByColumnAndRow(8,$line,$row['lng']);
						$line++;
			}
			$this->getFooterXLS($this->phpExcel);
	}
	//68
	public function LaporanSudaFotoXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
        $this->menuname='laporansudahfoto';
        parent::actionDownXLS();
        
        $sql = "SELECT a.addressbookid, a.fullname, e.cityname, e.cityid, c.addressname, c.rt, c.rw, d.mobilephone, d.phoneno, d.emailaddress, c.foto
                FROM addressbook a
				LEFT JOIN salesarea b ON b.salesareaid = a.salesareaid
                LEFT JOIN address c ON c.addressbookid = a.addressbookid
                LEFT JOIN addresscontact d ON d.addressbookid = a.addressbookid
                LEFT JOIN city e ON e.cityid = c.cityid ";
        
			$where = "WHERE (c.foto IS NULL OR c.foto='') AND a.iscustomer='1' AND a.recordstatus='1' ";
			if(isset($customer) && $customer!=''){
					$where .= " AND a.fullname LIKE '%".$customer."%' ";
			}
			if(isset($salesarea) && $salesarea!=''){
					$where .= " AND b.areaname LIKE '%".$salesarea."%' ";
			}
        #$where .= " AND b.startdate BETWEEN '".$startdate."' AND '".$enddate."' ORDER BY a.empplanid DESC";
        $where .= " GROUP BY a.addressbookid";
        
        
        $this->phpExcel->setActiveSheetIndex(0)
                    ->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
                    ->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
                    ->setCellValueByColumnAndRow(16,1,GetCompanyCode($companyid));
            $line=4;
    
    
                $this->phpExcel->setActiveSheetIndex(0)
                    ->setCellValueByColumnAndRow(0,$line,'No')
                    ->setCellValueByColumnAndRow(1,$line,'Nama Customer')				
                    ->setCellValueByColumnAndRow(2,$line,'Alamat')
                    ->setCellValueByColumnAndRow(3,$line,'Kota')
                    ->setCellValueByColumnAndRow(4,$line,'No Hp')
                    ->setCellValueByColumnAndRow(5,$line,'No Tlp') 
                    ->setCellValueByColumnAndRow(6,$line,'Email') 
                    ->setCellValueByColumnAndRow(7,$line,'Foto') ;
			     $line++;
        $i=0;
        $result=Yii::app()->db->createCommand($sql.$where)->queryAll();
        foreach($result as $row){
             $this->phpExcel->setActiveSheetIndex(0)
                    ->setCellValueByColumnAndRow(0,$line,$i+=1)
                    ->setCellValueByColumnAndRow(1,$line,$row['fullname'])
                    ->setCellValueByColumnAndRow(2,$line,$row['addressname'].' RT '.$row['rt'].' RW '.$row['rw'])				
                    ->setCellValueByColumnAndRow(3,$line,$row['cityname'])
                    ->setCellValueByColumnAndRow(4,$line,$row['mobilephone'])
                    ->setCellValueByColumnAndRow(5,$line,$row['phoneno'])
                    ->setCellValueByColumnAndRow(6,$line,$row['emailaddress']) 
                    ->setCellValueByColumnAndRow(7,$line,$row['foto']) ;
			     $line++;
        }
			
        $this->getFooterXLS($this->phpExcel);
    }
	//69
	public function LaporanCustomerSudahAdaKTPXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='laporancustsudahadaktp';
	parent::actionDownxls();
			
			$sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname,a.ktpno
							from addressbook a
							join address b on a.addressbookid = b.addressbookid
							join salesarea c on c.salesareaid = a.salesareaid
							where a.iscustomer=1 and (a.ktpno is not null and a.ktpno<>'-' and a.ktpno<>' ') and a.recordstatus='1' ";
			$cmd = Yii::app()->db->createCommand($sql);
			$dataReader=$cmd->queryAll();
			
			
		 $this->phpExcel->setActiveSheetIndex(0)
                    ->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
                    ->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
                    ->setCellValueByColumnAndRow(16,1,GetCompanyCode($companyid));
            $line=4;
    
    
                $this->phpExcel->setActiveSheetIndex(0)
                    ->setCellValueByColumnAndRow(0,$line,'No')
                    ->setCellValueByColumnAndRow(1,$line,'Nama Customer')				
                    ->setCellValueByColumnAndRow(2,$line,'Alamat')
                    ->setCellValueByColumnAndRow(3,$line,'Area Penjualan')
                    ->setCellValueByColumnAndRow(4,$line,'No KTP')
                    ->setCellValueByColumnAndRow(5,$line,'Status') 
                    ;
			     $line++;
        $i=0;
		foreach($dataReader as $row)
					{
							 $this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)	
									->setCellValueByColumnAndRow(1,$line,$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,$row['addressname'])
									->setCellValueByColumnAndRow(3,$line,$row['areaname'])				
									->setCellValueByColumnAndRow(4,$line,$row['ktpno'])				
									->setCellValueByColumnAndRow(5,$line,$row['recordstatus']==1 ? 'Active' : 'Not Active');
				 $line++;
							 $i++;
					}
			$this->getFooterXLS($this->phpExcel);	
	}
	//70
	public function LaporanCustomerSudahAdaNPWPXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
        $this->menuname='laporancustsudahadanpwp';
		parent::actionDownxls();
        
        $sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname, a.taxno
                from addressbook a
                join address b on a.addressbookid = b.addressbookid
                join salesarea c on c.salesareaid = a.salesareaid
                where a.iscustomer=1 and (a.taxno is not null and a.taxno<>'-' and  a.taxno<>''and a.taxno<>'0') and a.recordstatus='1' ";
        $cmd = Yii::app()->db->createCommand($sql);
        $dataReader=$cmd->queryAll();
        
         $this->phpExcel->setActiveSheetIndex(0)
                    ->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
                    ->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
                    ->setCellValueByColumnAndRow(16,1,GetCompanyCode($companyid));
            $line=4;
    
    
                $this->phpExcel->setActiveSheetIndex(0)
                    ->setCellValueByColumnAndRow(0,$line,'No')
                    ->setCellValueByColumnAndRow(1,$line,'Nama Customer')				
                    ->setCellValueByColumnAndRow(2,$line,'Alamat')
                    ->setCellValueByColumnAndRow(3,$line,'Area Penjualan')
                    ->setCellValueByColumnAndRow(4,$line,'NPWP')
                    ->setCellValueByColumnAndRow(5,$line,'Status') 
                    ;
			     $line++;
        $i=0;
		foreach($dataReader as $row)
					{
							 $this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)	
									->setCellValueByColumnAndRow(1,$line,$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,$row['addressname'])
									->setCellValueByColumnAndRow(3,$line,$row['areaname'])				
									->setCellValueByColumnAndRow(4,$line,$row['taxno'])				
									->setCellValueByColumnAndRow(5,$line,$row['recordstatus']==1 ? 'Active' : 'Not Active');
				 $line++;
							 $i++;
					}
			$this->getFooterXLS($this->phpExcel);	
	}
	//71
	
	//72
	
	//73
	
	//74
	
	//75

	//76

	//77

	//78

	//79

	//80

	//81
	public function LaporanCustomerBelumAdaKategoriXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='laporancustbelumadakategori';
	parent::actionDownxls();
			
			$sql = "select a.addressbookid, a.fullname, a.recordstatus, (select b.addressname from address b where b.addressbookid=a.addressbookid Limit 1) as addressname, c.areaname, d.custcategoryname
									from addressbook a
									left join salesarea c on c.salesareaid = a.salesareaid
									left join custcategory d on d.custcategoryid = a.custcategoryid ";
									
			$where = " where a.iscustomer=1 and a.recordstatus=1 and a.custcategoryid is null";
			
			if(isset($salesarea) && $salesarea!='')
			{
					$where .= " and c.areaname like '%{$salesarea}%'";
			}
			if(isset($customer) && $customer!='')
			{
					$where .= " and a.fullname like '%{$customer}%'";
			}
			$cmd = Yii::app()->db->createCommand($sql.$where);
			$dataReader=$cmd->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
			
			$line=2;
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Customer')				
					->setCellValueByColumnAndRow(2,$line,'Alamat')
					->setCellValueByColumnAndRow(3,$line,'Area Penjualan')
					->setCellValueByColumnAndRow(4,$line,'Kategori Customer');
			
			$line++;
			
			$i=1;
	foreach($dataReader as $row)
			{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i)	
							->setCellValueByColumnAndRow(1,$line,$row['fullname'])
							->setCellValueByColumnAndRow(2,$line,$row['addressname'])
							->setCellValueByColumnAndRow(3,$line,$row['areaname'])
							->setCellValueByColumnAndRow(4,$line,$row['custcategoryname']);
					$line++;
					$i++;
			}
			$this->getFooterXLS($this->phpExcel);
	}
	//82
	public function LaporanCustomerSudahAdaKategoriXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='laporancustsudahadakategori';
	parent::actionDownxls();
			
			$sql = "select a.addressbookid, a.fullname, a.recordstatus, (select b.addressname from address b where b.addressbookid=a.addressbookid Limit 1) as addressname, c.areaname, d.custcategoryname
									from addressbook a
									left join salesarea c on c.salesareaid = a.salesareaid
									left join custcategory d on d.custcategoryid = a.custcategoryid ";
									
			$where = " where a.iscustomer=1 and a.recordstatus=1 and a.custcategoryid is not null";
			
			if(isset($salesarea) && $salesarea!='')
			{
					$where .= " and c.areaname like '%{$salesarea}%'";
			}
			if(isset($customer) && $customer!='')
			{
					$where .= " and a.fullname like '%{$customer}%'";
			}
			$cmd = Yii::app()->db->createCommand($sql.$where);
			$dataReader=$cmd->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
			
			$line=2;
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Customer')				
					->setCellValueByColumnAndRow(2,$line,'Alamat')
					->setCellValueByColumnAndRow(3,$line,'Area Penjualan')
					->setCellValueByColumnAndRow(4,$line,'Kategori Customer');
			
			$line++;
			
			$i=1;
	foreach($dataReader as $row)
			{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i)	
							->setCellValueByColumnAndRow(1,$line,$row['fullname'])
							->setCellValueByColumnAndRow(2,$line,$row['addressname'])
							->setCellValueByColumnAndRow(3,$line,$row['areaname'])
							->setCellValueByColumnAndRow(4,$line,$row['custcategoryname']);
					$line++;
					$i++;
			}
			$this->getFooterXLS($this->phpExcel);
	}
	//83
	public function LaporanCustomerBelumAdaGradeXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='laporancustbelumadagrade';
	parent::actionDownxls();
			
			$sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname, d.custgradename
									from addressbook a
									left join address b on a.addressbookid = b.addressbookid
									left join salesarea c on c.salesareaid = a.salesareaid
									left join custgrade d on d.custgradeid = a.custgradeid ";
									
			$where = " where a.iscustomer=1 and a.recordstatus=1 and a.custgradeid is null";
			
			if(isset($salesarea) && $salesarea!='')
			{
					$where .= " and c.areaname like '%{$salesarea}%'";
			}
			if(isset($customer) && $customer!='')
			{
					$where .= " and a.fullname like '%{$customer}%'";
			}
			$cmd = Yii::app()->db->createCommand($sql.$where);
			$dataReader=$cmd->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
			
			$line=2;
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Customer')				
					->setCellValueByColumnAndRow(2,$line,'Alamat')
					->setCellValueByColumnAndRow(3,$line,'Area Penjualan')
					->setCellValueByColumnAndRow(4,$line,'Kategori Grade');
			
			$line++;
			
			$i=1;
	foreach($dataReader as $row)
			{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i)	
							->setCellValueByColumnAndRow(1,$line,$row['fullname'])
							->setCellValueByColumnAndRow(2,$line,$row['addressname'])
							->setCellValueByColumnAndRow(3,$line,$row['areaname'])
							->setCellValueByColumnAndRow(4,$line,$row['custgradename']);
					$line++;
					$i++;
			}
			$this->getFooterXLS($this->phpExcel);
	}
	//84
	public function LaporanCustomerSudahAdaGradeXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='laporancustsudahadagrade';
	parent::actionDownxls();
			
			$sql = "select a.addressbookid, a.fullname, a.recordstatus, b.addressname, c.areaname, d.custgradename
									from addressbook a
									left join address b on a.addressbookid = b.addressbookid
									left join salesarea c on c.salesareaid = a.salesareaid
									left join custgrade d on d.custgradeid = a.custgradeid ";
									
			$where = " where a.iscustomer=1 and a.recordstatus=1 and a.custgradeid is not null";
			
			if(isset($salesarea) && $salesarea!='')
			{
					$where .= " and c.areaname like '%{$salesarea}%'";
			}
			if(isset($customer) && $customer!='')
			{
					$where .= " and a.fullname like '%{$customer}%'";
			}
			$cmd = Yii::app()->db->createCommand($sql.$where);
			$dataReader=$cmd->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
			
			$line=2;
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Customer')				
					->setCellValueByColumnAndRow(2,$line,'Alamat')
					->setCellValueByColumnAndRow(3,$line,'Area Penjualan')
					->setCellValueByColumnAndRow(4,$line,'Kategori Grade');
			
			$line++;
			
			$i=1;
	foreach($dataReader as $row)
			{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i)	
							->setCellValueByColumnAndRow(1,$line,$row['fullname'])
							->setCellValueByColumnAndRow(2,$line,$row['addressname'])
							->setCellValueByColumnAndRow(3,$line,$row['areaname'])
							->setCellValueByColumnAndRow(4,$line,$row['custgradename']);
					$line++;
					$i++;
			}
			$this->getFooterXLS($this->phpExcel);
	}	
	//89
	public function RincianDataCustomerXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
			$this->menuname='rinciandatacustomer';
	parent::actionDownxls();
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,2,$salesarea);
			$line=3;
			
			
			if(getUserObjectValues('marketing')==1) {
					$sql = "select a.*, b.areaname, c.taxcode,h.paycode,e.groupname,f.custcategoryname,g.custogradedesc, 
							if(a.recordstatus=1,'Aktif','Tidak Aktif') as status
							from addressbook a
							left join salesarea b on b.salesareaid = a.salesareaid
							left join tax c on c.taxid = a.taxid
							left join pricecategory d on d.pricecategoryid = a.pricecategoryid
							left join groupcustomer e on e.groupcustomerid = a.groupcustomerid
							left join custcategory f on f.custcategoryid = a.custcategoryid
							left join custgrade g on g.custgradeid = a.custgradeid
							left join paymentmethod h on h.paymentmethodid = a.paymentmethodid
							where a.fullname like '%".$customer."%' 
							and iscustomer=1
							and b.areaname like '%".$salesarea."%' ";
					
					$res = Yii::app()->db->createCommand($sql)->queryAll();
					foreach($res as $row)
					{
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'Nama Customer ')
									->setCellValueByColumnAndRow(0,$line+1,'Kode Pajak ')
									->setCellValueByColumnAndRow(0,$line+2,'NPWP ')
									->setCellValueByColumnAndRow(0,$line+3,'KTP Customer ')
									->setCellValueByColumnAndRow(0,$line+4,'Kredit Limit ')
									->setCellValueByColumnAndRow(0,$line+5,'Current Limit ')
									->setCellValueByColumnAndRow(0,$line+6,'Kode Pembayaran ')
									->setCellValueByColumnAndRow(0,$line+7,'Batas Limit Kaku ')
									->setCellValueByColumnAndRow(0,$line+8,'Area Penjualan ')
									->setCellValueByColumnAndRow(0,$line+9,'Customer Group ')
									->setCellValueByColumnAndRow(0,$line+10,'Kategori Customer ')
									->setCellValueByColumnAndRow(0,$line+11,'Grade Customer ')
									->setCellValueByColumnAndRow(0,$line+12,'No Akun Bank ')
									->setCellValueByColumnAndRow(0,$line+13,'Nama Bank ')
									->setCellValueByColumnAndRow(0,$line+14,'Pemilik Akun Bank ')
									->setCellValueByColumnAndRow(0,$line+15,'Status ');
							
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,$row['fullname'])
									->setCellValueByColumnAndRow(1,$line+1,$row['taxcode'])
									->setCellValueByColumnAndRow(1,$line+2,$row['taxno'])
									->setCellValueByColumnAndRow(1,$line+3,$row['ktpno'])
									->setCellValueByColumnAndRow(1,$line+4,Yii::app()->format->formatCurrency($row['creditlimit']))
									->setCellValueByColumnAndRow(1,$line+5,Yii::app()->format->formatCurrency($row['currentlimit']))
									->setCellValueByColumnAndRow(1,$line+6,$row['paycode'])
									->setCellValueByColumnAndRow(1,$line+7,$row['isstrictlimit'])
									->setCellValueByColumnAndRow(1,$line+8,$row['areaname'])
									->setCellValueByColumnAndRow(1,$line+9,$row['groupname'])
									->setCellValueByColumnAndRow(1,$line+10,$row['custcategoryname'])
									->setCellValueByColumnAndRow(1,$line+11,$row['custogradedesc'])
									->setCellValueByColumnAndRow(1,$line+12,$row['bankaccountno'])
									->setCellValueByColumnAndRow(1,$line+13,$row['bankname'])
									->setCellValueByColumnAndRow(1,$line+14,$row['accountowner'])
									->setCellValueByColumnAndRow(1,$line+15,$row['status']);
							
							$line = $line + 15+1;
							
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'Alamat Customer');
							$line++;
							
							$sql1 = "select a.*, addresstypename, d.cityname
							from address a 
							join addressbook b on b.addressbookid = a.addressbookid
							join addresstype c on c.addresstypeid = a.addresstypeid
							join city d on d.cityid = a.cityid 
							where a.addressbookid = ".$row['addressbookid'];
							
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Jenis Alamat')
									->setCellValueByColumnAndRow(2,$line,'Alamat')
									->setCellValueByColumnAndRow(3,$line,'RT')
									->setCellValueByColumnAndRow(4,$line,'RW')
									->setCellValueByColumnAndRow(5,$line,'Nama Kota')
									->setCellValueByColumnAndRow(6,$line,'Telp')
									->setCellValueByColumnAndRow(7,$line,'Fax')
									->setCellValueByColumnAndRow(8,$line,'Lattitude')
									->setCellValueByColumnAndRow(9,$line,'Longitude');
							$line++;
							$dataReader1 = Yii::app()->db->createCommand($sql1)->queryAll();
							$i=1;
							foreach($dataReader1 as $row1)
							{
									$this->phpExcel->setActiveSheetIndex(0)
											->setCellValueByColumnAndRow(0,$line,$i)
											->setCellValueByColumnAndRow(1,$line,$row1['addresstypename'])
											->setCellValueByColumnAndRow(2,$line,$row1['addressname'])
											->setCellValueByColumnAndRow(3,$line,$row1['rt'])
											->setCellValueByColumnAndRow(4,$line,$row1['rw'])
											->setCellValueByColumnAndRow(5,$line,$row1['cityname'])
											->setCellValueByColumnAndRow(6,$line,$row1['phoneno'])
											->setCellValueByColumnAndRow(7,$line,$row1['faxno'])
											->setCellValueByColumnAndRow(8,$line,Yii::app()->format->formatNumber($row1['lat']))
											->setCellValueByColumnAndRow(9,$line,Yii::app()->format->formatNumber($row1['lng']));
									$i++;
									$line++;
							}
							
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'Kontak Customer');
							$line++;
							
							$sql2 = "select a.*, b.contacttypename
							from addresscontact a
							join contacttype b on b.contacttypeid = a.contacttypeid
							where a.addressbookid = ".$row['addressbookid'];
																	
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Jenis Kontak')
									->setCellValueByColumnAndRow(2,$line,'Nama Kontak')
									->setCellValueByColumnAndRow(3,$line,'Tanggal Lahir')
									->setCellValueByColumnAndRow(4,$line,'No Telp')
									->setCellValueByColumnAndRow(5,$line,'No HP')
									->setCellValueByColumnAndRow(6,$line,'No WA')
									->setCellValueByColumnAndRow(7,$line,'Telegram ID')
									->setCellValueByColumnAndRow(8,$line,'Email Address')
									->setCellValueByColumnAndRow(9,$line,'No KTP');
							$line++;
							$i=1;
							$dataReader2 = Yii::app()->db->createCommand($sql2)->queryAll();
							foreach($dataReader2 as $row2)
							{
									$this->phpExcel->setActiveSheetIndex(0)
											->setCellValueByColumnAndRow(0,$line,$i)
											->setCellValueByColumnAndRow(1,$line,$row2['contacttypename'])
											->setCellValueByColumnAndRow(2,$line,$row2['addresscontactname'])
											->setCellValueByColumnAndRow(3,$line,$row2['birthday'])
											->setCellValueByColumnAndRow(4,$line,$row2['phoneno'])
											->setCellValueByColumnAndRow(5,$line,$row2['mobilephone'])
											->setCellValueByColumnAndRow(6,$line,$row2['wanumber'])
											->setCellValueByColumnAndRow(7,$line,$row2['telegramid'])
											->setCellValueByColumnAndRow(8,$line,$row2['emailaddress'])
											->setCellValueByColumnAndRow(9,$line,$row2['ktp']);
									
									$line++;
									$i++;
							}
							
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'Pola Diskon');
							$line++;
							
							$sql3 = "select a.*
							from custdisc a
							where a.addressbookid = ".$row['addressbookid'];
							$dataReader3 = Yii::app()->db->createCommand($sql3)->queryAll();
							
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Nilai Diskon');
							$line++;
							$i=1;
							foreach($dataReader3 as $row3)
							{
									$this->phpExcel->setActiveSheetIndex(0)
											->setCellValueByColumnAndRow(0,$line,$i)
											->setCellValueByColumnAndRow(1,$line,$row3['discvalue']);
									$line++;
									$i++;
							}
							
							$line=$line+2;
					}
			}
			else
			{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,'Maaf Anda Tidak Berhak');
			}
			$this->getFooterXLS($this->phpExcel);   
	}
	//90
	public function RekapPenjualanReturPenjualanPerCustomerPerJenisMaterialPerBulanPerTahunTotalNilaiXLS($companyid,$sloc,$materialgroup,$customer,$employee,$spv,$product,$salesarea,$isdisplay,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpercustomerperjenismaterialperbulanpertahuntotalnilai';
		parent::actionDownXLS();
		$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;
		$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }  
      
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	            join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%' and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(14,1,GetCompanyCode($companyid));
		$line=4;				
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Jenis Material')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Jumlah');
		$line++;
		
			$sql1 = "select * from (select xxx.description as barang,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as januari,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as februari,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as maret,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and invoiceno not like '%-%-%'
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as april,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as mei,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as juni,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as juli,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as agustus,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as september,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 10 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as oktober,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as nopember,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and month (a.invoicedate) = 12 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as desember,
					ifnull((select sum(netto) as netto from
							(select materialtypeid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialtypeid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' ".$spvid2." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialtypeid
						union
							select materialtypeid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialtypeid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialtypeid) zz where zz.materialtypeid = xxx.materialtypeid group by materialtypeid),0) as jumlah
							from materialtype xxx
							where xxx.recordstatus = 1
							order by xxx.nourut) xxxx
							-- where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <>0 or juli <>0 or agustus <> 0 or september <>0 or oktober <> 0 or nopember <> 0 or desember <> 0";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;
			$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
			foreach($dataReader1 as $row1)
			{
				$i=$i+1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['barang'])
					->setCellValueByColumnAndRow(2,$line,$row1['januari']/$per)
					->setCellValueByColumnAndRow(3,$line,$row1['februari']/$per)
					->setCellValueByColumnAndRow(4,$line,$row1['maret']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['april']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['mei']/$per)
					->setCellValueByColumnAndRow(7,$line,$row1['juni']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['juli']/$per)
					->setCellValueByColumnAndRow(9,$line,$row1['agustus']/$per)
					->setCellValueByColumnAndRow(10,$line,$row1['september']/$per)
					->setCellValueByColumnAndRow(11,$line,$row1['oktober']/$per)
					->setCellValueByColumnAndRow(12,$line,$row1['nopember']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['desember']/$per)
					->setCellValueByColumnAndRow(14,$line,$row1['jumlah']/$per);
				$line++;
				
				$totaljanuari += $row1['januari']/$per;
		    $totalfebruari += $row1['februari']/$per;
		    $totalmaret += $row1['maret']/$per;
		    $totalapril += $row1['april']/$per;
		    $totalmei += $row1['mei']/$per;
		    $totaljuni += $row1['juni']/$per;
		    $totaljuli += $row1['juli']/$per;
		    $totalagustus += $row1['agustus']/$per;
		    $totalseptember += $row1['september']/$per;
		    $totaloktober += $row1['oktober']/$per;
		    $totalnopember += $row1['nopember']/$per;
		    $totaldesember += $row1['desember']/$per;
		    $totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line+=2;
			
			$totaljanuari1 += $totaljanuari;
	    $totalfebruari1 += $totalfebruari;
	    $totalmaret1 += $totalmaret;
	    $totalapril1 += $totalapril;
	    $totalmei1 += $totalmei;
	    $totaljuni1 += $totaljuni;
	    $totaljuli1 += $totaljuli;
	    $totalagustus1 += $totalagustus;
	    $totalseptember1 += $totalseptember;
	    $totaloktober1 += $totaloktober;
	    $totalnopember1 += $totalnopember;
	    $totaldesember1 += $totaldesember;
	    $totaljumlah1 += $totaljumlah;
		
		}
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
				->setCellValueByColumnAndRow(4,$line,$totalmaret1)
				->setCellValueByColumnAndRow(5,$line,$totalapril1)
				->setCellValueByColumnAndRow(6,$line,$totalmei1)
				->setCellValueByColumnAndRow(7,$line,$totaljuni1)
				->setCellValueByColumnAndRow(8,$line,$totaljuli1)
				->setCellValueByColumnAndRow(9,$line,$totalagustus1)
				->setCellValueByColumnAndRow(10,$line,$totalseptember1)
				->setCellValueByColumnAndRow(11,$line,$totaloktober1)
				->setCellValueByColumnAndRow(12,$line,$totalnopember1)
				->setCellValueByColumnAndRow(13,$line,$totaldesember1)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
			$line+=2;
		
		
		
		$this->getFooterXLS($this->phpExcel);
	}
}
<?php
class RepaccpersController extends Controller
{
	public $menuname = 'repaccpers';
	public function actionIndex()
	{
		$this->renderPartial('index',array());
	}
 
	public function actionDownPDF()
	{
		parent::actionDownload();
		if (isset($_GET['lro']) && isset($_GET['company']) && isset($_GET['sloc']) && isset($_GET['materialgroup']) && isset($_GET['storagebin']) && isset($_GET['product']) && isset($_GET['productcollect']) && isset($_GET['account']) && isset($_GET['startacccode']) && isset($_GET['endacccode']) && isset($_GET['keluar3']) && isset($_GET['startdate']) && isset($_GET['enddate']) && isset($_GET['per']))
		{
			if ($_GET['lro'] == 9999)
			{
				$this->RekapPersediaanBarangDetailTester($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 1)
			{
				$this->RekapPersediaanBarangDetail($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 2)
			{
				$this->RekapPenerimaanPersediaanBarangDetail($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 3)
			{
				$this->RekapPengeluaranPersediaanBarangDetail($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 4)
			{
				$this->HPP($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}			
			else
			if ($_GET['lro'] == 5)
			{
				$this->HppBillOfMaterial($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 6)
			{
				$this->RincianNilaiPemakaianStok($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 7)
			{
				$this->RekapNilaiPemakaianStok($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 8)
			{
				$this->RincianNilaiStockOpname($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 9)
			{
				$this->RekapNilaiStockOpname($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 10)
			{
				$this->RincianHargaPokokPenjualan($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 11)
			{
				$this->RekapHargaPokokPenjualan($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 12)
			{
				$this->RekapPersediaanBarangDetailDataHarga($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 13)
			{
				$this->RekapPerbandinganHPPPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 14)
			{
				//$this->DalamPerbaikan($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
				$this->RekapPerbandinganHPPReturPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 15)
			{
				$this->RekapPerbandinganHPPPenjualanPerBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 16)
			{
				$this->RekapPersediaanBarangNotMovingFG($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 17)
			{
				$this->RekapPersediaanBarangSlowMoving($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 18)
			{
				$this->RekapPersediaanBarangFastMoving($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 19)
			{
				$this->KartuStokBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 20)
			{
				$this->RekapPersediaanBarangDetailPersediaan($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 21)
			{
				$this->HppActual($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 22)
			{
				$this->RekapPersediaanBarangDetailNotPersediaan($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 23)
			{
				$this->RekapPerbandinganHPPPenjualanReturPerDokumen($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 24)
			{
				$this->HppActualVsBom($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 25)
			{
				$this->RekapPersediaanBarangDetailPersediaanSC($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 26)
			{
				$this->RekapPersediaanBarangDetailNew($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 27)
			{
				$this->RekapPersediaanBarangDetailRak($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 28)
			{
				$this->RekapPerbandinganHPPPenjualanPerCustomerPerBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 30)
			{
				$this->RincianPerbandingaHargaBarangperGudang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 31)
			{
				$this->RincianNilaiUpahperBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 32)
			{
				$this->RincianNilaiFOHperBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 33)
			{
				$this->RekapPerbandinganHPPPenjualanPerKastaPerBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 34)
			{
				$this->RekapPerbandinganHPPPenjualanTahunLaluVSTahunIniPerBarang($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 35)
			{
				$this->RekapPersediaanPerCompany($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 36)
			{
				$this->RekapPersediaanBarangNotMovingBBWIP($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 37)
			{
				$this->RekapPerbandinganHPPPenjualanPerKastaPerGroupMaterial($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 38)
			{
				$this->RekapPerbandinganHPPPenjualanReturPerKastaPerGroupMaterial($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 39)
			{
				$this->RekapPerbandinganHPPPenjualanReturPerProvinsiPerZonaPerSubzonaPerCustomerPerMaterialgroup($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 40)
			{
				$this->RekapPotensiPenjualanReturPelunasanGMPerCustomer($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 41)
			{
				$this->Bahanbakukimia($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 42)
			{
				$this->RekapPerbandinganHPPPenjualanReturPerProvinsiPerZonaPerSubzonaPerCustomer($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 43)
			{
				$this->RekapPotensiTargetPenjualanReturPelunasanGMPerProvinsiPerZonaPerSubzonaPerTipePerKategoriPerCustomer($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 44)
			{
				$this->RekapPotensiTargetPenjualanReturPelunasanGMPerProvinsiPerZonaPerSubzonaPerCustomer($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 45)
			{
				$this->WeeklyReportGMNextMonday($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 46)
			{
				$this->WeeklyReportGMPreviousMonday($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 47)
			{
				$this->RekapPerbandinganHPPPenjualanReturPerKastaPerGroupMaterialDiluarStandar($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 48)
			{
				$this->RekapHppActualVsBom($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 49)
			{
				$this->RekapPerformaProduk($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
		}
	}
	
	//9999
	public function RekapPersediaanBarangDetailTester($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		if (($_GET['startacccode'] !== '')&&($_GET['endacccode'] !== '')) {
			$betacccode = " and q.accountcode between '".$_GET['startacccode']."' and '".$_GET['endacccode']."' ";
		} else {$betacccode = "";}
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname,accountid
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,q.accountid,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
	where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%' 
	and q.accountcode not between '110501' and '11050199999999999999999999999999' {$betacccode}) zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang (Detail)';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(80,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(115,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and l.slocid = ".$row['slocid']." and o.materialgroupid = ".$row['materialgroupid']." and q.accountid = ".$row['accountid']." ) zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyawal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargaawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtymasuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahmasuk']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytersedia']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargatersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtykeluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahkeluar']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyakhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahakhir']/$per),
					$row1['minus'],
				));
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));
		
		$this->pdf->Output();
	}
	//20
	public function RekapPersediaanBarangDetailPersediaan($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		if (($_GET['startacccode'] !== '')&&($_GET['endacccode'] !== '')) {
			$betacccode = " and q.accountcode between '".$_GET['startacccode']."' and '".$_GET['endacccode']."' ";
		} else {$betacccode = "";}
		$sql="select distinct accountid,accountname,slocid,sloccode
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountid,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%'
					and q.accountcode between '110501' and '11050199999999999999999999999999' {$betacccode}) zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          -- where qtyawal <> 0 or (jumlahawal > 1 and jumlahawal < -1) or qtymasuk <> 0 or (jumlahmasuk > 1 and jumlahmasuk < -1) or qtykeluar <> 0 or (jumlahkeluar > 1 and jumlahkeluar < -1) or qtyakhir <> 0 or (jumlahakhir > 1 and jumlahakhir < -1)
          order by accountname,sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang (Detail) Akun Persediaan';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(37,$this->pdf->gety()+5,': '.$row['accountname']);
			$this->pdf->text(250,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(267,$this->pdf->gety()+5,': '.$row['sloccode']);
			//$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
          join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' 
					and q.accountid = ".$row['accountid']." and l.slocid = ".$row['slocid'].") zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          -- where qtyawal <> 0 or (jumlahawal > 1 and jumlahawal < -1) or qtymasuk <> 0 or (jumlahmasuk > 1 and jumlahmasuk < -1) or qtykeluar <> 0 or (jumlahkeluar > 1 and jumlahkeluar < -1) or qtyakhir <> 0 or (jumlahakhir > 1 and jumlahakhir < -1)
          order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyawal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargaawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['jumlahawal']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtymasuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahmasuk']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytersedia']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargatersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtykeluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahkeluar']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyakhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahakhir']/$per),
					$row1['minus'],
				));
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['accountname'].' - '.$row['sloccode'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));
		
		$this->pdf->Output();
	}
	//25
	public function RekapPersediaanBarangDetailPersediaanSC($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct accountid,accountname,slocid,sloccode
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountid,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%'
					and q.accountcode between '110502' and '11050299999999999999999999999999') zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          -- where qtyawal <> 0 or (jumlahawal > 1 and jumlahawal < -1) or qtymasuk <> 0 or (jumlahmasuk > 1 and jumlahmasuk < -1) or qtykeluar <> 0 or (jumlahkeluar > 1 and jumlahkeluar < -1) or qtyakhir <> 0 or (jumlahakhir > 1 and jumlahakhir < -1)
          order by accountname,sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang (Detail) Akun Persediaan Suku Cadang & ATK';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(37,$this->pdf->gety()+5,': '.$row['accountname']);
			$this->pdf->text(250,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(267,$this->pdf->gety()+5,': '.$row['sloccode']);
			//$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
          join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' 
					and q.accountid = ".$row['accountid']." and l.slocid = ".$row['slocid'].") zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          -- where qtyawal <> 0 or (jumlahawal > 1 and jumlahawal < -1) or qtymasuk <> 0 or (jumlahmasuk > 1 and jumlahmasuk < -1) or qtykeluar <> 0 or (jumlahkeluar > 1 and jumlahkeluar < -1) or qtyakhir <> 0 or (jumlahakhir > 1 and jumlahakhir < -1)
          order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyawal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargaawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['jumlahawal']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtymasuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahmasuk']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytersedia']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargatersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtykeluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahkeluar']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyakhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahakhir']/$per),
					$row1['minus'],
				));
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['accountname'].' - '.$row['sloccode'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));
		
		$this->pdf->Output();
	}
	//22
	public function RekapPersediaanBarangDetailNotPersediaan($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct accountid,accountname,slocid,sloccode
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountid,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%'
					-- and q.accountcode between '110501' and '11050199999999999999999999999999'
					and (q.accountcode between '1' and '1104199999999999999999999999999' or q.accountcode between '1106' and '999999999999999999999999999999999')) zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          -- where qtyawal <> 0 or (jumlahawal > 1 and jumlahawal < -1) or qtymasuk <> 0 or (jumlahmasuk > 1 and jumlahmasuk < -1) or qtykeluar <> 0 or (jumlahkeluar > 1 and jumlahkeluar < -1) or qtyakhir <> 0 or (jumlahakhir > 1 and jumlahakhir < -1)
          order by accountname,sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang (Detail) Akun Non Persediaan';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(37,$this->pdf->gety()+5,': '.$row['accountname']);
			$this->pdf->text(250,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(267,$this->pdf->gety()+5,': '.$row['sloccode']);
			//$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
          join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' 
					and q.accountid = ".$row['accountid']." and l.slocid = ".$row['slocid'].") zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          -- where qtyawal <> 0 or (jumlahawal > 1 and jumlahawal < -1) or qtymasuk <> 0 or (jumlahmasuk > 1 and jumlahmasuk < -1) or qtykeluar <> 0 or (jumlahkeluar > 1 and jumlahkeluar < -1) or qtyakhir <> 0 or (jumlahakhir > 1 and jumlahakhir < -1)
          order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyawal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargaawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['jumlahawal']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtymasuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahmasuk']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytersedia']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargatersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtykeluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahkeluar']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyakhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahakhir']/$per),
					$row1['minus'],
				));
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['accountname'].' - '.$row['sloccode'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));
		
		$this->pdf->Output();
	}
	//1
	public function RekapPersediaanBarangDetail($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		if (($_GET['startacccode'] !== '')&&($_GET['endacccode'] !== '')) {
			$betacccode = " and q.accountcode between '".$_GET['startacccode']."' and '".$_GET['endacccode']."' ";
		} else {$betacccode = "";}
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
	where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%' {$betacccode}) zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang (Detail)';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(80,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(115,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and l.slocid = ".$row['slocid']." and o.materialgroupid = ".$row['materialgroupid'].") zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyawal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargaawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtymasuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahmasuk']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytersedia']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargatersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtykeluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahkeluar']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyakhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahakhir']/$per),
					$row1['minus'],
				));
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));
		
		$this->pdf->Output();
	}
	//2
	public function RekapPenerimaanPersediaanBarangDetail($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtygr2=0;$jumlahgr2=0;$qtygrr2=0;$jumlahgrr2=0;$qtytfs2=0;$jumlahtfs2=0;$qtyop2=0;$jumlahop2=0;$qtytso2=0;$jumlahtso2=0;$qtytotal2=0;$jumlahtotal2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description
          from (select a.productname,a.uomcode,a.slocid,a.sloccode,e.materialgroupid,e.description,
          case when a.referenceno like 'GR-%' then sum(a.qty) else 0 end as qtygr,
          case when a.referenceno like 'GR-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgr,
          case when a.referenceno like 'GIR-%' then sum(a.qty) else 0 end as qtygrr,
          case when a.referenceno like 'GIR-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgrr,
          case when a.referenceno like 'TFS-%' then sum(a.qty) else 0 end as qtytfs,
          case when a.referenceno like 'TFS-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtfs,
          case when a.referenceno like 'OP-%' then sum(a.qty) else 0 end as qtyop,
          case when a.referenceno like 'OP-%' then sum(a.qty*a.buyprice) else 0 end as jumlahop,
          case when a.referenceno like 'TSO-%' then sum(a.qty) else 0 end as qtytso,
          case when a.referenceno like 'TSO-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtso,
          case when a.referenceno like '%%' then sum(a.qty) else 0 end as qtytotal,
          case when a.referenceno like '%%' then sum(a.qty*a.buyprice) else 0 end as jumlahtotal
          from productdetailhist a
          join productplant b on b.productid=a.productid and b.slocid=a.slocid and b.unitofissue=a.unitofmeasureid
          join sloc c on c.slocid=a.slocid
          join plant d on d.plantid=c.plantid
          join materialgroup e on e.materialgroupid=b.materialgroupid
          where d.companyid = ".$companyid." and a.qty > 0 and a.sloccode like '%".$sloc."%' and e.description like '%".$materialgroup."%' and a.productname like '%".$product."%'
          and a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
          group by a.productid,a.slocid,a.unitofmeasureid
          order by productname) zz          
          where qtygr <> 0 or qtygrr <> 0 or qtytfs <> 0 or qtyop <> 0 or qtytso <> 0
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penerimaan Persediaan Barang (Detail)';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(200,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(235,$this->pdf->gety()+5,': '.$row['description']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,39,39,39,39,39,43));
			$this->pdf->colheader = array('','','','Beli','Retur Jual','Transfer In','Produksi','Koreksi','Total');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,24,15,24,15,24,15,24,15,24,17,26));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R');
			
			$i=0;$qtygr=0;$jumlahgr=0;$qtygrr=0;$jumlahgrr=0;$qtytfs=0;$jumlahtfs=0;$qtyop=0;$jumlahop=0;$qtytso=0;$jumlahtso=0;$qtytotal=0;$jumlahtotal=0;
			$sql1="select *
            from (select a.productname,a.uomcode,
            case when a.referenceno like 'GR-%' then sum(a.qty) else 0 end as qtygr,
            case when a.referenceno like 'GR-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgr,
            case when a.referenceno like 'GIR-%' then sum(a.qty) else 0 end as qtygrr,
            case when a.referenceno like 'GIR-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgrr,
            case when a.referenceno like 'TFS-%' then sum(a.qty) else 0 end as qtytfs,
            case when a.referenceno like 'TFS-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtfs,
            case when a.referenceno like 'OP-%' then sum(a.qty) else 0 end as qtyop,
            case when a.referenceno like 'OP-%' then sum(a.qty*a.buyprice) else 0 end as jumlahop,
            case when a.referenceno like 'TSO-%' then sum(a.qty) else 0 end as qtytso,
            case when a.referenceno like 'TSO-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtso,
            case when a.referenceno like '%%' then sum(a.qty) else 0 end as qtytotal,
            case when a.referenceno like '%%' then sum(a.qty*a.buyprice) else 0 end as jumlahtotal
            from productdetailhist a
            join productplant b on b.productid=a.productid and b.slocid=a.slocid and b.unitofissue=a.unitofmeasureid
            join sloc c on c.slocid=a.slocid
            join plant d on d.plantid=c.plantid
            join materialgroup e on e.materialgroupid=b.materialgroupid
            where d.companyid = ".$companyid." and a.qty > 0 and a.sloccode like '%".$sloc."%' and e.description like '%".$materialgroup."%' and a.productname like '%".$product."%'
            and a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'            
            and a.slocid = ".$row['slocid']." and e.materialgroupid = ".$row['materialgroupid']."
            group by a.productid,a.slocid,a.unitofmeasureid) z
            where qtygr <> 0 or qtygrr <> 0 or qtytfs <> 0 or qtyop <> 0 or qtytso <> 0
            order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtygr']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahgr']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtygrr']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahgrr']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytfs']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtfs']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyop']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahop']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytso']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtso']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytotal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtotal']/$per),
				));
				$qtygr += $row1['qtygr'];
				$jumlahgr += $row1['jumlahgr']/$per;
				$qtygrr += $row1['qtygrr'];
				$jumlahgrr += $row1['jumlahgrr']/$per;
				$qtytfs += $row1['qtytfs'];
				$jumlahtfs += $row1['jumlahtfs']/$per;
				$qtyop += $row1['qtyop'];
				$jumlahop += $row1['jumlahop']/$per;
				$qtytso += $row1['qtytso'];
				$jumlahtso += $row1['jumlahtso']/$per;
				$qtytotal += $row1['qtytotal'];
				$jumlahtotal += $row1['jumlahtotal']/$per;
			}
			$this->pdf->setFont('Arial','B',6.75);
			$this->pdf->setwidths(array(98,15,24,15,24,15,24,15,24,15,24,17,26));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtygr),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahgr),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtygrr),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahgrr),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytfs),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtfs),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyop),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahop),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytso),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtso),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytotal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtotal),
			));
			$qtygr2 += $qtygr;
      $jumlahgr2 += $jumlahgr;
      $qtygrr2 += $qtygrr;
      $jumlahgrr2 += $jumlahgrr;
      $qtytfs2 += $qtytfs;
      $jumlahtfs2 += $jumlahtfs;
      $qtyop2 += $qtyop;
      $jumlahop2 += $jumlahop;
      $qtytso2 += $qtytso;
      $jumlahtso2 += $jumlahtso;
      $qtytotal2 += $qtytotal;
      $jumlahtotal2 += $jumlahtotal;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',7);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(62,45,45,45,45,45,49));
		$this->pdf->colheader = array('','Beli','Retur Beli','Transfer In','Produksi','Koreksi','Total');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(62,17,28,17,28,17,28,17,28,17,28,19,30));
		$this->pdf->colheader = array('Keterangan','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtygr2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahgr2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtygrr2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahgrr2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytfs2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtfs2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyop2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahop2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytso2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtso2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytotal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtotal2),
		));
		
		$this->pdf->Output();
	}
	//3
	public function RekapPengeluaranPersediaanBarangDetail($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtygr2=0;$jumlahgr2=0;$qtygrr2=0;$jumlahgrr2=0;$qtytfs2=0;$jumlahtfs2=0;$qtyop2=0;$jumlahop2=0;$qtytso2=0;$jumlahtso2=0;$qtytotal2=0;$jumlahtotal2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description
          from (select a.productname,a.uomcode,a.slocid,a.sloccode,e.materialgroupid,e.description,
          case when a.referenceno like 'SJ-%' then sum(a.qty) else 0 end as qtygr,
          case when a.referenceno like 'SJ-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgr,
          case when a.referenceno like 'GRR-%' then sum(a.qty) else 0 end as qtygrr,
          case when a.referenceno like 'GRR-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgrr,
          case when a.referenceno like 'TFS-%' then sum(a.qty) else 0 end as qtytfs,
          case when a.referenceno like 'TFS-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtfs,
          case when a.referenceno like 'OP-%' then sum(a.qty) else 0 end as qtyop,
          case when a.referenceno like 'OP-%' then sum(a.qty*a.buyprice) else 0 end as jumlahop,
          case when a.referenceno like 'TSO-%' then sum(a.qty) else 0 end as qtytso,
          case when a.referenceno like 'TSO-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtso,
          case when a.referenceno like '%%' then sum(a.qty) else 0 end as qtytotal,
          case when a.referenceno like '%%' then sum(a.qty*a.buyprice) else 0 end as jumlahtotal
          from productdetailhist a
          join productplant b on b.productid=a.productid and b.slocid=a.slocid and b.unitofissue=a.unitofmeasureid
          join sloc c on c.slocid=a.slocid
          join plant d on d.plantid=c.plantid
          join materialgroup e on e.materialgroupid=b.materialgroupid
          where d.companyid = ".$companyid." and a.qty < 0 and a.sloccode like '%".$sloc."%' and e.description like '%".$materialgroup."%' and a.productname like '%".$product."%'
          and a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
          group by a.productid,a.slocid,a.unitofmeasureid
          order by productname) zz          
          where qtygr <> 0 or qtygrr <> 0 or qtytfs <> 0 or qtyop <> 0 or qtytso <> 0
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Pengeluaran Persediaan Barang (Detail)';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(200,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(235,$this->pdf->gety()+5,': '.$row['description']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,39,39,39,39,39,43));
			$this->pdf->colheader = array('','','','Jual','Retur Beli','Transfer Out','Bahan','Koreksi','Total');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,24,15,24,15,24,15,24,15,24,17,26));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R');
			
			$i=0;$qtygr=0;$jumlahgr=0;$qtygrr=0;$jumlahgrr=0;$qtytfs=0;$jumlahtfs=0;$qtyop=0;$jumlahop=0;$qtytso=0;$jumlahtso=0;$qtytotal=0;$jumlahtotal=0;
			$sql1="select *
            from (select a.productname,a.uomcode,
            case when a.referenceno like 'SJ-%' then -sum(a.qty) else 0 end as qtygr,
            case when a.referenceno like 'SJ-%' then -sum(a.qty*a.buyprice) else 0 end as jumlahgr,
            case when a.referenceno like 'GRR-%' then -sum(a.qty) else 0 end as qtygrr,
            case when a.referenceno like 'GRR-%' then -sum(a.qty*a.buyprice) else 0 end as jumlahgrr,
            case when a.referenceno like 'TFS-%' then -sum(a.qty) else 0 end as qtytfs,
            case when a.referenceno like 'TFS-%' then -sum(a.qty*a.buyprice) else 0 end as jumlahtfs,
            case when a.referenceno like 'OP-%' then -sum(a.qty) else 0 end as qtyop,
            case when a.referenceno like 'OP-%' then -sum(a.qty*a.buyprice) else 0 end as jumlahop,
            case when a.referenceno like 'TSO-%' then -sum(a.qty) else 0 end as qtytso,
            case when a.referenceno like 'TSO-%' then -sum(a.qty*a.buyprice) else 0 end as jumlahtso,
            case when a.referenceno like '%%' then -sum(a.qty) else 0 end as qtytotal,
            case when a.referenceno like '%%' then -sum(a.qty*a.buyprice) else 0 end as jumlahtotal
            from productdetailhist a
            join productplant b on b.productid=a.productid and b.slocid=a.slocid and b.unitofissue=a.unitofmeasureid
            join sloc c on c.slocid=a.slocid
            join plant d on d.plantid=c.plantid
            join materialgroup e on e.materialgroupid=b.materialgroupid
            where d.companyid = ".$companyid." and a.qty < 0 and a.sloccode like '%".$sloc."%' and e.description like '%".$materialgroup."%' and a.productname like '%".$product."%'
            and a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'            
            and a.slocid = ".$row['slocid']." and e.materialgroupid = ".$row['materialgroupid']."
            group by a.productid,a.slocid,a.unitofmeasureid) z
            where qtygr <> 0 or qtygrr <> 0 or qtytfs <> 0 or qtyop <> 0 or qtytso <> 0
            order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtygr']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahgr']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtygrr']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahgrr']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytfs']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtfs']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyop']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahop']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytso']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtso']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytotal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtotal']/$per),
				));
				$qtygr += $row1['qtygr'];
				$jumlahgr += $row1['jumlahgr']/$per;
				$qtygrr += $row1['qtygrr'];
				$jumlahgrr += $row1['jumlahgrr']/$per;
				$qtytfs += $row1['qtytfs'];
				$jumlahtfs += $row1['jumlahtfs']/$per;
				$qtyop += $row1['qtyop'];
				$jumlahop += $row1['jumlahop']/$per;
				$qtytso += $row1['qtytso'];
				$jumlahtso += $row1['jumlahtso']/$per;
				$qtytotal += $row1['qtytotal'];
				$jumlahtotal += $row1['jumlahtotal']/$per;
			}
			$this->pdf->setFont('Arial','B',6.75);
			$this->pdf->setwidths(array(98,15,24,15,24,15,24,15,24,15,24,17,26));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtygr),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahgr),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtygrr),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahgrr),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytfs),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtfs),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyop),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahop),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytso),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtso),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytotal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtotal),
			));
			$qtygr2 += $qtygr;
      $jumlahgr2 += $jumlahgr;
      $qtygrr2 += $qtygrr;
      $jumlahgrr2 += $jumlahgrr;
      $qtytfs2 += $qtytfs;
      $jumlahtfs2 += $jumlahtfs;
      $qtyop2 += $qtyop;
      $jumlahop2 += $jumlahop;
      $qtytso2 += $qtytso;
      $jumlahtso2 += $jumlahtso;
      $qtytotal2 += $qtytotal;
      $jumlahtotal2 += $jumlahtotal;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',7);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(62,45,45,45,45,45,49));
		$this->pdf->colheader = array('','Jual','Retur Jual','Transfer Out','Bahan','Koreksi','Total');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(62,17,28,17,28,17,28,17,28,17,28,19,30));
		$this->pdf->colheader = array('Keterangan','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtygr2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahgr2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtygrr2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahgrr2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytfs2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtfs2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyop2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahop2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytso2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtso2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytotal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahtotal2),
		));
		
		$this->pdf->Output();
	}
	//12
	public function RekapPersediaanBarangDetailDataHarga($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	//Masih menggunakan Data Harga
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description from
							(select barang,satuan,awal,masuk,keluar,(awal+masuk+keluar) as akhir,slocid,sloccode,materialgroupid,description
							from
							(select barang,satuan,awal,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+koreksi+konversiout) as keluar,slocid,sloccode,materialgroupid,description
							from
							(select
							(
							select distinct aa.productid 
							from productstockdet a
							join product aa on aa.productid = a.productid
							join sloc ab on ab.slocid = a.slocid
							join storagebin ac on ac.storagebinid=a.storagebinid
							where a.productid = t.productid and
							a.unitofmeasureid = t.unitofissue and
							ac.description like '%".$storagebin."%'
							) as barang,
							(
							select distinct bb.uomcode 
							from productstockdet b
							join unitofmeasure bb on bb.unitofmeasureid = b.unitofmeasureid
							join sloc ba on ba.slocid = b.slocid
							join storagebin bc on bc.storagebinid=b.storagebinid
							where b.productid = t.productid and
							b.unitofmeasureid = t.unitofissue and
							bc.description like '%".$storagebin."%'
							) as satuan,
							(
							select ifnull(sum(aw.qty),0) 
							from productstockdet aw
							join sloc aaw on aaw.slocid = aw.slocid
							join storagebin abw on abw.storagebinid=aw.storagebinid
							where aw.productid = t.productid and
							aw.transdate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
							aw.slocid = t.slocid and
							abw.description like '%".$storagebin."%'
							) as awal,
							(
							select ifnull(sum(c.qty),0) 
							from productstockdet c
							join sloc cc on cc.slocid = c.slocid
							join storagebin ccc on ccc.storagebinid=c.storagebinid
							where c.productid = t.productid and
							c.referenceno like 'GR-%' and
							c.slocid = t.slocid and
							ccc.description like '%".$storagebin."%' and
							c.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as beli,
							(
							select ifnull(sum(d.qty),0) 
							from productstockdet d
							join sloc dd on dd.slocid = d.slocid
							join storagebin ddd on ddd.storagebinid=d.storagebinid
							where d.productid = t.productid and
							d.referenceno like 'GIR-%' and
							d.slocid = t.slocid and
							ddd.description like '%".$storagebin."%' and
							d.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returjual,
							(
							select ifnull(sum(e.qty),0) 
							from productstockdet e
							join sloc ee on ee.slocid = e.slocid
							join storagebin eee on eee.storagebinid=e.storagebinid
							where e.productid = t.productid and
							e.referenceno like 'TFS-%' and
							e.qty > 0 and
							e.slocid = t.slocid and
							eee.description like '%".$storagebin."%' and
							e.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfin,
							(
							select ifnull(sum(f.qty),0) 
							from productstockdet f
							join sloc ff on ff.slocid = f.slocid
							join storagebin fff on fff.storagebinid=f.storagebinid
							where f.productid = t.productid and
							f.referenceno like 'OP-%' and
							f.qty > 0 and
							f.slocid = t.slocid and
							fff.description like '%".$storagebin."%' and
							f.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as produksi,
							(
							select ifnull(sum(g.qty),0) 
							from productstockdet g
							join sloc gg on gg.slocid = g.slocid
							join storagebin ggg on ggg.storagebinid=g.storagebinid
							where g.productid = t.productid and
							g.referenceno like 'SJ-%' and
							g.slocid = t.slocid and
							ggg.description like '%".$storagebin."%' and
							g.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as jual,
							(
							select ifnull(sum(h.qty),0) 
							from productstockdet h
							join sloc hh on hh.slocid = h.slocid
							join storagebin hhh on hhh.storagebinid=h.storagebinid
							where h.productid = t.productid and
							h.referenceno like 'GRR-%' and
							h.slocid = t.slocid and
							hhh.description like '%".$storagebin."%' and
							h.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returbeli,
							(
							select ifnull(sum(i.qty),0) 
							from productstockdet i
							join sloc ii on ii.slocid = i.slocid
							join storagebin iii on iii.storagebinid=i.storagebinid
							where i.productid = t.productid and
							i.referenceno like 'TFS-%' and
							i.qty < 0 and
							i.slocid = t.slocid and
							iii.description like '%".$storagebin."%' and
							i.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfout,
							(
							select ifnull(sum(j.qty),0) 
							from productstockdet j
							join sloc jj on jj.slocid = j.slocid
							join storagebin jjj on jjj.storagebinid=j.storagebinid
							where j.productid = t.productid and
							j.referenceno like 'OP-%' and
							j.qty < 0 and
							j.slocid = t.slocid and
							jjj.description like '%".$storagebin."%' and
							j.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as pemakaian,
							(
							select ifnull(sum(k.qty),0) 
							from productstockdet k
							join sloc kk on kk.slocid = k.slocid
							join storagebin kkk on kkk.storagebinid=k.storagebinid
							where k.productid = t.productid and
							k.referenceno like 'TSO-%' and
							k.slocid = t.slocid and
							kkk.description like '%".$storagebin."%' and
							k.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as koreksi,
							(select ifnull(sum(l.qty),0) 
							from productstockdet l
							join sloc ll on ll.slocid = l.slocid
							join storagebin lll on lll.storagebinid=l.storagebinid
							where l.productid = t.productid and
							l.referenceno like '%konversi%' and
							l.qty > 0 and
							l.slocid = t.slocid and
							lll.description like '%".$storagebin."%' and
							l.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiin,
							(
							select ifnull(sum(m.qty),0) 
							from productstockdet m
							join sloc mm on mm.slocid = m.slocid
							join storagebin mmm on mmm.storagebinid=m.storagebinid
							where m.productid = t.productid and
							m.referenceno like '%konversi%' and
							m.qty < 0 and
							m.slocid = t.slocid and
							mmm.description like '%".$storagebin."%' and
							m.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiout,v.slocid,v.sloccode,u.materialgroupid,u.description
							from productplant t
							join materialgroup u on u.materialgroupid = t.materialgroupid
							join sloc v on v.slocid = t.slocid
							where getcompanyfromsloc(v.slocid) = ".$companyid." and v.sloccode like '%".$sloc."%'
							and u.description like '%".$materialgroup."%') z) zz )zzz where awal<>0 or masuk<>0 or keluar<>0 or akhir<>0
					order by materialgroupid,slocid";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang (Detail) - Data Harga';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(200,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(235,$this->pdf->gety()+5,': '.$row['description']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select *,case when akhir < 0 then 'X' else '' end as minus from
							(select barang,satuan,awal,masuk,keluar,(awal+masuk+keluar) as akhir,harga
							from
							(select barang,satuan,awal,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+koreksi+konversiout) as keluar,harga
							from
							(select 
							(
							select distinct aa.productname 
							from productstockdet a
							join product aa on aa.productid = a.productid
							join sloc ab on ab.slocid = a.slocid
							join storagebin ac on ac.storagebinid=a.storagebinid
							where a.productid = t.productid and
							a.unitofmeasureid = t.unitofissue and
							ac.description like '%".$storagebin."%'
							) as barang,
							(
							select distinct bb.uomcode 
							from productstockdet b
							join unitofmeasure bb on bb.unitofmeasureid = b.unitofmeasureid
							join sloc ba on ba.slocid = b.slocid
							join storagebin bc on bc.storagebinid=b.storagebinid
							where b.productid = t.productid and
							b.unitofmeasureid = t.unitofissue and
							bc.description like '%".$storagebin."%'
							) as satuan,
							(
							select ifnull(sum(aw.qty),0) 
							from productstockdet aw
							join sloc aaw on aaw.slocid = aw.slocid
							join storagebin aww on aww.storagebinid=aw.storagebinid
							where aw.productid = t.productid and
							aw.transdate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
							aw.slocid = t.slocid and
							aww.description like '%".$storagebin."%'
							) as awal,
							(
							select ifnull(sum(c.qty),0) 
							from productstockdet c
							join sloc cc on cc.slocid = c.slocid
							join storagebin ccc on ccc.storagebinid=c.storagebinid
							where c.productid = t.productid and
							c.referenceno like 'GR-%' and
							c.slocid = t.slocid and
							ccc.description like '%".$storagebin."%' and
							c.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as beli,
							(
							select ifnull(sum(d.qty),0) 
							from productstockdet d
							join sloc dd on dd.slocid = d.slocid
							join storagebin ddd on ddd.storagebinid=d.storagebinid
							where d.productid = t.productid and
							d.referenceno like 'GIR-%' and
							d.slocid = t.slocid and
							ddd.description like '%".$storagebin."%' and
							d.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returjual,
							(
							select ifnull(sum(e.qty),0) 
							from productstockdet e
							join sloc ee on ee.slocid = e.slocid
							join storagebin eee on eee.storagebinid=e.storagebinid
							where e.productid = t.productid and
							e.referenceno like 'TFS-%' and
							e.qty > 0 and
							e.slocid = t.slocid and
							eee.description like '%".$storagebin."%' and
							e.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfin,
							(
							select ifnull(sum(f.qty),0) 
							from productstockdet f
							join sloc ff on ff.slocid = f.slocid
							join storagebin fff on fff.storagebinid=f.storagebinid
							where f.productid = t.productid and
							f.referenceno like 'OP-%' and
							f.qty > 0 and
							f.slocid = t.slocid and
							fff.description like '%".$storagebin."%' and
							f.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as produksi,
							(
							select ifnull(sum(g.qty),0) 
							from productstockdet g
							join sloc gg on gg.slocid = g.slocid
							join storagebin ggg on ggg.storagebinid=g.storagebinid
							where g.productid = t.productid and
							g.referenceno like 'SJ-%' and
							g.slocid = t.slocid and
							ggg.description like '%".$storagebin."%' and
							g.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as jual,
							(
							select ifnull(sum(h.qty),0) 
							from productstockdet h
							join sloc hh on hh.slocid = h.slocid
							join storagebin hhh on hhh.storagebinid=h.storagebinid
							where h.productid = t.productid and
							h.referenceno like 'GRR-%' and
							h.slocid = t.slocid and
							hhh.description like '%".$storagebin."%' and
							h.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returbeli,
							(
							select ifnull(sum(i.qty),0) 
							from productstockdet i
							join sloc ii on ii.slocid = i.slocid
							join storagebin iii on iii.storagebinid=i.storagebinid
							where i.productid = t.productid and
							i.referenceno like 'TFS-%' and
							i.qty < 0 and
							i.slocid = t.slocid and
							iii.description like '%".$storagebin."%' and
							i.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfout,
							(
							select ifnull(sum(j.qty),0) 
							from productstockdet j
							join sloc jj on jj.slocid = j.slocid
							join storagebin jjj on jjj.storagebinid=j.storagebinid
							where j.productid = t.productid and
							j.referenceno like 'OP-%' and
							j.qty < 0 and
							j.slocid = t.slocid and
							jjj.description like '%".$storagebin."%' and
							j.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as pemakaian,
							(
							select ifnull(sum(k.qty),0) 
							from productstockdet k
							join sloc kk on kk.slocid = k.slocid
							join storagebin kkk on kkk.storagebinid=k.storagebinid
							where k.productid = t.productid and
							k.referenceno like 'TSO-%' and
							k.slocid = t.slocid and
							kkk.description like '%".$storagebin."%' and
							k.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as koreksi,
							(select ifnull(sum(l.qty),0) 
							from productstockdet l
							join sloc ll on ll.slocid = l.slocid
							join storagebin lll on lll.storagebinid=l.storagebinid
							where l.productid = t.productid and
							l.referenceno like '%konversi%' and
							l.qty > 0 and
							l.slocid = t.slocid and
							lll.description like '%".$storagebin."%' and
							l.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiin,
							(
							select ifnull(sum(m.qty),0) 
							from productstockdet m
							join sloc mm on mm.slocid = m.slocid
							join storagebin mmm on mmm.storagebinid=m.storagebinid
							where m.productid = t.productid and
							m.referenceno like '%konversi%' and
							m.qty < 0 and
							m.slocid = t.slocid and
							m.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiout,
							ifnull((select q.harga 
							from dataharga q
							where q.productid=t.productid
							),0) as harga
							from productplant t
							join materialgroup u on u.materialgroupid = t.materialgroupid
							join sloc v on v.slocid = t.slocid
									where getcompanyfromsloc(v.slocid) = ".$companyid."
              and u.materialgroupid = '".$row['materialgroupid']."' 
							and v.slocid = '".$row['slocid']."' and v.sloccode like '%".$sloc."%'
							and u.description like '%".$materialgroup."%' order by barang) z) zz )zzz 
							where awal<>0 or masuk<>0 or keluar<>0 or akhir<>0 order by barang asc";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['barang'],$row1['satuan'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['awal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['harga']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['awal'] * $row1['harga']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['masuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['masuk'] * $row1['harga']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['awal'] + $row1['masuk'])),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['harga']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],(($row1['awal'] + $row1['masuk']) * $row1['harga']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['keluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['keluar'] * $row1['harga']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['akhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['akhir'] * $row1['harga']/$per)),
					$row1['minus'],
				));
				$qtyawal += $row1['awal'];
				$nilaiawal += ($row1['awal'] * $row1['harga']/$per);
				$qtymasuk += $row1['masuk'];
				$nilaimasuk += ($row1['masuk'] * $row1['harga']/$per);
				$qtytersedia += ($row1['awal'] + $row1['masuk']);
				$nilaitersedia += (($row1['awal'] + $row1['masuk']) * $row1['harga']/$per);
				$qtykeluar += $row1['keluar'];
				$nilaikeluar += ($row1['keluar'] * $row1['harga']/$per);
				$qtyakhir += $row1['akhir'];
				$nilaiakhir += ($row1['akhir'] * $row1['harga']/$per);
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));
		
		$this->pdf->Output();
	}
	/* tanpa filter rak
	public function RekapPersediaanBarangDetail($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	//Masih menggunakan Data Harga
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description from
							(select barang,satuan,awal,masuk,keluar,(awal+masuk+keluar) as akhir,slocid,sloccode,materialgroupid,description
							from
							(select barang,satuan,awal,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+koreksi+konversiout) as keluar,slocid,sloccode,materialgroupid,description
							from
							(select
							(
							select distinct aa.productid 
							from productstockdet a
							join product aa on aa.productid = a.productid
							join sloc ab on ab.slocid = a.slocid
							where a.productid = t.productid and
							a.unitofmeasureid = t.unitofissue
							) as barang,
							(
							select distinct bb.uomcode 
							from productstockdet b
							join unitofmeasure bb on bb.unitofmeasureid = b.unitofmeasureid
							join sloc ba on ba.slocid = b.slocid
							where b.productid = t.productid and
							b.unitofmeasureid = t.unitofissue
							) as satuan,
							(
							select ifnull(sum(aw.qty),0) 
							from productstockdet aw
							join sloc aaw on aaw.slocid = aw.slocid
							where aw.productid = t.productid and
							aw.transdate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
							aw.slocid = t.slocid
							) as awal,
							(
							select ifnull(sum(c.qty),0) 
							from productstockdet c
							join sloc cc on cc.slocid = c.slocid
							where c.productid = t.productid and
							c.referenceno like 'GR-%' and
							c.slocid = t.slocid and
							c.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as beli,
							(
							select ifnull(sum(d.qty),0) 
							from productstockdet d
							join sloc dd on dd.slocid = d.slocid
							where d.productid = t.productid and
							d.referenceno like 'GIR-%' and
							d.slocid = t.slocid and
							d.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returjual,
							(
							select ifnull(sum(e.qty),0) 
							from productstockdet e
							join sloc ee on ee.slocid = e.slocid
							where e.productid = t.productid and
							e.referenceno like 'TFS-%' and
							e.qty > 0 and
							e.slocid = t.slocid and
							e.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfin,
							(
							select ifnull(sum(f.qty),0) 
							from productstockdet f
							join sloc ff on ff.slocid = f.slocid
							where f.productid = t.productid and
							f.referenceno like 'OP-%' and
							f.qty > 0 and
							f.slocid = t.slocid and
							f.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as produksi,
							(
							select ifnull(sum(g.qty),0) 
							from productstockdet g
							join sloc gg on gg.slocid = g.slocid
							where g.productid = t.productid and
							g.referenceno like 'SJ-%' and
							g.slocid = t.slocid and
							g.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as jual,
							(
							select ifnull(sum(h.qty),0) 
							from productstockdet h
							join sloc hh on hh.slocid = h.slocid
							where h.productid = t.productid and
							h.referenceno like 'GRR-%' and
							h.slocid = t.slocid and
							h.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returbeli,
							(
							select ifnull(sum(i.qty),0) 
							from productstockdet i
							join sloc ii on ii.slocid = i.slocid
							where i.productid = t.productid and
							i.referenceno like 'TFS-%' and
							i.qty < 0 and
							i.slocid = t.slocid and
							i.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfout,
							(
							select ifnull(sum(j.qty),0) 
							from productstockdet j
							join sloc jj on jj.slocid = j.slocid
							where j.productid = t.productid and
							j.referenceno like 'OP-%' and
							j.qty < 0 and
							j.slocid = t.slocid and
							j.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as pemakaian,
							(
							select ifnull(sum(k.qty),0) 
							from productstockdet k
							join sloc kk on kk.slocid = k.slocid
							where k.productid = t.productid and
							k.referenceno like 'TSO-%' and
							k.slocid = t.slocid and
							k.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as koreksi,
							(select ifnull(sum(l.qty),0) 
							from productstockdet l
							join sloc ll on ll.slocid = l.slocid
							where l.productid = t.productid and
							l.referenceno like '%konversi%' and
							l.qty > 0 and
							l.slocid = t.slocid
							and l.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiin,
							(
							select ifnull(sum(m.qty),0) 
							from productstockdet m
							join sloc mm on mm.slocid = m.slocid
							where m.productid = t.productid and
							m.referenceno like '%konversi%' and
							m.qty < 0 and
							m.slocid = t.slocid and
							m.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiout,v.slocid,v.sloccode,u.materialgroupid,u.description
							from productplant t
							join materialgroup u on u.materialgroupid = t.materialgroupid
							join sloc v on v.slocid = t.slocid
							where getcompanyfromsloc(v.slocid) = ".$companyid." and v.sloccode like '%".$sloc."%'
							and u.description like '%".$materialgroup."%') z) zz )zzz where awal<>0 or masuk<>0 or keluar<>0 or akhir<>0
					order by materialgroupid,slocid";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang (Detail)';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(200,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(235,$this->pdf->gety()+5,': '.$row['description']);
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select *,case when akhir < 0 then 'X' else '' end as minus from
							(select barang,satuan,awal,masuk,keluar,(awal+masuk+keluar) as akhir,harga
							from
							(select barang,satuan,awal,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+koreksi+konversiout) as keluar,harga
							from
							(select 
							(
							select distinct aa.productname 
							from productstockdet a
							join product aa on aa.productid = a.productid
							join sloc ab on ab.slocid = a.slocid
							where a.productid = t.productid and
							a.unitofmeasureid = t.unitofissue
							) as barang,
							(
							select distinct bb.uomcode 
							from productstockdet b
							join unitofmeasure bb on bb.unitofmeasureid = b.unitofmeasureid
							join sloc ba on ba.slocid = b.slocid
							where b.productid = t.productid and
							b.unitofmeasureid = t.unitofissue
							) as satuan,
							(
							select ifnull(sum(aw.qty),0) 
							from productstockdet aw
							join sloc aaw on aaw.slocid = aw.slocid
							where aw.productid = t.productid and
							aw.transdate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
							aw.slocid = t.slocid
							) as awal,
							(
							select ifnull(sum(c.qty),0) 
							from productstockdet c
							join sloc cc on cc.slocid = c.slocid
							where c.productid = t.productid and
							c.referenceno like 'GR-%' and
							c.slocid = t.slocid and
							c.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as beli,
							(
							select ifnull(sum(d.qty),0) 
							from productstockdet d
							join sloc dd on dd.slocid = d.slocid
							where d.productid = t.productid and
							d.referenceno like 'GIR-%' and
							d.slocid = t.slocid and
							d.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returjual,
							(
							select ifnull(sum(e.qty),0) 
							from productstockdet e
							join sloc ee on ee.slocid = e.slocid
							where e.productid = t.productid and
							e.referenceno like 'TFS-%' and
							e.qty > 0 and
							e.slocid = t.slocid and
							e.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfin,
							(
							select ifnull(sum(f.qty),0) 
							from productstockdet f
							join sloc ff on ff.slocid = f.slocid
							where f.productid = t.productid and
							f.referenceno like 'OP-%' and
							f.qty > 0 and
							f.slocid = t.slocid and
							f.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as produksi,
							(
							select ifnull(sum(g.qty),0) 
							from productstockdet g
							join sloc gg on gg.slocid = g.slocid
							where g.productid = t.productid and
							g.referenceno like 'SJ-%' and
							g.slocid = t.slocid and
							g.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as jual,
							(
							select ifnull(sum(h.qty),0) 
							from productstockdet h
							join sloc hh on hh.slocid = h.slocid
							where h.productid = t.productid and
							h.referenceno like 'GRR-%' and
							h.slocid = t.slocid and
							h.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returbeli,
							(
							select ifnull(sum(i.qty),0) 
							from productstockdet i
							join sloc ii on ii.slocid = i.slocid
							where i.productid = t.productid and
							i.referenceno like 'TFS-%' and
							i.qty < 0 and
							i.slocid = t.slocid and
							i.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfout,
							(
							select ifnull(sum(j.qty),0) 
							from productstockdet j
							join sloc jj on jj.slocid = j.slocid
							where j.productid = t.productid and
							j.referenceno like 'OP-%' and
							j.qty < 0 and
							j.slocid = t.slocid and
							j.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as pemakaian,
							(
							select ifnull(sum(k.qty),0) 
							from productstockdet k
							join sloc kk on kk.slocid = k.slocid
							where k.productid = t.productid and
							k.referenceno like 'TSO-%' and
							k.slocid = t.slocid and
							k.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as koreksi,
							(select ifnull(sum(l.qty),0) 
							from productstockdet l
							join sloc ll on ll.slocid = l.slocid
							where l.productid = t.productid and
							l.referenceno like '%konversi%' and
							l.qty > 0 and
							l.slocid = t.slocid
							and l.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiin,
							(
							select ifnull(sum(m.qty),0) 
							from productstockdet m
							join sloc mm on mm.slocid = m.slocid
							where m.productid = t.productid and
							m.referenceno like '%konversi%' and
							m.qty < 0 and
							m.slocid = t.slocid and
							m.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiout,
							ifnull((select q.harga 
							from dataharga q
							where q.productid=t.productid
							),0) as harga
							from productplant t
							join materialgroup u on u.materialgroupid = t.materialgroupid
							join sloc v on v.slocid = t.slocid
									where getcompanyfromsloc(v.slocid) = ".$companyid."
              and u.materialgroupid = '".$row['materialgroupid']."' 
							and v.slocid = '".$row['slocid']."' and v.sloccode like '%".$sloc."%'
							and u.description like '%".$materialgroup."%' order by barang) z) zz )zzz 
							where awal<>0 or masuk<>0 or keluar<>0 or akhir<>0 order by barang asc";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['barang'],$row1['satuan'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['awal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['harga']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['awal'] * $row1['harga']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['masuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['masuk'] * $row1['harga']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['awal'] + $row1['masuk'])),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['harga']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],(($row1['awal'] + $row1['masuk']) * $row1['harga']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['keluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['keluar'] * $row1['harga']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['akhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['akhir'] * $row1['harga']/$per)),
					$row1['minus'],
				));
				$qtyawal += $row1['awal'];
				$nilaiawal += ($row1['awal'] * $row1['harga']/$per);
				$qtymasuk += $row1['masuk'];
				$nilaimasuk += ($row1['masuk'] * $row1['harga']/$per);
				$qtytersedia += ($row1['awal'] + $row1['masuk']);
				$nilaitersedia += (($row1['awal'] + $row1['masuk']) * $row1['harga']/$per);
				$qtykeluar += $row1['keluar'];
				$nilaikeluar += ($row1['keluar'] * $row1['harga']/$per);
				$qtyakhir += $row1['akhir'];
				$nilaiakhir += ($row1['akhir'] * $row1['harga']/$per);
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));
		
		$this->pdf->Output();
	}
	*/
	//4
	public function Hpp($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct a.materialgroupid,a.description
				from materialgroup a
				join productplant b on b.materialgroupid = a.materialgroupid
				join sloc c on c.slocid = b.slocid
				join plant d on d.plantid = c.plantid
				join product e on e.productid = b.productid
				where d.companyid = '".$companyid."' and a.description like '%{$materialgroup}%'
                and c.sloccode like '%{$sloc}%' and e.productname like '%{$product}%'";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Harga Pokok Produksi';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Divisi');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['description']);
				$sql1 = "select distinct b.productname,c.sloccode,g.description as sbin,f.uomcode as uom,ifnull(a.buyprice,0) as hpp
					from productdetail a
					join product b on b.productid = a.productid
					join sloc c on c.slocid = a.slocid
					join productplant d on d.productid = a.productid and d.slocid = a.slocid and d.unitofissue = a.unitofmeasureid
					join materialgroup e on e.materialgroupid = d.materialgroupid
					join unitofmeasure f on f.unitofmeasureid = a.unitofmeasureid
					join storagebin g on g.storagebinid = a.storagebinid
					where b.productname like '%{$product}%' and c.sloccode like '%{$sloc}%'
                    and e.materialgroupid = '".$row['materialgroupid']."'";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totalqty=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,90,25,25,12,30));
				$this->pdf->colheader = array('No','Nama Barang','Gudang','Rak','Satuan','HPP');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','C','C','C','R');
				$this->pdf->setFont('Arial','',8);
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						$row1['sloccode'],
						$row1['sbin'],
						$row1['uom'],
						Yii::app()->format->formatCurrency($row1['hpp']/$per)
					));
				}
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}
	/*public function Hpp($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct a.materialgroupid,a.description
				from materialgroup a
				join productplant b on b.materialgroupid = a.materialgroupid
				join sloc c on c.slocid = b.slocid
				join plant d on d.plantid = c.plantid
				join product e on e.productid = b.productid
				where d.companyid = '".$companyid."'";

			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Harga Pokok Produksi';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Divisi');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['description']);
				$sql1 = "select distinct b.productname,f.description as uom,ifnull(a.buyprice,0) as hpp
					from productdetail a
					join product b on b.productid = a.productid
					join sloc c on c.slocid = a.slocid
					join productplant d on d.productid = a.productid and d.slocid = a.slocid and d.unitofissue = a.unitofmeasureid
					join materialgroup e on e.materialgroupid = d.materialgroupid
					join unitofmeasure f on f.unitofmeasureid = a.unitofmeasureid
					where e.materialgroupid = '".$row['materialgroupid']."'";
				$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				$totalqty=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C');
				$this->pdf->setwidths(array(10,120,30,30));
				$this->pdf->colheader = array('No','Nama Barang','Satuan','HPP');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','C','R');
				$this->pdf->setFont('Arial','',8);
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						$row1['uom'],
						Yii::app()->format->formatCurrency($row1['hpp']/$per)
					));
				}
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}*/
	//5
	public function HppBillOfMaterial($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
    {
            parent::actionDownload();
            $sql = "select distinct d.slocid,d.sloccode
					from bomdetail a
					join billofmaterial b on b.bomid=a.bomid
					join productplant aa on aa.productid=a.productid
					join productplant bb on bb.productid=b.productid
					join product aaa on aaa.productid=a.productid
					join product bbb on bbb.productid=b.productid
					left join productdetail c on c.productid=a.productid and c.slocid=aa.slocid and c.unitofmeasureid=aa.unitofissue
					left join sloc d on d.slocid=aa.slocid
					left join plant e on e.plantid=d.plantid
					left join company f on f.companyid=e.companyid
					left join unitofmeasure g on g.unitofmeasureid=b.uomid
					where f.companyid='".$companyid."' and bb.issource=1 and bbb.productname like '%".$product."%' and d.sloccode like '%".$sloc."%' and bb.slocid=aa.slocid order by slocid";
			$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
            
            foreach($dataReader as $row)
            {
                $this->pdf->companyid = $companyid;
            }
            $this->pdf->title='HPP Berdasarkan BOM';
            $this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
            $this->pdf->AddPage('P');

            $this->pdf->sety($this->pdf->gety());
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C');
			$this->pdf->setwidths(array(110,20,20,20,20));
			$this->pdf->colheader = array('Nama Barang','Satuan','Qty','Price','Jumlah');
			$this->pdf->RowHeader();
            
            foreach($dataReader as $row)
            {
                $this->pdf->SetFont('Arial','B',10);                
				$this->pdf->text(10,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(28,$this->pdf->gety()+5,': '.$row['sloccode']);
                $sql1 = "select distinct b.bomid,b.bomversion,bbb.productid,bbb.productname,g.uomcode as uomname
						from bomdetail a
						join billofmaterial b on b.bomid=a.bomid
						join productplant aa on aa.productid=a.productid
						join productplant bb on bb.productid=b.productid
						join product aaa on aaa.productid=a.productid
						join product bbb on bbb.productid=b.productid
						left join productdetail c on c.productid=a.productid and c.slocid=aa.slocid and c.unitofmeasureid=aa.unitofissue
						left join sloc d on d.slocid=aa.slocid
						left join plant e on e.plantid=d.plantid
						left join company f on f.companyid=e.companyid
						left join unitofmeasure g on g.unitofmeasureid=b.uomid
						where f.companyid=".$companyid." and bb.issource=1 and bbb.productname like '%".$product."%' and bb.slocid='".$row['slocid']."' and bb.slocid=aa.slocid order by productname";
		$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
                $this->pdf->sety($this->pdf->gety()+5);
                foreach($dataReader1 as $row1)
				
			{
                $sql2 = "select bbb.productname,bbb.productid,g.description as uomname,d.sloccode,sum(ifnull(a.qty*(select ifnull(c.buyprice,0) from productdetail c where c.productid=a.productid and c.unitofmeasureid=a.uomid and c.slocid=d.slocid order by c.buyprice desc Limit 1),a.qty)) as total
						from bomdetail a
						join billofmaterial b on b.bomid=a.bomid
						join productplant aa on aa.productid=a.productid
						join productplant bb on bb.productid=b.productid
						join product aaa on aaa.productid=a.productid
						join product bbb on bbb.productid=b.productid
						left join sloc d on d.slocid=aa.slocid
						left join plant e on e.plantid=d.plantid
						left join company f on f.companyid=e.companyid
						left join unitofmeasure g on g.unitofmeasureid=b.uomid
						where f.companyid=".$companyid." and bb.issource=1 and bb.slocid='".$row['slocid']."' and b.productid='".$row1['productid']."' and bb.slocid=aa.slocid and b.bomid=".$row1['bomid']." ";
		$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
                $this->pdf->sety($this->pdf->gety());
                foreach($dataReader2 as $row2)
				
			{
                $this->pdf->SetFont('Arial','BI',9);                
				$this->pdf->text(10,$this->pdf->gety()+5,$row2['productname']);
				$this->pdf->text(10,$this->pdf->gety()+10,'BOMVERSION :');
				$this->pdf->text(40,$this->pdf->gety()+10,$row1['bomversion']);
				$this->pdf->text(150,$this->pdf->gety()+10,$row2['uomname']);
				$this->pdf->text(180,$this->pdf->gety()+10,Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['total']/$per));
                $sql3 = "select distinct aaa.productname,aa.slocid,aaa.isstock,g.description as uomname,ifnull(a.qty*aaa.isstock,0) as qty,ifnull((select ifnull(c.buyprice,0) from productdetail c where c.productid=a.productid and c.unitofmeasureid=a.uomid and c.slocid=d.slocid order by c.buyprice desc Limit 1),a.qty) as price,ifnull(a.qty*(select ifnull(c.buyprice,0) from productdetail c where c.productid=a.productid and c.unitofmeasureid=a.uomid and c.slocid=d.slocid order by c.buyprice desc Limit 1),a.qty) as jumlah
							from bomdetail a
							join billofmaterial b on b.bomid=a.bomid
							join productplant aa on aa.productid=a.productid
							join productplant bb on bb.productid=b.productid
							join product aaa on aaa.productid=a.productid
							join product bbb on bbb.productid=b.productid
							left join sloc d on d.slocid=aa.slocid
							left join plant e on e.plantid=d.plantid
							left join company f on f.companyid=e.companyid
							left join unitofmeasure g on g.unitofmeasureid=a.uomid
							where f.companyid=".$companyid." and bb.issource=1 and bb.slocid='".$row['slocid']."' and b.productid='".$row1['productid']."' and bb.slocid=aa.slocid and b.bomid=".$row1['bomid']." order by isstock desc,productname";
                $this->pdf->sety($this->pdf->gety()+12);
                $this->pdf->coldetailalign = array('L','C','R','R','R');
                $this->pdf->setFont('Arial','',8);
		$dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();
                
                foreach($dataReader3 as $row3)
                {
                   $this->pdf->row(array(
                                $row3['productname'],$row3['uomname'],
                                Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['qty']),
                                Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['price']/$per),
                                Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['jumlah']/$per),
                        ));
                }
				$this->pdf->sety($this->pdf->gety()+5);
                    $this->pdf->checkPageBreak(10);
            }}}
                $this->pdf->Output();
  
	}
	//6
	public function RincianNilaiPemakaianStok($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	//Masih menggunakan dataharga
    {
		parent::actionDownload();
		$sql = "select e.slocid as fromslocid,e.sloccode as fromsloccode, e.description as fromslocdesc,
						f.slocid as toslocid, f.sloccode as tosloccode, f.description as toslocdesc
						from productoutputdetail a
						join product b on b.productid = a.productid
						join productoutput c on c.productoutputid = a.productoutputid
						join unitofmeasure d on d.unitofmeasureid = a.uomid
						join sloc e on e.slocid=a.fromslocid
						join sloc f on f.slocid=a.toslocid
						join productplan g on g.productplanid=c.productplanid
						where c.recordstatus = 3 and g.companyid = ".$companyid." and e.sloccode like '%".$sloc."%' and f.sloccode like '%".$sloc."%'
						and c.productoutputdate between 
						'".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
						'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						group by e.slocid,f.slocid
						order by e.sloccode,f.sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Nilai Pemakaian Stok';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');

		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Asal');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fromsloccode'].' - '.$row['fromslocdesc']);
			$this->pdf->text(10,$this->pdf->gety()+10,'Tujuan');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['tosloccode'].' - '.$row['toslocdesc']);
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+12);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,90,15,20,30,30));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Jumlah');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','L','R','R','R');
			
			$i=0;$total=0;
			$sql1 = "select e.sloccode as fromsloccode, f.sloccode as tosloccode, b.productname, a.qty, d.uomcode,
						(select ifnull(z.harga,0) from dataharga z where z.productid=a.productid and z.uom=a.uomid) as harga
						from productoutputdetail a
						join product b on b.productid = a.productid
						join productoutput c on c.productoutputid = a.productoutputid
						join unitofmeasure d on d.unitofmeasureid = a.uomid
						join sloc e on e.slocid=a.fromslocid
						join sloc f on f.slocid=a.toslocid
						join productplan g on g.productplanid=c.productplanid
						where c.recordstatus = 3 and g.companyid = ".$companyid." and e.slocid = '".$row['fromslocid']."' and f.slocid = '".$row['toslocid']."'
						and c.productoutputdate between 
						'".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
						'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,$row1['productname'],
					$row1['uomcode'],
					Yii::app()->format->formatCurrency($row1['qty']),
					Yii::app()->format->formatCurrency($row1['harga']/$per),
					Yii::app()->format->formatCurrency($row1['qty'] * $row1['harga']/$per),
				));
				$total += ($row1['qty'] * $row1['harga']/$per);
			}
			/*$this->pdf->setFont('Arial','BI',9);
			$this->pdf->colalign = array('C','C','C');
			$this->pdf->setwidths(array(10,155,30));
			$this->pdf->coldetailalign = array('R','R','R');
			$this->pdf->row(array(
				'','TOTAL PEMAKAIAN '.$row['fromsloccode'].' - '.$row['tosloccode'],
				Yii::app()->format->formatCurrency($total),
			));
			$this->pdf->sety($this->pdf->gety()+10);*/
			$this->pdf->checkPageBreak(10);
		}
		
				
		$this->pdf->Output();
	}
	//7
	public function RekapNilaiPemakaianStok($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	//Masih menggunakan dataharga
	{
		parent::actionDownload();
		$i=0;$total=0;
		$sql = "select e.slocid as fromslocid,e.sloccode as fromsloccode, e.description as fromslocdesc,
						f.slocid as toslocid, f.sloccode as tosloccode, f.description as toslocdesc,
						sum(ifnull(a.qty,0)*(select ifnull(z.harga,0) from dataharga z where z.productid=a.productid and z.uom=a.uomid)) as jumlah
						from productoutputdetail a
						join product b on b.productid = a.productid
						join productoutput c on c.productoutputid = a.productoutputid
						join unitofmeasure d on d.unitofmeasureid = a.uomid
						join sloc e on e.slocid=a.fromslocid
						join sloc f on f.slocid=a.toslocid
						join productplan g on g.productplanid=c.productplanid
						where c.recordstatus = 3 and g.companyid = ".$companyid." and e.sloccode like '%".$sloc."%' and f.sloccode like '%".$sloc."%'
						and c.productoutputdate between 
						'".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
						'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						group by e.slocid,f.slocid
						order by e.sloccode,f.sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Nilai Pemakaian Stok';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+0);
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(10,70,70,35));
		$this->pdf->colheader = array('No','Gudang Asal','Gudang Tujuan','Jumlah');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('R','L','L','R');

		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',8);
			$this->pdf->row(array(
				$i,
				$row['fromsloccode'].' - '.$row['fromslocdesc'],
				$row['tosloccode'].' - '.$row['toslocdesc'],
				Yii::app()->format->formatCurrency($row['jumlah']/$per),
			));
			$total += $row['jumlah']/$per;			
		}
		/*$this->pdf->setFont('Arial','BI',9);
		$this->pdf->row(array(
			'',
			'',
			'Total Pemakaian',
			Yii::app()->format->formatCurrency($total),
		));*/
		
		$this->pdf->checkPageBreak(10);		
		$this->pdf->Output();
	}
	//8
	public function RincianNilaiStockOpname($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$total2=0;
		$sql = "select distinct f.slocid,f.sloccode,f.description
						from bsdetail a
						join product b on b.productid=a.productid
						join unitofmeasure c on c.unitofmeasureid=a.unitofmeasureid
						join storagebin d on d.storagebinid=a.storagebinid
						join bsheader e on e.bsheaderid=a.bsheaderid
						join sloc f on f.slocid=e.slocid
						where e.recordstatus=5 and getcompanyfromsloc(f.slocid) = ".$companyid." and f.sloccode like '%".$sloc."%' 
						and b.productname like '%".$product."%' 
						and e.bsdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Nilai Stock Opname';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');

		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Gudang');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['sloccode'].' - '.$row['description']);
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+12);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,90,15,20,30,30));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Jumlah');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','L','R','R','R');
			
			$i=0;$total=0;
			$sql1 = "select b.productname,c.uomcode,sum(a.qty) as qty,sum(a.qty*a.buyprice)/sum(a.qty) as harga,sum(a.qty*a.buyprice) as jumlah
						from bsdetail a
						join product b on b.productid=a.productid
						join unitofmeasure c on c.unitofmeasureid=a.unitofmeasureid
						join storagebin d on d.storagebinid=a.storagebinid
						join bsheader e on e.bsheaderid=a.bsheaderid
						join sloc f on f.slocid=e.slocid
						where e.recordstatus=5 and f.slocid = '".$row['slocid']."' and f.sloccode like '%".$sloc."%' 
						and b.productname like '%".$product."%' 
						and e.bsdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						group by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,$row1['productname'],
					$row1['uomcode'],
					Yii::app()->format->formatCurrency($row1['qty']),
					Yii::app()->format->formatCurrency($row1['harga']/$per),
					Yii::app()->format->formatCurrency($row1['jumlah']/$per),
				));
				$total += ($row1['jumlah']/$per);
			}
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->colalign = array('C','C','C');
			$this->pdf->setwidths(array(10,155,30));
			$this->pdf->coldetailalign = array('R','R','R');
			$this->pdf->row(array(
				'','TOTAL KOREKSI '.$row['sloccode'],
				Yii::app()->format->formatCurrency($total),
			));
			$total2 += $total;
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(10);
		}
		$this->pdf->setFont('Arial','BI',9);
		$this->pdf->colalign = array('C','C','C');
		$this->pdf->setwidths(array(10,155,30));
		$this->pdf->coldetailalign = array('R','R','R');
		$this->pdf->row(array(
			'','GRAND TOTAL KOREKSI ',
			Yii::app()->format->formatCurrency($total2),
		));
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->checkPageBreak(10);
				
		$this->pdf->Output();
	}
	//9
	public function RekapNilaiStockOpname($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$total=0;
		$sql = "select distinct f.slocid,f.sloccode,f.description,sum(a.qty*a.buyprice) as jumlah
						from bsdetail a
						join product b on b.productid=a.productid
						join unitofmeasure c on c.unitofmeasureid=a.unitofmeasureid
						join storagebin d on d.storagebinid=a.storagebinid
						join bsheader e on e.bsheaderid=a.bsheaderid
						join sloc f on f.slocid=e.slocid
						where e.recordstatus=5 and getcompanyfromsloc(f.slocid) = ".$companyid." and f.sloccode like '%".$sloc."%' 
						and b.productname like '%".$product."%' 
						and e.bsdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						group by slocid order by sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Nilai Stock Opname';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C');
			$this->pdf->setwidths(array(10,130,35));
			$this->pdf->colheader = array('No','Nama Gudang','Jumlah');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','R');

		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',8);
			$this->pdf->row(array(
				$i,$row['sloccode'].' - '.$row['description'],
				Yii::app()->format->formatCurrency($row['jumlah']/$per),
			));
			$total += ($row['jumlah']/$per);
		}
		$this->pdf->setFont('Arial','BI',9);
		$this->pdf->colalign = array('C','C','C');
		$this->pdf->setwidths(array(10,135,30));
		$this->pdf->coldetailalign = array('R','R','R');
		$this->pdf->row(array(
			'','TOTAL KOREKSI ',
			Yii::app()->format->formatCurrency($total),
		));
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->checkPageBreak(10);
				
		$this->pdf->Output();
	}
	//10
	public function RincianHargaPokokPenjualan($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	//Masih menggunakan dataharga
	{
		parent::actionDownload();
		$total2=0;
		$sql = "select distinct d.slocid,d.sloccode,d.description
						from gidetail a
						left join giheader b on b.giheaderid=a.giheaderid
						left join product c on c.productid=a.productid
						left join sloc d on d.slocid=a.slocid
						left join soheader e on e.soheaderid=b.soheaderid
						where b.recordstatus = 3 and c.isstock = 1 and e.companyid = ".$companyid." and d.sloccode like '%".$sloc."%' 
						and c.productname like '%".$product."%'and b.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by slocid";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Harga Pokok Penjualan';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');

		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Gudang');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['sloccode'].' - '.$row['description']);
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+12);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,90,15,20,30,30));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Jumlah');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R');
			
			$i=0;$total=0;
			$sql1 = "select c.productname,f.uomcode,sum(ifnull(a.qty,0)) as qty,
						ifnull((select z.harga from dataharga z where z.productid=a.productid and z.uom=a.unitofmeasureid),0) as harga,
						sum(ifnull(a.qty,0)*
						ifnull((select z.harga from dataharga z where z.productid=a.productid and z.uom=a.unitofmeasureid),0)) as jumlah
						from gidetail a
						left join giheader b on b.giheaderid=a.giheaderid
						left join product c on c.productid=a.productid
						left join sloc d on d.slocid=a.slocid
						left join soheader e on e.soheaderid=b.soheaderid
						left join unitofmeasure f on f.unitofmeasureid=a.unitofmeasureid
						where b.recordstatus=3 and c.isstock=1 and d.slocid = '".$row['slocid']."' and d.sloccode like '%".$sloc."%' 
						and c.productname like '%".$product."%' 
						and b.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'					
						group by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,$row1['productname'],
					$row1['uomcode'],
					Yii::app()->format->formatCurrency($row1['qty']),
					Yii::app()->format->formatCurrency($row1['harga']/$per),
					Yii::app()->format->formatCurrency($row1['jumlah']/$per),
				));
				$total += ($row1['jumlah']/$per);
			}
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->colalign = array('C','C','C');
			$this->pdf->setwidths(array(10,155,30));
			$this->pdf->coldetailalign = array('R','R','R');
			$this->pdf->row(array(
				'','TOTAL HPP '.$row['sloccode'],
				Yii::app()->format->formatCurrency($total),
			));
			$total2 += $total;
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(10);
		}
		$this->pdf->setFont('Arial','BI',9);
		$this->pdf->colalign = array('C','C','C');
		$this->pdf->setwidths(array(10,155,30));
		$this->pdf->coldetailalign = array('R','R','R');
		$this->pdf->row(array(
			'','GRAND TOTAL HPP ',
			Yii::app()->format->formatCurrency($total2),
		));
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->checkPageBreak(10);
				
		$this->pdf->Output();
	}
	//11
	public function RekapHargaPokokPenjualan($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	//Masih menggunakan dataharga
	{
		parent::actionDownload();
		$i=0;$total=0;
		$sql = "select distinct d.slocid,d.sloccode,d.description,sum(ifnull(a.qty,0)*
						ifnull((select z.harga from dataharga z where z.productid=a.productid and z.uom=a.unitofmeasureid),0)) as jumlah
						from gidetail a
						left join giheader b on b.giheaderid=a.giheaderid
						left join product c on c.productid=a.productid
						left join sloc d on d.slocid=a.slocid
						left join soheader e on e.soheaderid=b.soheaderid
						where b.recordstatus = 3 and c.isstock = 1 and e.companyid = ".$companyid." and d.sloccode like '%".$sloc."%' 
						and c.productname like '%".$product."%'and b.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						group by slocid order by slocid";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Harga Pokok Penjualan';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C');
			$this->pdf->setwidths(array(10,130,35));
			$this->pdf->colheader = array('No','Nama Gudang','Jumlah');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','R');

		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',8);
			$this->pdf->row(array(
				$i,$row['sloccode'].' - '.$row['description'],
				Yii::app()->format->formatCurrency($row['jumlah']/$per),
			));
			$total += ($row['jumlah']/$per);
		}
		$this->pdf->setFont('Arial','BI',9);
		$this->pdf->colalign = array('C','C','C');
		$this->pdf->setwidths(array(10,135,30));
		$this->pdf->coldetailalign = array('R','R','R');
		$this->pdf->row(array(
			'','TOTAL KOREKSI ',
			Yii::app()->format->formatCurrency($total),
		));
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->checkPageBreak(10);
				
		$this->pdf->Output();
	}
	//13
	public function RekapPerbandinganHPPPenjualanPerDokumen($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totalhpp=0;$totaljouhpp=0;$totalinv=0;$totaljouinv=0;
		$sql = "select *,ifnull((100-((nilaihpp/nilaiinvoice)*100)),0) as gm,case when nilaiinvoice <> nilaijournalinvoice then 'X' else '' end as checklist
                from (select a.gino,
                ifnull((select sum(-c.qty*c.buyprice)
                from productdetailhist c
                join sloc d on d.slocid=c.slocid
                join plant e on e.plantid=d.plantid
                where c.referenceno=a.gino and e.companyid=b.companyid),0) as nilaihpp,
                (select f.journalno
                from genjournal f
                where f.referenceno=a.gino and f.companyid=b.companyid) as journalhppno,
                ifnull((select sum(g.debit * g.ratevalue)
                from genledger g
                join genjournal h on h.genjournalid=g.genjournalid
                where h.referenceno=a.gino and h.companyid=b.companyid),0) as nilaijournalhpp,
                ifnull(c.invoiceno,'-') as invoiceno,
                ifnull((select i.amount
                from invoice i
                where i.recordstatus = 3 and i.giheaderid= a.giheaderid),0) as nilaiinvoice,
                (select j.journalno
                from genjournal j
                where j.referenceno=replace(a.gino,'SJ','INV') and j.companyid=b.companyid) as journalinvoiceno,
                ifnull((select sum(k.debit * k.ratevalue)
                from genledger k
                join genjournal l on l.genjournalid=k.genjournalid
                where l.referenceno=replace(a.gino,'SJ','INV') and l.companyid=b.companyid),0) as nilaijournalinvoice
                from giheader a
                join soheader b on b.soheaderid=a.soheaderid
                left join invoice c on c.giheaderid=a.giheaderid and c.recordstatus=3
                where a.recordstatus=3 and b.companyid = ".$companyid."
                and a.giheaderid in (select distinct q.giheaderid from gidetail q join giheader r on r.giheaderid=q.giheaderid join sloc s on s.slocid=q.slocid where s.sloccode like '%".$sloc."%' and r.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
                and a.giheaderid in (select distinct q.giheaderid from gidetail q JOIN giheader r ON r.giheaderid=q.giheaderid JOIN productplant s ON s.productid=q.productid AND s.slocid=q.slocid AND s.unitofissue=q.unitofmeasureid JOIN materialgroup t ON t.materialgroupid=s.materialgroupid WHERE t.description like '%".$materialgroup."%' and r.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
                and a.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
                order by gino";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perbandingan Nilai HPP, Nilai Penjualan dan Nilai Jurnal Per Dokumen';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P','F4');
		
		$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,20,22,20,22,21,22,20,23,12,10));
			$this->pdf->colheader = array('No','Surat Jalan','Nilai HPP SJ','Jurnal SJ','Nilai Jurnal SJ','Invoice','Nilai Invoice','Jurnal INV','Nilai Jurnal INV','GM','X');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','C','R','C','R','C','R','C','R','R','C');

		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',8);
			$this->pdf->row(array(
				$i,
                $row['gino'],
				Yii::app()->format->formatCurrency($row['nilaihpp']/$per),
				$row['journalhppno'],
				Yii::app()->format->formatCurrency($row['nilaijournalhpp']/$per),
				$row['invoiceno'],
				Yii::app()->format->formatCurrency($row['nilaiinvoice']/$per),
				$row['journalinvoiceno'],
				Yii::app()->format->formatCurrency($row['nilaijournalinvoice']/$per),
				Yii::app()->format->formatCurrency($row['gm']),
				$row['checklist'],
			));            
			$totalhpp += ($row['nilaihpp']/$per);
			$totaljouhpp += ($row['nilaijournalhpp']/$per);
			$totalinv += ($row['nilaiinvoice']/$per);
			$totaljouinv += ($row['nilaijournalinvoice']/$per);
		}
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->setwidths(array(25,27,15,27,16,27,15,28,12,10));
		$this->pdf->coldetailalign = array('R','R','C','R','C','R','C','R','R','C');
		$this->pdf->row(array(
			'TOTAL  >>>',
			Yii::app()->format->formatCurrency($totalhpp),
			'',
			Yii::app()->format->formatCurrency($totaljouhpp),
			'',
			Yii::app()->format->formatCurrency($totalinv),
			'',
			Yii::app()->format->formatCurrency($totaljouinv),
			Yii::app()->format->formatCurrency(100-(($totalhpp/$totalinv)*100)),
			'',
		)); 
		$this->pdf->Output();
	}
	//14
	public function RekapPerbandinganHPPReturPenjualanPerDokumen($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();

		$i=0;$totalhpp=0;$totaljouhpp=0;$totalinv=0;$totaljouinv=0;
		$sql = "select *,ifnull(100-((nilaihpp/nilaiinvoice)*100),0) as gm
                from (select m.gireturno,
                ifnull((select sum(c.qty*c.buyprice)
                from productdetailhist c
                join sloc d on d.slocid=c.slocid
                join plant e on e.plantid=d.plantid
                where c.referenceno=m.gireturno and e.companyid=b.companyid),0) as nilaihpp,
                (select f.journalno
                from genjournal f
                where f.referenceno=m.gireturno and f.companyid=b.companyid) as journalhppno,
                ifnull((select sum(g.debit)
                from genledger g
                join genjournal h on h.genjournalid=g.genjournalid
                where h.referenceno=m.gireturno and h.companyid=b.companyid),0) as nilaijournalhpp,
                replace(m.gireturno,'GIR','NGIR') as invoiceno,
                ifnull((select sum(i.qty*i.price)
                from notagirpro i
                join notagir n on n.notagirid=i.notagirid
                where n.recordstatus=3 and n.gireturid= m.gireturid),0) as nilaiinvoice,
                (select j.journalno
                from genjournal j
                -- where j.referenceno=replace(m.gireturno,'GIR','NGIR')
								where (j.referenceno=replace(m.gireturno,'GIR','NGIR') OR j.referenceno=(SELECT ac.cutarno FROM cutarinv ab JOIN cutar ac ON ac.cutarid=ab.cutarid WHERE ac.recordstatus = 3 and ab.notagirid = (SELECT aa.notagirid from notagir aa WHERE aa.companyid = j.companyid and aa.notagirno = replace(m.gireturno,'GIR','NGIR')) LIMIT 1))
								and j.companyid=b.companyid) as journalinvoiceno,
					CASE WHEN ifnull((select sum(k.debit)
                from genledger k
                join genjournal l on l.genjournalid=k.genjournalid
                where l.referenceno=replace(m.gireturno,'GIR','NGIR') and l.companyid=b.companyid),0)=0
					THEN ifnull((select sum(k.debit)
                from genledger k
                join genjournal l on l.genjournalid=k.genjournalid
                where l.referenceno=(SELECT ac.cutarno FROM cutarinv ab JOIN cutar ac ON ac.cutarid=ab.cutarid WHERE ac.recordstatus = 3 and ab.notagirid = (SELECT aa.notagirid from notagir aa WHERE aa.companyid = l.companyid and aa.notagirno = replace(m.gireturno,'GIR','NGIR')) LIMIT 1) and l.companyid=b.companyid),0) 
					ELSE ifnull((select sum(k.debit)
                from genledger k
                join genjournal l on l.genjournalid=k.genjournalid
                where l.referenceno=replace(m.gireturno,'GIR','NGIR') and l.companyid=b.companyid),0) end as nilaijournalinvoice
                -- ifnull((select sum(k.debit)
                -- from genledger k
                -- join genjournal l on l.genjournalid=k.genjournalid
                -- where l.referenceno=replace(m.gireturno,'GIR','NGIR') and l.companyid=b.companyid),0) as nilaijournalinvoice
                from giretur m
                left join giheader a on a.giheaderid=m.giheaderid
                left join soheader b on b.soheaderid=a.soheaderid
                where m.recordstatus=3 and b.companyid = ".$companyid."
                and m.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perbandingan Nilai HPP, Nilai Retur Penjualan dan Nilai Jurnal Per Dokumen';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(8,20,23,20,23,22,23,20,23,15));
			$this->pdf->colheader = array('No','Surat Jalan','Nilai HPP SJ','Jurnal SJ','Nilai Jurnal SJ','Invoice','Nilai Invoice','Jurnal INV','Nilai Jurnal INV','GM');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','C','R','C','R','C','R','C','R','R');

		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',8);
			$this->pdf->row(array(
				$i,
        $row['gireturno'],
				Yii::app()->format->formatCurrency($row['nilaihpp']/$per),
				$row['journalhppno'],
				Yii::app()->format->formatCurrency($row['nilaijournalhpp']/$per),
				$row['invoiceno'],
				Yii::app()->format->formatCurrency($row['nilaiinvoice']/$per),
				$row['journalinvoiceno'],
				Yii::app()->format->formatCurrency($row['nilaijournalinvoice']/$per),
				Yii::app()->format->formatCurrency($row['gm']),
			));            
			$totalhpp += ($row['nilaihpp']/$per);
			$totaljouhpp += ($row['nilaijournalhpp']/$per);
			$totalinv += ($row['nilaiinvoice']/$per);
			$totaljouinv += ($row['nilaijournalinvoice']/$per);
		}
		$this->pdf->sety($this->pdf->gety()+5);
        $this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
				'',
                '',
				Yii::app()->format->formatCurrency($totalhpp),
				'',
				Yii::app()->format->formatCurrency($totaljouhpp),
				'',
				Yii::app()->format->formatCurrency($totalinv),
				'',
				Yii::app()->format->formatCurrency($totaljouinv),
				Yii::app()->format->formatCurrency(100-(($totalhpp/$totalinv)*100)),
			)); 
		$this->pdf->Output();
	}
	//15
	public function RekapPerbandinganHPPPenjualanPerBarang($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();

		$i=0;$totalqty=0;$totalhpp=0;$totalinvoice=0;
		$sql = "select productname, sum(qty) as qty, sum(qty*buyprice) as nilaihpp, sum(amount) as nilaiinvoice,
						ifnull((100-(sum(qty*buyprice)/sum(amount))*100),0) as gm
						from (select e.productname,a.qty,
						ifnull((select f.buyprice from productdetailhist f where f.productid=a.productid and f.slocid=a.slocid and f.unitofmeasureid=a.unitofmeasureid and f.storagebinid=a.storagebinid and f.referenceno=c.gino limit 1),0) as buyprice,
						-- case when (select g.recordstatus from invoice g where g.giheaderid=c.giheaderid) = 3 then 
						getamountdiscso(d.soheaderid,a.sodetailid,a.qty) 
						-- else 0 end 
						as amount
						from gidetail a
						join sodetail b on b.sodetailid=a.sodetailid
						join giheader c on c.giheaderid=a.giheaderid
						join soheader d on d.soheaderid=c.soheaderid
						join product e on e.productid=a.productid
						join sloc h on h.slocid=a.slocid
						join productplant i on i.productid=a.productid and i.slocid=a.slocid
						join materialgroup j on j.materialgroupid=i.materialgroupid
						where c.recordstatus=3 and d.companyid = ".$companyid." and e.productname like '%".$product."%'
						and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
						and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
						group by productname
						order by productname ";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perbandingan Nilai HPP dan Nilai Penjualan Per Barang';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(8,50,17,25,20,17,25,20,15));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Total HPP','HPP/Unit','Qty','Total Jual','Jual/Unit','GM');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R');

		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',8);
			$this->pdf->row(array(
				$i,
        $row['productname'],
				Yii::app()->format->formatCurrency($row['qty']),
				Yii::app()->format->formatCurrency($row['nilaihpp']/$per),
				Yii::app()->format->formatCurrency(($row['nilaihpp']/$row['qty'])/$per),
				Yii::app()->format->formatCurrency($row['qty']),
				Yii::app()->format->formatCurrency($row['nilaiinvoice']/$per),
				Yii::app()->format->formatCurrency(($row['nilaiinvoice']/$row['qty'])/$per),
				Yii::app()->format->formatCurrency($row['gm']),
			));
			$totalqty += ($row['qty']);
			$totalhpp += ($row['nilaihpp']/$per);
			$totalinvoice += ($row['nilaiinvoice']/$per);
		}
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->setFont('Arial','B',8);
		$a = 0;$b = 0;$c = 0;
		if ($totalqty != 0) {
			$a = $totalhpp / $totalqty;
			$b = $totalinvoice / $totalqty;
		}
		if ($totalinvoice != 0) {
			$c = $totalhpp/$totalinvoice;
		}
		$this->pdf->row(array(
			'',
      'GRAND TOTAL',
			Yii::app()->format->formatCurrency($totalqty),
			Yii::app()->format->formatCurrency($totalhpp),
			Yii::app()->format->formatCurrency($a),
			Yii::app()->format->formatCurrency($totalqty),
			Yii::app()->format->formatCurrency($totalinvoice),
			Yii::app()->format->formatCurrency($b),
			Yii::app()->format->formatCurrency(100-(($c)*100)),
		));
		$this->pdf->Output();
	}
	//16
	public function RekapPersediaanBarangNotMovingFG($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
		from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-tfs-grr as keluar2
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%') zz
          where 
		  -- qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or 
		  qtyakhir <> 0 
		  -- or jumlahakhir <> 0 
          ) xa
          where keluar2=0 
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang Not Moving FG';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(80,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(115,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select * from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-tfs-grr as keluar2
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and l.slocid = ".$row['slocid']." and o.materialgroupid = ".$row['materialgroupid'].") zz
          where 
		  -- qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or 
		  qtyakhir <> 0 
		  -- or jumlahakhir <> 0 
          ) xa
          where keluar2=0 
          order by keluar2";
		$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyawal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargaawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['jumlahawal']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtymasuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahmasuk']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytersedia']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargatersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtykeluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahkeluar']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyakhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahakhir']/$per),
					$row1['minus'],
				));
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));
		
		$this->pdf->Output();
	}
	//17
	public function RekapPersediaanBarangSlowMoving($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%') zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang Slow Moving';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
           
        if($keluar3==0){
        $this->pdf->SetFont('helvetica','B',20);
        $this->pdf->text(70, 50, 'Anda Belum Mengisi');
        $this->pdf->text(90, 60, 'QTY Keluar,');
        $this->pdf->text(50, 70, 'Silahkan Isi Dahulu QTY Keluar');
    }else{  
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(80,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(115,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select * from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-tfs-grr as keluar2
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and l.slocid = ".$row['slocid']." and o.materialgroupid = ".$row['materialgroupid'].") zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0 
          ) xa
          where keluar2 > - ".$keluar3."  
          order by keluar2";
		$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyawal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargaawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtymasuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahmasuk']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytersedia']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargatersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtykeluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahkeluar']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyakhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahakhir']/$per),
					$row1['minus'],
				));
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));}
		
		$this->pdf->Output();
	}
	//18
	public function RekapPersediaanBarangFastMoving($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%') zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang Fast Moving';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
           
        if($keluar3==0){
        $this->pdf->SetFont('helvetica','B',20);
        $this->pdf->text(70, 50, 'Anda Belum Mengisi');
        $this->pdf->text(90, 60, 'QTY Keluar,');
        $this->pdf->text(50, 70, 'Silahkan Isi Dahulu QTY Keluar');
    }else{  
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(80,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(115,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select * from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-tfs-grr as keluar2
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and l.slocid = ".$row['slocid']." and o.materialgroupid = ".$row['materialgroupid'].") zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0 
          ) xa
          where keluar2 < - " . $keluar3 . " 
          order by keluar2";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyawal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargaawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['jumlahawal']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtymasuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahmasuk']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytersedia']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargatersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtykeluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahkeluar']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyakhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahakhir']/$per),
					$row1['minus'],
				));
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));}
		
		$this->pdf->Output();
	}
	//19
	public function KartuStokBarang($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql        = "select distinct a.description,a.materialgroupid
										from materialgroup a
										join productplant b on b.materialgroupid=a.materialgroupid
										join sloc c on c.slocid = b.slocid
										join plant d on d.plantid = c.plantid
										join company e on e.companyid = d.companyid
										join product f on f.productid = b.productid
										where e.companyid = " . $companyid . " and f.productid in
										(select distinct z.productid 
										from productdetailhist z
										join sloc za on za.slocid = z.slocid
										join plant zb on zb.plantid = za.plantid
										join company zc on zc.companyid = zb.companyid
										join product zd on zd.productid = z.productid
										where zc.companyid = " . $companyid . " and z.slocid = b.slocid 
										and za.sloccode like '%" . $sloc . "%' and zd.productname like '%" . $product . "%' and z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and a.description like '%" . $materialgroup . "%'
										order by description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		foreach ($dataReader as $row) {
		  $this->pdf->companyid = $companyid;
		}
		$this->pdf->title    = 'Kartu Stock Barang';
		$this->pdf->subtitle = 'Dari Tgl :' . date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)) . ' s/d ' . date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		$this->pdf->sety($this->pdf->gety() + 0);
		$this->pdf->setFont('Arial', 'B', 8);
		$this->pdf->colalign = array(
		  'C',
		  'C',
		  'C',
		  'C',
		  'C',
		  'C',
		  'C',
		  'C'
		);
		$this->pdf->setwidths(array(
		  30,
		  20,
		  20,
		  20,
		  20,
		  20,
		  30,
		  30
		));
		$this->pdf->colheader = array(
		  'Dokumen',
		  'Tanggal',
		  'Awal',
		  'Masuk',
		  'Keluar',
		  'Akhir',
		  'Harga',
		  'Jumlah'
		);
		$this->pdf->RowHeader();
		foreach ($dataReader as $row) {
		  $this->pdf->SetFont('Arial', '', 10);
		  $this->pdf->text(10, $this->pdf->gety() + 5, 'Material Group');
		  $this->pdf->text(40, $this->pdf->gety() + 5, ': ' . $row['description']);
		  $awal1       = 0;
		  $masuk1      = 0;
		  $keluar1     = 0;
		  $saldo1      = 0;
		  $sql1        = "select distinct productid,productname,slocid,sloccode from
					(select productid,productname,awal,dokumen,tanggal,slocid,sloccode,masuk,keluar,(awal+masuk+keluar) as saldo
					from
					(select productid,productname,awal,dokumen,tanggal,slocid,sloccode,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+konversiout+koreksi) as keluar
					from
					(select productid,productname,referenceno as dokumen, buydate as tanggal,slocid,sloccode,awal,
					case when instr(referenceno,'GR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as beli,
					case when instr(referenceno,'GIR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as returjual,
					case when (instr(referenceno,'TFS-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as trfin,
					case when (instr(referenceno,'OP-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as produksi,
					case when (instr(referenceno,'konversi') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as konversiin,
					case when instr(referenceno,'SJ-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as jual,
					case when instr(referenceno,'GRR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as returbeli,
					case when (instr(referenceno,'TFS') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as trfout,
					case when (instr(referenceno,'OP-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as pemakaian,
					case when (instr(referenceno,'konversi') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as konversiout,
					case when instr(referenceno,'TSO') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as koreksi
					from
					(select a.productid,g.productname,a.referenceno,a.buydate,a.qty,b.slocid,b.sloccode,
						(select ifnull(sum(x.qty),0) from productdetailhist x
						where x.productid = a.productid and x.slocid = a.slocid and
					x.buydate < '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "') as awal
					from productdetailhist a
					join sloc b on b.slocid = a.slocid
					join plant c on c.plantid = b.plantid
					join company d on d.companyid = c.companyid
					join productplant e on e.productid=a.productid and e.slocid=a.slocid and e.unitofissue=a.unitofmeasureid
					join storagebin f on f.storagebinid=a.storagebinid
					join product g on g.productid=a.productid
					where d.companyid = " . $companyid . " and b.sloccode like '%" . $sloc . "%' and e.materialgroupid = '" . $row['materialgroupid'] . "'
					and g.productname like '%" . $product . "%' and 
					a.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
					'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') z) zz) zzz) zzzz
					order by productname,sloccode";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
		  foreach ($dataReader1 as $row1) {
		    $this->pdf->SetFont('Arial', '', 10);
		    $this->pdf->text(10, $this->pdf->gety() + 10, $row1['productname']);
		    $this->pdf->text(170, $this->pdf->gety() + 10, $row1['sloccode']);
		    $sql2        = "select productdetailhistid,awal,dokumen,tanggal,masuk,keluar,(awal+masuk+keluar) as saldo,buyprice,case when masuk <> 0 then (masuk * buyprice) else (keluar * buyprice) end as nilai
		                    from
		                    (select productdetailhistid,awal,dokumen,tanggal,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+konversiout+koreksi) as keluar,buyprice
		                    from
		                    (select productdetailhistid,referenceno as dokumen, buydate as tanggal,slocid,awal,
		                    case when instr(referenceno,'GR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as beli,
		                    case when instr(referenceno,'GIR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as returjual,
		                    case when (instr(referenceno,'TFS-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as trfin,
		                    case when (instr(referenceno,'OP-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as produksi,
													case when (instr(referenceno,'konversi') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as konversiin,
		                    case when instr(referenceno,'SJ-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as jual,
		                    case when instr(referenceno,'GRR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as returbeli,
		                    case when (instr(referenceno,'TFS') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as trfout,
		                    case when (instr(referenceno,'OP-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as pemakaian,
													case when (instr(referenceno,'konversi') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as konversiout,
		                    case when instr(referenceno,'TSO') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as koreksi,buyprice
		                    from
		                    (select a.productdetailhistid,a.referenceno,a.buydate,a.qty,a.slocid,
														(select ifnull(sum(x.qty),0) from productdetailhist x
														where x.productid = '" . $row1['productid'] . "' and x.slocid = '" . $row1['slocid'] . "' and
		                    x.buydate < '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "') as awal,a.buyprice
		                    from productdetailhist a
		                    join sloc b on b.slocid = a.slocid
		                    join plant c on c.plantid = b.plantid
		                    join company d on d.companyid = c.companyid
		                    where a.productid = '" . $row1['productid'] . "' and a.slocid = '" . $row1['slocid'] . "' and
													a.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') z) zz) zzz
												order by tanggal,productdetailhistid";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
		    $awal        = 0;
		    $masuk       = 0;
		    $keluar      = 0;
		    $saldo       = 0;
		    $this->pdf->sety($this->pdf->gety() + 12);
		    $this->pdf->coldetailalign = array(
		      'L',
		      'C',
		      'R',
		      'R',
		      'R',
		      'R',
		      'R',
		      'R'
		    );
		    $this->pdf->setFont('Arial', '', 8);
		    foreach ($dataReader2 as $row2) {
		      $this->pdf->row(array(
		        $row2['dokumen'],
		        date(Yii::app()->params['dateviewfromdb'], strtotime($row2['tanggal'])),
		        '',
		        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $row2['masuk']),
		        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $row2['keluar']),
		        '',
		        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $row2['buyprice']/$per),
		        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $row2['nilai']/$per)
		      ));
		      $awal = $row2['awal'];
		      $masuk += $row2['masuk'];
		      $keluar += $row2['keluar'];
		      $saldo = $awal + $masuk + $keluar;
		    }
		    $this->pdf->setFont('Arial', 'B', 8);
		    $this->pdf->row(array(
		      '',
		      'Total',
		      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $awal),
		      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $masuk),
		      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $keluar),
		      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $saldo),
		      '',
		      ''
		    ));
		    $awal1 += $awal;
		    $masuk1 += $masuk;
		    $keluar1 += $keluar;
		    $saldo1 += $saldo;
		    $this->pdf->checkPageBreak(20);
		  }
		  $this->pdf->setFont('Arial', 'B', 9);
		  $this->pdf->sety($this->pdf->gety() + 5);
		  $this->pdf->row(array(
		    '',
		    'Grand Total',
		    Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $awal1),
		    Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $masuk1),
		    Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $keluar1),
		    Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"], $saldo1),
		    '',
		    ''
		  ));
		}
		$this->pdf->Output();
	}
	//21
	public function HppActual($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "SELECT DISTINCT d.slocid,d.sloccode
						FROM productoutputfg a
						JOIN productoutput b ON b.productoutputid=a.productoutputid
						JOIN product c ON c.productid=a.productid
						JOIN sloc d ON d.slocid=a.slocid
						JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
						JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
						JOIN storagebin g ON g.storagebinid=a.storagebinid
						WHERE b.companyid = ".$companyid." AND b.recordstatus = getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.sloccode LIKE '%".$sloc."%' AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
						ORDER BY sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
            
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='HPP Actual Hasil Produksi';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');

		$this->pdf->sety($this->pdf->gety());
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->colalign = array('C','C','C','C','C');
		$this->pdf->setwidths(array(110,20,20,20,20));
		$this->pdf->colheader = array('Nama Barang','Satuan','Qty','Price','Jumlah');
		$this->pdf->RowHeader();
            
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);                
			$this->pdf->text(10,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(28,$this->pdf->gety()+5,': '.$row['sloccode']);
			$sql1 = "SELECT DISTINCT c.productid,c.productname,b.productoutputno,b.productoutputdate,a.productoutputfgid,j.qty,j.buyprice,j.qty * j.buyprice as jumlah,h.unitofmeasureid,h.uomcode,i.bomid,i.bomversion
					FROM productoutputfg a
					JOIN productoutput b ON b.productoutputid=a.productoutputid
					JOIN product c ON c.productid=a.productid
					JOIN sloc d ON d.slocid=a.slocid
					JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
					JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
					JOIN storagebin g ON g.storagebinid=a.storagebinid
					JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
					JOIN billofmaterial i ON i.bomid=a.bomid
					JOIN productdetailhist j on j.productoutputfgid=a.productoutputfgid AND j.productid=a.productid and j.qty > 0
					WHERE b.companyid = ".$companyid." AND b.recordstatus=getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.slocid = ".$row['slocid']." AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
					ORDER BY productoutputdate,productoutputno,productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+5);
			foreach($dataReader1 as $row1)				
			{
				$foh = "(SELECT if(t.productname LIKE '%balokan%',if(t.tinggi>0,p.foh * ((t.panjang * t.lebar * t.tinggi)/1000000),p.foh * getVolumeCylinder(t.panjang,t.lebar/2)),p.foh * v.cycletime) FROM fohul p JOIN productplant q ON q.mgprocessid=p.mgprocessid join productoutputfg r ON r.productid=q.productid AND r.slocid=q.slocid AND r.uomid=q.unitofissue JOIN sloc u ON u.slocid=r.slocid AND u.plantid=p.plantid JOIN productoutput s ON s.productoutputid=r.productoutputid join product t ON t.productid=r.productid JOIN billofmaterial v ON v.bomid=r.bomid WHERE p.recordstatus = 3 and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') AND r.productoutputfgid = ".$row1['productoutputfgid']." AND p.companyid = ".$companyid.")
				";
				$ul = "(SELECT if(t.productname LIKE '%balokan%',if(t.tinggi>0,p.ul * ((t.panjang * t.lebar * t.tinggi)/1000000),p.ul * getVolumeCylinder(t.panjang,t.lebar/2)),p.ul * v.cycletime) FROM fohul p JOIN productplant q ON q.mgprocessid=p.mgprocessid join productoutputfg r ON r.productid=q.productid AND r.slocid=q.slocid AND r.uomid=q.unitofissue JOIN sloc u ON u.slocid=r.slocid AND u.plantid=p.plantid JOIN productoutput s ON s.productoutputid=r.productoutputid join product t ON t.productid=r.productid JOIN billofmaterial v ON v.bomid=r.bomid WHERE p.recordstatus = 3 and  month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') AND r.productoutputfgid = ".$row1['productoutputfgid']." AND p.companyid = ".$companyid.")
				";
				$cad = "(select IFNULL((sum(qtydetail*price)) * 0.03,0)
								from (select ifnull(a.qty/b.qtyoutput,0) as qtydetail,a.productid,
								ifnull(c.buyprice,0) as price
								from productoutputdetail a
								join productoutputfg b on b.productoutputfgid = a.productoutputfgid
								join productdetailhist c on c.productoutputdetailid=a.productoutputdetailid
								join product d on d.productid = a.productid
								where a.productoutputfgid = ".$row1['productoutputfgid']." and d.isstock = 1
								AND (a.bomid IS NULL OR a.bomid = 0)) z)
				";
				$sql2 = "SELECT *
						FROM (SELECT c.productname,-j.qty as qty,j.buyprice,-j.qty * j.buyprice as jumlah,-j.qty * j.buyprice as jumlah1,h.unitofmeasureid,h.uomcode,c.isstock
								FROM productoutputdetail a
								JOIN productoutput b ON b.productoutputid=a.productoutputid
								JOIN product c ON c.productid=a.productid
								JOIN sloc d ON d.slocid=a.toslocid
								JOIN productplant e ON e.productid=a.productid AND e.slocid=a.toslocid AND e.unitofissue=a.uomid
								JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
								JOIN storagebin g ON g.storagebinid=a.storagebinid
								JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
								JOIN productdetailhist j on j.productoutputdetailid=a.productoutputdetailid AND j.productid=a.productid
								WHERE c.isstock = 1 AND a.productoutputfgid = ".$row1['productoutputfgid']."
						UNION
								SELECT m.productname,n.qtyoutput,
								case when m.productname like 'FOH%' then ".$foh." else case when m.productname like 'UL%' then ".$ul." else case when m.productname like 'CAD%' then ".$cad." else 0 end end end,
								n.qtyoutput * case when m.productname like 'FOH%' then ".$foh." else case when m.productname like 'UL%' then ".$ul." else case when m.productname like 'CAD%' then ".$cad." else 0 end end end AS jumlah,n.qtyoutput * k.qty AS jumlah1,o.unitofmeasureid,o.uomcode,m.isstock
								FROM bomdetail k
								JOIN billofmaterial l ON l.bomid=k.bomid
								JOIN product m ON m.productid=k.productid
								JOIN productoutputfg n ON n.bomid=l.bomid
								JOIN unitofmeasure o ON o.unitofmeasureid=k.uomid
								WHERE m.isstock = 0 AND n.productoutputfgid = ".$row1['productoutputfgid'].") z
						ORDER BY isstock desc, productname";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','C','R','R','R');
				$this->pdf->SetFont('Arial','BI',8);
				
				$this->pdf->row(array(
					$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qty']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['buyprice']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlah']/$per),
				));
				
				$this->pdf->text(15,$this->pdf->gety()+3,'BOMVERSION :');
				$this->pdf->text(37,$this->pdf->gety()+3,$row1['bomversion']);
				$this->pdf->text(150,$this->pdf->gety()+3,$row1['productoutputno']);
				$this->pdf->text(175,$this->pdf->gety()+3,$row1['productoutputdate']);
				$this->pdf->sety($this->pdf->gety()+5);
				
				foreach($dataReader2 as $row2)
				{
					$this->pdf->coldetailalign = array('L','C','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$this->pdf->row(array(
						'     - '.$row2['productname'],$row2['uomcode'],
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qty']),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['buyprice']/$per),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['jumlah']/$per),
					));
				}
				$this->pdf->sety($this->pdf->gety()+5);
				$this->pdf->checkPageBreak(10);
			}
		}
		$this->pdf->Output();
  }
	//23
	public function RekapPerbandinganHPPPenjualanReturPerDokumen($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totalhpp=0;$totaljouhpp=0;$totalinv=0;$totaljouinv=0;
		$sql = "select gino,nilaihpp,journalhppno,nilaijournalhpp,invoiceno,nilaiinvoice,journalinvoiceno,nilaijournalinvoice,date,ifnull((100-((nilaihpp/nilaiinvoice)*100)),0) as gm
                from (select a.gino,
                ifnull((select sum(-c.qty*c.buyprice)
                from productdetailhist c
                join sloc d on d.slocid=c.slocid
                join plant e on e.plantid=d.plantid
                where c.referenceno=a.gino and e.companyid=b.companyid),0) as nilaihpp,
                (select f.journalno
                from genjournal f
                where f.referenceno=a.gino and f.companyid=b.companyid) as journalhppno,
                ifnull((select sum(g.debit)
                from genledger g
                join genjournal h on h.genjournalid=g.genjournalid
                where h.referenceno=a.gino and h.companyid=b.companyid),0) as nilaijournalhpp,
                ifnull(c.invoiceno,'-') as invoiceno,
                ifnull((select i.amount
                from invoice i
                where i.recordstatus = 3 and i.giheaderid= a.giheaderid),0) as nilaiinvoice,
                (select j.journalno
                from genjournal j
                where j.referenceno=replace(a.gino,'SJ','INV') and j.companyid=b.companyid) as journalinvoiceno,
                ifnull((select sum(k.debit)
                from genledger k
                join genjournal l on l.genjournalid=k.genjournalid
                where l.referenceno=replace(a.gino,'SJ','INV') and l.companyid=b.companyid),0) as nilaijournalinvoice,
								a.gidate as date
                from giheader a
                join soheader b on b.soheaderid=a.soheaderid
                left join invoice c on c.giheaderid=a.giheaderid and c.recordstatus=3
                where a.recordstatus=3 and b.companyid = ".$companyid."
                and a.giheaderid in (select distinct q.giheaderid from gidetail q join giheader r on r.giheaderid=q.giheaderid join sloc s on s.slocid=q.slocid where s.sloccode like '%".$sloc."%' and r.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
                and a.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
						union
								select gireturno,-nilaihpp,journalhppno,-nilaijournalhpp,invoiceno,-nilaiinvoice,journalinvoiceno,-nilaijournalinvoice,date,-ifnull(100-((nilaihpp/nilaiinvoice)*100),0) as gm
                from (select m.gireturno,
                ifnull((select sum(c.qty*c.buyprice)
                from productdetailhist c
                join sloc d on d.slocid=c.slocid
                join plant e on e.plantid=d.plantid
                where c.referenceno=m.gireturno and e.companyid=b.companyid),0) as nilaihpp,
                (select f.journalno
                from genjournal f
                where f.referenceno=m.gireturno and f.companyid=b.companyid) as journalhppno,
                ifnull((select sum(g.debit)
                from genledger g
                join genjournal h on h.genjournalid=g.genjournalid
                where h.referenceno=m.gireturno and h.companyid=b.companyid),0) as nilaijournalhpp,
                replace(m.gireturno,'GIR','NGIR') as invoiceno,
                ifnull((select sum(i.qty*i.price)
                from notagirpro i
                join notagir n on n.notagirid=i.notagirid
                where n.recordstatus=3 and n.gireturid= m.gireturid),0) as nilaiinvoice,
                (select j.journalno
                from genjournal j
                -- where j.referenceno=replace(m.gireturno,'GIR','NGIR')
								where (j.referenceno=replace(m.gireturno,'GIR','NGIR') OR j.referenceno=(SELECT ac.cutarno FROM cutarinv ab JOIN cutar ac ON ac.cutarid=ab.cutarid WHERE ac.recordstatus = 3 and ab.notagirid = (SELECT aa.notagirid from notagir aa WHERE aa.companyid = j.companyid and aa.notagirno = replace(m.gireturno,'GIR','NGIR')) LIMIT 1))
								and j.companyid=b.companyid) as journalinvoiceno,
					CASE WHEN ifnull((select sum(k.debit)
                from genledger k
                join genjournal l on l.genjournalid=k.genjournalid
                where l.referenceno=replace(m.gireturno,'GIR','NGIR') and l.companyid=b.companyid),0)=0
					THEN ifnull((select sum(k.debit)
                from genledger k
                join genjournal l on l.genjournalid=k.genjournalid
                where l.referenceno=(SELECT ac.cutarno FROM cutarinv ab JOIN cutar ac ON ac.cutarid=ab.cutarid WHERE ac.recordstatus = 3 and ab.notagirid = (SELECT aa.notagirid from notagir aa WHERE aa.companyid = l.companyid and aa.notagirno = replace(m.gireturno,'GIR','NGIR')) LIMIT 1) and l.companyid=b.companyid),0) 
					ELSE ifnull((select sum(k.debit)
                from genledger k
                join genjournal l on l.genjournalid=k.genjournalid
                where l.referenceno=replace(m.gireturno,'GIR','NGIR') and l.companyid=b.companyid),0) end as nilaijournalinvoice,
                -- ifnull((select sum(k.debit)
                -- from genledger k
                -- join genjournal l on l.genjournalid=k.genjournalid
                -- where l.referenceno=replace(m.gireturno,'GIR','NGIR') and l.companyid=b.companyid),0) as nilaijournalinvoice,
								m.gireturdate as date
                from giretur m
                join giheader a on a.giheaderid=m.giheaderid
                join soheader b on b.soheaderid=a.soheaderid
                where m.recordstatus=3 and b.companyid = ".$companyid."
                and m.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
								order by date,invoiceno";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perbandingan Nilai HPP, Nilai Penjualan - Retur dan Nilai Jurnal Per Dokumen';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,20,23,20,23,21,23,20,23,15));
			$this->pdf->colheader = array('No','Surat Jalan','Nilai HPP SJ','Jurnal SJ','Nilai Jurnal SJ','Invoice','Nilai Invoice','Jurnal INV','Nilai Jurnal INV','GM');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','C','R','C','R','C','R','C','R','R');

		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',8);
			$this->pdf->row(array(
				$i,
                $row['gino'],
				Yii::app()->format->formatCurrency($row['nilaihpp']/$per),
				$row['journalhppno'],
				Yii::app()->format->formatCurrency($row['nilaijournalhpp']/$per),
				$row['invoiceno'],
				Yii::app()->format->formatCurrency($row['nilaiinvoice']/$per),
				$row['journalinvoiceno'],
				Yii::app()->format->formatCurrency($row['nilaijournalinvoice']/$per),
				Yii::app()->format->formatCurrency($row['gm']),
			));            
			$totalhpp += ($row['nilaihpp']/$per);
			$totaljouhpp += ($row['nilaijournalhpp']/$per);
			$totalinv += ($row['nilaiinvoice']/$per);
			$totaljouinv += ($row['nilaijournalinvoice']/$per);
		}
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'',
			'',
			Yii::app()->format->formatCurrency($totalhpp),
			'',
			Yii::app()->format->formatCurrency($totaljouhpp),
			'',
			Yii::app()->format->formatCurrency($totalinv),
			'',
			Yii::app()->format->formatCurrency($totaljouinv),
			Yii::app()->format->formatCurrency(100-(($totalhpp/$totalinv)*100)),
		)); 
		$this->pdf->Output();
	}
	//24
	public function HppActualVsBom($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "SELECT DISTINCT d.slocid,d.sloccode
						FROM productoutputfg a
						JOIN productoutput b ON b.productoutputid=a.productoutputid
						JOIN product c ON c.productid=a.productid
						JOIN sloc d ON d.slocid=a.slocid
						JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
						JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
						JOIN storagebin g ON g.storagebinid=a.storagebinid
						WHERE b.companyid = ".$companyid." AND b.recordstatus = getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.sloccode LIKE '%".$sloc."%' AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
						ORDER BY sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
            
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='HPP Actual Hasil Produksi VS BOM';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Letter');

		$this->pdf->sety($this->pdf->gety());
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->colalign = array('C','C','C');
		$this->pdf->setwidths(array(140,60,60));
		$this->pdf->colheader = array('','Produksi Actual','BOM');
			$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(120,20,20,20,20,20,20,20));
		$this->pdf->colheader = array('Nama Barang','Satuan','Qty','Price','Jumlah','Qty','Price','Jumlah');
		$this->pdf->RowHeader();
            
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);                
			$this->pdf->text(10,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(28,$this->pdf->gety()+5,': '.$row['sloccode']);
			$sql1 = "SELECT DISTINCT c.productid,c.productname,b.productoutputid,b.productoutputno,b.productoutputdate,a.productoutputfgid,j.qty,j.buyprice,j.qty * j.buyprice as jumlah,h.unitofmeasureid,h.uomcode,i.bomid,i.bomversion
					FROM productoutputfg a
					JOIN productoutput b ON b.productoutputid=a.productoutputid
					JOIN product c ON c.productid=a.productid
					JOIN sloc d ON d.slocid=a.slocid
					JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
					JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
					JOIN storagebin g ON g.storagebinid=a.storagebinid
					JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
					JOIN billofmaterial i ON i.bomid=a.bomid
					JOIN productdetailhist j on j.productoutputfgid=a.productoutputfgid AND j.productid=a.productid and j.qty > 0
					WHERE b.companyid = ".$companyid." AND b.recordstatus=getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.slocid = ".$row['slocid']." AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
					ORDER BY productoutputdate,productoutputno,productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+5);
			foreach($dataReader1 as $row1)				
			{
				$sql2 = "SELECT ".$row1['qty']." as qtybom,sum(buyprice) as buypricebom,".$row1['qty']." * sum(buyprice) as jumlahbom
				    FROM (SELECT a.qty * (SELECT r.buyprice FROM productdetail r WHERE r.productid=a.productid AND r.slocid=e.slocid AND r.unitofmeasureid=a.uomid Limit 1) as buyprice
								FROM bomdetail a
								JOIN billofmaterial b ON b.bomid=a.bomid
								JOIN product c ON c.productid=a.productid
								LEFT JOIN productplant e ON e.productid=a.productid AND e.unitofissue=a.uomid AND e.slocid=(SELECT q.slocid FROM productoutputfg q WHERE q.productoutputfgid = ".$row1['productoutputfgid'].")
								LEFT JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
								LEFT JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
								WHERE c.isstock = 1 AND a.bomid = ".$row1['bomid']."
						UNION
								SELECT k.qty as buyprice
									FROM bomdetail k
									JOIN billofmaterial l ON l.bomid=k.bomid
									JOIN product m ON m.productid=k.productid
									JOIN productoutputfg n ON n.bomid=l.bomid
									JOIN unitofmeasure o ON o.unitofmeasureid=k.uomid
									WHERE m.isstock = 0 AND n.productoutputfgid = ".$row1['productoutputfgid'].") z
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				foreach($dataReader2 as $row2)				
				{
/*				$foh = "(SELECT if(t.productname LIKE '%busa balokan%' OR t.productname LIKE '%busa cylinder%',if(t.tinggi>0,p.foh * ((t.panjang * t.lebar * t.tinggi)/1000000) * t.density,p.foh * getVolumeCylinder(t.panjang,t.lebar/2) * t.density),if(t.isfohulbom=0,p.foh * v.cycletime,(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=v.bomid AND y.productname LIKE 'FOH %'))) FROM fohul p JOIN productplant q ON q.mgprocessid=p.mgprocessid join productoutputfg r ON r.productid=q.productid AND r.slocid=q.slocid AND r.uomid=q.unitofissue JOIN sloc u ON u.slocid=r.slocid AND u.plantid=p.plantid JOIN productoutput s ON s.productoutputid=r.productoutputid join product t ON t.productid=r.productid JOIN billofmaterial v ON v.bomid=r.bomid WHERE p.recordstatus = 3 and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') AND r.productoutputfgid = ".$row1['productoutputfgid']." AND p.companyid = ".$companyid.")
				";
				$ul = "(SELECT if(t.productname LIKE '%busa balokan%' OR t.productname LIKE '%busa cylinder%',if(t.tinggi>0,p.ul * ((t.panjang * t.lebar * t.tinggi)/1000000) * t.density,p.ul * getVolumeCylinder(t.panjang,t.lebar/2) * t.density),if(t.isfohulbom=0,p.ul * v.cycletime,(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=v.bomid AND y.productname LIKE 'UL %'))) FROM fohul p JOIN productplant q ON q.mgprocessid=p.mgprocessid join productoutputfg r ON r.productid=q.productid AND r.slocid=q.slocid AND r.uomid=q.unitofissue JOIN sloc u ON u.slocid=r.slocid AND u.plantid=p.plantid JOIN productoutput s ON s.productoutputid=r.productoutputid join product t ON t.productid=r.productid JOIN billofmaterial v ON v.bomid=r.bomid WHERE p.recordstatus = 3 and  month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') AND r.productoutputfgid = ".$row1['productoutputfgid']." AND p.companyid = ".$companyid.")
				";*/
				$foh = "(SELECT if(e.isfohulbom=0,if(e.productname LIKE '%busa balokan%' OR e.productname LIKE '%busa cylinder%',if(e.tinggi>0,(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * ((e.panjang * e.lebar * e.tinggi)/1000000) * e.density,(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * getVolumeCylinder(e.panjang,e.lebar/2) * e.density),(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * f.cycletime),(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=f.bomid AND y.productname LIKE 'FOH %'))
				FROM productoutputfg a
				JOIN productoutput b ON b.productoutputid=a.productoutputid
				JOIN productplant c ON c.productid=a.productid AND c.slocid=a.slocid AND c.unitofissue=a.uomid
				JOIN sloc d ON d.slocid=a.slocid
				JOIN product e ON e.productid=a.productid
				JOIN billofmaterial f ON f.bomid=a.bomid 
				WHERE a.productoutputfgid = ".$row1['productoutputfgid']." AND b.companyid = ".$companyid.")
				";
				$ul = "(SELECT if(e.isfohulbom=0,if(e.productname LIKE '%busa balokan%' OR e.productname LIKE '%busa cylinder%',if(e.tinggi>0,(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * ((e.panjang * e.lebar * e.tinggi)/1000000) * e.density,(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * getVolumeCylinder(e.panjang,e.lebar/2) * e.density),(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * f.cycletime),(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=f.bomid AND y.productname LIKE 'UL %'))
				FROM productoutputfg a
				JOIN productoutput b ON b.productoutputid=a.productoutputid
				JOIN productplant c ON c.productid=a.productid AND c.slocid=a.slocid AND c.unitofissue=a.uomid
				JOIN sloc d ON d.slocid=a.slocid
				JOIN product e ON e.productid=a.productid
				JOIN billofmaterial f ON f.bomid=a.bomid 
				WHERE a.productoutputfgid = ".$row1['productoutputfgid']." AND b.companyid = ".$companyid.")
				";
				$cad = "(SELECT if(isfohulbom=0,IFNULL((sum(qtydetail*price)) * 0.03,0),cadang)
								from (SELECT ifnull(a.qty/b.qtyoutput,0) as qtydetail,a.productid,e.isfohulbom,ifnull(c.buyprice,0) as price,(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=b.bomid AND y.productname LIKE 'CADANGAN %') AS cadang
								from productoutputdetail a
								join productoutputfg b on b.productoutputfgid = a.productoutputfgid
								join productdetailhist c on c.productoutputdetailid=a.productoutputdetailid
								join product d on d.productid = a.productid
								join product e on e.productid = b.productid
								where a.productoutputfgid = ".$row1['productoutputfgid']." and d.isstock = 1
								AND (a.bomid IS NULL OR a.bomid = 0)) z)
				";
					$sql3 = "SELECT productname,sum(qty) as qty,sum(buyprice) as buyprice,sum(jumlah) as jumlah,unitofmeasureid,uomcode,isstock,sum(qtybom) as qtybom,sum(jumlahbom)/sum(qtybom) as buypricebom,sum(jumlahbom) as jumlahbom
							FROM (SELECT c.productname,-sum(j.qty) as qty,-sum(j.qty * j.buyprice)/-sum(j.qty) as buyprice,-sum(j.qty * j.buyprice) as jumlah,h.unitofmeasureid,h.uomcode,c.isstock,0 as qtybom,0 as jumlahbom
									FROM productoutputdetail a
									JOIN productoutput b ON b.productoutputid=a.productoutputid
									JOIN product c ON c.productid=a.productid
									JOIN sloc d ON d.slocid=a.toslocid
									JOIN productplant e ON e.productid=a.productid AND e.slocid=a.toslocid AND e.unitofissue=a.uomid
									JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
									JOIN storagebin g ON g.storagebinid=a.storagebinid
									JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
									JOIN productdetailhist j on j.productoutputdetailid=a.productoutputdetailid AND j.productid=a.productid
									WHERE c.isstock = 1 AND a.productoutputfgid = ".$row1['productoutputfgid']."
									GROUP BY productname
							UNION
									SELECT m.productname,n.qtyoutput as qty,sum(case when m.productname like 'FOH%' then ".$foh." else case when m.productname like 'UL%' then ".$ul." else case when m.productname like 'CAD%' then ".$cad." else 0 end end end) as buyprice,sum(n.qtyoutput * case when m.productname like 'FOH%' then ".$foh." else case when m.productname like 'UL%' then ".$ul." else case when m.productname like 'CAD%' then ".$cad." else 0 end end end) AS jumlah,o.unitofmeasureid,o.uomcode,m.isstock,n.qtyoutput as qtybom,sum(n.qtyoutput * k.qty) as jumlahbom
									FROM bomdetail k
									JOIN billofmaterial l ON l.bomid=k.bomid
									JOIN product m ON m.productid=k.productid
									JOIN productoutputfg n ON n.bomid=l.bomid
									JOIN unitofmeasure o ON o.unitofmeasureid=k.uomid
									WHERE m.isstock = 0 AND n.productoutputfgid = ".$row1['productoutputfgid']."
									GROUP BY productname
							UNION
									SELECT c.productname,0 as qty,0 as buyprice,0 as jumlah,h.unitofmeasureid,h.uomcode,c.isstock,".$row1['qty']." * a.qty as qtybom,
									".$row1['qty']." * a.qty * (SELECT r.buyprice FROM productdetail r WHERE r.productid=a.productid AND r.slocid=e.slocid AND r.unitofmeasureid=a.uomid Limit 1) as jumlahbom
									FROM bomdetail a
									JOIN billofmaterial b ON b.bomid=a.bomid
									JOIN product c ON c.productid=a.productid
									LEFT JOIN productplant e ON e.productid=a.productid AND e.unitofissue=a.uomid AND e.slocid=(SELECT q.slocid FROM productoutputfg q WHERE q.productoutputfgid = ".$row1['productoutputfgid'].")
									LEFT JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
									LEFT JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
									WHERE c.isstock = 1 AND a.bomid = ".$row1['bomid']."
									GROUP BY productname
							) z
							GROUP BY productname,uomcode
							ORDER BY isstock desc, productname";
					$dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();
					
					$this->pdf->sety($this->pdf->gety()+2);
					$this->pdf->coldetailalign = array('L','C','R','R','R','R','R','R');
					$this->pdf->SetFont('Arial','BI',8);
					
					$this->pdf->row(array(
						$row1['productname'],$row1['uomcode'],
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qty']),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['buyprice']/$per),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlah']/$per),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qtybom']),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['buypricebom']/$per),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['jumlahbom']/$per),
					));
					
					$this->pdf->text(15,$this->pdf->gety()+3,'BOMVERSION :');
					$this->pdf->text(37,$this->pdf->gety()+3,$row1['bomversion'].' - (ID = '.$row1['bomid'].')');
					$this->pdf->text(150,$this->pdf->gety()+3,$row1['productoutputno'].' - ('.$row1['productoutputid'].')');
					$this->pdf->text(200,$this->pdf->gety()+3,$row1['productoutputdate']);
					$this->pdf->sety($this->pdf->gety()+5);
					
					foreach($dataReader3 as $row3)
					{
						$this->pdf->coldetailalign = array('L','C','R','R','R','R','R','R');
						$this->pdf->setFont('Arial','',8);
						$this->pdf->row(array(
							'     - '.$row3['productname'],$row3['uomcode'],
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['qty']),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['buyprice']/$per),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['jumlah']/$per),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['qtybom']),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['buypricebom']/$per),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['jumlahbom']/$per),
						));
					}
					$this->pdf->sety($this->pdf->gety()+5);
					$this->pdf->checkPageBreak(10);
				}
			}
		}
		$this->pdf->Output();
  }
	//26
	public function RekapPersediaanBarangDetailNew($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
          and a.storagedesc like '%".$storagebin."%'
          ),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
          and a.storagedesc like '%".$storagebin."%'),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
          and a.storagedesc like '%".$storagebin."%'),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
          and a.storagedesc like '%".$storagebin."%'),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
          and a.storagedesc like '%".$storagebin."%'),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
          and a.storagedesc like '%".$storagebin."%'),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
          and a.storagedesc like '%".$storagebin."%'),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
          and a.storagedesc like '%".$storagebin."%'),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
          left join account q on q.accountid=p.accpersediaan
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%' 
          and k.productid in (
            select z.productid 
                from productstockdet z
                join sloc za on za.slocid = z.slocid
                join plant zb on zb.plantid = za.plantid
                join company zc on zc.companyid = zb.companyid
                join storagebin zd on zd.storagebinid=z.storagebinid
                where zc.companyid = {$companyid} and zd.description like '%".$storagebin."%' and z.slocid = j.slocid and z.unitofmeasureid = j.unitofissue
          )) zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang (Detail)';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(80,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(115,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal2+jumlahmasuk2)/(qtyawal2+qtymasuk2)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
                case when qtyakhir < 0 then 'X' else '' end as minus
                from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
                ifnull((select sum(a.qty)
                from productdetailhist a
                where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
                and a.storagedesc like '%".$storagebin."%'
                ),0) as qtyawal,
                ifnull((select sum(a.qty*a.buyprice)
                from productdetailhist a
                where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
                and a.storagedesc like '%".$storagebin."%'),0) as jumlahawal,
                ifnull((select sum(a.qty)
                from productdetailhist a
                where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
                and a.storagedesc like '%".$storagebin."%'),0) as qtymasuk,
                ifnull((select sum(a.qty*a.buyprice)
                from productdetailhist a
                where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
                and a.storagedesc like '%".$storagebin."%'),0) as jumlahmasuk,
                ifnull((select sum(a.qty)
                from productdetailhist a
                where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 

                ),0) as qtyawal2,
                ifnull((select sum(a.qty*a.buyprice)
                from productdetailhist a
                where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 

                ),0) as jumlahawal2,
                ifnull((select sum(a.qty)
                from productdetailhist a
                where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 

                ),0) as qtymasuk2,
                ifnull((select sum(a.qty*a.buyprice)
                from productdetailhist a
                where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
                ),0) as jumlahmasuk2,
                ifnull((select sum(a.qty)	
                from productdetailhist a
                where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
                and a.storagedesc like '%".$storagebin."%'),0) as qtykeluar,
                ifnull((select sum(a.qty*a.buyprice)
                from productdetailhist a
                where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
                and a.storagedesc like '%".$storagebin."%'),0) as jumlahkeluar,
                ifnull((select sum(a.qty)
                from productdetailhist a
                where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
                and a.storagedesc like '%".$storagebin."%'),0) as qtyakhir,
                ifnull((select sum(a.qty*a.buyprice)
                from productdetailhist a
                where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue 
                and a.storagedesc like '%".$storagebin."%'),0) as jumlahakhir
                from productplant j
                join product k on k.productid=j.productid
                join sloc l on l.slocid=j.slocid
                join unitofmeasure m on m.unitofmeasureid=j.unitofissue
                join plant n on n.plantid=l.plantid
                join materialgroup o on o.materialgroupid=j.materialgroupid
                left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
                left join account q on q.accountid=p.accpersediaan
                where k.isstock=1 and n.companyid = {$companyid} and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%' 
                and k.productid in (
                select z.productid 
                from productstockdet z
                join sloc za on za.slocid = z.slocid
                join plant zb on zb.plantid = za.plantid
                join company zc on zc.companyid = zb.companyid
                join storagebin zd on zd.storagebinid=z.storagebinid
                where zc.companyid = {$companyid} and zd.description like '%".$storagebin."%' and z.slocid = j.slocid and z.unitofmeasureid = j.unitofissue
                )) zz
                where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
                order by sloccode, description";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyawal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargaawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['jumlahawal']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtymasuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahmasuk']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytersedia']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargatersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtykeluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahkeluar']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyakhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahakhir']/$per),
					$row1['minus'],
				));
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));
		
		$this->pdf->Output();
	}
	//27
	public function RekapPersediaanBarangDetailRak($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,q.materialgroupid,q.description,s.accountname,
					ifnull((select sum(a.qty)
					from productdetailhist a
					where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as qtyawal,
					ifnull((select sum(a.qty*a.buyprice)
					from productdetailhist a
					where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as jumlahawal,
					ifnull((select sum(a.qty)
					from productdetailhist a
					where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as qtymasuk,
					ifnull((select sum(a.qty*a.buyprice)
					from productdetailhist a
					where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as jumlahmasuk,
					ifnull((select sum(a.qty)
					from productdetailhist a
					where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as qtykeluar,
					ifnull((select sum(a.qty*a.buyprice)
					from productdetailhist a
					where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as jumlahkeluar,
					ifnull((select sum(a.qty)
					from productdetailhist a
					where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as qtyakhir,
					ifnull((select sum(a.qty*a.buyprice)
					from productdetailhist a
					where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as jumlahakhir
					from productdetail j
					join product k on k.productid=j.productid
					join sloc l on l.slocid=j.slocid
					join unitofmeasure m on m.unitofmeasureid=j.unitofmeasureid
					join plant n on n.plantid=l.plantid
					JOIN storagebin o ON o.storagebinid=j.storagebinid
					JOIN productplant p ON p.productid=j.productid AND p.slocid=j.slocid AND p.unitofissue=j.unitofmeasureid
					join materialgroup q on q.materialgroupid=p.materialgroupid
					left join slocaccounting r on r.slocid=p.slocid and r.materialgroupid=p.materialgroupid
					left join account s on s.accountid=r.accpersediaan
					where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and q.description like '%".$materialgroup."%' and o.description like '%".$storagebin."%' and k.productname like '%".$product."%' and s.accountname like '%".$account."%') zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang (Detail) Per Rak';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(80,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(115,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,60,12,20,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,60,12,20,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Rak','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,q.materialgroupid,q.description,o.storagebinid,o.description as storagedesc,s.accountname,
					ifnull((select sum(a.qty)
					from productdetailhist a
					where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as qtyawal,
					ifnull((select sum(a.qty*a.buyprice)
					from productdetailhist a
					where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as jumlahawal,
					ifnull((select sum(a.qty)
					from productdetailhist a
					where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as qtymasuk,
					ifnull((select sum(a.qty*a.buyprice)
					from productdetailhist a
					where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as jumlahmasuk,
					ifnull((select sum(a.qty)
					from productdetailhist a
					where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as qtykeluar,
					ifnull((select sum(a.qty*a.buyprice)
					from productdetailhist a
					where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as jumlahkeluar,
					ifnull((select sum(a.qty)
					from productdetailhist a
					where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as qtyakhir,
					ifnull((select sum(a.qty*a.buyprice)
					from productdetailhist a
					where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofmeasureid and a.storagebinid=j.storagebinid),0) as jumlahakhir
					from productdetail j
					join product k on k.productid=j.productid
					join sloc l on l.slocid=j.slocid
					join unitofmeasure m on m.unitofmeasureid=j.unitofmeasureid
					join plant n on n.plantid=l.plantid
					JOIN storagebin o ON o.storagebinid=j.storagebinid
					JOIN productplant p ON p.productid=j.productid AND p.slocid=j.slocid AND p.unitofissue=j.unitofmeasureid
					join materialgroup q on q.materialgroupid=p.materialgroupid
					left join slocaccounting r on r.slocid=p.slocid and r.materialgroupid=p.materialgroupid
					left join account s on s.accountid=r.accpersediaan
					where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and q.description like '%".$materialgroup."%' and o.description like '%".$storagebin."%' and k.productname like '%".$product."%' and s.accountname like '%".$account."%' and l.slocid = ".$row['slocid']." and q.materialgroupid = ".$row['materialgroupid'].") zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],$row1['storagedesc'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyawal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargaawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtymasuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahmasuk']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytersedia']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargatersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtykeluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahkeluar']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyakhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahakhir']/$per),
					$row1['minus'],
				));
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));
		
		$this->pdf->Output();
	}
	//28
	public function RekapPerbandinganHPPPenjualanPerCustomerPerBarang($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();

		$grandtotalqty=0;$grandtotalhpp=0;$grandtotalinvoice=0;
		$sql = "select distinct k.addressbookid,k.fullname
						from gidetail a
						join sodetail b on b.sodetailid=a.sodetailid
						join giheader c on c.giheaderid=a.giheaderid
						join soheader d on d.soheaderid=c.soheaderid
						join addressbook k ON k.addressbookid=d.addressbookid
						join product e on e.productid=a.productid
						join sloc h on h.slocid=a.slocid
						join productplant i on i.productid=a.productid and i.slocid=a.slocid
						join materialgroup j on j.materialgroupid=i.materialgroupid
						where c.recordstatus=3 and d.companyid = ".$companyid." and e.productname like '%".$product."%'
						and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
						and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by k.fullname ";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perbandingan Nilai HPP dan Nilai Penjualan Per Customer Per Barang';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');

		foreach($dataReader as $row)
		{
			$i=0;$totalqty=0;$totalhpp=0;$totalinvoice=0;
			
			$this->pdf->setFont('Arial','B',10);
		  $this->pdf->text(10, $this->pdf->gety() +3, $row['fullname']);
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(8,50,17,25,20,17,25,20,15));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Total HPP','HPP/Unit','Qty','Total Jual','Jual/Unit','GM');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R');
			
			$sql1 = "select productname, sum(qty) as qty, sum(qty*buyprice) as nilaihpp, sum(amount) as nilaiinvoice,
						ifnull((100-(sum(qty*buyprice)/sum(amount))*100),0) as gm
						from (select e.productname,a.qty,
						ifnull((select f.buyprice from productdetailhist f where f.productid=a.productid and f.slocid=a.slocid and f.unitofmeasureid=a.unitofmeasureid and f.storagebinid=a.storagebinid and f.referenceno=c.gino limit 1),0) as buyprice,
						-- case when (select g.recordstatus from invoice g where g.giheaderid=c.giheaderid) = 3 then 
						getamountdiscso(d.soheaderid,a.sodetailid,a.qty) 
						-- else 0 end 
						as amount
						from gidetail a
						join sodetail b on b.sodetailid=a.sodetailid
						join giheader c on c.giheaderid=a.giheaderid
						join soheader d on d.soheaderid=c.soheaderid
						join product e on e.productid=a.productid
						join sloc h on h.slocid=a.slocid
						join productplant i on i.productid=a.productid and i.slocid=a.slocid
						join materialgroup j on j.materialgroupid=i.materialgroupid
						where c.recordstatus=3 and d.addressbookid = ".$row['addressbookid']." and d.companyid = ".$companyid." and e.productname like '%".$product."%'
						and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
						and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
						group by productname
						order by productname ";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,
					$row1['productname'],
					Yii::app()->format->formatCurrency($row1['qty']),
					Yii::app()->format->formatCurrency($row1['nilaihpp']/$per),
					Yii::app()->format->formatCurrency(($row1['nilaihpp']/$row1['qty'])/$per),
					Yii::app()->format->formatCurrency($row1['qty']),
					Yii::app()->format->formatCurrency($row1['nilaiinvoice']/$per),
					Yii::app()->format->formatCurrency(($row1['nilaiinvoice']/$row1['qty'])/$per),
					Yii::app()->format->formatCurrency($row1['gm']),
				));
				$totalqty += ($row1['qty']);
				$totalhpp += ($row1['nilaihpp']/$per);
				$totalinvoice += ($row1['nilaiinvoice']/$per);
			}
			$a = 0;$b = 0;$c = 0;
			if ($totalqty != 0) {
				$a = $totalhpp / $totalqty;
				$b = $totalinvoice / $totalqty;
			}
			if ($totalinvoice != 0) {
				$c = $totalhpp/$totalinvoice;
			}
			
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->setwidths(array(58,17,25,20,17,25,20,15));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R');
			$this->pdf->row(array(
				'TOTAL '.$row['fullname'].'  >>>',
				Yii::app()->format->formatCurrency($totalqty),
				Yii::app()->format->formatCurrency($totalhpp),
				Yii::app()->format->formatCurrency($a),
				Yii::app()->format->formatCurrency($totalqty),
				Yii::app()->format->formatCurrency($totalinvoice),
				Yii::app()->format->formatCurrency($b),
				Yii::app()->format->formatCurrency(100-(($c)*100)),
			));
			$grandtotalqty += $totalqty;
			$grandtotalhpp += $totalhpp;
			$grandtotalinvoice += $totalinvoice;
			$this->pdf->checkNewPage(35);
			$this->pdf->sety($this->pdf->gety()+5);
		}
		$d = 0;$e = 0;$f = 0;
		if ($totalqty != 0) {
			$d = $grandtotalhpp / $grandtotalqty;
			$e = $grandtotalinvoice / $grandtotalqty;
		}
		if ($grandtotalinvoice != 0) {
			$f = $grandtotalhpp/$grandtotalinvoice;
		}
			
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->setwidths(array(58,17,25,20,17,25,20,15));
		$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R');
		$this->pdf->row(array(
			'<<<  GRAND TOTAL  >>>',
			Yii::app()->format->formatCurrency($grandtotalqty),
			Yii::app()->format->formatCurrency($grandtotalhpp),
			Yii::app()->format->formatCurrency($d),
			Yii::app()->format->formatCurrency($grandtotalqty),
			Yii::app()->format->formatCurrency($grandtotalinvoice),
			Yii::app()->format->formatCurrency($e),
			Yii::app()->format->formatCurrency(100-(($f)*100)),
		));
		
		$this->pdf->Output();
	}
	 //30
    public function RincianPerbandingaHargaBarangperGudang($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
    {
        parent::actionDownload();
        $this->pdf->title='Rincian Harga Pemakaian Barang';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','A4');
      
        $firstmonth1 = date(Yii::app()->params['datetodb'],strtotime($startdate));
        $lastmonth1 = date(Yii::app()->params['datetodb'],strtotime($enddate));
        $last1 = new DateTime($firstmonth1);
        $last2 = new DateTime($lastmonth1);
        $firstmonth2 =  $last1->modify('-1 month');
        $lastmonth2 =  $last2->modify('-1 month');
        
        $totalharga = 0;
        $totalqty = 0; 
        $totalpakai = 0;
        $totalhargalalu = 0; 
        $totalqtylalu = 0;
        $totalpakailalu = 0; 
        $totalselisih = 0;
        $totalselisihqty = 0;
      
        $sql="select distinct slocid,sloccode, group_concat(distinct accountid) as accountid, group_concat(distinct accountname) as accountname
        from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountid,q.accountname,
        ifnull((select sum(a.qty)
        from productdetailhist a
        where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
        and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.referenceno like 'OP%'),0) as qty,
        ifnull((select sum(a.qty*a.buyprice)
        from productdetailhist a
        where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.referenceno like 'OP%'),0) as jumlah
        from productplant j
        join product k on k.productid=j.productid
        join sloc l on l.slocid=j.slocid
        join unitofmeasure m on m.unitofmeasureid=j.unitofissue
        join plant n on n.plantid=l.plantid
        join materialgroup o on o.materialgroupid=j.materialgroupid
        left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
        left join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
        where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%'
        and q.accountcode between '110501' and '11050199999999999999999999999999') zz
        where qty <> 0 or jumlah <> 0 
        group by slocid
        order by accountid,slocid";
        /*
        $sql="select distinct group_concat(distinct accountid) as accountid,accountname,slocid,sloccode
          from (select k.productname  ,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountid,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
          left join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%'
          and q.accountcode between '110501' and '11050199999999999999999999999999') zz
          where qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 
          order by slocid";
          */
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		foreach($dataReader as $row) {
          
            $totalhargasloc = 0;
            $totalqtysloc = 0; 
            $totalpakaisloc = 0;
            $totalhargalalusloc = 0; 
            $totalqtylalusloc = 0;
            $totalpakailalusloc = 0; 
            $totalselisihsloc = 0;
            $totalselisihqtysloc = 0;
          
            $this->pdf->setFont('Arial','',10);
			$this->pdf->text(225,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(245,$this->pdf->gety()+5,': '.$row['sloccode']);
			//$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
            
            $sql1="select *
            from (select k.productname,m.uomcode,l.sloccode,o.description,o.materialgroupid,
            ifnull((select sum(a.qty)*-1
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
            
            and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty < 0 and a.referenceno like 'OP%'),0) as qtybulanini,
            ifnull((select sum(a.buyprice*a.qty)/sum(a.qty)
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'  and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty < 0 and a.referenceno like 'OP%'),0) as hargabulan,
            ifnull((select sum(a.qty)*-1
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-d')))."' 
            
            and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty < 0 and a.referenceno like 'OP%'),0) as qtybulanlalu,
            ifnull((select sum(a.buyprice*a.qty)/sum(qty)
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-d')))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty < 0 and a.referenceno like 'OP%'),0) as hargabulanlalu
            from productplant j
            join product k on k.productid=j.productid
            join sloc l on l.slocid=j.slocid
            join unitofmeasure m on m.unitofmeasureid=j.unitofissue
            join plant n on n.plantid=l.plantid
            join materialgroup o on o.materialgroupid=j.materialgroupid
            join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
            join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
            where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' 
            and q.accountid in (".$row['accountid'].") and l.slocid = ".$row['slocid'].") zz
            where qtybulanini <> 0 or hargabulan <> 0 or qtybulanlalu <> 0 or hargabulanlalu <> 0
            group by materialgroupid
            order by description";
          
            $dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			foreach ($dataReader1 as $row1)
			{
                $i=0;
                $totalhargamat = 0;
                $totalqtymat = 0; 
                $totalpakaimat = 0;
                $totalhargalalumat = 0; 
                $totalqtylalumat = 0;
                $totalpakailalumat = 0; 
                $totalselisihmat = 0;
                $totalselisihqtymat = 0;
              
                $this->pdf->setFont('Arial','',10);
                $this->pdf->text(10,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row1['description']);
                $this->pdf->setFont('Arial','B',8);
                $this->pdf->sety($this->pdf->gety()+7);
                $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
                $this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
                $this->pdf->colheader = array('','','','Harga Barang','','');
                $this->pdf->RowHeader();
                $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
                $this->pdf->setwidths(array(10,60,12,23,23,25,23,23,25,15,25,25,23,10,25,5));
                $this->pdf->colheader = array('No','Nama Barang','Satuan','Bulan Ini','Qty Pakai','Total Pakai','Bulan Lalu','Qty Pakai','Selisih','%','Total Selisih');
                $this->pdf->RowHeader();
                $this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
              
                $sql2="select *
                from (select k.productname,m.uomcode,l.sloccode,o.description,
                ifnull((select sum(a.qty)*-1
                from productdetailhist a
                where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 

                and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty < 0 and a.referenceno like 'OP%'),0) as qtybulanini,
                ifnull((select sum(a.buyprice*a.qty)/sum(a.qty)
                from productdetailhist a
                where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'  and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty < 0 and a.referenceno like 'OP%'),0) as hargabulan,
                ifnull((select sum(a.qty)*-1
                from productdetailhist a
                where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-d')))."' 

                and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty < 0 and a.referenceno like 'OP%'),0) as qtybulanlalu,
                ifnull((select sum(a.buyprice*a.qty)/sum(qty)
                from productdetailhist a
                where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-d')))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty < 0 and a.referenceno like 'OP%'),0) as hargabulanlalu
                from productplant j
                join product k on k.productid=j.productid
                join sloc l on l.slocid=j.slocid
                join unitofmeasure m on m.unitofmeasureid=j.unitofissue
                join plant n on n.plantid=l.plantid
                join materialgroup o on o.materialgroupid=j.materialgroupid
                join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
                join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
                where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' 
                and q.accountid in (".$row['accountid'].") and l.slocid = ".$row['slocid']." and j.materialgroupid = {$row1['materialgroupid']}) zz
                where qtybulanini <> 0 or hargabulan <> 0 or qtybulanlalu <> 0 or hargabulanlalu <> 0
                -- group by materialgroupid
                order by productname";
                $dataReader2 = Yii::app()->db->createCommand($sql2)->queryAll();
                foreach($dataReader2 as $row2) {
                    if($row2['hargabulanlalu']==0) {
                        $percent = 0;
                    }
                    else {
                        $percent = ($row2['hargabulan']*$row2['qtybulanini'])/($row2['hargabulanlalu']*$row2['qtybulanlalu'])*100;  
                    }

                    $i+=1;
                    $this->pdf->setFont('Arial','',8);
                    $this->pdf->row(array(
                        $i,$row2['productname'],$row2['uomcode'],
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['hargabulan']/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qtybulanini']),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row2['hargabulan']*$row2['qtybulanini'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['hargabulanlalu']/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qtybulanlalu']),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],(($row2['hargabulan']-$row2['hargabulanlalu']))/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$percent).' %',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],(($row2['hargabulan']-$row2['hargabulanlalu'])*$row2['qtybulanini'])/$per)
                    ));
                    $totalhargamat += $row2['hargabulan']; 
                    $totalqtymat += $row2['qtybulanini']; 
                    $totalpakaimat += ($row2['hargabulan']*$row2['qtybulanini']);
                    $totalhargalalumat += $row2['hargabulanlalu']; 
                    $totalqtylalumat += $row2['qtybulanlalu']; 
                    $totalpakailalumat += ($row2['hargabulanlalu']*$row2['qtybulanlalu']); 
                    $totalselisihmat += ($row2['hargabulan']-$row2['hargabulanlalu']);
                    $totalselisihqtymat += ($row2['hargabulan']-$row2['hargabulanlalu'])*$row2['qtybulanini'];
                  
                    $totalhargasloc += $row2['hargabulan']; 
                    $totalqtysloc += $row2['qtybulanini']; 
                    $totalpakaisloc += ($row2['hargabulan']*$row2['qtybulanini']);
                    $totalhargalalusloc += $row2['hargabulanlalu']; 
                    $totalqtylalusloc += $row2['qtybulanlalu']; 
                    $totalpakailalusloc += ($row2['hargabulanlalu']*$row2['qtybulanlalu']); 
                    $totalselisihsloc += ($row2['hargabulan']-$row2['hargabulanlalu']);
                    $totalselisihqtysloc += ($row2['hargabulan']-$row2['hargabulanlalu'])*$row2['qtybulanini'];
                  
                    $totalharga += $row2['hargabulan']; 
                    $totalqty += $row2['qtybulanini']; 
                    $totalpakai += ($row2['hargabulan']*$row2['qtybulanini']);
                    $totalhargalalu += $row2['hargabulanlalu']; 
                    $totalqtylalu += $row2['qtybulanlalu']; 
                    $totalpakailalu += ($row2['hargabulanlalu']*$row2['qtybulanlalu']); 
                    $totalselisih += ($row2['hargabulan']-$row2['hargabulanlalu']);
                    $totalselisihqty += ($row2['hargabulan']-$row2['hargabulanlalu'])*$row2['qtybulanini'];
                }
                $this->pdf->setY($this->pdf->getY()+5);
                $this->pdf->setFont('Arial','B',8);
                $this->pdf->row(array('','TOTAL : '.$row1['description'],'',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalhargamat/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqtymat),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalpakaimat/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalhargalalumat/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqtylalumat),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisihmat/$per),
                        '',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisihqtymat/$per)
                    ));
                $this->pdf->setY($this->pdf->getY()+5);
            }
             $this->pdf->setFont('Arial','B',9);
             $this->pdf->row(array('','TOTAL  '.$row['sloccode'],'',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalhargasloc/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqtysloc),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalpakaisloc/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalhargalalusloc/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqtylalusloc),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisihsloc/$per),
                        '',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisihqtysloc/$per)
                    ));
        }
        $this->pdf->setFont('Arial','B',9);
             $this->pdf->row(array('','GRAND TOTAL  ','',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalharga/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalpakai/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalhargalalu/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqtylalu),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisih/$per),
                        '',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisihqty/$per)
                    ));
        $this->pdf->Output();
    }
	//31
    public function RincianNilaiUpahperBarang($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
    {
        parent::actionDownload();
        $this->pdf->title='Rincian Upah Langsung Barang';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','A4');
      
        $firstmonth1 = date(Yii::app()->params['datetodb'],strtotime($startdate));
        $lastmonth1 = date(Yii::app()->params['datetodb'],strtotime($enddate));
        $last1 = new DateTime($firstmonth1);
        $last2 = new DateTime($lastmonth1);
        $firstmonth2 =  $last1->modify('-1 month');
        $lastmonth2 =  $last2->modify('-1 month');
      
         $totalul = 0;
         $totalqty1 = 0;
         $totalupah = 0;
         $totalul2 = 0;
         $totalqty2 = 0;
          //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
         $totalselisih = 0;
         $totalselisih1 = 0;
        
        $sql="select distinct slocid,sloccode,group_concat(distinct accountid) as accountid
        from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountid,q.accountname,r.mgprocessid,r.description as mgprocess,
        ifnull((select sum(a.qty)
        from productdetailhist a
        where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
        and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.referenceno like 'OP%'),0) as qty,
        ifnull((select sum(a.qty*a.buyprice)
        from productdetailhist a
        where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.referenceno like 'OP%'),0) as jumlah
        from productplant j
        join product k on k.productid=j.productid
        join sloc l on l.slocid=j.slocid
        join unitofmeasure m on m.unitofmeasureid=j.unitofissue
        join plant n on n.plantid=l.plantid
        join materialgroup o on o.materialgroupid=j.materialgroupid
        left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
        left join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
        left join mgprocess r on r.mgprocessid = j.mgprocessid
        where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%' and r.mgprocessid <> 148
        and q.accountcode between '110501' and '11050199999999999999999999999999') zz
        where qty <> 0 or jumlah <> 0 
        -- group by mgprocess
        order by slocid";
        
        $dataReader = Yii::app()->db->createCommand($sql)->queryAll();
        foreach($dataReader as $row) {
             $totalulsloc = 0;
             $totalqty1sloc = 0;
             $totalupahsloc = 0;
             $totalul2sloc = 0;
             $totalqty2sloc = 0;
              //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
             $totalselisihsloc = 0;
             $totalselisih1sloc = 0;
          
            $this->pdf->setFont('Arial','',10);
			$this->pdf->text(225,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(245,$this->pdf->gety()+5,': '.$row['sloccode']);
            
            $plant = "select plantid from sloc where slocid = ".$row['slocid'];
            $plantid = Yii::app()->db->createCommand($plant)->queryScalar();
          
            $sql1="select distinct mgprocessid,mgprocess
            from (select k.productname,m.uomcode,l.sloccode,o.description,o.materialgroupid,r.mgprocessid,r.description as mgprocess,
            ifnull((select sum(a.qty)*-1
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
            
            and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty > 0 and a.referenceno like 'OP%'),0) as qtybulanini,
            ifnull((select sum(a.buyprice*a.qty)/sum(a.qty)
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'  and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty > 0 and a.referenceno like 'OP%'),0) as hargabulan,
            ifnull((select sum(a.qty)*-1
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-t')))."' 
            
            and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty > 0 and a.referenceno like 'OP%'),0) as qtybulanlalu,
            ifnull((select sum(a.buyprice*a.qty)/sum(qty)
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-t')))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty > 0 and a.referenceno like 'OP%'),0) as hargabulanlalu
            from productplant j
            join product k on k.productid=j.productid
            join sloc l on l.slocid=j.slocid
            join unitofmeasure m on m.unitofmeasureid=j.unitofissue
            join plant n on n.plantid=l.plantid
            join materialgroup o on o.materialgroupid=j.materialgroupid
            join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
            join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
            left join mgprocess r on r.mgprocessid = j.mgprocessid
            where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and r.mgprocessid <> 148
            and q.accountid in (".$row['accountid'].") and l.slocid = ".$row['slocid'].") zz
            where qtybulanini <> 0 or hargabulan <> 0 or qtybulanlalu <> 0 or hargabulanlalu <> 0
            group by materialgroupid
            order by description";
          
            $dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
            foreach($dataReader1 as $row1) {
                $totalulmat = 0;
                $totalqty1mat = 0;
                $totalupahmat = 0;
                $totalul2mat = 0;
                $totalqty2mat = 0;
                //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
                $totalselisihmat = 0;
                $totalselisih1mat = 0;

                $ulcode = "select distinct a.ulcode
                          from fohulacc a
                          join sloc b ON b.slocid=a.slocid
                          join plant c ON c.plantid=b.plantid
                          join company d ON d.companyid=c.companyid
                          where a.recordstatus=1 and d.recordstatus = 1
                          and d.companyid = {$companyid} and b.slocid = {$row['slocid']}
                          and a.mgprocessid = {$row1['mgprocessid']}";
                $ul = Yii::app()->db->createCommand($ulcode)->queryScalar();
                
                $connection = Yii::app()->db;
                // $foh1 = "select getUL(57, '2021-01-01', '2021-01-31', '510103070801', 163, '594');"
                $ul1 = "select getUL({$plantid}, '".date(Yii::app()->params['datetodb'],strtotime($startdate))."', '".date(Yii::app()->params['datetodb'],strtotime($enddate))."', '{$ul}', {$row1['mgprocessid']}, {$row['slocid']})";
                $nilaiul1 = $connection->createCommand($ul1)->queryScalar();
              
                $ul2 = "select getUL({$plantid}, '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."', '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-t')))."', '{$ul}', {$row1['mgprocessid']}, {$row['slocid']})";
                $nilaiul2 = $connection->createCommand($ul2)->queryScalar();
                
                
                $i=0;
                $this->pdf->setFont('Arial','',10);
                $this->pdf->text(10,$this->pdf->gety()+5,'PROCESS');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row1['mgprocess'].' ');
                $this->pdf->setFont('Arial','B',8);
                $this->pdf->sety($this->pdf->gety()+7);
                $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
                $this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
                $this->pdf->colheader = array('','','','Harga Barang','','');
                $this->pdf->RowHeader();
                $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
                $this->pdf->setwidths(array(10,60,12,23,23,25,23,23,25,15,25,15,23,15,23,5));
                $this->pdf->colheader = array('No','Nama Barang','Satuan','Upah Bln Ini','Qty Bln Ini','Total Upah','Upah Bln Lalu','Qty Bln Lalu','Selisih','%','Total Selisih');
                $this->pdf->RowHeader();
                $this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
              
                $sql2="select distinct b.productid,d.productname, e.uomcode,unitofmeasureid,b.slocid,
                -- ifnull((select cycletime from billofmaterial x where x.productid = b.productid and x.bomid = b.bomid),0) * sum(qtyoutput) as ct,
                (select ifnull(sum(qtyoutput),0)
                    from productoutput za
                    join productoutputfg zb on zb.productoutputid = za.productoutputid
                    join productplant zc on zc.productid = zb.productid and zc.slocid = zb.slocid and zc.unitofissue = zb.uomid
                    where c.mgprocessid = {$row1['mgprocessid']} and b.slocid IN ({$row['slocid']}) and za.recordstatus=3
                    and za.productoutputdate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-t')))."'
                    and zb.productid = b.productid) as qtyoutput2,
                    (select ifnull(sum(qtyoutput),0)
                    from productoutput za
                    join productoutputfg zb on zb.productoutputid = za.productoutputid
                    join productplant zc on zc.productid = zb.productid and zc.slocid = zb.slocid and zc.unitofissue = zb.uomid
                    where c.mgprocessid = {$row1['mgprocessid']} and b.slocid IN ({$row['slocid']}) and za.recordstatus=3
                    and za.productoutputdate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                    and zb.productid = b.productid) as qtyoutput1,
                    ifnull((select cycletime from billofmaterial x where x.productid = b.productid and x.bomid = b.bomid),0) as ct
                from productoutput a
                join productoutputfg b on b.productoutputid = a.productoutputid
                join productplant c on c.productid = b.productid and c.slocid = b.slocid and c.unitofissue = b.uomid
                join product d on d.productid = c.productid
                join unitofmeasure e on e.unitofmeasureid = b.uomid
                where c.mgprocessid =  {$row1['mgprocessid']} and b.slocid IN ({$row['slocid']})
                and a.recordstatus=3
                and productoutputdate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                order by productname asc";
              
                $dataReader2 = Yii::app()->db->createCommand($sql2)->queryAll();
                foreach($dataReader2 as $row2) {
                    //if($row2['hargabulanlalu']==0) {
                    if($row2['qtyoutput2']==0 || $nilaiul2 == 0) {
                        $percent = 0;
                    }
                    else {
                        $percent = (($nilaiul1*$row2['ct'])-($nilaiul2*$row2['ct'])) / (($nilaiul2*$row2['ct']))*100;
                    }

                    $i+=1;
                    $this->pdf->setFont('Arial','',8);
                    $this->pdf->row(array(
                        $i,$row2['productname'],$row2['uomcode'],
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($nilaiul1*$row2['ct'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qtyoutput1']),
                        //Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row2['qtybulanini']*$row2['qtybulanini'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($nilaiul1*$row2['ct']*$row2['qtyoutput1'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($nilaiul2*$row2['ct'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qtyoutput2']),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],(($nilaiul1*$row2['ct'])-($nilaiul2*$row2['ct']))/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$percent).' %',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],(($nilaiul1*$row2['ct'])-($nilaiul2*$row2['ct']))*$row2['qtyoutput1']/$per),
                    ));
                  
                    $totalulmat += $nilaiul1*$row2['ct'];
                    $totalqty1mat += $row2['qtyoutput1'];
                    $totalupahmat += $nilaiul1*$row2['ct']*$row2['qtyoutput1'];
                    $totalul2mat += $nilaiul2*$row2['ct'];
                    $totalqty2mat += $row2['qtyoutput2'];
                    //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
                    $totalselisihmat += ($nilaiul1*$row2['ct'])-($nilaiul2*$row2['ct']);
                    $totalselisih1mat += (($nilaiul1*$row2['ct'])-($nilaiul2*$row2['ct']))*$row2['qtyoutput1'];
                  
                    $totalulsloc += $nilaiul1*$row2['ct'];
                    $totalqty1sloc += $row2['qtyoutput1'];
                    $totalupahsloc += $nilaiul1*$row2['ct']*$row2['qtyoutput1'];
                    $totalul2sloc += $nilaiul2*$row2['ct'];
                    $totalqty2sloc += $row2['qtyoutput2'];
                    //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
                    $totalselisihsloc += ($nilaiul1*$row2['ct'])-($nilaiul2*$row2['ct']);
                    $totalselisih1sloc += (($nilaiul1*$row2['ct'])-($nilaiul2*$row2['ct']))*$row2['qtyoutput1'];
                  
                    $totalul += $nilaiul1*$row2['ct'];
                    $totalqty1 += $row2['qtyoutput1'];
                    $totalupah += $nilaiul1*$row2['ct']*$row2['qtyoutput1'];
                    $totalul2 += $nilaiul2*$row2['ct'];
                    $totalqty2 += $row2['qtyoutput2'];
                    //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
                    $totalselisih += ($nilaiul1*$row2['ct'])-($nilaiul2*$row2['ct']);
                    $totalselisih1 += (($nilaiul1*$row2['ct'])-($nilaiul2*$row2['ct']))*$row2['qtyoutput1'];
                  
                }
                $this->pdf->setY($this->pdf->getY()+5);
                $this->pdf->setFont('Arial','B',8);
                $this->pdf->row(array(
                        '','TOTAL PROCESS : '.$row1['mgprocess'],'',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalulmat/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty1mat),
                        //Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row2['qtybulanini']*$row2['qtybulanini'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalupahmat/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalul2mat/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty2mat),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisihmat/$per),
                        '',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisih1mat/$per)
                    ));
            }
            $this->pdf->setY($this->pdf->getY()+5);
            $this->pdf->setFont('Arial','B',9);
            $this->pdf->row(array(
                        '','TOTAL GUDANG : '.$row['sloccode'],'',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalulsloc/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty1sloc),
                        //Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row2['qtybulanini']*$row2['qtybulanini'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalupahsloc/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalul2sloc/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty2sloc),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisihsloc/$per),
                        '',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisih1sloc/$per)
                    ));
        }
         $this->pdf->setFont('Arial','B',9);
          $this->pdf->row(array(
                      '','GRAND TOTAL ','',
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalul/$per),
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty1),
                      //Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row2['qtybulanini']*$row2['qtybulanini'])/$per),
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalupah/$per),
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalul2/$per),
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty2),
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisih/$per),
                      '',
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisih1/$per)
                  ));
        $this->pdf->Output();
    }
	//32
    public function RincianNilaiFOHperBarang($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
    {
        parent::actionDownload();
        $this->pdf->title='Rincian Biaya FOH Barang';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','A4');
      
        $firstmonth1 = date(Yii::app()->params['datetodb'],strtotime($startdate));
        $lastmonth1 = date(Yii::app()->params['datetodb'],strtotime($enddate));
        $last1 = new DateTime($firstmonth1);
        $last2 = new DateTime($lastmonth1);
        $firstmonth2 =  $last1->modify('-1 month');
        $lastmonth2 =  $last2->modify('-1 month');
        
        $totalfoh = 0;
        $totalqty1 = 0;
        $totalfoh = 0;
        $totalfoh2 = 0;
        $totalqty2 = 0;
          //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
        $totalselisih = 0;
        $totalselisih1 = 0;
      
        $sql="select distinct slocid,sloccode,group_concat(distinct accountid) as accountid
        from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountid,q.accountname,r.mgprocessid,r.description as mgprocess,
        ifnull((select sum(a.qty)
        from productdetailhist a
        where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
        and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.referenceno like 'OP%'),0) as qty,
        ifnull((select sum(a.qty*a.buyprice)
        from productdetailhist a
        where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.referenceno like 'OP%'),0) as jumlah
        from productplant j
        join product k on k.productid=j.productid
        join sloc l on l.slocid=j.slocid
        join unitofmeasure m on m.unitofmeasureid=j.unitofissue
        join plant n on n.plantid=l.plantid
        join materialgroup o on o.materialgroupid=j.materialgroupid
        left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
        left join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
        left join mgprocess r on r.mgprocessid = j.mgprocessid
        where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%' and r.mgprocessid <> 148
        and q.accountcode between '110501' and '11050199999999999999999999999999') zz
        where qty <> 0 or jumlah <> 0 
        -- group by mgprocess
        order by slocid";
        
        $dataReader = Yii::app()->db->createCommand($sql)->queryAll();
        foreach($dataReader as $row) {
            $this->pdf->setFont('Arial','',10);
			$this->pdf->text(225,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(245,$this->pdf->gety()+5,': '.$row['sloccode']);
            
            $plant = "select plantid from sloc where slocid = ".$row['slocid'];
            $plantid = Yii::app()->db->createCommand($plant)->queryScalar();
            
            $totalfohsloc = 0;
            $totalqty1sloc = 0;
            $totalfohsloc = 0;
            $totalfoh2sloc = 0;
            $totalqty2sloc = 0;
            //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
            $totalselisihsloc = 0;
            $totalselisih1sloc = 0;
          
            $sql1="select mgprocessid,mgprocess
            from (select k.productname,m.uomcode,l.sloccode,o.description,o.materialgroupid,r.mgprocessid,r.description as mgprocess,
            ifnull((select sum(a.qty)*-1
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
            
            and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty > 0 and a.referenceno like 'OP%'),0) as qtybulanini,
            ifnull((select sum(a.buyprice*a.qty)/sum(a.qty)
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'  and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty > 0 and a.referenceno like 'OP%'),0) as hargabulan,
            ifnull((select sum(a.qty)*-1
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-t')))."' 
            
            and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty > 0 and a.referenceno like 'OP%'),0) as qtybulanlalu,
            ifnull((select sum(a.buyprice*a.qty)/sum(qty)
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-t')))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue and a.qty > 0 and a.referenceno like 'OP%'),0) as hargabulanlalu
            from productplant j
            join product k on k.productid=j.productid
            join sloc l on l.slocid=j.slocid
            join unitofmeasure m on m.unitofmeasureid=j.unitofissue
            join plant n on n.plantid=l.plantid
            join materialgroup o on o.materialgroupid=j.materialgroupid
            join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
            join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
            left join mgprocess r on r.mgprocessid = j.mgprocessid
            where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and r.mgprocessid <> 148
            and q.accountid in (".$row['accountid'].") and l.slocid = ".$row['slocid'].") zz
            where qtybulanini <> 0 or hargabulan <> 0 or qtybulanlalu <> 0 or hargabulanlalu <> 0
            group by materialgroupid
            order by description";
          
            $dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
            foreach($dataReader1 as $row1) {
              
                $totalfohmat = 0;
                $totalqty1mat = 0;
                $totalfohmat = 0;
                $totalfoh2mat = 0;
                $totalqty2mat = 0;
                //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
                $totalselisihmat = 0;
                $totalselisih1mat = 0;
              
                $fohcode = "select distinct a.fohcode
                          from fohulacc a
                          join sloc b ON b.slocid=a.slocid
                          join plant c ON c.plantid=b.plantid
                          join company d ON d.companyid=c.companyid
                          where a.recordstatus=1 and d.recordstatus = 1
                          and d.companyid = {$companyid} and b.slocid = {$row['slocid']}
                          and a.mgprocessid = {$row1['mgprocessid']}";
                $foh = Yii::app()->db->createCommand($fohcode)->queryScalar();
                
                $connection = Yii::app()->db;
                // $foh1 = "select getUL(57, '2021-01-01', '2021-01-31', '510103070801', 163, '594');"
                $foh1 = "select getUL({$plantid}, '".date(Yii::app()->params['datetodb'],strtotime($startdate))."', '".date(Yii::app()->params['datetodb'],strtotime($enddate))."', '{$foh}', {$row1['mgprocessid']}, {$row['slocid']})";
                $nilaifoh1 = $connection->createCommand($foh1)->queryScalar();
              
                $foh2 = "select getUL({$plantid}, '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."', '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-t')))."', '{$foh}', {$row1['mgprocessid']}, {$row['slocid']})";
                $nilaifoh2 = $connection->createCommand($foh2)->queryScalar();
                
                
                $i=0;
                $this->pdf->setFont('Arial','',10);
                $this->pdf->text(10,$this->pdf->gety()+5,'PROCESS');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row1['mgprocess']);
                $this->pdf->setFont('Arial','B',8);
                $this->pdf->sety($this->pdf->gety()+7);
                $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
                $this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
                $this->pdf->colheader = array('','','','Harga Barang','','');
                $this->pdf->RowHeader();
                $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
                $this->pdf->setwidths(array(10,60,12,23,23,25,23,23,25,15,25,15,23,15,23,5));
                $this->pdf->colheader = array('No','Nama Barang','Satuan','FOH Bln Ini','Qty Bln Ini','Total FOH','FOH Bln Lalu','Qty Bln Lalu','Selisih','%','Selisih Total');
                $this->pdf->RowHeader();
                $this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
              
                $sql2="select distinct b.productid,d.productname, e.uomcode,unitofmeasureid,b.slocid,
                -- ifnull((select cycletime from billofmaterial x where x.productid = b.productid and x.bomid = b.bomid),0) * sum(qtyoutput) as ct,
                (select ifnull(sum(qtyoutput),0)
                    from productoutput za
                    join productoutputfg zb on zb.productoutputid = za.productoutputid
                    join productplant zc on zc.productid = zb.productid and zc.slocid = zb.slocid and zc.unitofissue = zb.uomid
                    where c.mgprocessid = {$row1['mgprocessid']} and b.slocid IN ({$row['slocid']}) and za.recordstatus=3
                    and za.productoutputdate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'], strtotime($lastmonth2->format('Y-m-t')))."'
                    and zb.productid = b.productid) as qtyoutput2,
                    (select ifnull(sum(qtyoutput),0)
                    from productoutput za
                    join productoutputfg zb on zb.productoutputid = za.productoutputid
                    join productplant zc on zc.productid = zb.productid and zc.slocid = zb.slocid and zc.unitofissue = zb.uomid
                    where c.mgprocessid = {$row1['mgprocessid']} and b.slocid IN ({$row['slocid']}) and za.recordstatus=3
                    and za.productoutputdate between '".date(Yii::app()->params['datetodb'],strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                    and zb.productid = b.productid) as qtyoutput1,
                    ifnull((select cycletime from billofmaterial x where x.productid = b.productid and x.bomid = b.bomid),0) as ct
                from productoutput a
                join productoutputfg b on b.productoutputid = a.productoutputid
                join productplant c on c.productid = b.productid and c.slocid = b.slocid and c.unitofissue = b.uomid
                join product d on d.productid = c.productid
                join unitofmeasure e on e.unitofmeasureid = b.uomid
                where c.mgprocessid =  {$row1['mgprocessid']} and b.slocid IN ({$row['slocid']})
                and a.recordstatus=3
                and productoutputdate between '".date(Yii::app()->params['datetodb'], strtotime($firstmonth2->format('Y-m-d')))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."'
                order by productname asc";
              
                $dataReader2 = Yii::app()->db->createCommand($sql2)->queryAll();
                foreach($dataReader2 as $row2) {
                    //if($row2['hargabulanlalu']==0) {
                    if($row2['qtyoutput2']==0 || $nilaifoh2==0 || $row2['ct']==0) {
                        $percent = 0;
                    }
                    else {
                        $percent = (($nilaifoh1*$row2['ct'])-($nilaifoh2*$row2['ct'])) / (($nilaifoh2*$row2['ct']))*100;
                    }

                    $i+=1;
                    $this->pdf->setFont('Arial','',8);
                    $this->pdf->row(array(
                        $i,$row2['productname'],$row2['uomcode'],
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($nilaifoh1*$row2['ct'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qtyoutput1']),
                        //Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row2['qtybulanini']*$row2['qtybulanini'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($nilaifoh1*$row2['ct']*$row2['qtyoutput1'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($nilaifoh2*$row2['ct'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qtyoutput2']),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],(($nilaifoh1*$row2['ct'])-($nilaifoh2*$row2['ct']))/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$percent).' %',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],(($nilaifoh1*$row2['ct'])-($nilaifoh2*$row2['ct']))*$row2['qtyoutput1']/$per),
                    ));
                    
                    $totalfohmat += $nilaifoh1*$row2['ct'];
                    $totalqty1mat += $row2['qtyoutput1'];
                    $totalfohmat += $nilaifoh1*$row2['ct']*$row2['qtyoutput1'];
                    $totalfoh2mat += $nilaifoh2*$row2['ct'];
                    $totalqty2mat += $row2['qtyoutput2'];
                    //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
                    $totalselisihmat += ($nilaifoh1*$row2['ct'])-($nilaifoh2*$row2['ct']);
                    $totalselisih1mat += (($nilaifoh1*$row2['ct'])-($nilaifoh2*$row2['ct']))*$row2['qtyoutput1'];
                  
                    $totalfohsloc += $nilaifoh1*$row2['ct'];
                    $totalqty1sloc += $row2['qtyoutput1'];
                    $totalfohsloc += $nilaifoh1*$row2['ct']*$row2['qtyoutput1'];
                    $totalfoh2sloc += $nilaifoh2*$row2['ct'];
                    $totalqty2sloc += $row2['qtyoutput2'];
                    //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
                    $totalselisihsloc += ($nilaifoh1*$row2['ct'])-($nilaifoh2*$row2['ct']);
                    $totalselisih1sloc += (($nilaifoh1*$row2['ct'])-($nilaifoh2*$row2['ct']))*$row2['qtyoutput1'];
                  
                    $totalfoh += $nilaifoh1*$row2['ct'];
                    $totalqty1 += $row2['qtyoutput1'];
                    $totalfoh += $nilaifoh1*$row2['ct']*$row2['qtyoutput1'];
                    $totalfoh2 += $nilaifoh2*$row2['ct'];
                    $totalqty2 += $row2['qtyoutput2'];
                    //$totalupahmat2 += $nilaiul2*$row2['ct']*$row2['qtyoutput2'];
                    $totalselisih += ($nilaifoh1*$row2['ct'])-($nilaifoh2*$row2['ct']);
                    $totalselisih1 += (($nilaifoh1*$row2['ct'])-($nilaifoh2*$row2['ct']))*$row2['qtyoutput1'];
                }
                $this->pdf->setY($this->pdf->getY()+5);
                $this->pdf->setFont('Arial','B',8);
                $this->pdf->row(array(
                        '','TOTAL PROCESS : '.$row1['mgprocess'],'',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalfohmat/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty1mat),
                        //Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row2['qtybulanini']*$row2['qtybulanini'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalfohmat/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalfoh2mat/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty2mat),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisihmat/$per),
                        '',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisih1mat/$per)
                    ));
            }
            $this->pdf->setY($this->pdf->getY()+5);
            $this->pdf->setFont('Arial','B',9);
            $this->pdf->row(array(
                        '','TOTAL GUDANG : '.$row['sloccode'],'',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalfohsloc/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty1sloc),
                        //Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row2['qtybulanini']*$row2['qtybulanini'])/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalfohsloc/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalfoh2sloc/$per),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty2sloc),
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisihsloc/$per),
                        '',
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisih1sloc/$per)
                    ));
        }
         $this->pdf->setFont('Arial','B',9);
          $this->pdf->row(array(
                      '','GRAND TOTAL ','',
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalfoh/$per),
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty1),
                      //Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row2['qtybulanini']*$row2['qtybulanini'])/$per),
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalfoh/$per),
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalfoh2/$per),
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty2),
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisih/$per),
                      '',
                      Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalselisih1/$per)
                  ));
        $this->pdf->Output();
    }
	//33
	public function RekapPerbandinganHPPPenjualanPerKastaPerBarang($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select groupkastaid, groupname
						from (select e.productname,a.qty, k.groupkastaid, k.groupname
						from gidetail a
						join sodetail b on b.sodetailid=a.sodetailid
						join giheader c on c.giheaderid=a.giheaderid
						join soheader d on d.soheaderid=c.soheaderid
						join product e on e.productid=a.productid
						join sloc h on h.slocid=a.slocid
						join productplant i on i.productid=a.productid and i.slocid=a.slocid and i.unitofissue=a.unitofmeasureid
						join materialgroup j on j.materialgroupid=i.materialgroupid
                        left join groupkasta k on k.groupkastaid = j.groupkastaid
						where c.recordstatus=3 and d.companyid = ".$companyid." and k.groupkastaid is not null and e.productname like '%".$product."%'
						and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
						and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
						group by groupkastaid
						order by groupname ";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		$totalqty2=0; $totalhpp2=0; $totalinvoice2=0;
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perbandingan Nilai HPP dan Nilai Penjualan Per Kasta Per Barang';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		foreach($dataReader as $row)
		{
            $this->pdf->setFont('Arial','B',8);
            $this->pdf->text(10,$this->pdf->getY()+5,$row['groupname']);
            $this->pdf->setY($this->pdf->getY()+10);

            $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
            $this->pdf->setwidths(array(8,50,17,25,20,17,25,20,15));
            $this->pdf->colheader = array('No','Nama Barang','Qty','Total HPP','HPP/Unit','Qty','Total Jual','Jual/Unit','GM');
            $this->pdf->RowHeader();
            $this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R');
            $this->pdf->setY($this->pdf->getY());

			$sql1 = "select productname, sum(qty) as qty, sum(qty*buyprice) as nilaihpp, sum(amount) as nilaiinvoice,
		        ifnull((100-(sum(qty*buyprice)/sum(amount))*100),0) as gm, groupkastaid, groupname
		        from (select e.productname,a.qty,k.groupkastaid, k.groupname,
		        ifnull((select f.buyprice from productdetailhist f where f.productid=a.productid and f.slocid=a.slocid and f.unitofmeasureid=a.unitofmeasureid and f.storagebinid=a.storagebinid and f.referenceno=c.gino limit 1),0) as buyprice,
		        -- case when (select g.recordstatus from invoice g where g.giheaderid=c.giheaderid) = 3 then 
		        getamountdiscso(d.soheaderid,a.sodetailid,a.qty) 
		        -- else 0 end 
		        as amount
		        from gidetail a
		        join sodetail b on b.sodetailid=a.sodetailid
		        join giheader c on c.giheaderid=a.giheaderid
		        join soheader d on d.soheaderid=c.soheaderid
		        join product e on e.productid=a.productid
		        join sloc h on h.slocid=a.slocid
		        join productplant i on i.productid=a.productid and i.slocid=a.slocid and i.unitofissue=a.unitofmeasureid
		        join materialgroup j on j.materialgroupid=i.materialgroupid
                left join groupkasta k on k.groupkastaid = j.groupkastaid
		        where c.recordstatus=3 and d.companyid = ".$companyid." and e.productname like '%".$product."%'
		        and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
		        and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and j.groupkastaid = {$row['groupkastaid']}) z
		        group by productname
		        order by productname ";
            $dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
            $i = 0; $totalqty=0; $totalhpp=0; $totalinvoice=0;
            
            foreach($dataReader1 as $row1) {

                $i+=1;
			    $this->pdf->setFont('Arial','',8);
			    $this->pdf->row(array(
			    	$i,
                    $row1['productname'],
			    	Yii::app()->format->formatCurrency($row1['qty']),
			    	Yii::app()->format->formatCurrency($row1['nilaihpp']/$per),
			    	Yii::app()->format->formatCurrency(($row1['nilaihpp']/$row1['qty'])/$per),
			    	Yii::app()->format->formatCurrency($row1['qty']),
			    	Yii::app()->format->formatCurrency($row1['nilaiinvoice']/$per),
			    	Yii::app()->format->formatCurrency(($row1['nilaiinvoice']/$row1['qty'])/$per),
			    	Yii::app()->format->formatCurrency($row1['gm']),
			    ));
			    $totalqty += ($row1['qty']);
			    $totalhpp += ($row1['nilaihpp']/$per);
			    $totalinvoice += ($row1['nilaiinvoice']/$per);
            }

            $a = 0;$b = 0;$c = 0; $ag = 0;$bg = 0;$cg = 0;
            if ($totalqty != 0) {
            	$ag = $totalhpp / $totalqty;
            	$bg = $totalinvoice / $totalqty;
            }
            if ($totalinvoice != 0) {
            	$cg = $totalhpp/$totalinvoice;
            }

            $this->pdf->setFont('Arial','B',8);
            $this->pdf->row(array(
	            '',
                'TOTAL '.$row['groupname'],
	            Yii::app()->format->formatCurrency($totalqty),
	            Yii::app()->format->formatCurrency($totalhpp),
	            Yii::app()->format->formatCurrency($ag),
	            Yii::app()->format->formatCurrency($totalqty),
	            Yii::app()->format->formatCurrency($totalinvoice),
	            Yii::app()->format->formatCurrency($bg),
	            Yii::app()->format->formatCurrency(100-(($cg)*100)),
            ));
			
			$totalqty2 += $totalqty;
			$totalhpp2 += $totalhpp;
			$totalinvoice2 += $totalinvoice;
		}
		if ($totalqty2 != 0) {
			$a = $totalhpp2 / $totalqty2;
			$b = $totalinvoice2 / $totalqty2;
		}
		if ($totalinvoice2 != 0) {
			$c = $totalhpp2/$totalinvoice2;
		}
		
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'',
            'GRAND TOTAL',
			Yii::app()->format->formatCurrency($totalqty2),
			Yii::app()->format->formatCurrency($totalhpp2),
			Yii::app()->format->formatCurrency($a),
			Yii::app()->format->formatCurrency($totalqty2),
			Yii::app()->format->formatCurrency($totalinvoice2),
			Yii::app()->format->formatCurrency($b),
			Yii::app()->format->formatCurrency(100-(($c)*100)),
		));
		$this->pdf->Output();
	}
	//34
	public function RekapPerbandinganHPPPenjualanTahunLaluVSTahunIniPerBarang($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();

		$i=0;$totalqty=0;$totalhpp=0;$totalinvoice=0;
		$sql = "select productname, sum(qty) as qty, sum(qty*buyprice) as nilaihpp, sum(amount) as nilaiinvoice,
						ifnull((100-(sum(qty*buyprice)/sum(amount))*100),0) as gm
						from (select e.productname,a.qty,
						ifnull((select f.buyprice from productdetailhist f where f.productid=a.productid and f.slocid=a.slocid and f.unitofmeasureid=a.unitofmeasureid and f.storagebinid=a.storagebinid and f.referenceno=c.gino limit 1),0) as buyprice,
						-- case when (select g.recordstatus from invoice g where g.giheaderid=c.giheaderid) = 3 then 
						getamountdiscso(d.soheaderid,a.sodetailid,a.qty) 
						-- else 0 end 
						as amount
						from gidetail a
						join sodetail b on b.sodetailid=a.sodetailid
						join giheader c on c.giheaderid=a.giheaderid
						join soheader d on d.soheaderid=c.soheaderid
						join product e on e.productid=a.productid
						join sloc h on h.slocid=a.slocid
						join productplant i on i.productid=a.productid and i.slocid=a.slocid
						join materialgroup j on j.materialgroupid=i.materialgroupid
						where c.recordstatus=3 and d.companyid = ".$companyid." and e.productname like '%".$product."%'
						and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
						and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
						group by productname
						order by productname ";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perbandingan HPP dan Harga Jual Tahun Lalu VS Tahun Ini Per Barang';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(8,50,17,25,20,17,25,20,15));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Total HPP','HPP/Unit','Qty','Total Jual','Jual/Unit','GM');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R');

		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->setFont('Arial','',8);
			$this->pdf->row(array(
				$i,
        $row['productname'],
				Yii::app()->format->formatCurrency($row['qty']),
				Yii::app()->format->formatCurrency($row['nilaihpp']/$per),
				Yii::app()->format->formatCurrency(($row['nilaihpp']/$row['qty'])/$per),
				Yii::app()->format->formatCurrency($row['qty']),
				Yii::app()->format->formatCurrency($row['nilaiinvoice']/$per),
				Yii::app()->format->formatCurrency(($row['nilaiinvoice']/$row['qty'])/$per),
				Yii::app()->format->formatCurrency($row['gm']),
			));
			$totalqty += ($row['qty']);
			$totalhpp += ($row['nilaihpp']/$per);
			$totalinvoice += ($row['nilaiinvoice']/$per);
		}
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->setFont('Arial','B',8);
		$a = 0;$b = 0;$c = 0;
		if ($totalqty != 0) {
			$a = $totalhpp / $totalqty;
			$b = $totalinvoice / $totalqty;
		}
		if ($totalinvoice != 0) {
			$c = $totalhpp/$totalinvoice;
		}
		$this->pdf->row(array(
			'',
      'GRAND TOTAL',
			Yii::app()->format->formatCurrency($totalqty),
			Yii::app()->format->formatCurrency($totalhpp),
			Yii::app()->format->formatCurrency($a),
			Yii::app()->format->formatCurrency($totalqty),
			Yii::app()->format->formatCurrency($totalinvoice),
			Yii::app()->format->formatCurrency($b),
			Yii::app()->format->formatCurrency(100-(($c)*100)),
		));
		$this->pdf->Output();
	}
	//35
	public function RekapPersediaanPerCompany($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		if ($companyid == 0) {$com = "";} else {$com = " and z.companyid = ".$companyid." ";}
		
		$rec = Yii::app()->db->createCommand("select getwfmaxstatbywfname('appjournal')")->queryScalar();
		
		$sql = "select *,rm+wip+fg as total
					from (select z.companycode,nourut,
						IFNULL((SELECT sum(a.debit-a.credit)
						FROM genledger a
						JOIN genjournal b ON b.genjournalid=a.genjournalid
						WHERE b.recordstatus = {$rec} AND a.accountcode BETWEEN '11050102' AND '1105010299999999999999999999' AND b.companyid = z.companyid AND b.journaldate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'),0) AS rm,
						IFNULL((SELECT sum(a.debit-a.credit)
						FROM genledger a
						JOIN genjournal b ON b.genjournalid=a.genjournalid
						WHERE b.recordstatus = {$rec} AND a.accountcode BETWEEN '11050103' AND '1105010399999999999999999999' AND b.companyid = z.companyid AND b.journaldate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'),0) AS wip,
						IFNULL((SELECT sum(a.debit-a.credit)
						FROM genledger a
						JOIN genjournal b ON b.genjournalid=a.genjournalid
						WHERE b.recordstatus = {$rec} AND a.accountcode BETWEEN '11050101' AND '1105010199999999999999999999' AND b.companyid = z.companyid AND b.journaldate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'),0) AS fg,
						IFNULL((SELECT sum(a.debit-a.credit)
						FROM genledger a
						JOIN genjournal b ON b.genjournalid=a.genjournalid
						WHERE b.recordstatus = {$rec} AND a.accountcode BETWEEN '110501' AND '11050199999999999999999999' AND b.companyid = z.companyid AND b.journaldate <= concat(year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'),'-01-31')),0) AS lastyear
				from company z
				where z.recordstatus=1 and z.isgroup=1 {$com} order by nourut) z2 order by nourut
		";
		$dataReader = Yii::app()->db->createCommand($sql)->queryAll();
		
		$this->pdf->companyid = $companyid;

		$this->pdf->title='Rekap Persediaan Bahan Baku, Setengah Jadi & Barang Jadi';
		$this->pdf->subtitle='Sampai Tanggal: '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L',array(100,385));
		$this->pdf->AliasNbPages();

		$this->pdf->setFont('Arial','B',11);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(17,50,17,50,17,50,17,50,50,50));
		$this->pdf->colheader = array('Kode','Bahan Baku','%','Barang Setengah Jadi','%','Barang Jadi','%','Total','Total 31 Januari','Variance');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R','R');
		
		$totsd30=0;
		$totsd60=0;
		$totsd90=0;
		$totsd120=0;
		$totup120=0;
		
		foreach($dataReader as $row)
		{
			if($row['total'] > 0)
			{
				$percrm = $row['rm']/$row['total'];
				$percwip = $row['wip']/$row['total'];
				$percfg = $row['fg']/$row['total'];
			}
			else
			{
				$percrm = 0;
				$percwip = 0;
				$percfg = 0;
			}
			
			$this->pdf->setFont('Arial','',10);
			$this->pdf->row(array($row['companycode'],
					Yii::app()->format->formatCurrency($row['rm']/$per),
					Yii::app()->format->formatCurrency($percrm * 100),
					Yii::app()->format->formatCurrency($row['wip']/$per),
					Yii::app()->format->formatCurrency($percwip * 100),
					Yii::app()->format->formatCurrency($row['fg']/$per),
					Yii::app()->format->formatCurrency($percfg * 100),
					Yii::app()->format->formatCurrency($row['total']/$per),
					Yii::app()->format->formatCurrency($row['lastyear']/$per),
					Yii::app()->format->formatCurrency(($row['total']-$row['lastyear'])/$per),
			));
			
			$totrm += $row['rm']/$per;
			$totwip += $row['wip']/$per;
			$totfg += $row['fg']/$per;
			$totly += $row['lastyear']/$per;
			
			if($totrm+$totwip+$totfg > 0)
			{
				$pencrm = $totrm/($totrm+$totwip+$totfg);
				$pencwip = $totwip/($totrm+$totwip+$totfg);
				$pencfg = $totfg/($totrm+$totwip+$totfg);
			}
			else
			{
				$pencrm = 0;
				$pencwip = 0;
				$pencfg = 0;
			}
		}
			$this->pdf->setFont('Arial','B',10);
			$this->pdf->row(array('TOTAL ',
					Yii::app()->format->formatCurrency($totrm),
					Yii::app()->format->formatCurrency($pencrm * 100),
					Yii::app()->format->formatCurrency($totwip),
					Yii::app()->format->formatCurrency($pencwip * 100),
					Yii::app()->format->formatCurrency($totfg),
					Yii::app()->format->formatCurrency($pencfg * 100),
					Yii::app()->format->formatCurrency(($totrm+$totwip+$totfg)),
					Yii::app()->format->formatCurrency(($totly)),
					Yii::app()->format->formatCurrency(($totrm+$totwip+$totfg)-$totly),
			));
			
		 $this->pdf->checkPageBreak(0);
		$this->pdf->Output();
	}
	//36
	public function RekapPersediaanBarangNotMovingBBWIP($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
		from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-grr as keluar2
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%') zz
          where 
		  -- qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or 
		  qtyakhir <> 0 
		  -- or jumlahakhir <> 0 
          ) xa
          where keluar2=0 
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Persediaan Barang Not Moving BB / WIP';
		$this->pdf->subtitle='Dari Tgl : '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','Legal');
		
		foreach ($dataReader as $row)
		{
			$this->pdf->setFont('Arial','',10);
			$this->pdf->text(15,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(35,$this->pdf->gety()+5,': '.$row['sloccode']);
			$this->pdf->text(80,$this->pdf->gety()+5,'MATERIAL GROUP');$this->pdf->text(115,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->text(180,$this->pdf->gety()+5,'NAMA AKUN');$this->pdf->text(205,$this->pdf->gety()+5,': '.$row['accountname']);
			
			if ($storagebin == null)
			{$this->pdf->text(100,$this->pdf->gety()+5,'');$this->pdf->text(115,$this->pdf->gety()+5,'');}
			else
			{$this->pdf->text(100,$this->pdf->gety()+5,'RAK');$this->pdf->text(115,$this->pdf->gety()+5,': '.$storagebin);}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,61,38,61,38,38,5));
			$this->pdf->colheader = array('','','','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
			$this->pdf->RowHeader();
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(6,80,12,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','C','R','R','R','R','R','R','R','R','R','R','R','R','C');
			
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select * from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-grr as keluar2
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and l.slocid = ".$row['slocid']." and o.materialgroupid = ".$row['materialgroupid'].") zz
          where 
		  -- qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or 
		  qtyakhir <> 0 
		  -- or jumlahakhir <> 0 
          ) xa
          where keluar2=0 
          order by keluar2";
		$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			foreach ($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',6.5);
				$this->pdf->row(array(
					$i,$row1['productname'],$row1['uomcode'],
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyawal']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargaawal']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['jumlahawal']/$per)),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtymasuk']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahmasuk']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtytersedia']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['hargatersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahtersedia']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtykeluar']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahkeluar']/$per),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qtyakhir']),
					Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlahakhir']/$per),
					$row1['minus'],
				));
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;
			}
			$this->pdf->setFont('Arial','B',6.5);
			$this->pdf->setwidths(array(98,15,23,23,15,23,15,23,23,15,23,15,23,5));
			$this->pdf->coldetailalign = array('R','R','R','R','R','R','R','R','R','R','R','R','R','C');
			$this->pdf->row(array(
				'TOTAL '.$row['sloccode'].' - '.$row['description'].'      >>>>>',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia),'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir),'',
			));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkNewPage(175);
		}
		$this->pdf->setFont('Arial','BI',6.5);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,68,43,68,43,43,5));
		$this->pdf->colheader = array('','Awal','Penerimaan','Tersedia','Pengeluaran','Akhir','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(69,18,25,25,18,25,18,25,25,18,25,18,25,5));
		$this->pdf->colheader = array('Keterangan','Qty','Harga','Nilai','Qty','Nilai','Qty','Harga','Nilai','Qty','Nilai','Qty','Nilai','');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('C','R','R','R','R','R','R','R','R','R','R','R','R','C');
		$this->pdf->row(array(
			'GRAND TOTAL      >>>>>',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyawal2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiawal2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtymasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaimasuk2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtytersedia2),'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaitersedia2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtykeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaikeluar2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtyakhir2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$nilaiakhir2),'',
		));
		
		$this->pdf->Output();
	}
	//37
	public function RekapPerbandinganHPPPenjualanPerKastaPerGroupMaterial($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select groupkastaid, groupname
						from (select e.productname,a.qty, k.groupkastaid, k.groupname
						from gidetail a
						join sodetail b on b.sodetailid=a.sodetailid
						join giheader c on c.giheaderid=a.giheaderid
						join soheader d on d.soheaderid=c.soheaderid
						join product e on e.productid=a.productid
						join sloc h on h.slocid=a.slocid
						join productplant i on i.productid=a.productid and i.slocid=a.slocid and i.unitofissue=a.unitofmeasureid
						join materialgroup j on j.materialgroupid=i.materialgroupid
                        left join groupkasta k on k.groupkastaid = j.groupkastaid
						where c.recordstatus=3 and d.companyid = ".$companyid."
						and k.groupkastaid is not null
						and e.productname like '%".$product."%'
						and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
						and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
						group by groupkastaid
						order by groupname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
		$totalqty3 = 0; $totalhpp3 = 0; $totalinvoice3 = 0;
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perbandingan Nilai HPP dan Nilai Penjualan Per Kasta Per Group Material Per Barang';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		foreach($dataReader as $row)
		{
            $this->pdf->setFont('Arial','B',8);
            $this->pdf->text(10,$this->pdf->getY()+5,$row['groupname']);
            $this->pdf->setY($this->pdf->getY()+5);
			
			$sql1 = "select materialgroupid, description
							from (select e.productname,a.qty, j.materialgroupid, j.description, l.nourut
							from gidetail a
							join sodetail b on b.sodetailid=a.sodetailid
							join giheader c on c.giheaderid=a.giheaderid
							join soheader d on d.soheaderid=c.soheaderid
							join product e on e.productid=a.productid
							join sloc h on h.slocid=a.slocid
							join productplant i on i.productid=a.productid and i.slocid=a.slocid and i.unitofissue=a.unitofmeasureid
							join materialgroup j on j.materialgroupid=i.materialgroupid
							join materialgroup l on l.materialgroupid=j.parentmatgroupid
							left join groupkasta k on k.groupkastaid = j.groupkastaid
							where c.recordstatus=3 and k.groupkastaid = ".$row['groupkastaid']." and d.companyid = ".$companyid."
							and k.groupkastaid is not null
							and e.productname like '%".$product."%'
							and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
							and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by materialgroupid
							order by nourut
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty2 = 0; $totalhpp2 = 0; $totalinvoice2 = 0;
            
			foreach($dataReader1 as $row1)
			{
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->text(10,$this->pdf->getY()+5,$row1['description']);
				$this->pdf->setY($this->pdf->getY()+8);
				
				$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(8,50,17,25,20,17,25,20,15));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Total HPP','HPP/Unit','Qty','Total Jual','Jual/Unit','GM');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R');
				$this->pdf->setY($this->pdf->getY());

				$sql2 = "select productname, sum(qty) as qty, sum(qty*buyprice) as nilaihpp, sum(amount) as nilaiinvoice,
					ifnull((100-(sum(qty*buyprice)/sum(amount))*100),0) as gm
					from (select e.productname,a.qty,
					ifnull((select f.buyprice from productdetailhist f where f.productid=a.productid and f.slocid=a.slocid and f.unitofmeasureid=a.unitofmeasureid and f.storagebinid=a.storagebinid and f.referenceno=c.gino limit 1),0) as buyprice,
					-- case when (select g.recordstatus from invoice g where g.giheaderid=c.giheaderid) = 3 then 
					getamountdiscso(d.soheaderid,a.sodetailid,a.qty) 
					-- else 0 end 
					as amount
					from gidetail a
					join sodetail b on b.sodetailid=a.sodetailid
					join giheader c on c.giheaderid=a.giheaderid
					join soheader d on d.soheaderid=c.soheaderid
					join product e on e.productid=a.productid
					join sloc h on h.slocid=a.slocid
					join productplant i on i.productid=a.productid and i.slocid=a.slocid and i.unitofissue=a.unitofmeasureid
					join materialgroup j on j.materialgroupid=i.materialgroupid
					where c.recordstatus=3 and d.companyid = ".$companyid." and e.productname like '%".$product."%'
					and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
					and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' and j.groupkastaid = {$row['groupkastaid']} and j.materialgroupid = {$row1['materialgroupid']}) z
					group by productname
					order by productname ";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$i=0; $totalqty = 0; $totalhpp = 0; $totalinvoice = 0;
				
				foreach($dataReader2 as $row2)
				{
					$i+=1;
					$this->pdf->setFont('Arial','',8);
					$this->pdf->row(array(
						$i,
						$row2['productname'],
						Yii::app()->format->formatCurrency($row2['qty']),
						Yii::app()->format->formatCurrency($row2['nilaihpp']/$per),
						Yii::app()->format->formatCurrency(($row2['nilaihpp']/$row2['qty'])/$per),
						Yii::app()->format->formatCurrency($row2['qty']),
						Yii::app()->format->formatCurrency($row2['nilaiinvoice']/$per),
						Yii::app()->format->formatCurrency(($row2['nilaiinvoice']/$row2['qty'])/$per),
						Yii::app()->format->formatCurrency(100*$row2['gm']),
					));
					$totalqty += ($row2['qty']);
					$totalhpp += ($row2['nilaihpp']/$per);
					$totalinvoice += ($row2['nilaiinvoice']/$per);
				}

				$ag = 0; $bg = 0; $cg = 0;

				if ($totalqty != 0) {
					$ag = $totalhpp / $totalqty;
					$bg = $totalinvoice / $totalqty;
				}
				if ($totalinvoice != 0) {
					$cg = $totalhpp/$totalinvoice;
				}

				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'',
					'JUMLAH '.$row1['description'],
					Yii::app()->format->formatCurrency($totalqty),
					Yii::app()->format->formatCurrency($totalhpp),
					Yii::app()->format->formatCurrency($ag),
					Yii::app()->format->formatCurrency($totalqty),
					Yii::app()->format->formatCurrency($totalinvoice),
					Yii::app()->format->formatCurrency($bg),
					Yii::app()->format->formatCurrency(100-(($cg)*100)),
				));
				
				$totalqty2 += $totalqty;
				$totalhpp2 += $totalhpp;
				$totalinvoice2 += $totalinvoice;
			}
			$ag2 = 0; $bg2 = 0; $cg2 = 0;
			if ($totalqty2 != 0) {
				$ag2 = $totalhpp2 / $totalqty2;
				$bg2 = $totalinvoice2 / $totalqty2;
			}
			if ($totalinvoice2 != 0) {
				$cg2 = $totalhpp2/$totalinvoice2;
			}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
				'',
				'TOTAL '.$row['groupname'],
				Yii::app()->format->formatCurrency($totalqty2),
				Yii::app()->format->formatCurrency($totalhpp2),
				Yii::app()->format->formatCurrency($ag2),
				Yii::app()->format->formatCurrency($totalqty2),
				Yii::app()->format->formatCurrency($totalinvoice2),
				Yii::app()->format->formatCurrency($bg2),
				Yii::app()->format->formatCurrency(100-(($cg2)*100)),
			));
				
			$totalqty3 += $totalqty2;
			$totalhpp3 += $totalhpp2;
			$totalinvoice3 += $totalinvoice2;
		}
		$a = 0;$b = 0;$c = 0;
		if ($totalqty3 != 0) {
			$a = $totalhpp3 / $totalqty3;
			$b = $totalinvoice3 / $totalqty3;
		}
		if ($totalinvoice3 != 0) {
			$c = $totalhpp3/$totalinvoice3;
		}
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'',
            'GRAND TOTAL',
			Yii::app()->format->formatCurrency($totalqty3),
			Yii::app()->format->formatCurrency($totalhpp3),
			Yii::app()->format->formatCurrency($a),
			Yii::app()->format->formatCurrency($totalqty3),
			Yii::app()->format->formatCurrency($totalinvoice3),
			Yii::app()->format->formatCurrency($b),
			Yii::app()->format->formatCurrency(100-(($c)*100)),
		));
		$this->pdf->Output();
	}
	//38
	public function RekapPerbandinganHPPPenjualanReturPerKastaPerGroupMaterial($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct groupkastaid,groupname from
							(select distinct m.groupkastaid,m.groupname
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
							join materialgroup l on l.materialgroupid=j.materialgroupid
							join groupkasta m on m.groupkastaid=l.groupkastaid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
							union
							select distinct p.groupkastaid,p.groupname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							join groupkasta p on p.groupkastaid=o.groupkastaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
							)z
							order by groupname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
		$totalqty3 = 0; $totalhpp3 = 0; $totalinvoice3 = 0;
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perbandingan Nilai HPP dan Nilai Penjualan-Retur Per Kasta Per Group Material Per Barang';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		foreach($dataReader as $row)
		{
            $this->pdf->setFont('Arial','B',8);
            $this->pdf->text(10,$this->pdf->getY()+5,$row['groupname']);
            $this->pdf->setY($this->pdf->getY()+5);
			
			$sql1 = "select distinct materialgroupid,description from
							(select distinct l.materialgroupid,l.description,m.nourut
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
							join materialgroup l on l.materialgroupid=j.materialgroupid
							join materialgroup m on m.materialgroupid=l.parentmatgroupid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and l.groupkastaid = ".$row['groupkastaid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
							union
							select distinct o.materialgroupid,o.description,p.nourut
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							join materialgroup p on p.materialgroupid=o.parentmatgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and o.groupkastaid = ".$row['groupkastaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
							)z
							order by nourut
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty2 = 0; $totalhpp2 = 0; $totalinvoice2 = 0;
            
			foreach($dataReader1 as $row1)
			{
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->text(10,$this->pdf->getY()+5,$row1['description']);
				$this->pdf->setY($this->pdf->getY()+8);
				
				$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(8,50,17,25,20,17,25,20,15));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Total HPP','HPP/Unit','Qty','Total Jual','Jual/Unit','GM');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R');
				$this->pdf->setY($this->pdf->getY());

				$sql2 = "select productname,sum(qty) as qty,sum(netto) as nilaiinvoice, SUM(nilaihpp) as nilaihpp, ifnull((1-(SUM(nilaihpp)/SUM(netto))),0) as gm from 
							(select productname,sum(qty) as qty,sum(nett) as netto,SUM(hpp) AS nilaihpp from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							,(select m.buyprice*-m.qty FROM productdetailhist m WHERE m.gidetailid=ss.gidetailid AND m.qty<0) AS hpp
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
							join materialgroup l on l.materialgroupid=j.materialgroupid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and l.groupkastaid = ".$row['groupkastaid']." and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
							)z group by productname
							union
							select productname,-1*sum(qty) as qty,-1*sum(nett) as netto,SUM(hpp) AS nilaihpp from
							(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							,(select p.buyprice*-p.qty FROM productdetailhist p WHERE p.gireturdetailid=c.gireturdetailid) AS hpp
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and o.groupkastaid = ".$row['groupkastaid']." and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
							)z group by productname )zz 
							group by productname order by productname
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$i=0; $totalqty = 0; $totalhpp = 0; $totalinvoice = 0;
				
				foreach($dataReader2 as $row2)
				{
					if($row2['qty'] <> 0){$hargahpp = $row2['nilaihpp']/$row2['qty']; $hargajual = $row2['nilaiinvoice']/$row2['qty'];}else{$hargahpp = 0; $hargajual = 0;}
					$i+=1;
					$this->pdf->setFont('Arial','',8);
					$this->pdf->row(array(
						$i,
						$row2['productname'],
						Yii::app()->format->formatCurrency($row2['qty']),
						Yii::app()->format->formatCurrency($row2['nilaihpp']/$per),
						Yii::app()->format->formatCurrency(($hargahpp)/$per),
						Yii::app()->format->formatCurrency($row2['qty']),
						Yii::app()->format->formatCurrency($row2['nilaiinvoice']/$per),
						Yii::app()->format->formatCurrency(($hargajual)/$per),
						Yii::app()->format->formatCurrency(100*$row2['gm']),
					));
					$totalqty += ($row2['qty']);
					$totalhpp += ($row2['nilaihpp']/$per);
					$totalinvoice += ($row2['nilaiinvoice']/$per);
				}

				$ag = 0; $bg = 0; $cg = 0;

				if ($totalqty != 0) {
					$ag = $totalhpp / $totalqty;
					$bg = $totalinvoice / $totalqty;
				}
				if ($totalinvoice != 0) {
					$cg = $totalhpp/$totalinvoice;
				}

				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'',
					'JUMLAH '.$row1['description'],
					Yii::app()->format->formatCurrency($totalqty),
					Yii::app()->format->formatCurrency($totalhpp),
					Yii::app()->format->formatCurrency($ag),
					Yii::app()->format->formatCurrency($totalqty),
					Yii::app()->format->formatCurrency($totalinvoice),
					Yii::app()->format->formatCurrency($bg),
					Yii::app()->format->formatCurrency(100-(($cg)*100)),
				));
				
				$totalqty2 += $totalqty;
				$totalhpp2 += $totalhpp;
				$totalinvoice2 += $totalinvoice;
			}
			$ag2 = 0; $bg2 = 0; $cg2 = 0;
			if ($totalqty2 != 0) {
				$ag2 = $totalhpp2 / $totalqty2;
				$bg2 = $totalinvoice2 / $totalqty2;
			}
			if ($totalinvoice2 != 0) {
				$cg2 = $totalhpp2/$totalinvoice2;
			}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
				'',
				'TOTAL '.$row['groupname'],
				Yii::app()->format->formatCurrency($totalqty2),
				Yii::app()->format->formatCurrency($totalhpp2),
				Yii::app()->format->formatCurrency($ag2),
				Yii::app()->format->formatCurrency($totalqty2),
				Yii::app()->format->formatCurrency($totalinvoice2),
				Yii::app()->format->formatCurrency($bg2),
				Yii::app()->format->formatCurrency(100-(($cg2)*100)),
			));
				
			$totalqty3 += $totalqty2;
			$totalhpp3 += $totalhpp2;
			$totalinvoice3 += $totalinvoice2;
		}
		$a = 0;$b = 0;$c = 0;
		if ($totalqty3 != 0) {
			$a = $totalhpp3 / $totalqty3;
			$b = $totalinvoice3 / $totalqty3;
		}
		if ($totalinvoice3 != 0) {
			$c = $totalhpp3/$totalinvoice3;
		}
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'',
            'GRAND TOTAL',
			Yii::app()->format->formatCurrency($totalqty3),
			Yii::app()->format->formatCurrency($totalhpp3),
			Yii::app()->format->formatCurrency($a),
			Yii::app()->format->formatCurrency($totalqty3),
			Yii::app()->format->formatCurrency($totalinvoice3),
			Yii::app()->format->formatCurrency($b),
			Yii::app()->format->formatCurrency(100-(($c)*100)),
		));
		$this->pdf->Output();
	}
	//39
	public function RekapPerbandinganHPPPenjualanReturPerProvinsiPerZonaPerSubzonaPerCustomerPerMaterialgroup($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();

		$customer = '';
		$employee = '';
		$salesarea = '';
		$spvid = '';
		$isdisplay3='';
		$isdisplay2='';
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid3 = "";
        }  
        //,SUBSTRING_INDEX(marketname,'-','1') AS provinsi,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','2'),'-','-1') AS zona,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','3'),'-','-1') AS subzona
		$sql = "select distinct marketname from 
				(select a1.marketareaid,SUBSTRING_INDEX(a1.marketname,'-','1') AS marketname
				from marketarea a1
				where a1.marketareaid = 1
				union
				select distinct l.marketareaid,SUBSTRING_INDEX(l.marketname,'-','1') AS marketname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				join marketarea l on l.marketareaid=g.marketareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%'
				and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct n.marketareaid,SUBSTRING_INDEX(n.marketname,'-','1') AS marketname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				join marketarea n on n.marketareaid=k.marketareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%'
				and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by marketareaid
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perbandingan Nilai HPP dan Nilai Penjualan-Retur Per Provinsi Per Zona Per Subzona Per Customer Per Material Group';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P',array(305,431.357));
		   
		if(isset($spv) && $spv!='')
		{                
		  $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
		  $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

		  $this->pdf->SetFont('Arial','B',10);
		  $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
		  $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
		  $this->pdf->sety($this->pdf->gety()+5);
		}
		
		$totalqty5=0;$totalhpp5=0;$totalinvoice5=0;
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',15);
			$this->pdf->text(10,$this->pdf->gety()+5,'PROVINSI : '.$row['marketname']);
			$this->pdf->sety($this->pdf->gety()+6);
			$sql1 = "select distinct marketname from 
					(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') AS marketname
					from marketarea a1
					where a1.marketareaid = 1
					and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') AS marketname
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join employee f on f.employeeid = b.employeeid
			  join addressbook g on g.addressbookid = b.addressbookid  
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
					join invoice j on j.giheaderid = h.giheaderid
			join salesarea k on k.salesareaid = g.salesareaid
					join marketarea l on l.marketareaid=g.marketareaid
					where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
					and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
					and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
					and j.invoiceno is not null and invoiceno not like '%-%-%'
					and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') AS marketname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join marketarea n on n.marketareaid=k.marketareaid
					where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
					and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
					and i.productname like '%".$product."%'
					and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
					)z order by marketareaid
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty4=0;$totalhpp4=0;$totalinvoice4=0;
	
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','B',13);
				$this->pdf->text(15,$this->pdf->gety()+5,'ZONA : '.$row1['marketname']);
				$this->pdf->sety($this->pdf->gety()+6);
				
				$sql2 = "select distinct marketname from 
						(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','3'),'-','-1') AS marketname
						from marketarea a1
						where a1.marketareaid = 1
						and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') AS marketname
						from soheader b
						join sodetail c on c.soheaderid = b.soheaderid
						join gidetail d on d.sodetailid = c.sodetailid
						join product e on e.productid = d.productid
						join employee f on f.employeeid = b.employeeid
					join addressbook g on g.addressbookid = b.addressbookid  
						join giheader h on h.giheaderid = d.giheaderid
						join sloc i on i.slocid = d.slocid
						join invoice j on j.giheaderid = h.giheaderid
					join salesarea k on k.salesareaid = g.salesareaid
						join marketarea l on l.marketareaid=g.marketareaid
						where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
						and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
						and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
						and j.invoiceno is not null and invoiceno not like '%-%-%'
						and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') AS marketname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join marketarea n on n.marketareaid=k.marketareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%'
						and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						)z order by marketareaid
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$totalqty3=0;$totalhpp3=0;$totalinvoice3=0;
				
				foreach($dataReader2 as $row2)
				{	
					$this->pdf->SetFont('Arial','B',12);
					$this->pdf->text(20,$this->pdf->gety()+5,'SUB ZONA : '.$row2['marketname']);
					$this->pdf->sety($this->pdf->gety()+6);
					
					$sql3 = "select distinct addressbookid,fullname from 
							(select distinct g.addressbookid,g.fullname
							from soheader b
							join sodetail c on c.soheaderid = b.soheaderid
							join gidetail d on d.sodetailid = c.sodetailid
							join product e on e.productid = d.productid
							join employee f on f.employeeid = b.employeeid
						join addressbook g on g.addressbookid = b.addressbookid  
							join giheader h on h.giheaderid = d.giheaderid
							join sloc i on i.slocid = d.slocid
							join invoice j on j.giheaderid = h.giheaderid
						join salesarea k on k.salesareaid = g.salesareaid
							join marketarea l on l.marketareaid=g.marketareaid
							where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
							and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
							and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
							and j.invoiceno is not null and invoiceno not like '%-%-%'
							and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
							union
							select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join marketarea n on n.marketareaid=k.marketareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%'
							and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
							)z order by fullname
					";
					$dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();
					
					$totalqty2=0;$totalhpp2=0;$totalinvoice2=0;
					
					foreach($dataReader3 as $row3)
					{
						$this->pdf->SetFont('Arial','B',11);
						$this->pdf->text(25,$this->pdf->gety()+5,'CUSTOMER : '.$row3['fullname']);
						$this->pdf->sety($this->pdf->gety()+6);
						
						$sql4 = "select distinct materialgroupid,description
								,sum(nett) as netto
								from (select ax.materialgroupid,ax.description
								,sum(ifnull((select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty) from gidetail zzb join sodetail zza on zza.sodetailid = zzb.sodetailid where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid),0)) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = ss.productid and j.slocid=ss.slocid and j.unitofissue=ss.unitofmeasureid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								join marketarea az on az.marketareaid=d.marketareaid
								join materialgroup ax on ax.materialgroupid=j.materialgroupid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
								and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
								and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
								and d.addressbookid = '".$row3['addressbookid']."'
								and a.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								group by materialgroupid
								union
								select ax.materialgroupid,ax.description
								,sum(ifnull(a.qty*a.price,0)) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
								join marketarea az on az.marketareaid=k.marketareaid
								join materialgroup ax on ax.materialgroupid=n.materialgroupid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%'
								and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
								and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
								and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
								and k.addressbookid = '".$row3['addressbookid']."'
								and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								group by materialgroupid
								) zz
								group by materialgroupid
								order by description
						";
						$dataReader4=Yii::app()->db->createCommand($sql4)->queryAll();
						
						$totalqty1=0;$totalhpp1=0;$totalinvoice1=0;
						
						foreach($dataReader4 as $row4)
						{
							$this->pdf->SetFont('Arial','B',10);
							$this->pdf->text(30,$this->pdf->gety()+5,'MATERIAL GROUP : '.$row4['description']);
							$this->pdf->sety($this->pdf->gety()+5);
							
							$sql5 = "select productname,sum(qty) as qty,sum(netto) as nilaiinvoice, SUM(nilaihpp) as nilaihpp, ifnull((1-(SUM(nilaihpp)/SUM(netto))),0) as gm from 
									(select productname,sum(qty) as qty,sum(nett) as netto,SUM(hpp) AS nilaihpp from
									(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
									(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
									(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
									(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
									from gidetail zzb 
									join sodetail zza on zza.sodetailid = zzb.sodetailid
									where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
									,(select m.buyprice*-m.qty FROM productdetailhist m WHERE m.gidetailid=ss.gidetailid AND m.qty<0) AS hpp
									from invoice a 
									join giheader b on b.giheaderid = a.giheaderid
									join soheader c on c.soheaderid = b.soheaderid
									join addressbook d on d.addressbookid = c.addressbookid
									join employee e on e.employeeid = c.employeeid
									join salesarea f on f.salesareaid = d.salesareaid
									join sodetail g on g.soheaderid = b.soheaderid
									join gidetail ss on ss.giheaderid = b.giheaderid
									join sloc h on h.slocid = ss.slocid
									join product i on i.productid = ss.productid
									join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
									join materialgroup l on l.materialgroupid=j.materialgroupid
									join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
									join marketarea az on az.marketareaid=d.marketareaid
									where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
									c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
									e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%'
								-- and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
								-- and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
								-- and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
								and d.addressbookid = '".$row3['addressbookid']."'
								and l.materialgroupid = '".$row4['materialgroupid']."'
									and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
									and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
									)z group by productname
									union
									select productname,-1*sum(qty) as qty,-1*sum(nett) as netto,SUM(hpp) AS nilaihpp from
									(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
									,(select p.buyprice*-p.qty FROM productdetailhist p WHERE p.gireturdetailid=c.gireturdetailid) AS hpp
									from notagirpro a
									join notagir b on b.notagirid=a.notagirid
									join gireturdetail c on c.gireturdetailid=a.gireturdetailid
									join giretur d on d.gireturid=b.gireturid
									join gidetail e on e.gidetailid=c.gidetailid
									join giheader f on f.giheaderid=d.giheaderid
									join sodetail g on g.sodetailid=e.sodetailid
									join soheader h on h.soheaderid=f.soheaderid
									join product i on i.productid = a.productid
									join sloc j on j.slocid = a.slocid
									join addressbook k on k.addressbookid = h.addressbookid
									join employee l on l.employeeid = h.employeeid
									join salesarea m on m.salesareaid = k.salesareaid
									join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
									join materialgroup o on o.materialgroupid=n.materialgroupid
									join unitofmeasure p on p.unitofmeasureid = a.uomid
									join marketarea az on az.marketareaid=k.marketareaid
									where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
									and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
									and i.productname like '%".$product."%'
								-- and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
								-- and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
								-- and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
								and k.addressbookid = '".$row3['addressbookid']."'
								and o.materialgroupid = '".$row4['materialgroupid']."'
									and d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
									)z group by productname )zz 
									group by productname order by productname
							";
							$dataReader5=Yii::app()->db->createCommand($sql5)->queryAll();
							
							
							$this->pdf->sety($this->pdf->gety()+3);
							//$this->pdf->setY($this->pdf->getY()+8);
							
							$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
							$this->pdf->setwidths(array(8,100,22,32,27,22,32,27,15));
							$this->pdf->colheader = array('No','Nama Barang','Qty','Total HPP','HPP/Unit','Qty','Total Jual','Jual/Unit','GM');
							$this->pdf->RowHeader();
							$this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R');
							$this->pdf->setY($this->pdf->getY());
							
							$i=0;$totalqty=0;$totalhpp=0;$totalinvoice=0;
										
							foreach($dataReader5 as $row5)
							{
								//$this->pdf->sety($this->pdf->gety()+5);
								if($row5['qty'] <> 0){$hargahpp = $row5['nilaihpp']/$row5['qty']; $hargajual = $row5['nilaiinvoice']/$row5['qty'];}else{$hargahpp = 0; $hargajual = 0;}
								$i+=1;
								$this->pdf->setFont('Arial','',8);
								$this->pdf->row(array(
									$i,
									$row5['productname'],
									Yii::app()->format->formatCurrency($row5['qty']),
									Yii::app()->format->formatCurrency($row5['nilaihpp']/$per),
									Yii::app()->format->formatCurrency(($hargahpp)/$per),
									Yii::app()->format->formatCurrency($row5['qty']),
									Yii::app()->format->formatCurrency($row5['nilaiinvoice']/$per),
									Yii::app()->format->formatCurrency(($hargajual)/$per),
									Yii::app()->format->formatCurrency(100*$row5['gm']),
								));
								$totalqty += ($row5['qty']);
								$totalhpp += ($row5['nilaihpp']/$per);
								$totalinvoice += ($row5['nilaiinvoice']/$per);
								
								$this->pdf->checkPageBreak(5);
							}
							$ag = 0; $bg = 0; $cg = 0;
							if ($totalqty != 0) {
								$ag = $totalhpp / $totalqty;
								$bg = $totalinvoice / $totalqty;
							}
							if ($totalinvoice != 0) {
								$cg = $totalhpp/$totalinvoice;
							}
							
							$this->pdf->setFont('Arial','B',9);
							$this->pdf->row(array(
								'',
								'TOTAL MG '.$row4['description'],
								Yii::app()->format->formatCurrency($totalqty),
								Yii::app()->format->formatCurrency($totalhpp),
								Yii::app()->format->formatCurrency($ag),
								Yii::app()->format->formatCurrency($totalqty),
								Yii::app()->format->formatCurrency($totalinvoice),
								Yii::app()->format->formatCurrency($bg),
								Yii::app()->format->formatCurrency(100-(($cg)*100)),
							));
							$totalqty1 += $totalqty;
							$totalhpp1 += $totalhpp;
							$totalinvoice1 += $totalinvoice;
							//$this->pdf->checkPageBreak(20);
						}
						if ($totalinvoice1 != 0) {
							$cg1 = $totalhpp1/$totalinvoice1;
						}
						
						$this->pdf->setFont('Arial','B',9);
						$this->pdf->row(array(
							'',
							'TOTAL CUSTOMER '.$row3['fullname'],
							Yii::app()->format->formatCurrency($totalqty1),
							Yii::app()->format->formatCurrency($totalhpp1),
							'',
							Yii::app()->format->formatCurrency($totalqty1),
							Yii::app()->format->formatCurrency($totalinvoice1),
							'',
							Yii::app()->format->formatCurrency(100-(($cg1)*100)),
						));
						$totalqty2 += $totalqty1;
						$totalhpp2 += $totalhpp1;
						$totalinvoice2 += $totalinvoice1;
						//$this->pdf->checkPageBreak(20);
					}
					if ($totalinvoice2 != 0) {
						$cg2 = $totalhpp2/$totalinvoice2;
					}
					
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
						'',
						'TOTAL SUB ZONA '.$row2['marketname'],
						Yii::app()->format->formatCurrency($totalqty2),
						Yii::app()->format->formatCurrency($totalhpp2),
						'',
						Yii::app()->format->formatCurrency($totalqty2),
						Yii::app()->format->formatCurrency($totalinvoice2),
						'',
						Yii::app()->format->formatCurrency(100-(($cg2)*100)),
					));
					$totalqty3 += $totalqty2;
					$totalhpp3 += $totalhpp2;
					$totalinvoice3 += $totalinvoice2;
					//$this->pdf->checkPageBreak(20);	
				}
				if ($totalinvoice3 != 0) {
					$cg3 = $totalhpp3/$totalinvoice3;
				}
				
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
					'',
					'TOTAL ZONA '.$row1['marketname'],
					Yii::app()->format->formatCurrency($totalqty3),
					Yii::app()->format->formatCurrency($totalhpp3),
					'',
					Yii::app()->format->formatCurrency($totalqty3),
					Yii::app()->format->formatCurrency($totalinvoice3),
					'',
					Yii::app()->format->formatCurrency(100-(($cg3)*100)),
				));
				$totalqty4 += $totalqty3;
				$totalhpp4 += $totalhpp3;
				$totalinvoice4 += $totalinvoice3;
				//$this->pdf->checkPageBreak(20);
			}
			if ($totalinvoice4 != 0) {
				$cg4 = $totalhpp4/$totalinvoice4;
			}
			
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'',
				'TOTAL PROVINSI '.$row['marketname'],
				Yii::app()->format->formatCurrency($totalqty4),
				Yii::app()->format->formatCurrency($totalhpp4),
				'',
				Yii::app()->format->formatCurrency($totalqty4),
				Yii::app()->format->formatCurrency($totalinvoice4),
				'',
				Yii::app()->format->formatCurrency(100-(($cg4)*100)),
			));
			$totalqty5 += $totalqty4;
			$totalhpp5 += $totalhpp4;
			$totalinvoice5 += $totalinvoice4;
			$this->pdf->checkPageBreak(350);
		}
		if ($totalinvoice5 != 0) {
			$cg5 = $totalhpp5/$totalinvoice5;
		}
		
		$this->pdf->setFont('Arial','B',10);
		$this->pdf->row(array(
			'',
			'GRAND TOTAL ',
			Yii::app()->format->formatCurrency($totalqty5),
			Yii::app()->format->formatCurrency($totalhpp5),
			'',
			Yii::app()->format->formatCurrency($totalqty5),
			Yii::app()->format->formatCurrency($totalinvoice5),
			'',
			Yii::app()->format->formatCurrency(100-(($cg5)*100)),
		));
		$this->pdf->Output();
	}
	//40
	public function RekapPotensiPenjualanReturPelunasanGMPerCustomer($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();

		$customer = '';
		$employee = '';
		$salesarea = '';
		$spvid = '';
		$isdisplay3='';
		$isdisplay2='';
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid3 = "";
        }  
        //,SUBSTRING_INDEX(marketname,'-','1') AS provinsi,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','2'),'-','-1') AS zona,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','3'),'-','-1') AS subzona
		$sql = "select a.customertypeid,a.customertypename
				from customertype a
				where a.recordstatus = 1
				order by a.customertypeid desc
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Potensi Market, Penjualan - Retur, Pembayaran, & GM Per Tipe Per Kategori Per Customer';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P',array(216,305.485));
		   
		if(isset($spv) && $spv!='')
		{                
		  $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
		  $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

		  $this->pdf->SetFont('Arial','B',10);
		  $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
		  $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
		  $this->pdf->sety($this->pdf->gety()+5);
		}
		
		$totalpotensi=0;$totalinvoice=0;$totalhpp=0;$totalpayamount=0;
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',14);
			$this->pdf->text(10,$this->pdf->gety()+5,'TIPE CUSTOMER : '.$row['customertypename']);
			$this->pdf->sety($this->pdf->gety()+6);
			$sql1 = "select a.custcategoryid,a.custcategoryname
					from custcategory a
					where a.recordstatus = 1
					order by a.custcategoryid asc
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalpotensi1=0;$totalinvoice1=0;$totalhpp1=0;$totalpayamount1=0;
	
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','B',12);
				$this->pdf->text(15,$this->pdf->gety()+5,'KATEGORI CUSTOMER : '.$row1['custcategoryname']);
				$this->pdf->sety($this->pdf->gety()+6);
				
				$sql2 = "SELECT *,if(nilaiinvoice=0,0,100*(1-(nilaihpp/nilaiinvoice))) AS gm,if(potensi=0,0,100*(nilaiinvoice/potensi)) as perpotensi,if(nilaiinvoice=0,0,100*(payamount/nilaiinvoice)) as perpayamount
						FROM (select addressbookid,fullname,customertypeid,custcategoryid
						,IFNULL((select sum(netto) as nilaiinvoice
						FROM (
						select addressbookid,customertypeid,custcategoryid,fullname,sum(nett) as netto
						FROM (select DISTINCT d3.addressbookid,d3.customertypeid,d3.custcategoryid,d3.fullname,ss3.gidetailid,
						(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty) from gidetail zzb join sodetail zza on zza.sodetailid = zzb.sodetailid where zzb.giheaderid = b3.giheaderid and zzb.productid = i3.productid and zzb.gidetailid=ss3.gidetailid) as nett
						from invoice a3
						join giheader b3 ON b3.giheaderid = a3.giheaderid
						join soheader c3 ON c3.soheaderid = b3.soheaderid
						join addressbook d3 ON d3.addressbookid = c3.addressbookid
						join employee e3 ON e3.employeeid = c3.employeeid
						join salesarea f3 ON f3.salesareaid = d3.salesareaid
						join sodetail g3 ON g3.soheaderid = b3.soheaderid
						join gidetail ss3 on ss3.giheaderid = b3.giheaderid
						join sloc h3 on h3.slocid = ss3.slocid
						join product i3 on i3.productid = ss3.productid
						join productplant j3 on j3.productid = i3.productid and j3.slocid=g3.slocid and j3.unitofissue=ss3.unitofmeasureid
						join materialgroup l3 on l3.materialgroupid=j3.materialgroupid
						join unitofmeasure k3 on k3.unitofmeasureid = ss3.unitofmeasureid
						join marketarea az3 on az3.marketareaid=d3.marketareaid
						where a3.recordstatus = 3 and a3.invoiceno is not null and invoiceno not like '%-%-%' and c3.companyid = ".$companyid." and h3.sloccode like '%".$sloc."%' and d3.fullname like '%".$customer."%' and e3.fullname like '%".$employee."%' and f3.areaname like '%".$salesarea."%' and i3.productname like '%".$product."%'
						and a3.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)z group by addressbookid
						UNION
						select addressbookid,customertypeid,custcategoryid,fullname,-1*sum(nett) as netto from
						(select DISTINCT k4.addressbookid,k4.customertypeid,k4.custcategoryid,k4.fullname,a4.notagirproid,(a4.qty*a4.price) as nett
						from notagirpro a4
						join notagir b4 on b4.notagirid=a4.notagirid
						join gireturdetail c4 on c4.gireturdetailid=a4.gireturdetailid
						join giretur d4 on d4.gireturid=b4.gireturid
						join gidetail e4 on e4.gidetailid=c4.gidetailid
						join giheader f4 on f4.giheaderid=d4.giheaderid
						join sodetail g4 on g4.sodetailid=e4.sodetailid
						join soheader h4 on h4.soheaderid=f4.soheaderid
						join product i4 on i4.productid = a4.productid
						join sloc j4 on j4.slocid = a4.slocid
						join addressbook k4 on k4.addressbookid = h4.addressbookid
						join employee l4 on l4.employeeid = h4.employeeid
						join salesarea m4 on m4.salesareaid = k4.salesareaid
						join productplant n4 on n4.productid=a4.productid and n4.slocid=a4.slocid and n4.unitofissue=a4.uomid
						join materialgroup o4 on o4.materialgroupid=n4.materialgroupid
						join unitofmeasure p4 on p4.unitofmeasureid = a4.uomid
						join marketarea az4 on az4.marketareaid=k4.marketareaid
						where h4.companyid = ".$companyid." and b4.recordstatus = 3 and j4.sloccode like '%".$sloc."%' and k4.fullname like '%".$customer."%' and l4.fullname like '%".$employee."%' and m4.areaname like '%".$salesarea."%' and i4.productname like '%".$product."%'
						and d4.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						) z2 group by addressbookid
						) zz2
						WHERE zz2.addressbookid = zz3.addressbookid),0) AS nilaiinvoice
						,IFNULL((select sum(nilaihpp) as nilaihpp
						FROM (
						select addressbookid,customertypeid,custcategoryid,fullname,sum(hpp) as nilaihpp
						FROM (select DISTINCT d1.addressbookid,d1.customertypeid,d1.custcategoryid,d1.fullname,ss1.gidetailid,
						(select m1.buyprice*-m1.qty FROM productdetailhist m1 WHERE m1.gidetailid=ss1.gidetailid AND m1.qty<0) AS hpp
						from invoice a1
						join giheader b1 ON b1.giheaderid = a1.giheaderid
						join soheader c1 ON c1.soheaderid = b1.soheaderid
						join addressbook d1 ON d1.addressbookid = c1.addressbookid
						join employee e1 ON e1.employeeid = c1.employeeid
						join salesarea f1 ON f1.salesareaid = d1.salesareaid
						join sodetail g1 ON g1.soheaderid = b1.soheaderid
						join gidetail ss1 on ss1.giheaderid = b1.giheaderid
						join sloc h1 on h1.slocid = ss1.slocid
						join product i1 on i1.productid = ss1.productid
						join productplant j1 on j1.productid = i1.productid and j1.slocid=g1.slocid and j1.unitofissue=ss1.unitofmeasureid
						join materialgroup l1 on l1.materialgroupid=j1.materialgroupid
						join unitofmeasure k1 on k1.unitofmeasureid = ss1.unitofmeasureid
						join marketarea az1 on az1.marketareaid=d1.marketareaid
						where a1.recordstatus = 3 and a1.invoiceno is not null and a1.invoiceno not like '%-%-%' and c1.companyid = ".$companyid." and h1.sloccode like '%".$sloc."%' and d1.fullname like '%".$customer."%' and e1.fullname like '%".$employee."%' and f1.areaname like '%".$salesarea."%' and i1.productname like '%".$product."%'
						and a1.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)z group by addressbookid
						UNION
						select addressbookid,customertypeid,custcategoryid,fullname,sum(hpp) as nilaihpp from
						(select DISTINCT k2.addressbookid,k2.customertypeid,k2.custcategoryid,k2.fullname,a2.notagirproid,(select p2.buyprice*-p2.qty FROM productdetailhist p2 WHERE p2.gireturdetailid=c2.gireturdetailid) AS hpp
						from notagirpro a2
						join notagir b2 on b2.notagirid=a2.notagirid
						join gireturdetail c2 on c2.gireturdetailid=a2.gireturdetailid
						join giretur d2 on d2.gireturid=b2.gireturid
						join gidetail e2 on e2.gidetailid=c2.gidetailid
						join giheader f2 on f2.giheaderid=d2.giheaderid
						join sodetail g2 on g2.sodetailid=e2.sodetailid
						join soheader h2 on h2.soheaderid=f2.soheaderid
						join product i2 on i2.productid = a2.productid
						join sloc j2 on j2.slocid = a2.slocid
						join addressbook k2 on k2.addressbookid = h2.addressbookid
						join employee l2 on l2.employeeid = h2.employeeid
						join salesarea m2 on m2.salesareaid = k2.salesareaid
						join productplant n2 on n2.productid=a2.productid and n2.slocid=a2.slocid and n2.unitofissue=a2.uomid
						join materialgroup o2 on o2.materialgroupid=n2.materialgroupid
						join unitofmeasure p2 on p2.unitofmeasureid = a2.uomid
						join marketarea az2 on az2.marketareaid=k2.marketareaid
						where h2.companyid = ".$companyid." and b2.recordstatus = 3 and j2.sloccode like '%".$sloc."%' and k2.fullname like '%".$customer."%' and l2.fullname like '%".$employee."%' and m2.areaname like '%".$salesarea."%' and i2.productname like '%".$product."%'
						and d2.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						) z1 group by addressbookid
						) zz1
						WHERE zz1.addressbookid = zz3.addressbookid),0) AS nilaihpp,
						ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)
						-- +ifnull(f.returnamount,0)
						+ifnull(f.obamount,0)
						)*ifnull(f.currencyrate,0))
						from cutarinv f
						join cutar g on g.cutarid=f.cutarid
						join invoice h on h.invoiceid=f.invoiceid
						join giheader i on i.giheaderid=h.giheaderid
						join soheader j on j.soheaderid=i.soheaderid
						where g.recordstatus=3 and g.companyid = ".$companyid." and g.docdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and j.addressbookid = zz3.addressbookid),0) as payamount
						,ifnull((select sum(a.amount) from addresspotensi a where a.addressbookid=zz3.addressbookid),0) as potensi
						FROM (
						select addressbookid,customertypeid,custcategoryid,fullname
						FROM (select DISTINCT d5.addressbookid,d5.customertypeid,d5.custcategoryid,d5.fullname,ss5.gidetailid
						from invoice a5
						join giheader b5 ON b5.giheaderid = a5.giheaderid
						join soheader c5 ON c5.soheaderid = b5.soheaderid
						join addressbook d5 ON d5.addressbookid = c5.addressbookid
						join employee e5 ON e5.employeeid = c5.employeeid
						join salesarea f5 ON f5.salesareaid = d5.salesareaid
						join sodetail g5 ON g5.soheaderid = b5.soheaderid
						join gidetail ss5 on ss5.giheaderid = b5.giheaderid
						join sloc h5 on h5.slocid = ss5.slocid
						join product i5 on i5.productid = ss5.productid
						join productplant j5 on j5.productid = i5.productid and j5.slocid=g5.slocid and j5.unitofissue=ss5.unitofmeasureid
						join materialgroup l5 on l5.materialgroupid=j5.materialgroupid
						join unitofmeasure k5 on k5.unitofmeasureid = ss5.unitofmeasureid
						join marketarea az5 on az5.marketareaid=d5.marketareaid
						where a5.recordstatus = 3 and a5.invoiceno is not null and invoiceno not like '%-%-%' and c5.companyid = ".$companyid." and h5.sloccode like '%".$sloc."%' and d5.fullname like '%".$customer."%' and e5.fullname like '%".$employee."%' and f5.areaname like '%".$salesarea."%' and i5.productname like '%".$product."%'
						and a5.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)z group by addressbookid
						UNION
						select addressbookid,customertypeid,custcategoryid,fullname from
						(select DISTINCT k6.addressbookid,k6.customertypeid,k6.custcategoryid,k6.fullname,a6.notagirproid
						from notagirpro a6
						join notagir b6 on b6.notagirid=a6.notagirid
						join gireturdetail c6 on c6.gireturdetailid=a6.gireturdetailid
						join giretur d6 on d6.gireturid=b6.gireturid
						join gidetail e6 on e6.gidetailid=c6.gidetailid
						join giheader f6 on f6.giheaderid=d6.giheaderid
						join sodetail g6 on g6.sodetailid=e6.sodetailid
						join soheader h6 on h6.soheaderid=f6.soheaderid
						join product i6 on i6.productid = a6.productid
						join sloc j6 on j6.slocid = a6.slocid
						join addressbook k6 on k6.addressbookid = h6.addressbookid
						join employee l6 on l6.employeeid = h6.employeeid
						join salesarea m6 on m6.salesareaid = k6.salesareaid
						join productplant n6 on n6.productid=a6.productid and n6.slocid=a6.slocid and n6.unitofissue=a6.uomid
						join materialgroup o6 on o6.materialgroupid=n6.materialgroupid
						join unitofmeasure p6 on p6.unitofmeasureid = a6.uomid
						join marketarea az6 on az6.marketareaid=k6.marketareaid
						where h6.companyid = ".$companyid." and b6.recordstatus = 3 and j6.sloccode like '%".$sloc."%' and k6.fullname like '%".$customer."%' and l6.fullname like '%".$employee."%' and m6.areaname like '%".$salesarea."%' and i6.productname like '%".$product."%'
						and d6.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						) z3 group by addressbookid
						) zz3
						) z4
						WHERE z4.customertypeid = ".$row['customertypeid']." and z4.custcategoryid = ".$row1['custcategoryid']."
						order BY z4.fullname
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
							
				$this->pdf->sety($this->pdf->gety()+3);
				//$this->pdf->setY($this->pdf->getY()+8);
				
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->colalign = array('C','C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,55,30,30,15,30,15,15));
				$this->pdf->colheader = array('No','Nama Customer','Potensi Market','Penjualan-Retur','%','Pembayaran','%','GM');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R');
				//$this->pdf->setY($this->pdf->getY());
				
				$i=0;$totalpotensi2=0;$totalinvoice2=0;$totalhpp2=0;$totalpayamount2=0;
				
				foreach($dataReader2 as $row2)
				{
					//$this->pdf->sety($this->pdf->gety()+5);
					//if($row2['qty'] <> 0){$hargahpp = $row2['nilaihpp']/$row2['qty']; $hargajual = $row2['nilaiinvoice']/$row2['qty'];}else{$hargahpp = 0; $hargajual = 0;}
					$i+=1;
					$this->pdf->setFont('Arial','',8);
					$this->pdf->row(array(
						$i,
						$row2['fullname'],
						Yii::app()->format->formatCurrency($row2['potensi']/$per),
						Yii::app()->format->formatCurrency($row2['nilaiinvoice']/$per),
						Yii::app()->format->formatCurrency($row2['perpotensi']),
						Yii::app()->format->formatCurrency($row2['payamount']/$per),
						Yii::app()->format->formatCurrency($row2['perpayamount']),
						Yii::app()->format->formatCurrency($row2['gm']),
					));
					$totalpotensi2 += ($row2['potensi']/$per);
					$totalinvoice2 += ($row2['nilaiinvoice']/$per);
					$totalhpp2 += ($row2['nilaihpp']/$per);
					$totalpayamount2 += ($row2['payamount']/$per);
					
					$this->pdf->checkPageBreak(5);
				}
				$gm2=0;$perpotensi2=0;$perpayamount2=0;
				if ($totalinvoice2 != 0) {
					$gm2 = 100-(100*$totalhpp2/$totalinvoice2);
					$perpayamount2 = (100*$totalpayamount2/$totalinvoice2);
				}
				if ($totalpotensi2 != 0) {
					$perpotensi2 = (100*$totalhpp2/$totalpotensi2);
				}
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
					'',
					'TOTAL KATEGORI CUSTOMER '.$row1['custcategoryname'],
					Yii::app()->format->formatCurrency($totalpotensi2),
					Yii::app()->format->formatCurrency($totalinvoice2),
					Yii::app()->format->formatCurrency($perpotensi2),
					Yii::app()->format->formatCurrency($totalpayamount2),
					Yii::app()->format->formatCurrency($perpayamount2),
					Yii::app()->format->formatCurrency($gm2),
				));
				$totalpotensi1 += $totalpotensi2;
				$totalinvoice1 += $totalinvoice2;
				$totalhpp1 += $totalhpp2;
				$totalpayamount1 += $totalpayamount2;
				
				//$this->pdf->checkPageBreak(20);
			}
			$gm1=0;$perpotensi1=0;$perpayamount1=0;
			if ($totalinvoice1 != 0) {
				$gm1 = 100-(100*$totalhpp1/$totalinvoice1);
				$perpayamount1 = (100*$totalpayamount1/$totalinvoice1);
			}
			if ($totalpotensi1 != 0) {
				$perpotensi1 = (100*$totalhpp1/$totalpotensi1);
			}
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'',
				'TOTAL TIPE CUSTOMER '.$row['customertypename'],
				Yii::app()->format->formatCurrency($totalpotensi1),
				Yii::app()->format->formatCurrency($totalinvoice1),
				Yii::app()->format->formatCurrency($perpotensi1),
				Yii::app()->format->formatCurrency($totalpayamount1),
				Yii::app()->format->formatCurrency($perpayamount1),
				Yii::app()->format->formatCurrency($gm1),
			));
			$totalpotensi += $totalpotensi1;
			$totalinvoice += $totalinvoice1;
			$totalhpp += $totalhpp1;
			$totalpayamount += $totalpayamount1;
			
			$this->pdf->checkPageBreak(350);
		}
		$gm=0;$perpotensi=0;$perpayamount=0;
		if ($totalinvoice != 0) {
			$gm = 100-(100*$totalhpp/$totalinvoice);
			$perpayamount = (100*$totalpayamount/$totalinvoice);
		}
		if ($totalpotensi != 0) {
			$perpotensi = (100*$totalhpp/$totalpotensi);
		}
		$this->pdf->setFont('Arial','B',10);
		$this->pdf->row(array(
			'',
			'GRAND TOTAL ',
			Yii::app()->format->formatCurrency($totalpotensi),
			Yii::app()->format->formatCurrency($totalinvoice),
			Yii::app()->format->formatCurrency($perpotensi),
			Yii::app()->format->formatCurrency($totalpayamount),
			Yii::app()->format->formatCurrency($perpayamount),
			Yii::app()->format->formatCurrency($gm),
		));
		
		$this->pdf->Output();
	}
	//41
	public function Bahanbakukimia($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
	  parent::actionDownload();
	  $this->pdf->title = 'Harga Bahan Baku Per Cabang';
	  $this->pdf->subtitle = 'Per Tanggal '.date(Yii::app()->params['dateviewfromdb'],strtotime($enddate)). ' ('.date('H:i').')';
	  $this->pdf->AddPage('P','A4');
	  $sql = "select companyid,companyname,companycode from company where recordstatus=1 and companyid not in(11,12,14,0,24)";
	  $dataReader = Yii::app()->db->createCommand($sql)->queryAll();
	  $this->pdf->SetFont('Arial','B',10);
	  $this->pdf->colalign = array('C','C','C','C','C','C','C','C');
	  $this->pdf->setwidths(array(10,55,30,30,15,30,15,15));
	  //$this->pdf->colheader = array('No','Nama Customer','Potensi Market','Penjualan-Retur','%','Pembayaran','%','GM');
	  //  $this->pdf->RowHeader();
	  $this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R');
	  foreach($dataReader as $row) {
		$sql1 = "SELECT a.productname
		,(SELECT ROUND(b.averageprice,-2) FROM productdetailhist b JOIN sloc c ON c.slocid=b.slocid JOIN plant d ON d.plantid=c.plantid WHERE b.productid=a.productid AND b.sloccode LIKE '%BB' AND b.buydate <= '".date(Yii::app()->params['datetodb'],strtotime($enddate))."' AND d.companyid={$row['companyid']} ORDER BY b.productdetailhistid DESC LIMIT 1) as harga
		FROM product a
		WHERE a.productid IN (4039,4089,4103,4119)";
		$dataReader1 = Yii::app()->db->createCommand($sql1)->queryAll();
		$i=1;
		$this->pdf->SetFont('Arial','B',12);
		$this->pdf->setY($this->pdf->getY()+10);
		$this->pdf->text(20,$this->pdf->getY(),$row['companycode']);
		$this->pdf->SetFont('Arial','',9);
		$this->pdf->setY($this->pdf->getY()+2);
		foreach($dataReader1 as $row1)
		{
		  $this->pdf->row(array($i,
		  $row1['productname'],
		  Yii::app()->format->formatCurrency($row1['harga'])
		  ));
		  $i++;
		}
	  }
	  $this->pdf->Output();
	}
	//42
	public function RekapPerbandinganHPPPenjualanReturPerProvinsiPerZonaPerSubzonaPerCustomer($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();

		$customer = '';
		$employee = '';
		$salesarea = '';
		$spvid = '';
		$isdisplay3='';
		$isdisplay2='';
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid3 = "";
        }  
        //,SUBSTRING_INDEX(marketname,'-','1') AS provinsi,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','2'),'-','-1') AS zona,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','3'),'-','-1') AS subzona
		$sql = "select distinct marketname from 
				(select a1.marketareaid,SUBSTRING_INDEX(a1.marketname,'-','1') AS marketname
				from marketarea a1
				where a1.marketareaid = 1
				union
				select distinct l.marketareaid,SUBSTRING_INDEX(l.marketname,'-','1') AS marketname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				join marketarea l on l.marketareaid=g.marketareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%'
				and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct n.marketareaid,SUBSTRING_INDEX(n.marketname,'-','1') AS marketname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				join marketarea n on n.marketareaid=k.marketareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%'
				and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by marketareaid
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Perbandingan Nilai HPP dan Nilai Penjualan-Retur Per Provinsi Per Zona Per Subzona Per Customer';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P',array(225,297));
		   
		if(isset($spv) && $spv!='')
		{                
		  $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
		  $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

		  $this->pdf->SetFont('Arial','B',10);
		  $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
		  $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
		  $this->pdf->sety($this->pdf->gety()+5);
		}
				
		$totalqty3=0;$totalhpp3=0;$totalinvoice3=0;$totalpotensi3=0;
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',15);
			$this->pdf->text(10,$this->pdf->gety()+5,'PROVINSI : '.$row['marketname']);
			$this->pdf->sety($this->pdf->gety()+6);
			$sql1 = "select distinct marketname from 
					(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') AS marketname
					from marketarea a1
					where a1.marketareaid = 1
					and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') AS marketname
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join employee f on f.employeeid = b.employeeid
			  join addressbook g on g.addressbookid = b.addressbookid  
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
					join invoice j on j.giheaderid = h.giheaderid
			join salesarea k on k.salesareaid = g.salesareaid
					join marketarea l on l.marketareaid=g.marketareaid
					where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
					and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
					and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
					and j.invoiceno is not null and invoiceno not like '%-%-%'
					and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') AS marketname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join marketarea n on n.marketareaid=k.marketareaid
					where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
					and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
					and i.productname like '%".$product."%'
					and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
					)z order by marketareaid
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
					
			$totalqty2=0;$totalhpp2=0;$totalinvoice2=0;$totalpotensi2=0;
	
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','B',13);
				$this->pdf->text(15,$this->pdf->gety()+5,'ZONA : '.$row1['marketname']);
				$this->pdf->sety($this->pdf->gety()+6);
				
				$sql2 = "select distinct marketname from 
						(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','3'),'-','-1') AS marketname
						from marketarea a1
						where a1.marketareaid = 1
						and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') AS marketname
						from soheader b
						join sodetail c on c.soheaderid = b.soheaderid
						join gidetail d on d.sodetailid = c.sodetailid
						join product e on e.productid = d.productid
						join employee f on f.employeeid = b.employeeid
					join addressbook g on g.addressbookid = b.addressbookid  
						join giheader h on h.giheaderid = d.giheaderid
						join sloc i on i.slocid = d.slocid
						join invoice j on j.giheaderid = h.giheaderid
					join salesarea k on k.salesareaid = g.salesareaid
						join marketarea l on l.marketareaid=g.marketareaid
						where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
						and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
						and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
						and j.invoiceno is not null and invoiceno not like '%-%-%'
						and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') AS marketname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join marketarea n on n.marketareaid=k.marketareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%'
						and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						)z order by marketareaid
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
						
				$this->pdf->sety($this->pdf->gety()+3);
				//$this->pdf->setY($this->pdf->getY()+8);
				
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(8,98,20,32,32,15));
				$this->pdf->colheader = array('No','Customer','Tipe','Potensi','Total Jual','GM');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('R','L','C','R','R','R');
				$this->pdf->setY($this->pdf->getY());
					
				$totalqty1=0;$totalhpp1=0;$totalinvoice1=0;$totalpotensi1=0;
				
				foreach($dataReader2 as $row2)
				{	
					$this->pdf->SetFont('Arial','B',12);
					$this->pdf->text(20,$this->pdf->gety()+5,'SUB ZONA : '.$row2['marketname']);
					$this->pdf->sety($this->pdf->gety()+6);
					
					$sql3 = "select fullname,customertypename,potensi,sum(qty) as qty,sum(netto) as nilaiinvoice, SUM(nilaihpp) as nilaihpp, ifnull((1-(SUM(nilaihpp)/SUM(netto))),0) as gm from 
							(select fullname,customertypename,potensi,sum(qty) as qty,sum(nett) as netto,SUM(hpp) AS nilaihpp from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							,(select m.buyprice*-m.qty FROM productdetailhist m WHERE m.gidetailid=ss.gidetailid AND m.qty<0) AS hpp
							,(select a9.customertypename from customertype a9 where a9.customertypeid=d.customertypeid) as customertypename
							,(select sum(a9.amount) from addresspotensi a9 where a9.addressbookid=d.addressbookid) as potensi
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
							join materialgroup l on l.materialgroupid=j.materialgroupid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join marketarea az on az.marketareaid=d.marketareaid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%'
						and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
							)z group by fullname
							union
							select fullname,customertypename,potensi,-1*sum(qty) as qty,-1*sum(nett) as netto,SUM(hpp) AS nilaihpp from
							(select distinct a.notagirproid,k.fullname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							,(select p.buyprice*-p.qty FROM productdetailhist p WHERE p.gireturdetailid=c.gireturdetailid) AS hpp
							,(select a9.customertypename from customertype a9 where a9.customertypeid=k.customertypeid) as customertypename
							,(select sum(a9.amount) from addresspotensi a9 where a9.addressbookid=k.addressbookid) as potensi
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							join unitofmeasure p on p.unitofmeasureid = a.uomid
							join marketarea az on az.marketareaid=k.marketareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%'
						and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
							and d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
							)z group by fullname )zz 
							group by fullname order by fullname
					";
					$dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();
					
					$i=0;$totalqty=0;$totalhpp=0;$totalinvoice=0;$totalpotensi=0;
								
					foreach($dataReader3 as $row3)
					{
						//$this->pdf->sety($this->pdf->gety()+5);
						if($row3['qty'] <> 0){$hargahpp = $row3['nilaihpp']/$row3['qty']; $hargajual = $row3['nilaiinvoice']/$row3['qty'];}else{$hargahpp = 0; $hargajual = 0;}
						$i+=1;
						$this->pdf->setFont('Arial','',8);
						$this->pdf->row(array(
							$i,
							$row3['fullname'],
							$row3['customertypename'],
							Yii::app()->format->formatCurrency($row3['potensi']/$per),
							Yii::app()->format->formatCurrency($row3['nilaiinvoice']/$per),
							Yii::app()->format->formatCurrency(100*$row3['gm']),
						));
						$totalqty += ($row3['qty']);
						$totalhpp += ($row3['nilaihpp']/$per);
						$totalinvoice += ($row3['nilaiinvoice']/$per);
						$totalpotensi += ($row3['potensi']/$per);
						
						$this->pdf->checkPageBreak(5);
					}
					$ag = 0; $bg = 0; $cg = 0;
					if ($totalqty != 0) {
						$ag = $totalhpp / $totalqty;
						$bg = $totalinvoice / $totalqty;
					}
					if ($totalinvoice != 0) {
						$cg = $totalhpp/$totalinvoice;
					}
					
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
						'',
						'TOTAL SUB ZONA '.$row2['marketname'],
						'',
						Yii::app()->format->formatCurrency($totalpotensi),
						Yii::app()->format->formatCurrency($totalinvoice),
						Yii::app()->format->formatCurrency(100-(($cg)*100)),
					));
					$totalqty1 += $totalqty;
					$totalhpp1 += $totalhpp;
					$totalinvoice1 += $totalinvoice;
					$totalpotensi1 += $totalpotensi;
					//$this->pdf->checkPageBreak(20);	
				}
				if ($totalinvoice1 != 0) {
					$cg1 = $totalhpp1/$totalinvoice1;
				}
				
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
					'',
					'TOTAL ZONA '.$row1['marketname'],
					'',
					Yii::app()->format->formatCurrency($totalpotensi1),
					Yii::app()->format->formatCurrency($totalinvoice1),
					Yii::app()->format->formatCurrency(100-(($cg1)*100)),
				));
				$totalqty2 += $totalqty1;
				$totalhpp2 += $totalhpp1;
				$totalinvoice2 += $totalinvoice1;
				$totalpotensi2 += $totalpotensi1;
				//$this->pdf->checkPageBreak(20);
			}
			if ($totalinvoice2 != 0) {
				$cg2 = $totalhpp2/$totalinvoice2;
			}
			
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'',
				'TOTAL PROVINSI '.$row['marketname'],
				'',
				Yii::app()->format->formatCurrency($totalpotensi2),
				Yii::app()->format->formatCurrency($totalinvoice2),
				Yii::app()->format->formatCurrency(100-(($cg2)*100)),
			));
			$totalqty3 += $totalqty2;
			$totalhpp3 += $totalhpp2;
			$totalinvoice3 += $totalinvoice2;
			$totalpotensi3 += $totalpotensi2;
			$this->pdf->checkPageBreak(350);
		}
		if ($totalinvoice3 != 0) {
			$cg3 = $totalhpp3/$totalinvoice3;
		}
		
		$this->pdf->setFont('Arial','B',10);
		$this->pdf->row(array(
			'',
			'GRAND TOTAL ',
			'',
			Yii::app()->format->formatCurrency($totalpotensi3),
			Yii::app()->format->formatCurrency($totalinvoice3),
			Yii::app()->format->formatCurrency(100-(($cg3)*100)),
		));
		$this->pdf->Output();
	}
	//43 
	public function RekapPotensiTargetPenjualanReturPelunasanGMPerProvinsiPerZonaPerSubzonaPerTipePerKategoriPerCustomer($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();

		$customer = '';
		$employee = '';
		$salesarea = '';
		$spvid = '';
		$isdisplay3='';
		$isdisplay2='';
      
        if(isset($spv)&& $spv!=''){
          $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
        }else{
          $spvid = "";
        }
         if(isset($spv)&& $spv!=''){
          $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
        }else{
          $spvid1 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
        }else{
          $spvid2 = "";
        }
        if(isset($spv)&& $spv!=''){
          $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
        }else{
          $spvid3 = "";
        }  
        //,SUBSTRING_INDEX(marketname,'-','1') AS provinsi,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','2'),'-','-1') AS zona,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','3'),'-','-1') AS subzona
		$sql = "select distinct marketname from 
				(select a1.marketareaid,SUBSTRING_INDEX(a1.marketname,'-','1') AS marketname
				from marketarea a1
				where a1.marketareaid = 1
				union
				select distinct l.marketareaid,SUBSTRING_INDEX(l.marketname,'-','1') AS marketname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				join marketarea l on l.marketareaid=g.marketareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%'
				and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct n.marketareaid,SUBSTRING_INDEX(n.marketname,'-','1') AS marketname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				join marketarea n on n.marketareaid=k.marketareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%'
				and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by marketareaid
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Potensi Market, Target, Penjualan - Retur, Pembayaran, & GM Per Zona Per Subzona Per Tipe Per Kategori Per Customer';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L',array(225,297));
		   
		if(isset($spv) && $spv!='')
		{                
		  $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
		  $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

		  $this->pdf->SetFont('Arial','B',10);
		  $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
		  $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
		  $this->pdf->sety($this->pdf->gety()+5);
		}
				
		$totalpotensi=0;$totaltarget=0;$totalinvoice=0;$totalhpp=0;$totalpayamount=0;
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',15);
			$this->pdf->text(10,$this->pdf->gety()+5,'PROVINSI : '.$row['marketname']);
			$this->pdf->sety($this->pdf->gety()+6);
			$sql1 = "select distinct marketname from 
					(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') AS marketname
					from marketarea a1
					where a1.marketareaid = 1
					and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') AS marketname
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join employee f on f.employeeid = b.employeeid
			  join addressbook g on g.addressbookid = b.addressbookid  
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
					join invoice j on j.giheaderid = h.giheaderid
			join salesarea k on k.salesareaid = g.salesareaid
					join marketarea l on l.marketareaid=g.marketareaid
					where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
					and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
					and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
					and j.invoiceno is not null and invoiceno not like '%-%-%'
					and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') AS marketname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join marketarea n on n.marketareaid=k.marketareaid
					where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
					and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
					and i.productname like '%".$product."%'
					and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
					)z order by marketareaid
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
					
			$totalpotensi1=0;$totaltarget1=0;$totalinvoice1=0;$totalhpp1=0;$totalpayamount1=0;
	
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','B',13);
				$this->pdf->text(15,$this->pdf->gety()+5,'ZONA : '.$row1['marketname']);
				$this->pdf->sety($this->pdf->gety()+6);
				
				$sql2 = "select distinct marketname from 
						(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','3'),'-','-1') AS marketname
						from marketarea a1
						where a1.marketareaid = 1
						and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') AS marketname
						from soheader b
						join sodetail c on c.soheaderid = b.soheaderid
						join gidetail d on d.sodetailid = c.sodetailid
						join product e on e.productid = d.productid
						join employee f on f.employeeid = b.employeeid
					join addressbook g on g.addressbookid = b.addressbookid  
						join giheader h on h.giheaderid = d.giheaderid
						join sloc i on i.slocid = d.slocid
						join invoice j on j.giheaderid = h.giheaderid
					join salesarea k on k.salesareaid = g.salesareaid
						join marketarea l on l.marketareaid=g.marketareaid
						where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
						and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
						and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
						and j.invoiceno is not null and invoiceno not like '%-%-%'
						and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') AS marketname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join marketarea n on n.marketareaid=k.marketareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%'
						and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						)z order by marketareaid
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
				$totalpotensi2=0;$totaltarget2=0;$totalinvoice2=0;$totalhpp2=0;$totalpayamount2=0;
				
				foreach($dataReader2 as $row2)
				{	
					$this->pdf->SetFont('Arial','B',12);
					$this->pdf->text(20,$this->pdf->gety()+5,'SUB ZONA : '.$row2['marketname']);
					$this->pdf->sety($this->pdf->gety()+6);
					
					$sql3 = "select distinct customertypeid,customertypename from 
						(select distinct o.customertypeid,o.customertypename
						from soheader b
						join sodetail c on c.soheaderid = b.soheaderid
						join gidetail d on d.sodetailid = c.sodetailid
						join product e on e.productid = d.productid
						join employee f on f.employeeid = b.employeeid
					join addressbook g on g.addressbookid = b.addressbookid  
						join giheader h on h.giheaderid = d.giheaderid
						join sloc i on i.slocid = d.slocid
						join invoice j on j.giheaderid = h.giheaderid
					join salesarea k on k.salesareaid = g.salesareaid
						join marketarea l on l.marketareaid=g.marketareaid
						join customertype o on o.customertypeid=g.customertypeid and o.recordstatus=1
						where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
						and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
						and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
						and j.invoiceno is not null and invoiceno not like '%-%-%'
						and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
						union
						select distinct o.customertypeid,o.customertypename
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join marketarea n on n.marketareaid=k.marketareaid
						join customertype o on o.customertypeid=k.customertypeid and o.recordstatus=1
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%'
						and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
						)z order by customertypeid
					";
					$dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();
					
					$totalpotensi3=0;$totaltarget3=0;$totalinvoice3=0;$totalhpp3=0;$totalpayamount3=0;
								
					foreach($dataReader3 as $row3)
					{
						$this->pdf->SetFont('Arial','B',11);
						$this->pdf->text(25,$this->pdf->gety()+5,'TIPE CUSTOMER : '.$row3['customertypename']);
						$this->pdf->sety($this->pdf->gety()+6);
						
						$sql4 = "select distinct custcategoryid,custcategoryname from 
						(select distinct o.custcategoryid,o.custcategoryname
						from soheader b
						join sodetail c on c.soheaderid = b.soheaderid
						join gidetail d on d.sodetailid = c.sodetailid
						join product e on e.productid = d.productid
						join employee f on f.employeeid = b.employeeid
					join addressbook g on g.addressbookid = b.addressbookid and g.customertypeid=".$row3['customertypeid']."
						join giheader h on h.giheaderid = d.giheaderid
						join sloc i on i.slocid = d.slocid
						join invoice j on j.giheaderid = h.giheaderid
					join salesarea k on k.salesareaid = g.salesareaid
						join marketarea l on l.marketareaid=g.marketareaid
						join custcategory o on o.custcategoryid=g.custcategoryid and o.recordstatus=1
						where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
						and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
						and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
						and j.invoiceno is not null and invoiceno not like '%-%-%'
						and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
						union
						select distinct o.custcategoryid,o.custcategoryname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid and k.customertypeid=".$row3['customertypeid']."
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join marketarea n on n.marketareaid=k.marketareaid
						join custcategory o on o.custcategoryid=k.custcategoryid and o.recordstatus=1
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%'
						and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
						)z order by custcategoryid
						";
						$dataReader4=Yii::app()->db->createCommand($sql4)->queryAll();
						
						$totalpotensi4=0;$totaltarget4=0;$totalinvoice4=0;$totalhpp4=0;$totalpayamount4=0;
						
						foreach($dataReader4 as $row4)
						{
							$this->pdf->SetFont('Arial','B',10);
							$this->pdf->text(30,$this->pdf->gety()+5,'KATEGORI CUSTOMER : '.$row4['custcategoryname']);
							$this->pdf->sety($this->pdf->gety()+6);
							
							$sql5 = "SELECT *,if(nilaiinvoice=0,0,100*(1-(nilaihpp/nilaiinvoice))) AS gm,if(potensi=0,0,100*(target/potensi)) as perpotensi,if(target=0,0,100*(nilaiinvoice/target)) as pertarget,if(nilaiinvoice=0,0,100*(payamount/nilaiinvoice)) as perpayamount
									FROM (select addressbookid,target,fullname,customertypeid,custcategoryid
									,IFNULL((select sum(netto) as nilaiinvoice
									FROM (
									select addressbookid,target,customertypeid,custcategoryid,fullname,sum(nett) as netto
									FROM (select DISTINCT d3.addressbookid,0 as target,d3.customertypeid,d3.custcategoryid,d3.fullname,ss3.gidetailid,
									(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty) from gidetail zzb join sodetail zza on zza.sodetailid = zzb.sodetailid where zzb.giheaderid = b3.giheaderid and zzb.productid = i3.productid and zzb.gidetailid=ss3.gidetailid) as nett
									from invoice a3
									join giheader b3 ON b3.giheaderid = a3.giheaderid
									join soheader c3 ON c3.soheaderid = b3.soheaderid
									join addressbook d3 ON d3.addressbookid = c3.addressbookid
									join employee e3 ON e3.employeeid = c3.employeeid
									join salesarea f3 ON f3.salesareaid = d3.salesareaid
									join sodetail g3 ON g3.soheaderid = b3.soheaderid
									join gidetail ss3 on ss3.giheaderid = b3.giheaderid
									join sloc h3 on h3.slocid = ss3.slocid
									join product i3 on i3.productid = ss3.productid
									join productplant j3 on j3.productid = i3.productid and j3.slocid=g3.slocid and j3.unitofissue=ss3.unitofmeasureid
									join materialgroup l3 on l3.materialgroupid=j3.materialgroupid
									join unitofmeasure k3 on k3.unitofmeasureid = ss3.unitofmeasureid
									join marketarea az3 on az3.marketareaid=d3.marketareaid
									where a3.recordstatus = 3 and a3.invoiceno is not null and invoiceno not like '%-%-%' and c3.companyid = ".$companyid." and h3.sloccode like '%".$sloc."%' and d3.fullname like '%".$customer."%' and e3.fullname like '%".$employee."%' and f3.areaname like '%".$salesarea."%' and i3.productname like '%".$product."%'
							and SUBSTRING_INDEX(az3.marketname,'-','1') = '".$row['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az3.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az3.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and a3.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
									and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									)z group by addressbookid
									UNION
									select addressbookid,target,customertypeid,custcategoryid,fullname,-1*sum(nett) as netto from
									(select DISTINCT k4.addressbookid,0 as target,k4.customertypeid,k4.custcategoryid,k4.fullname,a4.notagirproid,(a4.qty*a4.price) as nett
									from notagirpro a4
									join notagir b4 on b4.notagirid=a4.notagirid
									join gireturdetail c4 on c4.gireturdetailid=a4.gireturdetailid
									join giretur d4 on d4.gireturid=b4.gireturid
									join gidetail e4 on e4.gidetailid=c4.gidetailid
									join giheader f4 on f4.giheaderid=d4.giheaderid
									join sodetail g4 on g4.sodetailid=e4.sodetailid
									join soheader h4 on h4.soheaderid=f4.soheaderid
									join product i4 on i4.productid = a4.productid
									join sloc j4 on j4.slocid = a4.slocid
									join addressbook k4 on k4.addressbookid = h4.addressbookid
									join employee l4 on l4.employeeid = h4.employeeid
									join salesarea m4 on m4.salesareaid = k4.salesareaid
									join productplant n4 on n4.productid=a4.productid and n4.slocid=a4.slocid and n4.unitofissue=a4.uomid
									join materialgroup o4 on o4.materialgroupid=n4.materialgroupid
									join unitofmeasure p4 on p4.unitofmeasureid = a4.uomid
									join marketarea az4 on az4.marketareaid=k4.marketareaid
									where h4.companyid = ".$companyid." and b4.recordstatus = 3 and j4.sloccode like '%".$sloc."%' and k4.fullname like '%".$customer."%' and l4.fullname like '%".$employee."%' and m4.areaname like '%".$salesarea."%' and i4.productname like '%".$product."%'
							and SUBSTRING_INDEX(az4.marketname,'-','1') = '".$row['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az4.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az4.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and d4.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									) z2 group by addressbookid
									) zz2
									WHERE zz2.addressbookid = zz3.addressbookid),0) AS nilaiinvoice
									,IFNULL((select sum(nilaihpp) as nilaihpp
									FROM (
									select addressbookid,target,customertypeid,custcategoryid,fullname,sum(hpp) as nilaihpp
									FROM (select DISTINCT d1.addressbookid,0 as target,d1.customertypeid,d1.custcategoryid,d1.fullname,ss1.gidetailid,
									(select m1.buyprice*-m1.qty FROM productdetailhist m1 WHERE m1.gidetailid=ss1.gidetailid AND m1.qty<0) AS hpp
									from invoice a1
									join giheader b1 ON b1.giheaderid = a1.giheaderid
									join soheader c1 ON c1.soheaderid = b1.soheaderid
									join addressbook d1 ON d1.addressbookid = c1.addressbookid
									join employee e1 ON e1.employeeid = c1.employeeid
									join salesarea f1 ON f1.salesareaid = d1.salesareaid
									join sodetail g1 ON g1.soheaderid = b1.soheaderid
									join gidetail ss1 on ss1.giheaderid = b1.giheaderid
									join sloc h1 on h1.slocid = ss1.slocid
									join product i1 on i1.productid = ss1.productid
									join productplant j1 on j1.productid = i1.productid and j1.slocid=g1.slocid and j1.unitofissue=ss1.unitofmeasureid
									join materialgroup l1 on l1.materialgroupid=j1.materialgroupid
									join unitofmeasure k1 on k1.unitofmeasureid = ss1.unitofmeasureid
									join marketarea az1 on az1.marketareaid=d1.marketareaid
									where a1.recordstatus = 3 and a1.invoiceno is not null and a1.invoiceno not like '%-%-%' and c1.companyid = ".$companyid." and h1.sloccode like '%".$sloc."%' and d1.fullname like '%".$customer."%' and e1.fullname like '%".$employee."%' and f1.areaname like '%".$salesarea."%' and i1.productname like '%".$product."%'
							and SUBSTRING_INDEX(az1.marketname,'-','1') = '".$row['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az1.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and a1.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
									and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									)z group by addressbookid
									UNION
									select addressbookid,target,customertypeid,custcategoryid,fullname,sum(hpp) as nilaihpp from
									(select DISTINCT k2.addressbookid,0 as target,k2.customertypeid,k2.custcategoryid,k2.fullname,a2.notagirproid,(select p2.buyprice*-p2.qty FROM productdetailhist p2 WHERE p2.gireturdetailid=c2.gireturdetailid) AS hpp
									from notagirpro a2
									join notagir b2 on b2.notagirid=a2.notagirid
									join gireturdetail c2 on c2.gireturdetailid=a2.gireturdetailid
									join giretur d2 on d2.gireturid=b2.gireturid
									join gidetail e2 on e2.gidetailid=c2.gidetailid
									join giheader f2 on f2.giheaderid=d2.giheaderid
									join sodetail g2 on g2.sodetailid=e2.sodetailid
									join soheader h2 on h2.soheaderid=f2.soheaderid
									join product i2 on i2.productid = a2.productid
									join sloc j2 on j2.slocid = a2.slocid
									join addressbook k2 on k2.addressbookid = h2.addressbookid
									join employee l2 on l2.employeeid = h2.employeeid
									join salesarea m2 on m2.salesareaid = k2.salesareaid
									join productplant n2 on n2.productid=a2.productid and n2.slocid=a2.slocid and n2.unitofissue=a2.uomid
									join materialgroup o2 on o2.materialgroupid=n2.materialgroupid
									join unitofmeasure p2 on p2.unitofmeasureid = a2.uomid
									join marketarea az2 on az2.marketareaid=k2.marketareaid
									where h2.companyid = ".$companyid." and b2.recordstatus = 3 and j2.sloccode like '%".$sloc."%' and k2.fullname like '%".$customer."%' and l2.fullname like '%".$employee."%' and m2.areaname like '%".$salesarea."%' and i2.productname like '%".$product."%'
							and SUBSTRING_INDEX(az2.marketname,'-','1') = '".$row['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az2.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az2.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and d2.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									) z1 group by addressbookid
									) zz1
									WHERE zz1.addressbookid = zz3.addressbookid),0) AS nilaihpp,
									ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)
									-- +ifnull(f.returnamount,0)
									+ifnull(f.obamount,0)
									)*ifnull(f.currencyrate,0))
									from cutarinv f
									join cutar g on g.cutarid=f.cutarid
									join invoice h on h.invoiceid=f.invoiceid
									join giheader i on i.giheaderid=h.giheaderid
									join soheader j on j.soheaderid=i.soheaderid
									where g.recordstatus=3 and g.companyid = ".$companyid." and g.docdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									and j.addressbookid = zz3.addressbookid),0) as payamount
									,ifnull((select sum(a.amount) from addresspotensi a where a.addressbookid=zz3.addressbookid),0) as potensi
									FROM (
									select addressbookid,target,customertypeid,custcategoryid,fullname
									FROM (select DISTINCT d5.addressbookid,0 as target,d5.customertypeid,d5.custcategoryid,d5.fullname,ss5.gidetailid
									from invoice a5
									join giheader b5 ON b5.giheaderid = a5.giheaderid
									join soheader c5 ON c5.soheaderid = b5.soheaderid
									join addressbook d5 ON d5.addressbookid = c5.addressbookid
									join employee e5 ON e5.employeeid = c5.employeeid
									join salesarea f5 ON f5.salesareaid = d5.salesareaid
									join sodetail g5 ON g5.soheaderid = b5.soheaderid
									join gidetail ss5 on ss5.giheaderid = b5.giheaderid
									join sloc h5 on h5.slocid = ss5.slocid
									join product i5 on i5.productid = ss5.productid
									join productplant j5 on j5.productid = i5.productid and j5.slocid=g5.slocid and j5.unitofissue=ss5.unitofmeasureid
									join materialgroup l5 on l5.materialgroupid=j5.materialgroupid
									join unitofmeasure k5 on k5.unitofmeasureid = ss5.unitofmeasureid
									join marketarea az5 on az5.marketareaid=d5.marketareaid
									where a5.recordstatus = 3 and a5.invoiceno is not null and invoiceno not like '%-%-%' and c5.companyid = ".$companyid." and h5.sloccode like '%".$sloc."%' and d5.fullname like '%".$customer."%' and e5.fullname like '%".$employee."%' and f5.areaname like '%".$salesarea."%' and i5.productname like '%".$product."%'
							and SUBSTRING_INDEX(az5.marketname,'-','1') = '".$row['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az5.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az5.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and a5.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
									and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									)z group by addressbookid
									UNION
									select addressbookid,target,customertypeid,custcategoryid,fullname from
									(select DISTINCT k6.addressbookid,0 as target,k6.customertypeid,k6.custcategoryid,k6.fullname,a6.notagirproid
									from notagirpro a6
									join notagir b6 on b6.notagirid=a6.notagirid
									join gireturdetail c6 on c6.gireturdetailid=a6.gireturdetailid
									join giretur d6 on d6.gireturid=b6.gireturid
									join gidetail e6 on e6.gidetailid=c6.gidetailid
									join giheader f6 on f6.giheaderid=d6.giheaderid
									join sodetail g6 on g6.sodetailid=e6.sodetailid
									join soheader h6 on h6.soheaderid=f6.soheaderid
									join product i6 on i6.productid = a6.productid
									join sloc j6 on j6.slocid = a6.slocid
									join addressbook k6 on k6.addressbookid = h6.addressbookid
									join employee l6 on l6.employeeid = h6.employeeid
									join salesarea m6 on m6.salesareaid = k6.salesareaid
									join productplant n6 on n6.productid=a6.productid and n6.slocid=a6.slocid and n6.unitofissue=a6.uomid
									join materialgroup o6 on o6.materialgroupid=n6.materialgroupid
									join unitofmeasure p6 on p6.unitofmeasureid = a6.uomid
									join marketarea az6 on az6.marketareaid=k6.marketareaid
									where h6.companyid = ".$companyid." and b6.recordstatus = 3 and j6.sloccode like '%".$sloc."%' and k6.fullname like '%".$customer."%' and l6.fullname like '%".$employee."%' and m6.areaname like '%".$salesarea."%' and i6.productname like '%".$product."%'
							and SUBSTRING_INDEX(az6.marketname,'-','1') = '".$row['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az6.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(az6.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and d6.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									) z3 group by addressbookid
									) zz3
									) z4
									WHERE z4.customertypeid = ".$row3['customertypeid']." and z4.custcategoryid = ".$row4['custcategoryid']."
									order BY z4.fullname
							";
							$dataReader5=Yii::app()->db->createCommand($sql5)->queryAll();
										
							$this->pdf->sety($this->pdf->gety()+3);
							//$this->pdf->setY($this->pdf->getY()+8);
							
							$this->pdf->SetFont('Arial','B',10);
							$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C');
							$this->pdf->setwidths(array(10,85,30,30,15,30,15,30,15,15));
							$this->pdf->colheader = array('No','Nama Customer','Potensi Market','Target','%','Penjualan-Retur','%','Pembayaran','%','GM');
							$this->pdf->RowHeader();
							$this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R','R');
							//$this->pdf->setY($this->pdf->getY());
							
							$i=0;$totalpotensi5=0;$totaltarget5=0;$totalinvoice5=0;$totalhpp5=0;$totalpayamount5=0;
							
							foreach($dataReader5 as $row5)
							{
								//$this->pdf->sety($this->pdf->gety()+5);
								//if($row5['qty'] <> 0){$hargahpp = $row5['nilaihpp']/$row5['qty']; $hargajual = $row5['nilaiinvoice']/$row5['qty'];}else{$hargahpp = 0; $hargajual = 0;}
								$i+=1;
								$this->pdf->setFont('Arial','',8);
								$this->pdf->row(array(
									$i,
									$row5['fullname'],
									Yii::app()->format->formatCurrency($row5['potensi']/$per),
									Yii::app()->format->formatCurrency($row5['target']/$per),
									Yii::app()->format->formatCurrency($row5['perpotensi']),
									Yii::app()->format->formatCurrency($row5['nilaiinvoice']/$per),
									Yii::app()->format->formatCurrency($row5['pertarget']),
									Yii::app()->format->formatCurrency($row5['payamount']/$per),
									Yii::app()->format->formatCurrency($row5['perpayamount']),
									Yii::app()->format->formatCurrency($row5['gm']),
								));
								$totalpotensi5 += ($row5['potensi']/$per);
								$totaltarget5 += ($row5['target']/$per);
								$totalinvoice5 += ($row5['nilaiinvoice']/$per);
								$totalhpp5 += ($row5['nilaihpp']/$per);
								$totalpayamount5 += ($row5['payamount']/$per);
								
								$this->pdf->checkPageBreak(5);
							}
							$gm5=0;$perpotensi5=0;$pertarget5=0;$perpayamount5=0;
							if ($totalpotensi5 != 0) {
								$perpotensi5 = (100*$totaltarget5/$totalpotensi5);
							}
							if ($totaltarget5 != 0) {
								$pertarget5 = (100*$totalinvoice5/$totaltarget5);
							}
							if ($totalinvoice5 != 0) {
								$gm5 = 100-(100*$totalhpp5/$totalinvoice5);
								$perpayamount5 = (100*$totalpayamount5/$totalinvoice5);
							}
							$this->pdf->setFont('Arial','B',9);
							$this->pdf->row(array(
								'',
								'TOTAL KATEGORI CUSTOMER '.$row4['custcategoryname'],
								Yii::app()->format->formatCurrency($totalpotensi5),
								Yii::app()->format->formatCurrency($totaltarget5),
								Yii::app()->format->formatCurrency($perpotensi5),
								Yii::app()->format->formatCurrency($totalinvoice5),
								Yii::app()->format->formatCurrency($pertarget5),
								Yii::app()->format->formatCurrency($totalpayamount5),
								Yii::app()->format->formatCurrency($perpayamount5),
								Yii::app()->format->formatCurrency($gm5),
							));
							$totalpotensi4 += $totalpotensi5;
							$totaltarget4 += $totaltarget5;
							$totalinvoice4 += $totalinvoice5;
							$totalhpp4 += $totalhpp5;
							$totalpayamount4 += $totalpayamount5;
							
							//$this->pdf->checkPageBreak(20);
						}
						$gm4=0;$perpotensi4=0;$pertarget4=0;$perpayamount4=0;
						if ($totalpotensi4 != 0) {
							$perpotensi4 = (100*$totaltarget4/$totalpotensi4);
						}
						if ($totaltarget4 != 0) {
							$pertarget4 = (100*$totalinvoice4/$totaltarget4);
						}
						if ($totalinvoice4 != 0) {
							$gm4 = 100-(100*$totalhpp4/$totalinvoice4);
							$perpayamount4 = (100*$totalpayamount4/$totalinvoice4);
						}
						$this->pdf->setFont('Arial','B',9);
						$this->pdf->row(array(
							'',
							'TOTAL TIPE CUSTOMER '.$row3['customertypename'],
							Yii::app()->format->formatCurrency($totalpotensi4),
							Yii::app()->format->formatCurrency($totaltarget4),
							Yii::app()->format->formatCurrency($perpotensi4),
							Yii::app()->format->formatCurrency($totalinvoice4),
							Yii::app()->format->formatCurrency($pertarget4),
							Yii::app()->format->formatCurrency($totalpayamount4),
							Yii::app()->format->formatCurrency($perpayamount4),
							Yii::app()->format->formatCurrency($gm4),
						));
						$totalpotensi3 += $totalpotensi4;
						$totaltarget3 += $totaltarget4;
						$totalinvoice3 += $totalinvoice4;
						$totalhpp3 += $totalhpp4;
						$totalpayamount3 += $totalpayamount4;
							
						//$this->pdf->checkPageBreak(20);
					}
					$gm3=0;$perpotensi3=0;$pertarget3=0;$perpayamount3=0;
					if ($totalpotensi3 != 0) {
						$perpotensi3 = (100*$totaltarget3/$totalpotensi3);
					}
					if ($totaltarget3 != 0) {
						$pertarget3 = (100*$totalinvoice3/$totaltarget3);
					}
					if ($totalinvoice3 != 0) {
						$gm3 = 100-(100*$totalhpp3/$totalinvoice3);
						$perpayamount3 = (100*$totalpayamount3/$totalinvoice3);
					}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
						'',
						'TOTAL SUB ZONA '.$row2['marketname'],
						Yii::app()->format->formatCurrency($totalpotensi3),
						Yii::app()->format->formatCurrency($totaltarget3),
						Yii::app()->format->formatCurrency($perpotensi3),
						Yii::app()->format->formatCurrency($totalinvoice3),
						Yii::app()->format->formatCurrency($pertarget3),
						Yii::app()->format->formatCurrency($totalpayamount3),
						Yii::app()->format->formatCurrency($perpayamount3),
						Yii::app()->format->formatCurrency($gm3),
					));
					$totalpotensi2 += $totalpotensi3;
					$totaltarget2 += $totaltarget3;
					$totalinvoice2 += $totalinvoice3;
					$totalhpp2 += $totalhpp3;
					$totalpayamount2 += $totalpayamount3;
						
					//$this->pdf->checkPageBreak(20);
				}
				$gm2=0;$perpotensi2=0;$pertarget2=0;$perpayamount2=0;
				if ($totalpotensi2 != 0) {
					$perpotensi2 = (100*$totaltarget2/$totalpotensi2);
				}
				if ($totaltarget2 != 0) {
					$pertarget2 = (100*$totalinvoice2/$totaltarget2);
				}
				if ($totalinvoice2 != 0) {
					$gm2 = 100-(100*$totalhpp2/$totalinvoice2);
					$perpayamount2 = (100*$totalpayamount2/$totalinvoice2);
				}
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
					'',
					'TOTAL ZONA '.$row1['marketname'],
					Yii::app()->format->formatCurrency($totalpotensi2),
					Yii::app()->format->formatCurrency($totaltarget2),
					Yii::app()->format->formatCurrency($perpotensi2),
					Yii::app()->format->formatCurrency($totalinvoice2),
					Yii::app()->format->formatCurrency($pertarget2),
					Yii::app()->format->formatCurrency($totalpayamount2),
					Yii::app()->format->formatCurrency($perpayamount2),
					Yii::app()->format->formatCurrency($gm2),
				));
				$totalpotensi1 += $totalpotensi2;
				$totaltarget1 += $totaltarget2;
				$totalinvoice1 += $totalinvoice2;
				$totalhpp1 += $totalhpp2;
				$totalpayamount1 += $totalpayamount2;
					
				//$this->pdf->checkPageBreak(20);
			}
			$gm1=0;$perpotensi1=0;$pertarget1=0;$perpayamount1=0;
			if ($totalpotensi1 != 0) {
				$perpotensi1 = (100*$totaltarget1/$totalpotensi1);
			}
			if ($totaltarget1 != 0) {
				$pertarget1 = (100*$totalinvoice1/$totaltarget1);
			}
			if ($totalinvoice1 != 0) {
				$gm1 = 100-(100*$totalhpp1/$totalinvoice1);
				$perpayamount1 = (100*$totalpayamount1/$totalinvoice1);
			}
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'',
				'TOTAL PROVINSI '.$row['marketname'],
				Yii::app()->format->formatCurrency($totalpotensi1),
				Yii::app()->format->formatCurrency($totaltarget1),
				Yii::app()->format->formatCurrency($perpotensi1),
				Yii::app()->format->formatCurrency($totalinvoice1),
				Yii::app()->format->formatCurrency($pertarget1),
				Yii::app()->format->formatCurrency($totalpayamount1),
				Yii::app()->format->formatCurrency($perpayamount1),
				Yii::app()->format->formatCurrency($gm1),
			));
			$totalpotensi += $totalpotensi1;
			$totaltarget += $totaltarget1;
			$totalinvoice += $totalinvoice1;
			$totalhpp += $totalhpp1;
			$totalpayamount += $totalpayamount1;
			
			$this->pdf->checkPageBreak(350);
		}
		$gm=0;$perpotensi=0;$pertarget=0;$perpayamount=0;
		if ($totalpotensi != 0) {
			$perpotensi = (00*$totaltarget/$totalpotensi);
		}
		if ($totaltarget != 0) {
			$pertarget = (00*$totalinvoice/$totaltarget);
		}
		if ($totalinvoice != 0) {
			$gm = 00-(00*$totalhpp/$totalinvoice);
			$perpayamount = (00*$totalpayamount/$totalinvoice);
		}
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'',
			'GRAND TOTAL ',
			Yii::app()->format->formatCurrency($totalpotensi),
			Yii::app()->format->formatCurrency($totaltarget),
			Yii::app()->format->formatCurrency($perpotensi),
			Yii::app()->format->formatCurrency($totalinvoice),
			Yii::app()->format->formatCurrency($pertarget),
			Yii::app()->format->formatCurrency($totalpayamount),
			Yii::app()->format->formatCurrency($perpayamount),
			Yii::app()->format->formatCurrency($gm),
		));
		
		$this->pdf->Output();
	}
	//44
	public function RekapPotensiTargetPenjualanReturPelunasanGMPerProvinsiPerZonaPerSubzonaPerCustomer($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();

		$customer = '';
		$employee = '';
		$salesarea = '';
		$spvid = '';
		$isdisplay3='';
		$isdisplay2='';
      
    if(isset($spv)&& $spv!=''){
      $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
    }else{
      $spvid = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
    }else{
      $spvid1 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
    }else{
      $spvid2 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
    }else{
      $spvid3 = "";
    }  
    //,SUBSTRING_INDEX(marketname,'-','1') AS provinsi,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','2'),'-','-1') AS zona,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','3'),'-','-1') AS subzona
		$sql = "select distinct marketname from 
				(select a1.marketareaid,SUBSTRING_INDEX(a1.marketname,'-','1') AS marketname
				from marketarea a1
				where a1.marketareaid = 1
				union
				select distinct l.marketareaid,SUBSTRING_INDEX(l.marketname,'-','1') AS marketname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				join marketarea l on l.marketareaid=g.marketareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%'
				and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct n.marketareaid,SUBSTRING_INDEX(n.marketname,'-','1') AS marketname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				join marketarea n on n.marketareaid=k.marketareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%'
				and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by marketareaid
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Potensi Market, Target, Penjualan - Retur, Pembayaran, & GM Per Zona Per Subzona Per Customer';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L',array(270,342));
		   
		if(isset($spv) && $spv!='')
		{                
		  $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
		  $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

		  $this->pdf->SetFont('Arial','B',10);
		  $this->pdf->text(10,$this->pdf->gety()+5,'LAPORAN PER SUPERVISOR');
		  $this->pdf->text(60,$this->pdf->gety()+5,' : '.$fullname);
		  $this->pdf->sety($this->pdf->gety()+5);
		}
				
		$totalpotensi=0;$totaltarget=0;$totalinvoice=0;$totalhpp=0;$totalpayamount=0;
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',15);
			$this->pdf->text(10,$this->pdf->gety()+5,'PROVINSI : '.$row['marketname']);
			$this->pdf->sety($this->pdf->gety()+6);
			$sql1 = "select distinct marketname from 
					(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') AS marketname
					from marketarea a1
					where a1.marketareaid = 1
					and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') AS marketname
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join employee f on f.employeeid = b.employeeid
			    join addressbook g on g.addressbookid = b.addressbookid  
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
					join invoice j on j.giheaderid = h.giheaderid
			    join salesarea k on k.salesareaid = g.salesareaid
					join marketarea l on l.marketareaid=g.marketareaid
					where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
					and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
					and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
					and j.invoiceno is not null and invoiceno not like '%-%-%'
					and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') AS marketname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join marketarea n on n.marketareaid=k.marketareaid
					where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
					and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
					and i.productname like '%".$product."%'
					and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
					)z order by marketareaid
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
					
			$totalpotensi1=0;$totaltarget1=0;$totalinvoice1=0;$totalhpp1=0;$totalpayamount1=0;
	
			foreach($dataReader1 as $row1)
			{
				$this->pdf->SetFont('Arial','B',13);
				$this->pdf->text(15,$this->pdf->gety()+5,'ZONA : '.$row1['marketname']);
				$this->pdf->sety($this->pdf->gety()+6);
				
				$sql2 = "select distinct marketname from 
						(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','3'),'-','-1') AS marketname
						from marketarea a1
						where a1.marketareaid = 1
						and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') AS marketname
						from soheader b
						join sodetail c on c.soheaderid = b.soheaderid
						join gidetail d on d.sodetailid = c.sodetailid
						join product e on e.productid = d.productid
						join employee f on f.employeeid = b.employeeid
				  	join addressbook g on g.addressbookid = b.addressbookid  
						join giheader h on h.giheaderid = d.giheaderid
						join sloc i on i.slocid = d.slocid
						join invoice j on j.giheaderid = h.giheaderid
					  join salesarea k on k.salesareaid = g.salesareaid
						join marketarea l on l.marketareaid=g.marketareaid
						where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
						and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
						and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
						and j.invoiceno is not null and invoiceno not like '%-%-%'
						and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') AS marketname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join marketarea n on n.marketareaid=k.marketareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%'
						and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						)z order by marketareaid
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
					
				$totalpotensi2=0;$totaltarget2=0;$totalinvoice2=0;$totalhpp2=0;$totalpayamount2=0;
				
				foreach($dataReader2 as $row2)
				{	
					$this->pdf->SetFont('Arial','B',12);
					$this->pdf->text(20,$this->pdf->gety()+5,'SUB ZONA : '.$row2['marketname']);
					$this->pdf->sety($this->pdf->gety()+6);

					$totalpotensi3=0;$totaltarget3=0;$totalinvoice3=0;$totalhpp3=0;$totalpayamount3=0;
								
          $this->pdf->SetFont('Arial','B',11);
          $totalpotensi4=0;$totaltarget4=0;$totalinvoice4=0;$totalhpp4=0;$totalpayamount4=0;
          
          $this->pdf->SetFont('Arial','B',10);
          
          $sql5 = "SELECT *,if(nilaiinvoice=0,0,100*(1-(nilaihpp/nilaiinvoice))) AS gm,if(potensi=0,0,100*(target/potensi)) as perpotensi,if(target=0,0,100*(nilaiinvoice/target)) as pertarget,if(nilaiinvoice=0,0,100*(payamount/nilaiinvoice)) as perpayamount
              FROM (select addressbookid,target,fullname,customertypeid,custcategoryid,customertypename,custcategoryname
              ,IFNULL((select sum(netto) as nilaiinvoice
              FROM (
              select addressbookid,target,customertypeid,custcategoryid,customertypename,custcategoryname,fullname,sum(nett) as netto
              FROM (select DISTINCT d3.addressbookid,0 as target,d3.customertypeid,d3.custcategoryid,d3.fullname,ss3.gidetailid,
              (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty) from gidetail zzb join sodetail zza on zza.sodetailid = zzb.sodetailid where zzb.giheaderid = b3.giheaderid and zzb.productid = i3.productid and zzb.gidetailid=ss3.gidetailid) as nett,za1.customertypename,za2.custcategoryname
              from invoice a3
              join giheader b3 ON b3.giheaderid = a3.giheaderid
              join soheader c3 ON c3.soheaderid = b3.soheaderid
              join addressbook d3 ON d3.addressbookid = c3.addressbookid
              join employee e3 ON e3.employeeid = c3.employeeid
              join salesarea f3 ON f3.salesareaid = d3.salesareaid
              join sodetail g3 ON g3.soheaderid = b3.soheaderid
              join gidetail ss3 on ss3.giheaderid = b3.giheaderid
              join sloc h3 on h3.slocid = ss3.slocid
              join product i3 on i3.productid = ss3.productid
              join productplant j3 on j3.productid = i3.productid and j3.slocid=g3.slocid and j3.unitofissue=ss3.unitofmeasureid
              join materialgroup l3 on l3.materialgroupid=j3.materialgroupid
              join unitofmeasure k3 on k3.unitofmeasureid = ss3.unitofmeasureid
              join marketarea az3 on az3.marketareaid=d3.marketareaid
              left join customertype za1 on za1.customertypeid = d3.customertypeid
              left join custcategory za2 on za2.custcategoryid = d3.custcategoryid
              where a3.recordstatus = 3 and a3.invoiceno is not null and invoiceno not like '%-%-%' and c3.companyid = ".$companyid." and h3.sloccode like '%".$sloc."%' and d3.fullname like '%".$customer."%' and e3.fullname like '%".$employee."%' and f3.areaname like '%".$salesarea."%' and i3.productname like '%".$product."%'
              and SUBSTRING_INDEX(az3.marketname,'-','1') = '".$row['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az3.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az3.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
              and a3.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
              and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
              )z group by addressbookid
              UNION
              select addressbookid,target,customertypeid,custcategoryid,fullname,customertypename,custcategoryname,-1*sum(nett) as netto from
              (select DISTINCT k4.addressbookid,0 as target,k4.customertypeid,k4.custcategoryid,k4.fullname,a4.notagirproid,(a4.qty*a4.price) as nett,za3.customertypename, za4.custcategoryname
              from notagirpro a4
              join notagir b4 on b4.notagirid=a4.notagirid
              join gireturdetail c4 on c4.gireturdetailid=a4.gireturdetailid
              join giretur d4 on d4.gireturid=b4.gireturid
              join gidetail e4 on e4.gidetailid=c4.gidetailid
              join giheader f4 on f4.giheaderid=d4.giheaderid
              join sodetail g4 on g4.sodetailid=e4.sodetailid
              join soheader h4 on h4.soheaderid=f4.soheaderid
              join product i4 on i4.productid = a4.productid
              join sloc j4 on j4.slocid = a4.slocid
              join addressbook k4 on k4.addressbookid = h4.addressbookid
              join employee l4 on l4.employeeid = h4.employeeid
              join salesarea m4 on m4.salesareaid = k4.salesareaid
              join productplant n4 on n4.productid=a4.productid and n4.slocid=a4.slocid and n4.unitofissue=a4.uomid
              join materialgroup o4 on o4.materialgroupid=n4.materialgroupid
              join unitofmeasure p4 on p4.unitofmeasureid = a4.uomid
              join marketarea az4 on az4.marketareaid=k4.marketareaid
              left join customertype za3 on za3.customertypeid = k4.customertypeid
              left join custcategory za4 on za4.custcategoryid = k4.custcategoryid
              where h4.companyid = ".$companyid." and b4.recordstatus = 3 and j4.sloccode like '%".$sloc."%' and k4.fullname like '%".$customer."%' and l4.fullname like '%".$employee."%' and m4.areaname like '%".$salesarea."%' and i4.productname like '%".$product."%'
              and SUBSTRING_INDEX(az4.marketname,'-','1') = '".$row['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az4.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az4.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
              and d4.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
              ) z2 group by addressbookid
              ) zz2
              WHERE zz2.addressbookid = zz3.addressbookid),0) AS nilaiinvoice
              ,IFNULL((select sum(nilaihpp) as nilaihpp
              FROM (
              select addressbookid,target,customertypeid,custcategoryid,customertypename,custcategoryname,fullname,sum(hpp) as nilaihpp
              FROM (select DISTINCT d1.addressbookid,0 as target,za5.customertypename,za6.custcategoryname,d1.customertypeid,d1.custcategoryid,d1.fullname,ss1.gidetailid,
              (select m1.buyprice*-m1.qty FROM productdetailhist m1 WHERE m1.gidetailid=ss1.gidetailid AND m1.qty<0) AS hpp
              from invoice a1
              join giheader b1 ON b1.giheaderid = a1.giheaderid
              join soheader c1 ON c1.soheaderid = b1.soheaderid
              join addressbook d1 ON d1.addressbookid = c1.addressbookid
              join employee e1 ON e1.employeeid = c1.employeeid
              join salesarea f1 ON f1.salesareaid = d1.salesareaid
              join sodetail g1 ON g1.soheaderid = b1.soheaderid
              join gidetail ss1 on ss1.giheaderid = b1.giheaderid
              join sloc h1 on h1.slocid = ss1.slocid
              join product i1 on i1.productid = ss1.productid
              join productplant j1 on j1.productid = i1.productid and j1.slocid=g1.slocid and j1.unitofissue=ss1.unitofmeasureid
              join materialgroup l1 on l1.materialgroupid=j1.materialgroupid
              join unitofmeasure k1 on k1.unitofmeasureid = ss1.unitofmeasureid
              join marketarea az1 on az1.marketareaid=d1.marketareaid
              left join customertype za5 on za5.customertypeid = d1.customertypeid
              left join custcategory za6 on za6.custcategoryid = d1.custcategoryid
              where a1.recordstatus = 3 and a1.invoiceno is not null and a1.invoiceno not like '%-%-%' and c1.companyid = ".$companyid." and h1.sloccode like '%".$sloc."%' and d1.fullname like '%".$customer."%' and e1.fullname like '%".$employee."%' and f1.areaname like '%".$salesarea."%' and i1.productname like '%".$product."%'
              and SUBSTRING_INDEX(az1.marketname,'-','1') = '".$row['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az1.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
              and a1.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
              and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
              )z group by addressbookid
              UNION
              select addressbookid,target,customertypeid,custcategoryid,customertypename,custcategoryname,fullname,sum(hpp) as nilaihpp from
              (select DISTINCT k2.addressbookid,0 as target,k2.customertypeid,k2.custcategoryid,za7.customertypename,za8.custcategoryname,k2.fullname,a2.notagirproid,(select p2.buyprice*-p2.qty FROM productdetailhist p2 WHERE p2.gireturdetailid=c2.gireturdetailid) AS hpp
              from notagirpro a2
              join notagir b2 on b2.notagirid=a2.notagirid
              join gireturdetail c2 on c2.gireturdetailid=a2.gireturdetailid
              join giretur d2 on d2.gireturid=b2.gireturid
              join gidetail e2 on e2.gidetailid=c2.gidetailid
              join giheader f2 on f2.giheaderid=d2.giheaderid
              join sodetail g2 on g2.sodetailid=e2.sodetailid
              join soheader h2 on h2.soheaderid=f2.soheaderid
              join product i2 on i2.productid = a2.productid
              join sloc j2 on j2.slocid = a2.slocid
              join addressbook k2 on k2.addressbookid = h2.addressbookid
              join employee l2 on l2.employeeid = h2.employeeid
              join salesarea m2 on m2.salesareaid = k2.salesareaid
              join productplant n2 on n2.productid=a2.productid and n2.slocid=a2.slocid and n2.unitofissue=a2.uomid
              join materialgroup o2 on o2.materialgroupid=n2.materialgroupid
              join unitofmeasure p2 on p2.unitofmeasureid = a2.uomid
              join marketarea az2 on az2.marketareaid=k2.marketareaid
              left join customertype za7 on za7.customertypeid = k2.customertypeid
              left join custcategory za8 on za8.custcategoryid = k2.custcategoryid
              where h2.companyid = ".$companyid." and b2.recordstatus = 3 and j2.sloccode like '%".$sloc."%' and k2.fullname like '%".$customer."%' and l2.fullname like '%".$employee."%' and m2.areaname like '%".$salesarea."%' and i2.productname like '%".$product."%'
              and SUBSTRING_INDEX(az2.marketname,'-','1') = '".$row['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az2.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az2.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
              and d2.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
              ) z1 group by addressbookid
              ) zz1
              WHERE zz1.addressbookid = zz3.addressbookid),0) AS nilaihpp,
              ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)
              -- +ifnull(f.returnamount,0)
              +ifnull(f.obamount,0)
              )*ifnull(f.currencyrate,0))
              from cutarinv f
              join cutar g on g.cutarid=f.cutarid
              join invoice h on h.invoiceid=f.invoiceid
              join giheader i on i.giheaderid=h.giheaderid
              join soheader j on j.soheaderid=i.soheaderid
              where g.recordstatus=3 and g.companyid = ".$companyid." and g.docdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
              and j.addressbookid = zz3.addressbookid),0) as payamount
              ,ifnull((select sum(a.amount) from addresspotensi a where a.addressbookid=zz3.addressbookid),0) as potensi
              FROM (
              select addressbookid,target,customertypeid,custcategoryid,customertypename,custcategoryname,fullname
              FROM (select DISTINCT d5.addressbookid,0 as target,d5.customertypeid,d5.custcategoryid,d5.fullname,ss5.gidetailid,za9.customertypename,za10.custcategoryname
              from invoice a5
              join giheader b5 ON b5.giheaderid = a5.giheaderid
              join soheader c5 ON c5.soheaderid = b5.soheaderid
              join addressbook d5 ON d5.addressbookid = c5.addressbookid
              join employee e5 ON e5.employeeid = c5.employeeid
              join salesarea f5 ON f5.salesareaid = d5.salesareaid
              join sodetail g5 ON g5.soheaderid = b5.soheaderid
              join gidetail ss5 on ss5.giheaderid = b5.giheaderid
              join sloc h5 on h5.slocid = ss5.slocid
              join product i5 on i5.productid = ss5.productid
              join productplant j5 on j5.productid = i5.productid and j5.slocid=g5.slocid and j5.unitofissue=ss5.unitofmeasureid
              join materialgroup l5 on l5.materialgroupid=j5.materialgroupid
              join unitofmeasure k5 on k5.unitofmeasureid = ss5.unitofmeasureid
              join marketarea az5 on az5.marketareaid=d5.marketareaid
              left join customertype za9 on za9.customertypeid = d5.customertypeid
              left join custcategory za10 on za10.custcategoryid = d5.custcategoryid
              where a5.recordstatus = 3 and a5.invoiceno is not null and invoiceno not like '%-%-%' and c5.companyid = ".$companyid." and h5.sloccode like '%".$sloc."%' and d5.fullname like '%".$customer."%' and e5.fullname like '%".$employee."%' and f5.areaname like '%".$salesarea."%' and i5.productname like '%".$product."%'
              and SUBSTRING_INDEX(az5.marketname,'-','1') = '".$row['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az5.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az5.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
              and a5.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
              and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
              )z group by addressbookid
              UNION
              select addressbookid,target,customertypeid,custcategoryid,customertypename,custcategoryname,fullname from
              (select DISTINCT k6.addressbookid,0 as target,k6.customertypeid,k6.custcategoryid,k6.fullname,a6.notagirproid,za11.customertypename,za12.custcategoryname
              from notagirpro a6
              join notagir b6 on b6.notagirid=a6.notagirid
              join gireturdetail c6 on c6.gireturdetailid=a6.gireturdetailid
              join giretur d6 on d6.gireturid=b6.gireturid
              join gidetail e6 on e6.gidetailid=c6.gidetailid
              join giheader f6 on f6.giheaderid=d6.giheaderid
              join sodetail g6 on g6.sodetailid=e6.sodetailid
              join soheader h6 on h6.soheaderid=f6.soheaderid
              join product i6 on i6.productid = a6.productid
              join sloc j6 on j6.slocid = a6.slocid
              join addressbook k6 on k6.addressbookid = h6.addressbookid
              join employee l6 on l6.employeeid = h6.employeeid
              join salesarea m6 on m6.salesareaid = k6.salesareaid
              join productplant n6 on n6.productid=a6.productid and n6.slocid=a6.slocid and n6.unitofissue=a6.uomid
              join materialgroup o6 on o6.materialgroupid=n6.materialgroupid
              join unitofmeasure p6 on p6.unitofmeasureid = a6.uomid
              join marketarea az6 on az6.marketareaid=k6.marketareaid
              left join customertype za11 on za11.customertypeid = k6.customertypeid
              left join custcategory za12 on za12.custcategoryid = k6.custcategoryid
              where h6.companyid = ".$companyid." and b6.recordstatus = 3 and j6.sloccode like '%".$sloc."%' and k6.fullname like '%".$customer."%' and l6.fullname like '%".$employee."%' and m6.areaname like '%".$salesarea."%' and i6.productname like '%".$product."%'
              and SUBSTRING_INDEX(az6.marketname,'-','1') = '".$row['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az6.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az6.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
              and d6.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
              ) z3 group by addressbookid
              ) zz3
              ) z4
              order BY z4.customertypeid desc, custcategoryid,z4.fullname asc
          ";
          $dataReader5=Yii::app()->db->createCommand($sql5)->queryAll();
                
          $this->pdf->sety($this->pdf->gety()+3);
          //$this->pdf->setY($this->pdf->getY()+8);
          
          $this->pdf->SetFont('Arial','B',10);
          $this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C');
          $this->pdf->setwidths(array(10,80,25,27,30,30,15,30,15,30,15,15));
          $this->pdf->colheader = array('No','Nama Cust','Tipe Cust','Kategori Cust','Potensi Market','Target','%','Penjualan-Retur','%','Pembayaran','%','GM');
          $this->pdf->RowHeader();
          $this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R','R','R','R');
          //$this->pdf->setY($this->pdf->getY());
          
          $i=0;$totalpotensi5=0;$totaltarget5=0;$totalinvoice5=0;$totalhpp5=0;$totalpayamount5=0;
            
          foreach($dataReader5 as $row5)
          {
								$i+=1;
								$this->pdf->setFont('Arial','',8);
								$this->pdf->row(array(
									$i,
									$row5['fullname'],
									$row5['customertypename'],
									$row5['custcategoryname'],
									Yii::app()->format->formatCurrency($row5['potensi']/$per),
									Yii::app()->format->formatCurrency($row5['target']/$per),
									Yii::app()->format->formatCurrency($row5['perpotensi']),
									Yii::app()->format->formatCurrency($row5['nilaiinvoice']/$per),
									Yii::app()->format->formatCurrency($row5['pertarget']),
									Yii::app()->format->formatCurrency($row5['payamount']/$per),
									Yii::app()->format->formatCurrency($row5['perpayamount']),
									Yii::app()->format->formatCurrency($row5['gm']),
								));
								$totalpotensi5 += ($row5['potensi']/$per);
								$totaltarget5 += ($row5['target']/$per);
								$totalinvoice5 += ($row5['nilaiinvoice']/$per);
								$totalhpp5 += ($row5['nilaihpp']/$per);
								$totalpayamount5 += ($row5['payamount']/$per);
								
								$this->pdf->checkPageBreak(5);
							}
							$gm5=0;$perpotensi5=0;$pertarget5=0;$perpayamount5=0;
							if ($totalpotensi5 != 0) {
								$perpotensi5 = (100*$totaltarget5/$totalpotensi5);
							}
							if ($totaltarget5 != 0) {
								$pertarget5 = (100*$totalinvoice5/$totaltarget5);
							}
							if ($totalinvoice5 != 0) {
								$gm5 = 100-(100*$totalhpp5/$totalinvoice5);
								$perpayamount5 = (100*$totalpayamount5/$totalinvoice5);
							}
							$this->pdf->setFont('Arial','B',9);

							$totalpotensi4 += $totalpotensi5;
							$totaltarget4 += $totaltarget5;
							$totalinvoice4 += $totalinvoice5;
							$totalhpp4 += $totalhpp5;
							$totalpayamount4 += $totalpayamount5;
							
							//$this->pdf->checkPageBreak(20);
						//}
						$gm4=0;$perpotensi4=0;$pertarget4=0;$perpayamount4=0;
						if ($totalpotensi4 != 0) {
							$perpotensi4 = (100*$totaltarget4/$totalpotensi4);
						}
						if ($totaltarget4 != 0) {
							$pertarget4 = (100*$totalinvoice4/$totaltarget4);
						}
						if ($totalinvoice4 != 0) {
							$gm4 = 100-(100*$totalhpp4/$totalinvoice4);
							$perpayamount4 = (100*$totalpayamount4/$totalinvoice4);
						}
						$this->pdf->setFont('Arial','B',9);
            
						$totalpotensi3 += $totalpotensi4;
						$totaltarget3 += $totaltarget4;
						$totalinvoice3 += $totalinvoice4;
						$totalhpp3 += $totalhpp4;
						$totalpayamount3 += $totalpayamount4;
							
						//$this->pdf->checkPageBreak(20);
					//}
					$gm3=0;$perpotensi3=0;$pertarget3=0;$perpayamount3=0;
					if ($totalpotensi3 != 0) {
						$perpotensi3 = (100*$totaltarget3/$totalpotensi3);
					}
					if ($totaltarget3 != 0) {
						$pertarget3 = (100*$totalinvoice3/$totaltarget3);
					}
					if ($totalinvoice3 != 0) {
						$gm3 = 100-(100*$totalhpp3/$totalinvoice3);
						$perpayamount3 = (100*$totalpayamount3/$totalinvoice3);
					}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
						'',
						'TOTAL SUB ZONA '.$row2['marketname'],
            '','',
						Yii::app()->format->formatCurrency($totalpotensi3),
						Yii::app()->format->formatCurrency($totaltarget3),
						Yii::app()->format->formatCurrency($perpotensi3),
						Yii::app()->format->formatCurrency($totalinvoice3),
						Yii::app()->format->formatCurrency($pertarget3),
						Yii::app()->format->formatCurrency($totalpayamount3),
						Yii::app()->format->formatCurrency($perpayamount3),
						Yii::app()->format->formatCurrency($gm3),
					));
					$totalpotensi2 += $totalpotensi3;
					$totaltarget2 += $totaltarget3;
					$totalinvoice2 += $totalinvoice3;
					$totalhpp2 += $totalhpp3;
					$totalpayamount2 += $totalpayamount3;
						
					//$this->pdf->checkPageBreak(20);
				}
				$gm2=0;$perpotensi2=0;$pertarget2=0;$perpayamount2=0;
				if ($totalpotensi2 != 0) {
					$perpotensi2 = (100*$totaltarget2/$totalpotensi2);
				}
				if ($totaltarget2 != 0) {
					$pertarget2 = (100*$totalinvoice2/$totaltarget2);
				}
				if ($totalinvoice2 != 0) {
					$gm2 = 100-(100*$totalhpp2/$totalinvoice2);
					$perpayamount2 = (100*$totalpayamount2/$totalinvoice2);
				}
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
					'',
					'TOTAL ZONA '.$row1['marketname'],
          '','',
					Yii::app()->format->formatCurrency($totalpotensi2),
					Yii::app()->format->formatCurrency($totaltarget2),
					Yii::app()->format->formatCurrency($perpotensi2),
					Yii::app()->format->formatCurrency($totalinvoice2),
					Yii::app()->format->formatCurrency($pertarget2),
					Yii::app()->format->formatCurrency($totalpayamount2),
					Yii::app()->format->formatCurrency($perpayamount2),
					Yii::app()->format->formatCurrency($gm2),
				));
				$totalpotensi1 += $totalpotensi2;
				$totaltarget1 += $totaltarget2;
				$totalinvoice1 += $totalinvoice2;
				$totalhpp1 += $totalhpp2;
				$totalpayamount1 += $totalpayamount2;
					
				//$this->pdf->checkPageBreak(20);
			}
			$gm1=0;$perpotensi1=0;$pertarget1=0;$perpayamount1=0;
			if ($totalpotensi1 != 0) {
				$perpotensi1 = (100*$totaltarget1/$totalpotensi1);
			}
			if ($totaltarget1 != 0) {
				$pertarget1 = (100*$totalinvoice1/$totaltarget1);
			}
			if ($totalinvoice1 != 0) {
				$gm1 = 100-(100*$totalhpp1/$totalinvoice1);
				$perpayamount1 = (100*$totalpayamount1/$totalinvoice1);
			}
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
				'',
				'TOTAL PROVINSI '.$row['marketname'],
        '','',
				Yii::app()->format->formatCurrency($totalpotensi1),
				Yii::app()->format->formatCurrency($totaltarget1),
				Yii::app()->format->formatCurrency($perpotensi1),
				Yii::app()->format->formatCurrency($totalinvoice1),
				Yii::app()->format->formatCurrency($pertarget1),
				Yii::app()->format->formatCurrency($totalpayamount1),
				Yii::app()->format->formatCurrency($perpayamount1),
				Yii::app()->format->formatCurrency($gm1),
			));
			$totalpotensi += $totalpotensi1;
			$totaltarget += $totaltarget1;
			$totalinvoice += $totalinvoice1;
			$totalhpp += $totalhpp1;
			$totalpayamount += $totalpayamount1;
			
			$this->pdf->checkPageBreak(350);
		}
		$gm=0;$perpotensi=0;$pertarget=0;$perpayamount=0;
		if ($totalpotensi != 0) {
			$perpotensi = (00*$totaltarget/$totalpotensi);
		}
		if ($totaltarget != 0) {
			$pertarget = (00*$totalinvoice/$totaltarget);
		}
		if ($totalinvoice != 0) {
			$gm = 00-(00*$totalhpp/$totalinvoice);
			$perpayamount = (00*$totalpayamount/$totalinvoice);
		}
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'',
			'GRAND TOTAL ',
      '','',
			Yii::app()->format->formatCurrency($totalpotensi),
			Yii::app()->format->formatCurrency($totaltarget),
			Yii::app()->format->formatCurrency($perpotensi),
			Yii::app()->format->formatCurrency($totalinvoice),
			Yii::app()->format->formatCurrency($pertarget),
			Yii::app()->format->formatCurrency($totalpayamount),
			Yii::app()->format->formatCurrency($perpayamount),
			Yii::app()->format->formatCurrency($gm),
		));
		
		$this->pdf->Output();
	}
	//45
	public function WeeklyReportGMNextMonday($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
    parent::actionDownload();
    $this->pdf->isheader=false;
    //$this->pdf->title='Weekly Report Sales(GM) Per Unit/Plant';
    //$this->pdf->subtitle='Tanggal '.date(Yii::app()->params['dateviewfromdb'],strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'],strtotime($enddate));
    $this->pdf->addPage('A4',array(100,160));

    $now = date('Y-m-d');
    $datefirst = '';
    
    $date1 = date('Y-m-d', strtotime('next monday -7 days'));
    $date2 = date('Y-m-d', strtotime('next monday -1 days'));
    $perioddate = date('Y-m-01',strtotime($date1));

    $month1 = date('m',strtotime($date1));
    $month = date('m',strtotime($date2));
    
    if($month1<>$month){
      $dateadd = date('Y-m-t',strtotime($date1)); // untuk beda bulan, tgl $date1 smpai $dateadd
      $datefirst = date('Y-m-01',strtotime($date2)); // untuk beda bulan, tgl 1 dan sampai $date2
    }
    else
    {
      $dateadd = $date2;
    }
    //$this->pdf->RowHeader();
    //$this->pdf->colheader = array('No','Perusahaan','Weekly','Kumulatif');

    $this->pdf->text(10,7,'Weekly Report Sales(GM) Per Unit');
    $this->pdf->text(10,12,'Tanggal '.date(Yii::app()->params['dateviewfromdb'],strtotime($date1)).' s/d '.date(Yii::app()->params['dateviewfromdb'],strtotime($dateadd)));

    $this->pdf->SetFont('Arial','',9);
    $this->pdf->coldetailalign = array('C','C','C','C');
    $this->pdf->setwidths(array(10,25,40,70));
    $this->pdf->setbordercell(array('T','LT','BLT','BLT'));
    $this->pdf->row(array('No','Perusahaan','Weekly','Kumulatif'));
    $this->pdf->setwidths(array(10,25,30,10,30,40));
    $this->pdf->coldetailalign = array('L','L','C','C','C','C');
    $this->pdf->setbordercell(array('B','LB','LB','LB','LB','LB'));
    $this->pdf->row(array('','','Sales','GM','Budget','Sales'));

    $sql = "select companyid, companyname, companycode
        from company where recordstatus=1
        and companyid not in(11,12,15,24,0)
        order by nourut asc";

    $dataReader = Yii::app()->db->createCommand($sql)->queryAll();
    $i=1;$l=1;
    $this->pdf->coldetailalign = array('L','L','R','C','R','R');
    foreach($dataReader as $row)
    {
      $this->pdf->setFont('Arial','',8);
      $sql1 = "select distinct sum(nominal) as nominal,sum(netto) as netto,sum(hpp)*-1 as hpp
      from
        (select sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto,sum(hpp) as hpp from
        (select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,ss.qty,a.headernote,c.employeeid,
        (select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
        (ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
        (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
        from gidetail zzb 
        join sodetail zza on zza.sodetailid = zzb.sodetailid
        where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett,
        ((select sum(distinct p.qty * buyprice)
        from productdetailhist p
        where p.productid=ss.productid and p.slocid=ss.slocid and p.unitofmeasureid=ss.unitofmeasureid 
        and p.storagebinid=ss.storagebinid and p.referenceno=b.gino
        and p.gidetailid = ss.gidetailid
        )) as hpp
        from invoice a 
        join giheader b on b.giheaderid = a.giheaderid
        join soheader c on c.soheaderid = b.soheaderid
        join sodetail g on g.soheaderid = b.soheaderid
        join gidetail ss on ss.giheaderid = b.giheaderid
        join product i on i.productid = ss.productid
        where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' 
        and c.companyid = {$row['companyid']}  and a.invoicedate between 
        '{$date1}' and  '{$dateadd}' and c.isdisplay=0 )z -- group by employeeid
        union
        select -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto,sum(hpp) as hpp from
        (select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,
        (a.qty*a.price) as nett,b.headernote,d.gireturdate,
        (
          select (p1.buyprice*p1.qty)
          from productdetailhist p1
          where p1.productid=c.productid and p1.slocid=c.slocid and p1.unitofmeasureid = c.uomid
          and p1.storagebinid = c.storagebinid and p1.referenceno = d.gireturno 
          and p1.gireturdetailid = c.gireturdetailid
        ) as hpp
        from notagirpro a
        join notagir b on b.notagirid=a.notagirid
        join gireturdetail c on c.gireturdetailid=a.gireturdetailid
        join giretur d on d.gireturid=b.gireturid
        join gidetail e on e.gidetailid=c.gidetailid
        join giheader f on f.giheaderid=d.giheaderid
        join sodetail g on g.sodetailid=e.sodetailid
        join soheader h on h.soheaderid=f.soheaderid
        join product i on i.productid = a.productid
        where h.companyid = {$row['companyid']} and b.recordstatus = 3 
        and d.gireturdate between '{$date1}' and '{$dateadd}' 
        and h.isdisplay=0
        order by notagirno,notagirproid
        )z -- group by employeeid 
        ) zz ";

      $this->pdf->setbordercell(array('','','','','',''));
      $row1 = Yii::app()->db->createCommand($sql1)->queryRow();

      $sqlkum = "select distinct sum(nominal) as nominal,sum(netto) as netto,sum(hpp)*-1 as hpp
      from
        (select sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto,sum(hpp) as hpp from
        (select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,ss.qty,a.headernote,c.employeeid,
        (select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
        (ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
        (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
        from gidetail zzb 
        join sodetail zza on zza.sodetailid = zzb.sodetailid
        where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett,
        ((select sum(distinct p.qty * buyprice)
        from productdetailhist p
        where p.productid=ss.productid and p.slocid=ss.slocid and p.unitofmeasureid=ss.unitofmeasureid 
        and p.storagebinid=ss.storagebinid and p.referenceno=b.gino
        and p.gidetailid = ss.gidetailid
        )) as hpp
        from invoice a 
        join giheader b on b.giheaderid = a.giheaderid
        join soheader c on c.soheaderid = b.soheaderid
        join sodetail g on g.soheaderid = b.soheaderid
        join gidetail ss on ss.giheaderid = b.giheaderid
        join product i on i.productid = ss.productid
        where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' 
        and c.companyid = {$row['companyid']}  and a.invoicedate between 
        '{$perioddate}' and  '{$dateadd}' and c.isdisplay=0 )z -- group by employeeid
        union
        select -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto,sum(hpp) as hpp from
        (select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,
        (a.qty*a.price) as nett,b.headernote,d.gireturdate,
        (
          select (p1.buyprice*p1.qty)
          from productdetailhist p1
          where p1.productid=c.productid and p1.slocid=c.slocid and p1.unitofmeasureid = c.uomid
          and p1.storagebinid = c.storagebinid and p1.referenceno = d.gireturno 
          and p1.gireturdetailid = c.gireturdetailid
        ) as hpp
        from notagirpro a
        join notagir b on b.notagirid=a.notagirid
        join gireturdetail c on c.gireturdetailid=a.gireturdetailid
        join giretur d on d.gireturid=b.gireturid
        join gidetail e on e.gidetailid=c.gidetailid
        join giheader f on f.giheaderid=d.giheaderid
        join sodetail g on g.sodetailid=e.sodetailid
        join soheader h on h.soheaderid=f.soheaderid
        join product i on i.productid = a.productid
        where h.companyid = {$row['companyid']} and b.recordstatus = 3 
        and d.gireturdate between '{$perioddate}' and '{$dateadd}' 
        and h.isdisplay=0
        order by notagirno,notagirproid
        )z -- group by employeeid 
        ) zz ";
      $row2 = Yii::app()->db->createCommand($sqlkum)->queryRow();


      $qbudget = "select sum(budgetamount)*-1 as budget from budget a
      where a.companyid={$row['companyid']}
      and accountcode BETWEEN '310101' and '310199999'
      and budgetdate = '{$perioddate}'";
      $budget = Yii::app()->db->createCommand($qbudget)->queryScalar();
      $gm=0;
      if($row1['netto']>0) $gm = 100-(100*$row1['hpp']/$row1['netto']);
      $this->pdf->row(array(
        $i,
        $row['companycode'],
        Yii::app()->format->formatCurrency($row1['netto']),
        Yii::app()->format->formatCurrency($gm),
        Yii::app()->format->formatCurrency($budget),
        Yii::app()->format->formatCurrency($row2['netto']),
      ));
      $i++;
    }

    if($datefirst!='') 
    {
      $this->pdf->addPage('A4',array(100,160));

      $this->pdf->setFont('Arial','',12);

      $this->pdf->text(10,7,'Weekly Report Sales(GM) Per Unit/Plant');
      $this->pdf->text(10,12,'Tanggal '.date(Yii::app()->params['dateviewfromdb'],strtotime($datefirst)).' s/d '.date(Yii::app()->params['dateviewfromdb'],strtotime($date2)));

      $this->pdf->SetFont('Arial','',9);
      $this->pdf->coldetailalign = array('C','C','C','C');
      $this->pdf->setwidths(array(10,25,40,70));
      $this->pdf->setbordercell(array('T','LT','BLT','BLT'));
      $this->pdf->row(array('No','Perusahaan','Weekly','Kumulatif'));
      $this->pdf->setwidths(array(10,25,30,10,30,40));
      $this->pdf->coldetailalign = array('L','L','C','C','C','C');
      $this->pdf->setbordercell(array('B','LB','LB','LB','LB','LB'));
      $this->pdf->row(array('','','Sales','GM','Budget','Sales'));

      $this->pdf->coldetailalign = array('L','L','R','C','R','R');
      $this->pdf->setFont('Arial','',8);
      foreach($dataReader as $row)
      {
        $sql1s = "select distinct sum(nominal) as nominal,sum(netto) as netto,sum(hpp)*-1 as hpp
          from
          (select sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto,sum(hpp) as hpp from
          (select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,ss.qty,a.headernote,c.employeeid,
          (select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
          (ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
          (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
          from gidetail zzb 
          join sodetail zza on zza.sodetailid = zzb.sodetailid
          where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett,
          ((select sum(distinct p.qty * buyprice)
          from productdetailhist p
          where p.productid=ss.productid and p.slocid=ss.slocid and p.unitofmeasureid=ss.unitofmeasureid 
          and p.storagebinid=ss.storagebinid and p.referenceno=b.gino
          and p.gidetailid = ss.gidetailid
          )) as hpp
          from invoice a 
          join giheader b on b.giheaderid = a.giheaderid
          join soheader c on c.soheaderid = b.soheaderid
          join sodetail g on g.soheaderid = b.soheaderid
          join gidetail ss on ss.giheaderid = b.giheaderid
          join product i on i.productid = ss.productid
          where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' 
          and c.companyid = {$row['companyid']}  and a.invoicedate between 
          '{$datefirst}' and  '{$date2}' and c.isdisplay=0 )z -- group by employeeid
          union
          select -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto,sum(hpp) as hpp from
          (select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,
          (a.qty*a.price) as nett,b.headernote,d.gireturdate,
          (
            select (p1.buyprice*p1.qty)
            from productdetailhist p1
            where p1.productid=c.productid and p1.slocid=c.slocid and p1.unitofmeasureid = c.uomid
            and p1.storagebinid = c.storagebinid and p1.referenceno = d.gireturno 
            and p1.gireturdetailid = c.gireturdetailid
          ) as hpp
          from notagirpro a
          join notagir b on b.notagirid=a.notagirid
          join gireturdetail c on c.gireturdetailid=a.gireturdetailid
          join giretur d on d.gireturid=b.gireturid
          join gidetail e on e.gidetailid=c.gidetailid
          join giheader f on f.giheaderid=d.giheaderid
          join sodetail g on g.sodetailid=e.sodetailid
          join soheader h on h.soheaderid=f.soheaderid
          join product i on i.productid = a.productid
          where h.companyid = {$row['companyid']} and b.recordstatus = 3 
          and d.gireturdate between '{$datefirst}' and '{$date2}' 
          and h.isdisplay=0
          order by notagirno,notagirproid
          )z -- group by employeeid 
          ) zz ";

        $this->pdf->setbordercell(array('','','','','',''));
        $row1s = Yii::app()->db->createCommand($sql1s)->queryRow();

        $sqlkums = "select distinct sum(nominal) as nominal,sum(netto) as netto,sum(hpp)*-1 as hpp
          from
          (select sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto,sum(hpp) as hpp from
          (select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,ss.qty,a.headernote,c.employeeid,
          (select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
          (ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
          (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
          from gidetail zzb 
          join sodetail zza on zza.sodetailid = zzb.sodetailid
          where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett,
          ((select sum(distinct p.qty * buyprice)
          from productdetailhist p
          where p.productid=ss.productid and p.slocid=ss.slocid and p.unitofmeasureid=ss.unitofmeasureid 
          and p.storagebinid=ss.storagebinid and p.referenceno=b.gino
          and p.gidetailid = ss.gidetailid
          )) as hpp
          from invoice a 
          join giheader b on b.giheaderid = a.giheaderid
          join soheader c on c.soheaderid = b.soheaderid
          join sodetail g on g.soheaderid = b.soheaderid
          join gidetail ss on ss.giheaderid = b.giheaderid
          join product i on i.productid = ss.productid
          where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' 
          and c.companyid = {$row['companyid']}  and a.invoicedate between 
          '{$datefirst}' and  '{$date2}' and c.isdisplay=0 )z -- group by employeeid
          union
          select -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto,sum(hpp) as hpp from
          (select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,
          (a.qty*a.price) as nett,b.headernote,d.gireturdate,
          (
            select (p1.buyprice*p1.qty)
            from productdetailhist p1
            where p1.productid=c.productid and p1.slocid=c.slocid and p1.unitofmeasureid = c.uomid
            and p1.storagebinid = c.storagebinid and p1.referenceno = d.gireturno 
            and p1.gireturdetailid = c.gireturdetailid
          ) as hpp
          from notagirpro a
          join notagir b on b.notagirid=a.notagirid
          join gireturdetail c on c.gireturdetailid=a.gireturdetailid
          join giretur d on d.gireturid=b.gireturid
          join gidetail e on e.gidetailid=c.gidetailid
          join giheader f on f.giheaderid=d.giheaderid
          join sodetail g on g.sodetailid=e.sodetailid
          join soheader h on h.soheaderid=f.soheaderid
          join product i on i.productid = a.productid
          where h.companyid = {$row['companyid']} and b.recordstatus = 3 
          and d.gireturdate between '{$datefirst}' and '{$date2}' 
          and h.isdisplay=0
          order by notagirno,notagirproid
          )z -- group by employeeid 
          ) zz ";
        $row2s = Yii::app()->db->createCommand($sqlkums)->queryRow();


        $qbudgets = "select sum(budgetamount)*-1 as budget from budget a
        where a.companyid={$row['companyid']}
        and accountcode BETWEEN '310101' and '310199999'
        and budgetdate = '{$datefirst}'";
        $budgets = Yii::app()->db->createCommand($qbudgets)->queryScalar();
        $gms=0;
        if($row1s['netto']>0) $gms = 100-(100*$row1s['hpp']/$row1s['netto']);
        $this->pdf->row(array(
          $l,
          $row['companycode'],
          Yii::app()->format->formatCurrency($row1s['netto']),
          Yii::app()->format->formatCurrency($gms),
          Yii::app()->format->formatCurrency($budgets),
          Yii::app()->format->formatCurrency($row2s['netto']),
        ));
        $l++;
      }
    }
    $this->pdf->Output();
  }
	//46
	public function WeeklyReportGMPreviousMonday($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
    parent::actionDownload();
    $this->pdf->isheader=false;
    //$this->pdf->title='Weekly Report Sales(GM) Per Unit/Plant';
    //$this->pdf->subtitle='Tanggal '.date(Yii::app()->params['dateviewfromdb'],strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'],strtotime($enddate));
    $this->pdf->addPage('A4',array(100,160));

    $now = date('Y-m-d');
    $datefirst = '';
    
    $date1 = date('Y-m-d', strtotime('previous monday -7 days'));
    $date2 = date('Y-m-d', strtotime('previous monday -1 days'));
    $perioddate = date('Y-m-01',strtotime($date1));

    $month1 = date('m',strtotime($date1));
    $month = date('m',strtotime($date2));
    
    if($month1<>$month){
      $dateadd = date('Y-m-t',strtotime($date1)); // untuk beda bulan, tgl $date1 smpai $dateadd
      $datefirst = date('Y-m-01',strtotime($date2)); // untuk beda bulan, tgl 1 dan sampai $date2
    }
    else
    {
      $dateadd = $date2;
    }
    //$this->pdf->RowHeader();
    //$this->pdf->colheader = array('No','Perusahaan','Weekly','Kumulatif');

    $this->pdf->text(10,7,'Weekly Report Sales(GM) Per Unit');
    $this->pdf->text(10,12,'Tanggal '.date(Yii::app()->params['dateviewfromdb'],strtotime($date1)).' s/d '.date(Yii::app()->params['dateviewfromdb'],strtotime($dateadd)));

    $this->pdf->SetFont('Arial','',9);
    $this->pdf->coldetailalign = array('C','C','C','C');
    $this->pdf->setwidths(array(10,25,40,70));
    $this->pdf->setbordercell(array('T','LT','BLT','BLT'));
    $this->pdf->row(array('No','Perusahaan','Weekly','Kumulatif'));
    $this->pdf->setwidths(array(10,25,30,10,30,40));
    $this->pdf->coldetailalign = array('L','L','C','C','C','C');
    $this->pdf->setbordercell(array('B','LB','LB','LB','LB','LB'));
    $this->pdf->row(array('','','Sales','GM','Budget','Sales'));

    $sql = "select companyid, companyname, companycode
        from company where recordstatus=1
        and companyid not in(11,12,15,24,0)
        order by nourut asc";

    $dataReader = Yii::app()->db->createCommand($sql)->queryAll();
    $i=1;$l=1;
    $this->pdf->coldetailalign = array('L','L','R','C','R','R');
    foreach($dataReader as $row)
    {
      $this->pdf->setFont('Arial','',8);
      $sql1 = "select distinct sum(nominal) as nominal,sum(netto) as netto,sum(hpp)*-1 as hpp
      from
        (select sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto,sum(hpp) as hpp from
        (select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,ss.qty,a.headernote,c.employeeid,
        (select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
        (ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
        (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
        from gidetail zzb 
        join sodetail zza on zza.sodetailid = zzb.sodetailid
        where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett,
        ((select sum(distinct p.qty * buyprice)
        from productdetailhist p
        where p.productid=ss.productid and p.slocid=ss.slocid and p.unitofmeasureid=ss.unitofmeasureid 
        and p.storagebinid=ss.storagebinid and p.referenceno=b.gino
        and p.gidetailid = ss.gidetailid
        )) as hpp
        from invoice a 
        join giheader b on b.giheaderid = a.giheaderid
        join soheader c on c.soheaderid = b.soheaderid
        join sodetail g on g.soheaderid = b.soheaderid
        join gidetail ss on ss.giheaderid = b.giheaderid
        join product i on i.productid = ss.productid
        where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' 
        and c.companyid = {$row['companyid']}  and a.invoicedate between 
        '{$date1}' and  '{$dateadd}' and c.isdisplay=0 )z -- group by employeeid
        union
        select -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto,sum(hpp) as hpp from
        (select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,
        (a.qty*a.price) as nett,b.headernote,d.gireturdate,
        (
          select (p1.buyprice*p1.qty)
          from productdetailhist p1
          where p1.productid=c.productid and p1.slocid=c.slocid and p1.unitofmeasureid = c.uomid
          and p1.storagebinid = c.storagebinid and p1.referenceno = d.gireturno 
          and p1.gireturdetailid = c.gireturdetailid
        ) as hpp
        from notagirpro a
        join notagir b on b.notagirid=a.notagirid
        join gireturdetail c on c.gireturdetailid=a.gireturdetailid
        join giretur d on d.gireturid=b.gireturid
        join gidetail e on e.gidetailid=c.gidetailid
        join giheader f on f.giheaderid=d.giheaderid
        join sodetail g on g.sodetailid=e.sodetailid
        join soheader h on h.soheaderid=f.soheaderid
        join product i on i.productid = a.productid
        where h.companyid = {$row['companyid']} and b.recordstatus = 3 
        and d.gireturdate between '{$date1}' and '{$dateadd}' 
        and h.isdisplay=0
        order by notagirno,notagirproid
        )z -- group by employeeid 
        ) zz ";

      $this->pdf->setbordercell(array('','','','','',''));
      $row1 = Yii::app()->db->createCommand($sql1)->queryRow();

      $sqlkum = "select distinct sum(nominal) as nominal,sum(netto) as netto,sum(hpp)*-1 as hpp
      from
        (select sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto,sum(hpp) as hpp from
        (select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,ss.qty,a.headernote,c.employeeid,
        (select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
        (ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
        (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
        from gidetail zzb 
        join sodetail zza on zza.sodetailid = zzb.sodetailid
        where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett,
        ((select sum(distinct p.qty * buyprice)
        from productdetailhist p
        where p.productid=ss.productid and p.slocid=ss.slocid and p.unitofmeasureid=ss.unitofmeasureid 
        and p.storagebinid=ss.storagebinid and p.referenceno=b.gino
        and p.gidetailid = ss.gidetailid
        )) as hpp
        from invoice a 
        join giheader b on b.giheaderid = a.giheaderid
        join soheader c on c.soheaderid = b.soheaderid
        join sodetail g on g.soheaderid = b.soheaderid
        join gidetail ss on ss.giheaderid = b.giheaderid
        join product i on i.productid = ss.productid
        where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' 
        and c.companyid = {$row['companyid']}  and a.invoicedate between 
        '{$perioddate}' and  '{$dateadd}' and c.isdisplay=0 )z -- group by employeeid
        union
        select -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto,sum(hpp) as hpp from
        (select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,
        (a.qty*a.price) as nett,b.headernote,d.gireturdate,
        (
          select (p1.buyprice*p1.qty)
          from productdetailhist p1
          where p1.productid=c.productid and p1.slocid=c.slocid and p1.unitofmeasureid = c.uomid
          and p1.storagebinid = c.storagebinid and p1.referenceno = d.gireturno 
          and p1.gireturdetailid = c.gireturdetailid
        ) as hpp
        from notagirpro a
        join notagir b on b.notagirid=a.notagirid
        join gireturdetail c on c.gireturdetailid=a.gireturdetailid
        join giretur d on d.gireturid=b.gireturid
        join gidetail e on e.gidetailid=c.gidetailid
        join giheader f on f.giheaderid=d.giheaderid
        join sodetail g on g.sodetailid=e.sodetailid
        join soheader h on h.soheaderid=f.soheaderid
        join product i on i.productid = a.productid
        where h.companyid = {$row['companyid']} and b.recordstatus = 3 
        and d.gireturdate between '{$perioddate}' and '{$dateadd}' 
        and h.isdisplay=0
        order by notagirno,notagirproid
        )z -- group by employeeid 
        ) zz ";
      $row2 = Yii::app()->db->createCommand($sqlkum)->queryRow();


      $qbudget = "select sum(budgetamount)*-1 as budget from budget a
      where a.companyid={$row['companyid']}
      and accountcode BETWEEN '310101' and '310199999'
      and budgetdate = '{$perioddate}'";
      $budget = Yii::app()->db->createCommand($qbudget)->queryScalar();
      $gm=0;
      if($row1['netto']>0) $gm = 100-(100*$row1['hpp']/$row1['netto']);
      $this->pdf->row(array(
        $i,
        $row['companycode'],
        Yii::app()->format->formatCurrency($row1['netto']),
        Yii::app()->format->formatCurrency($gm),
        Yii::app()->format->formatCurrency($budget),
        Yii::app()->format->formatCurrency($row2['netto']),
      ));
      $i++;
    }

    if($datefirst!='') 
    {
      $this->pdf->addPage('A4',array(100,160));

      $this->pdf->setFont('Arial','',12);

      $this->pdf->text(10,7,'Weekly Report Sales(GM) Per Unit/Plant');
      $this->pdf->text(10,12,'Tanggal '.date(Yii::app()->params['dateviewfromdb'],strtotime($datefirst)).' s/d '.date(Yii::app()->params['dateviewfromdb'],strtotime($date2)));

      $this->pdf->SetFont('Arial','',9);
      $this->pdf->coldetailalign = array('C','C','C','C');
      $this->pdf->setwidths(array(10,25,40,70));
      $this->pdf->setbordercell(array('T','LT','BLT','BLT'));
      $this->pdf->row(array('No','Perusahaan','Weekly','Kumulatif'));
      $this->pdf->setwidths(array(10,25,30,10,30,40));
      $this->pdf->coldetailalign = array('L','L','C','C','C','C');
      $this->pdf->setbordercell(array('B','LB','LB','LB','LB','LB'));
      $this->pdf->row(array('','','Sales','GM','Budget','Sales'));

      $this->pdf->coldetailalign = array('L','L','R','C','R','R');
      $this->pdf->setFont('Arial','',8);
      foreach($dataReader as $row)
      {
        $sql1s = "select distinct sum(nominal) as nominal,sum(netto) as netto,sum(hpp)*-1 as hpp
          from
          (select sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto,sum(hpp) as hpp from
          (select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,ss.qty,a.headernote,c.employeeid,
          (select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
          (ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
          (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
          from gidetail zzb 
          join sodetail zza on zza.sodetailid = zzb.sodetailid
          where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett,
          ((select sum(distinct p.qty * buyprice)
          from productdetailhist p
          where p.productid=ss.productid and p.slocid=ss.slocid and p.unitofmeasureid=ss.unitofmeasureid 
          and p.storagebinid=ss.storagebinid and p.referenceno=b.gino
          and p.gidetailid = ss.gidetailid
          )) as hpp
          from invoice a 
          join giheader b on b.giheaderid = a.giheaderid
          join soheader c on c.soheaderid = b.soheaderid
          join sodetail g on g.soheaderid = b.soheaderid
          join gidetail ss on ss.giheaderid = b.giheaderid
          join product i on i.productid = ss.productid
          where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' 
          and c.companyid = {$row['companyid']}  and a.invoicedate between 
          '{$datefirst}' and  '{$date2}' and c.isdisplay=0 )z -- group by employeeid
          union
          select -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto,sum(hpp) as hpp from
          (select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,
          (a.qty*a.price) as nett,b.headernote,d.gireturdate,
          (
            select (p1.buyprice*p1.qty)
            from productdetailhist p1
            where p1.productid=c.productid and p1.slocid=c.slocid and p1.unitofmeasureid = c.uomid
            and p1.storagebinid = c.storagebinid and p1.referenceno = d.gireturno 
            and p1.gireturdetailid = c.gireturdetailid
          ) as hpp
          from notagirpro a
          join notagir b on b.notagirid=a.notagirid
          join gireturdetail c on c.gireturdetailid=a.gireturdetailid
          join giretur d on d.gireturid=b.gireturid
          join gidetail e on e.gidetailid=c.gidetailid
          join giheader f on f.giheaderid=d.giheaderid
          join sodetail g on g.sodetailid=e.sodetailid
          join soheader h on h.soheaderid=f.soheaderid
          join product i on i.productid = a.productid
          where h.companyid = {$row['companyid']} and b.recordstatus = 3 
          and d.gireturdate between '{$datefirst}' and '{$date2}' 
          and h.isdisplay=0
          order by notagirno,notagirproid
          )z -- group by employeeid 
          ) zz ";

        $this->pdf->setbordercell(array('','','','','',''));
        $row1s = Yii::app()->db->createCommand($sql1s)->queryRow();

        $sqlkums = "select distinct sum(nominal) as nominal,sum(netto) as netto,sum(hpp)*-1 as hpp
          from
          (select sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto,sum(hpp) as hpp from
          (select distinct ss.gidetailid,if(c.isdisplay=1,concat(a.invoiceno,'_D'),a.invoiceno) as invoiceno,a.invoicedate,ss.qty,a.headernote,c.employeeid,
          (select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
          (ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
          (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
          from gidetail zzb 
          join sodetail zza on zza.sodetailid = zzb.sodetailid
          where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett,
          ((select sum(distinct p.qty * buyprice)
          from productdetailhist p
          where p.productid=ss.productid and p.slocid=ss.slocid and p.unitofmeasureid=ss.unitofmeasureid 
          and p.storagebinid=ss.storagebinid and p.referenceno=b.gino
          and p.gidetailid = ss.gidetailid
          )) as hpp
          from invoice a 
          join giheader b on b.giheaderid = a.giheaderid
          join soheader c on c.soheaderid = b.soheaderid
          join sodetail g on g.soheaderid = b.soheaderid
          join gidetail ss on ss.giheaderid = b.giheaderid
          join product i on i.productid = ss.productid
          where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' 
          and c.companyid = {$row['companyid']}  and a.invoicedate between 
          '{$datefirst}' and  '{$date2}' and c.isdisplay=0 )z -- group by employeeid
          union
          select -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto,sum(hpp) as hpp from
          (select distinct a.notagirproid,b.notagirno,if(h.isdisplay=1,concat(replace(f.gino,'SJ','INV'),'_D'),replace(f.gino,'SJ','INV')) as invoiceno,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,
          (a.qty*a.price) as nett,b.headernote,d.gireturdate,
          (
            select (p1.buyprice*p1.qty)
            from productdetailhist p1
            where p1.productid=c.productid and p1.slocid=c.slocid and p1.unitofmeasureid = c.uomid
            and p1.storagebinid = c.storagebinid and p1.referenceno = d.gireturno 
            and p1.gireturdetailid = c.gireturdetailid
          ) as hpp
          from notagirpro a
          join notagir b on b.notagirid=a.notagirid
          join gireturdetail c on c.gireturdetailid=a.gireturdetailid
          join giretur d on d.gireturid=b.gireturid
          join gidetail e on e.gidetailid=c.gidetailid
          join giheader f on f.giheaderid=d.giheaderid
          join sodetail g on g.sodetailid=e.sodetailid
          join soheader h on h.soheaderid=f.soheaderid
          join product i on i.productid = a.productid
          where h.companyid = {$row['companyid']} and b.recordstatus = 3 
          and d.gireturdate between '{$datefirst}' and '{$date2}' 
          and h.isdisplay=0
          order by notagirno,notagirproid
          )z -- group by employeeid 
          ) zz ";
        $row2s = Yii::app()->db->createCommand($sqlkums)->queryRow();


        $qbudgets = "select sum(budgetamount)*-1 as budget from budget a
        where a.companyid={$row['companyid']}
        and accountcode BETWEEN '310101' and '310199999'
        and budgetdate = '{$datefirst}'";
        $budgets = Yii::app()->db->createCommand($qbudgets)->queryScalar();
        $gms=0;
        if($row1s['netto']>0) $gms = 100-(100*$row1s['hpp']/$row1s['netto']);
        $this->pdf->row(array(
          $l,
          $row['companycode'],
          Yii::app()->format->formatCurrency($row1s['netto']),
          Yii::app()->format->formatCurrency($gms),
          Yii::app()->format->formatCurrency($budgets),
          Yii::app()->format->formatCurrency($row2s['netto']),
        ));
        $l++;
      }
    }
    $this->pdf->Output();
  }
	//47
	public function RekapPerbandinganHPPPenjualanReturPerKastaPerGroupMaterialDiluarStandar($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct groupkastaid,groupname from
							(select distinct m.groupkastaid,m.groupname
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
							join materialgroup l on l.materialgroupid=j.materialgroupid
							join groupkasta m on m.groupkastaid=l.groupkastaid and m.groupkastaid > 1
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
							union
							select distinct p.groupkastaid,p.groupname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							join groupkasta p on p.groupkastaid=o.groupkastaid and p.groupkastaid > 1
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
							)z
							order by groupname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
		$totalqty3 = 0; $totalhpp3 = 0; $totalinvoice3 = 0;
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan-Retur Per Kasta Per Group Material Per Barang Diluar Standar Ketentuan GM';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		foreach($dataReader as $row)
		{
            $this->pdf->setFont('Arial','B',8);
            $this->pdf->text(10,$this->pdf->getY()+5,$row['groupname']);
            $this->pdf->setY($this->pdf->getY()+5);
			
			$sql1 = "select distinct materialgroupid,description,persengm from
							(select distinct l.materialgroupid,l.description,l.persengm,m.nourut
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
							join materialgroup l on l.materialgroupid=j.materialgroupid
							join materialgroup m on m.materialgroupid=l.parentmatgroupid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and l.groupkastaid = ".$row['groupkastaid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
							union
							select distinct o.materialgroupid,o.description,o.persengm,p.nourut
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							join materialgroup p on p.materialgroupid=o.parentmatgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and o.groupkastaid = ".$row['groupkastaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
							)z
							order by nourut
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty2 = 0; $totalhpp2 = 0; $totalinvoice2 = 0;
            
			foreach($dataReader1 as $row1)
			{
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->text(10,$this->pdf->getY()+5,$row1['description']);
				$this->pdf->text(10,$this->pdf->getY()+10,'KETENTUAN PERSENTASE GM: '.Yii::app()->format->formatCurrency($row1['persengm']).' %');
				$this->pdf->setY($this->pdf->getY()+13);
				
				$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(8,50,17,25,20,17,25,20,15));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Total HPP','HPP/Unit','Qty','Total Jual','Jual/Unit','GM');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R');
				$this->pdf->setY($this->pdf->getY());

				$sql2 = "select *
				from (select productname,sum(qty) as qty,sum(netto) as nilaiinvoice, SUM(nilaihpp) as nilaihpp, ifnull((1-(SUM(nilaihpp)/SUM(netto))),0) as gm from 
							(select productname,sum(qty) as qty,sum(nett) as netto,SUM(hpp) AS nilaihpp from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							,(select m.buyprice*-m.qty FROM productdetailhist m WHERE m.gidetailid=ss.gidetailid AND m.qty<0) AS hpp
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
							join materialgroup l on l.materialgroupid=j.materialgroupid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and l.groupkastaid = ".$row['groupkastaid']." and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
							)z group by productname
							union
							select productname,-1*sum(qty) as qty,-1*sum(nett) as netto,SUM(hpp) AS nilaihpp from
							(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							,(select p.buyprice*-p.qty FROM productdetailhist p WHERE p.gireturdetailid=c.gireturdetailid) AS hpp
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and o.groupkastaid = ".$row['groupkastaid']." and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
							)z group by productname )zz 
							group by productname order by productname) zzz
							where 100 * gm < {$row1['persengm']}
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$i=0; $totalqty = 0; $totalhpp = 0; $totalinvoice = 0;
				
				foreach($dataReader2 as $row2)
				{
					if($row2['qty'] <> 0){$hargahpp = $row2['nilaihpp']/$row2['qty']; $hargajual = $row2['nilaiinvoice']/$row2['qty'];}else{$hargahpp = 0; $hargajual = 0;}
					$i+=1;
					$this->pdf->setFont('Arial','',8);
					$this->pdf->row(array(
						$i,
						$row2['productname'],
						Yii::app()->format->formatCurrency($row2['qty']),
						Yii::app()->format->formatCurrency($row2['nilaihpp']/$per),
						Yii::app()->format->formatCurrency(($hargahpp)/$per),
						Yii::app()->format->formatCurrency($row2['qty']),
						Yii::app()->format->formatCurrency($row2['nilaiinvoice']/$per),
						Yii::app()->format->formatCurrency(($hargajual)/$per),
						Yii::app()->format->formatCurrency(100*$row2['gm']),
					));
					$totalqty += ($row2['qty']);
					$totalhpp += ($row2['nilaihpp']/$per);
					$totalinvoice += ($row2['nilaiinvoice']/$per);
				}

				$ag = 0; $bg = 0; $cg = 0;

				if ($totalqty != 0) {
					$ag = $totalhpp / $totalqty;
					$bg = $totalinvoice / $totalqty;
				}
				if ($totalinvoice != 0) {
					$cg = $totalhpp/$totalinvoice;
				}

				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'',
					'JUMLAH '.$row1['description'],
					Yii::app()->format->formatCurrency($totalqty),
					Yii::app()->format->formatCurrency($totalhpp),
					Yii::app()->format->formatCurrency($ag),
					Yii::app()->format->formatCurrency($totalqty),
					Yii::app()->format->formatCurrency($totalinvoice),
					Yii::app()->format->formatCurrency($bg),
					Yii::app()->format->formatCurrency(100-(($cg)*100)),
				));
				
				$totalqty2 += $totalqty;
				$totalhpp2 += $totalhpp;
				$totalinvoice2 += $totalinvoice;
			}
			$ag2 = 0; $bg2 = 0; $cg2 = 0;
			if ($totalqty2 != 0) {
				$ag2 = $totalhpp2 / $totalqty2;
				$bg2 = $totalinvoice2 / $totalqty2;
			}
			if ($totalinvoice2 != 0) {
				$cg2 = $totalhpp2/$totalinvoice2;
			}
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
				'',
				'TOTAL '.$row['groupname'],
				Yii::app()->format->formatCurrency($totalqty2),
				Yii::app()->format->formatCurrency($totalhpp2),
				Yii::app()->format->formatCurrency($ag2),
				Yii::app()->format->formatCurrency($totalqty2),
				Yii::app()->format->formatCurrency($totalinvoice2),
				Yii::app()->format->formatCurrency($bg2),
				Yii::app()->format->formatCurrency(100-(($cg2)*100)),
			));
				
			$totalqty3 += $totalqty2;
			$totalhpp3 += $totalhpp2;
			$totalinvoice3 += $totalinvoice2;
		}
		$a = 0;$b = 0;$c = 0;
		if ($totalqty3 != 0) {
			$a = $totalhpp3 / $totalqty3;
			$b = $totalinvoice3 / $totalqty3;
		}
		if ($totalinvoice3 != 0) {
			$c = $totalhpp3/$totalinvoice3;
		}
		$this->pdf->sety($this->pdf->gety()+5);
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'',
            'GRAND TOTAL',
			Yii::app()->format->formatCurrency($totalqty3),
			Yii::app()->format->formatCurrency($totalhpp3),
			Yii::app()->format->formatCurrency($a),
			Yii::app()->format->formatCurrency($totalqty3),
			Yii::app()->format->formatCurrency($totalinvoice3),
			Yii::app()->format->formatCurrency($b),
			Yii::app()->format->formatCurrency(100-(($c)*100)),
		));
		$this->pdf->Output();
	}
	//48
	public function RekapHppActualVsBom($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "SELECT DISTINCT d.slocid,d.sloccode
						FROM productoutputfg a
						JOIN productoutput b ON b.productoutputid=a.productoutputid
						JOIN product c ON c.productid=a.productid
						JOIN sloc d ON d.slocid=a.slocid
						JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
						JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
						JOIN storagebin g ON g.storagebinid=a.storagebinid
						WHERE b.companyid = ".$companyid." AND b.recordstatus = getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.sloccode LIKE '%".$sloc."%' AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
						ORDER BY sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
            
		
		$this->pdf->companyid = $companyid;
		
		$this->pdf->title='Rekap HPP Actual Hasil Produksi VS BOM';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','F4');

		$this->pdf->sety($this->pdf->gety());
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(140,60,60,55));
		$this->pdf->colheader = array('','Produksi Actual','BOM','');
		$this->pdf->RowHeader();
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(120,15,20,25,30,20,25,30,15,15));
		$this->pdf->colheader = array('Nama Barang','Satuan','Qty','Price','Jumlah','Qty','Price','Jumlah','% Qty','% Nilai');
		$this->pdf->RowHeader();
    
		$qty2 = 0;
		$buyprice2 = 0;
		$jumlah2 = 0;
		$qtybom2 = 0;
		$buypricebom2 = 0;
		$jumlahbom2 = 0;
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);                
			$this->pdf->text(10,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(28,$this->pdf->gety()+5,': '.$row['sloccode']);
			$sql1 = "select distinct productid,productname, productoutputfgid, bomid, uomcode, sum(qty) as qty, sum(qty*buyprice)/sum(qty) as buyprice, sum(jumlah) as jumlah,productoutputdate
			from (SELECT DISTINCT c.productid,c.productname,b.productoutputid,b.productoutputno,b.productoutputdate,a.productoutputfgid,j.qty,j.buyprice,j.qty * j.buyprice as jumlah,h.unitofmeasureid,h.uomcode,i.bomid,i.bomversion
					FROM productoutputfg a
					JOIN productoutput b ON b.productoutputid=a.productoutputid
					JOIN product c ON c.productid=a.productid
					JOIN sloc d ON d.slocid=a.slocid
					JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
					JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
					JOIN storagebin g ON g.storagebinid=a.storagebinid
					JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
					JOIN billofmaterial i ON i.bomid=a.bomid
					JOIN productdetailhist j on j.productoutputfgid=a.productoutputfgid AND j.productid=a.productid and j.qty > 0
					WHERE b.companyid = ".$companyid." AND b.recordstatus=3 AND c.productname LIKE '%".$product."%' AND d.slocid = ".$row['slocid']." AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
					ORDER BY productoutputdate,productoutputno,productname) z
					group by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$qty1 = 0;
			$buyprice1 = 0;
			$jumlah1 = 0;
			$qtybom1 = 0;
			$buypricebom1 = 0;
			$jumlahbom1 = 0;
			$this->pdf->sety($this->pdf->gety()+5);
			foreach($dataReader1 as $row1)				
			{
				
				$sql2 = "SELECT ".$row1['qty']." as qtybom,sum(buyprice) as buypricebom,".$row1['qty']." * sum(buyprice) as jumlahbom
				    FROM (SELECT a.qty * (SELECT r.buyprice FROM productdetail r WHERE r.productid=a.productid AND r.slocid=e.slocid AND r.unitofmeasureid=a.uomid Limit 1) as buyprice
								FROM bomdetail a
								JOIN billofmaterial b ON b.bomid=a.bomid
								JOIN product c ON c.productid=a.productid
								LEFT JOIN productplant e ON e.productid=a.productid AND e.unitofissue=a.uomid AND e.slocid=(SELECT q.slocid FROM productoutputfg q WHERE q.productoutputfgid = ".$row1['productoutputfgid'].")
								LEFT JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
								LEFT JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
								WHERE c.isstock = 1 AND a.bomid = ".$row1['bomid']."
						UNION
								SELECT k.qty as buyprice
									FROM bomdetail k
									JOIN billofmaterial l ON l.bomid=k.bomid
									JOIN product m ON m.productid=k.productid
									JOIN productoutputfg n ON n.bomid=l.bomid
									JOIN unitofmeasure o ON o.unitofmeasureid=k.uomid
									WHERE m.isstock = 0 AND n.productoutputfgid = ".$row1['productoutputfgid'].") z
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				foreach($dataReader2 as $row2)				
				{
				
					$foh = "(SELECT if(e.isfohulbom=0,if(e.productname LIKE '%busa balokan%' OR e.productname LIKE '%busa cylinder%',if(e.tinggi>0,(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * ((e.panjang * e.lebar * e.tinggi)/1000000) * e.density,(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * getVolumeCylinder(e.panjang,e.lebar/2) * e.density),(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * f.cycletime),(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=f.bomid AND y.productname LIKE 'FOH %'))
						FROM productoutputfg a
						JOIN productoutput b ON b.productoutputid=a.productoutputid
						JOIN productplant c ON c.productid=a.productid AND c.slocid=a.slocid AND c.unitofissue=a.uomid
						JOIN sloc d ON d.slocid=a.slocid
						JOIN product e ON e.productid=a.productid
						JOIN billofmaterial f ON f.bomid=a.bomid 
						WHERE a.productoutputfgid = ".$row1['productoutputfgid']." AND b.companyid = ".$companyid.")
					";

					$ul = "(SELECT if(e.isfohulbom=0,if(e.productname LIKE '%busa balokan%' OR e.productname LIKE '%busa cylinder%',if(e.tinggi>0,(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * ((e.panjang * e.lebar * e.tinggi)/1000000) * e.density,(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * getVolumeCylinder(e.panjang,e.lebar/2) * e.density),(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * f.cycletime),(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=f.bomid AND y.productname LIKE 'UL %'))
						FROM productoutputfg a
						JOIN productoutput b ON b.productoutputid=a.productoutputid
						JOIN productplant c ON c.productid=a.productid AND c.slocid=a.slocid AND c.unitofissue=a.uomid
						JOIN sloc d ON d.slocid=a.slocid
						JOIN product e ON e.productid=a.productid
						JOIN billofmaterial f ON f.bomid=a.bomid 
						WHERE a.productoutputfgid = ".$row1['productoutputfgid']." AND b.companyid = ".$companyid.")
					";

					$cad = "(SELECT if(isfohulbom=0,IFNULL((sum(qtydetail*price)) * 0.03,0),cadang)
									from (SELECT ifnull(a.qty/b.qtyoutput,0) as qtydetail,a.productid,e.isfohulbom,ifnull(c.buyprice,0) as price,(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=b.bomid AND y.productname LIKE 'CADANGAN %') AS cadang
									from productoutputdetail a
									join productoutputfg b on b.productoutputfgid = a.productoutputfgid
									join productdetailhist c on c.productoutputdetailid=a.productoutputdetailid
									join product d on d.productid = a.productid
									join product e on e.productid = b.productid
									where a.productoutputfgid = ".$row1['productoutputfgid']." and d.isstock = 1
									AND (a.bomid IS NULL OR a.bomid = 0)) z)
					";

					$sql3 = "select productname,sum(qty) as qty,sum(buyprice) as buyprice,sum(jumlah) as jumlah,unitofmeasureid,uomcode,isstock,sum(qtybom) as qtybom,if(sum(qtybom)>0,sum(jumlahbom)/sum(qtybom),0) as buypricebom,sum(jumlahbom) as jumlahbom
							FROM (select c.productname,-sum(j.qty) as qty,-sum(j.qty * j.buyprice)/-sum(j.qty) as buyprice,-sum(j.qty * j.buyprice) as jumlah,h.unitofmeasureid,h.uomcode,c.isstock,0 as qtybom,0 as jumlahbom
									FROM productoutputdetail a
									JOIN productoutput b ON b.productoutputid=a.productoutputid
									join productoutputfg p on p.productoutputid = b.productoutputid and p.productoutputfgid = a.productoutputfgid 
									JOIN product c ON c.productid=a.productid
									JOIN sloc d ON d.slocid=a.toslocid
									JOIN productplant e ON e.productid=a.productid AND e.slocid=a.toslocid AND e.unitofissue=a.uomid
									JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
									JOIN storagebin g ON g.storagebinid=a.storagebinid
									JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
									JOIN productdetailhist j on j.productoutputdetailid=a.productoutputdetailid AND j.productid=a.productid
									WHERE c.isstock = 1 
									and p.productid = {$row1['productid']} and b.recordstatus=3
									and b.productoutputdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "' and b.companyid={$companyid}
									GROUP BY productname
							UNION
									SELECT m.productname,sum(n.qtyoutput) as qty,(case when m.productname like 'FOH%' then ".$foh." else case when m.productname like 'UL%' then ".$ul." else case when m.productname like 'CAD%' then ".$cad." else 0 end end end) as buyprice,sum(n.qtyoutput * case when m.productname like 'FOH%' then ".$foh." else case when m.productname like 'UL%' then ".$ul." else case when m.productname like 'CAD%' then ".$cad." else 0 end end end) AS jumlah,o.unitofmeasureid,o.uomcode,m.isstock,sum(n.qtyoutput) as qtybom,sum(n.qtyoutput * k.qty) as jumlahbom
									FROM bomdetail k
									JOIN billofmaterial l ON l.bomid=k.bomid
									JOIN product m ON m.productid=k.productid
									JOIN productoutputfg n ON n.bomid=l.bomid
									join productoutput p on p.productoutputid = n.productoutputid
									JOIN unitofmeasure o ON o.unitofmeasureid=k.uomid
									WHERE m.isstock = 0 
									-- AND n.productoutputfgid = ".$row1['productoutputfgid']."
									and l.productid = {$row1['productid']}
									and p.productoutputdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "' and p.companyid={$companyid}
									GROUP BY productname
							UNION
									SELECT c.productname,0 as qty,0 as buyprice,0 as jumlah,h.unitofmeasureid,h.uomcode,c.isstock,".$row1['qty']." * a.qty as qtybom,
									".$row1['qty']." * a.qty * (SELECT r.buyprice FROM productdetail r WHERE r.productid=a.productid AND r.slocid=e.slocid AND r.unitofmeasureid=a.uomid Limit 1) as jumlahbom
									FROM bomdetail a
									JOIN billofmaterial b ON b.bomid=a.bomid
									JOIN product c ON c.productid=a.productid
									LEFT JOIN productplant e ON e.productid=a.productid AND e.unitofissue=a.uomid AND e.slocid=(SELECT q.slocid FROM productoutputfg q WHERE q.productoutputfgid = ".$row1['productoutputfgid'].")
									LEFT JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
									LEFT JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
									WHERE c.isstock = 1 AND a.bomid in (".$row1['bomid'].")
									GROUP BY productname
							) z
							GROUP BY productname,uomcode
							ORDER BY isstock desc, productname";
					$dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();

					$this->pdf->sety($this->pdf->gety()+2);
					$this->pdf->coldetailalign = array('L','C','R','R','R','R','R','R','R','R','R');
					$this->pdf->SetFont('Arial','BI',8);
					
					$this->pdf->setwidths(array(120,15,20,25,30,20,25,30,15,15));
					$this->pdf->row(array(
						$row1['productname'],$row1['uomcode'],
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qty']),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['buyprice']/$per),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlah']/$per),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qtybom']),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['buypricebom']/$per),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['jumlahbom']/$per),
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row1['qty']/$row2['qtybom'])).' %',
						Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row2['jumlahbom']== 0 ? '0' : $row1['jumlah']/$row2['jumlahbom'])).' %',
					));

					foreach($dataReader3 as $row3)
					{
						$this->pdf->coldetailalign = array('L','C','R','R','R','R','R','R','R','R');
						$this->pdf->setFont('Arial','',8);
						$this->pdf->row(array(
							'     - '.$row3['productname'],$row3['uomcode'],
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['qty']),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['buyprice']/$per),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['jumlah']/$per),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['qtybom']),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['buypricebom']/$per),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row3['jumlahbom']/$per),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row3['qtybom']== 0 ? '0' : $row3['qty']/$row3['qtybom'])),
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],($row3['jumlahbom']== 0 ? '0' : $row3['jumlah']/$row3['jumlahbom'])),
						));
					}

					$qty1 += $row1['qty'];
					$buyprice1 += $row1['buyprice'];
					$jumlah1 += $row1['jumlah'];
					$qtybom1 += $row2['qtybom'];
					$buypricebom1 += $row2['buypricebom'];
					$jumlahbom1 += $row2['jumlahbom'];
										
					$this->pdf->sety($this->pdf->gety()+2);
					$this->pdf->checkPageBreak(10);
				}
			}
			$this->pdf->setFont('Arial','B',10);
			$this->pdf->setY($this->pdf->getY()+5);
			$this->pdf->row(array(
				'TOTAL GUDANG : '.$row['sloccode'],
				'',
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qty1),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$buyprice1/$per),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlah1/$per),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtybom1),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$buypricebom1/$per),
				Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahbom1/$per),
			));

			$qty2 += $qty1;
			$buyprice2 += $buyprice1;
			$jumlah2 += $jumlah1;
			$qtybom2 += $qtybom1;
			$buypricebom2 += $buypricebom1;
			$jumlahbom2 += $jumlahbom1;

		}
		$this->pdf->setY($this->pdf->getY()+7);
		$this->pdf->setFont('Arial','I',11);
		$this->pdf->row(array(
			'TOTAL PRODUKSI ',
			'',
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qty2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$buyprice2/$per),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlah2/$per),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtybom2),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$buypricebom2/$per),
			Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahbom2/$per),
		));
		$this->pdf->Output();	
	}
/*	public function RekapHppActualVsBom($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
	parent::actionDownload();
	$sql = "SELECT DISTINCT d.slocid,d.sloccode
	FROM productoutputfg a
	JOIN productoutput b ON b.productoutputid=a.productoutputid
	JOIN product c ON c.productid=a.productid
	JOIN sloc d ON d.slocid=a.slocid
	JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
	JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
	JOIN storagebin g ON g.storagebinid=a.storagebinid
	WHERE b.companyid = ".$companyid." AND b.recordstatus = getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.sloccode LIKE '%".$sloc."%' AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
	ORDER BY sloccode";
	$dataReader=Yii::app()->db->createCommand($sql)->queryAll();


	$this->pdf->companyid = $companyid;

	$this->pdf->title='Rekap HPP Actual Hasil Produksi VS BOM';
	$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
	$this->pdf->AddPage('L','Letter');

	$this->pdf->sety($this->pdf->gety());
	$this->pdf->setFont('Arial','B',8);
	$this->pdf->colalign = array('C','C','C');
	$this->pdf->setwidths(array(140,60,60));
	$this->pdf->colheader = array('','Produksi Actual','BOM');
	$this->pdf->RowHeader();
	$this->pdf->colalign = array('C','C','C','C','C','C','C','C');
	$this->pdf->setwidths(array(100,15,20,25,30,20,25,30));
	$this->pdf->colheader = array('Nama Barang','Satuan','Qty','Price','Jumlah','Qty','Price','Jumlah');
	$this->pdf->RowHeader();

	$qty2 = 0;
	$buyprice2 = 0;
	$jumlah2 = 0;
	$qtybom2 = 0;
	$buypricebom2 = 0;
	$jumlahbom2 = 0;
	foreach($dataReader as $row)
	{
	$this->pdf->SetFont('Arial','B',10);
	$this->pdf->text(10,$this->pdf->gety()+5,'GUDANG');$this->pdf->text(28,$this->pdf->gety()+5,': '.$row['sloccode']);
	$sql1 = "select distinct productid,productname, productoutputfgid, bomid, uomcode, sum(qty) as qty, sum(qty*buyprice)/sum(qty) as buyprice, sum(jumlah) as jumlah
	from (SELECT DISTINCT c.productid,c.productname,b.productoutputid,b.productoutputno,b.productoutputdate,a.productoutputfgid,j.qty,j.buyprice,j.qty * j.buyprice as jumlah,h.unitofmeasureid,h.uomcode,i.bomid,i.bomversion
	FROM productoutputfg a
	JOIN productoutput b ON b.productoutputid=a.productoutputid
	JOIN product c ON c.productid=a.productid
	JOIN sloc d ON d.slocid=a.slocid
	JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
	JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
	JOIN storagebin g ON g.storagebinid=a.storagebinid
	JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
	JOIN billofmaterial i ON i.bomid=a.bomid
	JOIN productdetailhist j on j.productoutputfgid=a.productoutputfgid AND j.productid=a.productid and j.qty > 0
	WHERE b.companyid = ".$companyid." AND b.recordstatus=getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.slocid = ".$row['slocid']." AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
	ORDER BY productoutputdate,productoutputno,productname) z
	group by productname";
	$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

	$qty1 = 0;
	$buyprice1 = 0;
	$jumlah1 = 0;
	$qtybom1 = 0;
	$buypricebom1 = 0;
	$jumlahbom1 = 0;
	$this->pdf->sety($this->pdf->gety()+5);
	foreach($dataReader1 as $row1)
	{
	$sql2 = "SELECT ".$row1['qty']." as qtybom,sum(buyprice) as buypricebom,".$row1['qty']." * sum(buyprice) as jumlahbom
	FROM (SELECT a.qty * (SELECT r.buyprice FROM productdetail r WHERE r.productid=a.productid AND r.slocid=e.slocid AND r.unitofmeasureid=a.uomid Limit 1) as buyprice
	FROM bomdetail a
	JOIN billofmaterial b ON b.bomid=a.bomid
	JOIN product c ON c.productid=a.productid
	LEFT JOIN productplant e ON e.productid=a.productid AND e.unitofissue=a.uomid AND e.slocid=(SELECT q.slocid FROM productoutputfg q WHERE q.productoutputfgid = ".$row1['productoutputfgid'].")
	LEFT JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
	LEFT JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
	WHERE c.isstock = 1 AND a.bomid = ".$row1['bomid']."
	UNION
	SELECT k.qty as buyprice
	FROM bomdetail k
	JOIN billofmaterial l ON l.bomid=k.bomid
	JOIN product m ON m.productid=k.productid
	JOIN productoutputfg n ON n.bomid=l.bomid
	JOIN unitofmeasure o ON o.unitofmeasureid=k.uomid
	WHERE m.isstock = 0 AND n.productoutputfgid = ".$row1['productoutputfgid'].") z
	";
	$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();

	foreach($dataReader2 as $row2)
	{

	$this->pdf->sety($this->pdf->gety()+2);
	$this->pdf->coldetailalign = array('L','C','R','R','R','R','R','R');
	$this->pdf->SetFont('Arial','BI',8);

	$this->pdf->row(array(
	$row1['productname'],$row1['uomcode'],
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qty']),
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['buyprice']/$per),
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['jumlah']/$per),
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qtybom']),
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['buypricebom']/$per),
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['jumlahbom']/$per),
	));

	$qty1 += $row1['qty'];
	$buyprice1 += $row1['buyprice'];
	$jumlah1 += $row1['jumlah'];
	$qtybom1 += $row2['qtybom'];
	$buypricebom1 += $row2['buypricebom'];
	$jumlahbom1 += $row2['jumlahbom'];

	$this->pdf->sety($this->pdf->gety()+2);
	$this->pdf->checkPageBreak(10);
	}
	}
	$this->pdf->setY($this->pdf->getY()+5);
	$this->pdf->row(array(
	'TOTAL GUDANG : '.$row['sloccode'],
	'',
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qty1),
	//Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$buyprice1/$per),
	'',
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlah1/$per),
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtybom1),
	//Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$buypricebom1/$per),
	'',
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahbom1/$per),
	));

	$qty2 += $qty1;
	$buyprice2 += $buyprice1;
	$jumlah2 += $jumlah1;
	$qtybom2 += $qtybom1;
	$buypricebom2 += $buypricebom1;
	$jumlahbom2 += $jumlahbom1;

	}
	$this->pdf->setY($this->pdf->getY()+7);
	$this->pdf->setFont('Arial','I',11);
	$this->pdf->row(array(
	'TOTAL PRODUKSI ',
	'',
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qty2),
	//Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$buyprice2/$per),
	'',
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlah2/$per),
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$qtybom2),
	//Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$buypricebom2/$per),
	'',
	Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$jumlahbom2/$per),
	));
	$this->pdf->Output();
	}
*/	
	//49
	
	
		
		
	public function actionDownXLS()
	{
		parent::actionDownload();
		if (isset($_GET['lro']) && isset($_GET['company']) && isset($_GET['sloc']) && isset($_GET['materialgroup']) && isset($_GET['storagebin']) && isset($_GET['product']) && isset($_GET['productcollect']) && isset($_GET['account']) && isset($_GET['startacccode']) && isset($_GET['endacccode']) && isset($_GET['keluar3']) && isset($_GET['startdate']) && isset($_GET['enddate']) && isset($_GET['per']))
		{
			if ($_GET['lro'] == 1)
			{
				$this->RekapPersediaanBarangDetailXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}	
			else
			if ($_GET['lro'] == 2)
			{
				$this->RekapPenerimaanPersediaanBarangDetailXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}	
			else
			if ($_GET['lro'] == 3)
			{
				$this->RekapPengeluaranPersediaanBarangDetailXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}		
			else
			if ($_GET['lro'] == 4)
			{
				$this->HPPXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}			
			else
			if ($_GET['lro'] == 5)
			{
				$this->HppBillOfMaterialXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 6)
			{
				$this->RincianNilaiPemakaianStokXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 7)
			{
				$this->RekapNilaiPemakaianStokXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 8)
			{
				$this->RincianNilaiStockOpnameXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 9)
			{
				$this->RekapNilaiStockOpnameXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 10)
			{
				$this->RincianHargaPokokPenjualanXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 11)
			{
				$this->RekapHargaPokokPenjualanXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 12)
			{
				$this->RekapPersediaanBarangDetailDataHargaXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 13)
			{
				$this->RekapPerbandinganHPPPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 14)
			{
				$this->RekapPerbandinganHPPReturPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 15)
			{
				$this->RekapPerbandinganHPPPenjualanPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}	
			else 
			if ($_GET['lro'] == 16) 
			{
				$this->RekapPersediaanBarangNotMovingFGXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 17) 
			{
				$this->RekapPersediaanBarangSlowMovingXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 18) 
			{
				$this->RekapPersediaanBarangFastMovingXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if($_GET['lro'] == 19)
			{
				$this->KartuStokBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 20)
			{
				$this->RekapPersediaanBarangDetailPersediaanXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 21)
			{
				$this->HppActualXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 22)
			{
				$this->RekapPersediaanBarangDetailNotPersediaanXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 23)
			{
				$this->RekapPerbandinganHPPPenjualanReturPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 24)
			{
				$this->HppActualVsBomXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 25)
			{
				$this->RekapPersediaanBarangDetailPersediaanSCXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 26)
			{
				$this->RekapPersediaanBarangDetailNewXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 27)
			{
				$this->RekapPersediaanBarangDetailRakXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 28)
			{
				$this->RekapPerbandinganHPPPenjualanPerCustomerPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 30)
			{
				$this->RincianPerbandingaHargaBarangperGudangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 31)
			{
				$this->RincianNilaiUpahperBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 32)
			{
				$this->RincianNilaiFOHperBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 32)
			{
				$this->RekapPerbandinganHPPPenjualanPerKastaPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 33)
			{
				$this->RekapPerbandinganHPPPenjualanPerKastaPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 34)
			{
				$this->RekapPerbandinganHPPPenjualanTahunLaluVSTahunIniPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 35)
			{
				$this->RekapPersediaanPerCompanyXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 36)
			{
				$this->RekapPersediaanBarangNotMovingBBWIPXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 37)
			{
				$this->RekapPerbandinganHPPPenjualanPerKastaPerGroupMaterialXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 38)
			{
				$this->RekapPerbandinganHPPPenjualanReturPerKastaPerGroupMaterialXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 39)
			{
				$this->RekapPerbandinganHPPPenjualanReturPerProvinsiPerZonaPerSubzonaPerCustomerPerMaterialgroupXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 40)
			{
				$this->RekapPotensiPenjualanReturPelunasanGMPerCustomerXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 41)
			{
				$this->BahanbakukimiaXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 42)
			{
				$this->RekapPerbandinganHPPPenjualanReturPerProvinsiPerZonaPerSubzonaPerCustomerXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 43)
			{
				$this->RekapPotensiTargetPenjualanReturPelunasanGMPerProvinsiPerZonaPerSubzonaPerTipePerKategoriPerCustomerXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 44)
			{
				$this->RekapPotensiTargetPenjualanReturPelunasanGMPerProvinsiPerZonaPerSubzonaPerCustomerXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 45)
			{
				$this->WeeklyReportGMNextMondayXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 46)
			{
				$this->WeeklyReportGMPreviousMondayXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 47)
			{
				$this->RekapPerbandinganHPPPenjualanReturPerKastaPerGroupMaterialDiluarStandarXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 48)
			{
				$this->RekapHppActualVsBomXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 49)
			{
				$this->RekapPerformaProdukXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else 
			if ($_GET['lro'] == 50)
			{
				$this->RekapProdukDariKainXLS($_GET['company'],$_GET['sloc'],$_GET['materialgroup'],$_GET['storagebin'],$_GET['product'],$_GET['productcollect'],$_GET['account'],$_GET['startacccode'],$_GET['endacccode'],$_GET['keluar3'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
		}
	}
	
	//1
	public function RekapPersediaanBarangDetailXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname='rekappersediaanbarangdetail';
		parent::actionDownxls();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		if (($_GET['startacccode'] !== '')&&($_GET['endacccode'] !== '')) {
			$betacccode = " and q.accountcode between '".$_GET['startacccode']."' and '".$_GET['endacccode']."' ";
		} else {$betacccode = "";}
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%' {$betacccode}) zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
						$line=5;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Gudang')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sloccode'])
				->setCellValueByColumnAndRow(6,$line,'Material Group')
				->setCellValueByColumnAndRow(7,$line,': '.$row['description'])
				->setCellValueByColumnAndRow(12,$line,'Nama Akun')
				->setCellValueByColumnAndRow(13,$line,': '.$row['accountname']);							
			if ($storagebin == null)			
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'');}
			else
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'Rak')
				->setCellValueByColumnAndRow(4,$line,': '.$storagebin);}
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Satuan')					
				->setCellValueByColumnAndRow(3,$line,'Qty')
				->setCellValueByColumnAndRow(4,$line,'Harga')
				->setCellValueByColumnAndRow(5,$line,'Nilai')
				->setCellValueByColumnAndRow(6,$line,'Qty')
				->setCellValueByColumnAndRow(7,$line,'Nilai')
				->setCellValueByColumnAndRow(8,$line,'Qty')
				->setCellValueByColumnAndRow(9,$line,'Harga')
				->setCellValueByColumnAndRow(10,$line,'Nilai')
				->setCellValueByColumnAndRow(11,$line,'Qty')
				->setCellValueByColumnAndRow(12,$line,'Nilai')
				->setCellValueByColumnAndRow(13,$line,'Qty')
				->setCellValueByColumnAndRow(14,$line,'Nilai')
				->setCellValueByColumnAndRow(15,$line,'');
			$line++;
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and l.slocid = ".$row['slocid']." and o.materialgroupid = ".$row['materialgroupid'].") zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
				
			foreach($dataReader1 as $row1)
			{
              
              
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,$row1['uomcode'])
					->setCellValueByColumnAndRow(3,$line,$row1['qtyawal'])
					->setCellValueByColumnAndRow(4,$line,$row1['hargaawal']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['jumlahawal']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['qtymasuk'])
					->setCellValueByColumnAndRow(7,$line,$row1['jumlahmasuk']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['qtytersedia'])
					->setCellValueByColumnAndRow(9,$line,($row1['hargatersedia']/$per))
					->setCellValueByColumnAndRow(10,$line,($row1['jumlahtersedia']/$per))
					->setCellValueByColumnAndRow(11,$line,$row1['qtykeluar'])
					->setCellValueByColumnAndRow(12,$line,$row1['jumlahkeluar']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['qtyakhir'])
					->setCellValueByColumnAndRow(14,$line,$row1['jumlahakhir']/$per)
					->setCellValueByColumnAndRow(15,$line,$row1['minus']);
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;				
				$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['sloccode'].' - '.$row['description'])
				->setCellValueByColumnAndRow(3,$line,$qtyawal)
				->setCellValueByColumnAndRow(5,$line,$nilaiawal)
				->setCellValueByColumnAndRow(6,$line,$qtymasuk)
				->setCellValueByColumnAndRow(7,$line,$nilaimasuk)
				->setCellValueByColumnAndRow(8,$line,$qtytersedia)
				->setCellValueByColumnAndRow(10,$line,$nilaitersedia)
				->setCellValueByColumnAndRow(11,$line,$qtykeluar)
				->setCellValueByColumnAndRow(12,$line,$nilaikeluar)
				->setCellValueByColumnAndRow(13,$line,$qtyakhir)
				->setCellValueByColumnAndRow(14,$line,$nilaiakhir);
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			$line +=2;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(3,$line,$qtyawal2)
			->setCellValueByColumnAndRow(5,$line,$nilaiawal2)
			->setCellValueByColumnAndRow(6,$line,$qtymasuk2)
			->setCellValueByColumnAndRow(7,$line,$nilaimasuk2)
			->setCellValueByColumnAndRow(8,$line,$qtytersedia2)
			->setCellValueByColumnAndRow(10,$line,$nilaitersedia2)
			->setCellValueByColumnAndRow(11,$line,$qtykeluar2)
			->setCellValueByColumnAndRow(12,$line,$nilaikeluar2)
			->setCellValueByColumnAndRow(13,$line,$qtyakhir2)
			->setCellValueByColumnAndRow(14,$line,$nilaiakhir2);
		
		$this->getFooterXLS($this->phpExcel);	
	}
	//2
    public function RekapPenerimaanPersediaanBarangDetailXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
    {
        $this->menuname='rekappenerimaanpersediaanbarangdetail';
		parent::actionDownxls();
        $qtygr2=0;$jumlahgr2=0;$qtygrr2=0;$jumlahgrr2=0;$qtytfs2=0;$jumlahtfs2=0;$qtyop2=0;$jumlahop2=0;$qtytso2=0;$jumlahtso2=0;$qtytotal2=0;$jumlahtotal2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description from (
        select a.productname,a.uomcode,a.slocid,a.sloccode,e.materialgroupid,e.description,
          case when a.referenceno like 'GR-%' then sum(a.qty) else 0 end as qtygr,
          case when a.referenceno like 'GR-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgr,
          case when a.referenceno like 'GIR-%' then sum(a.qty) else 0 end as qtygrr,
          case when a.referenceno like 'GIR-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgrr,
          case when a.referenceno like 'TFS-%' then sum(a.qty) else 0 end as qtytfs,
          case when a.referenceno like 'TFS-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtfs,
          case when a.referenceno like 'OP-%' then sum(a.qty) else 0 end as qtyop,
          case when a.referenceno like 'OP-%' then sum(a.qty*a.buyprice) else 0 end as jumlahop,
          case when a.referenceno like 'TSO-%' then sum(a.qty) else 0 end as qtytso,
          case when a.referenceno like 'TSO-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtso,
          case when a.referenceno like '%%' then sum(a.qty) else 0 end as qtytotal,
          case when a.referenceno like '%%' then sum(a.qty*a.buyprice) else 0 end as jumlahtotal
          from productdetailhist a
          join productplant b on b.productid=a.productid and b.slocid=a.slocid and b.unitofissue=a.unitofmeasureid
          join sloc c on c.slocid=a.slocid
          join plant d on d.plantid=c.plantid
          join materialgroup e on e.materialgroupid=b.materialgroupid
          where d.companyid = ".$companyid." and a.qty > 0 and a.sloccode like '%".$sloc."%' and e.description like '%".$materialgroup."%' and a.productname like '%".$product."%'
          and a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
          group by a.productid,a.slocid,a.unitofmeasureid
          order by productname) zz          
          where qtygr <> 0 or qtygrr <> 0 or qtytfs <> 0 or qtyop <> 0 or qtytso <> 0
          order by sloccode, description";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
        
        foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
						
        $line=5;
        
        foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Gudang')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sloccode'])
				->setCellValueByColumnAndRow(8,$line,'Material Group')
				->setCellValueByColumnAndRow(9,$line,': '.$row['description']);
            $line++;
            
            $this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Satuan')					
				->setCellValueByColumnAndRow(3,$line,'Qty')
				->setCellValueByColumnAndRow(4,$line,'Nilai')
				->setCellValueByColumnAndRow(5,$line,'Qty')
				->setCellValueByColumnAndRow(6,$line,'Nilai')
				->setCellValueByColumnAndRow(7,$line,'Qty')
				->setCellValueByColumnAndRow(8,$line,'Nilai')
				->setCellValueByColumnAndRow(9,$line,'Qty')
				->setCellValueByColumnAndRow(10,$line,'Nilai')
				->setCellValueByColumnAndRow(11,$line,'Qty')
				->setCellValueByColumnAndRow(12,$line,'Nilai')
				->setCellValueByColumnAndRow(13,$line,'Qty')
				->setCellValueByColumnAndRow(14,$line,'Nilai');
			$line++;
            
            $i=0;$qtygr=0;$jumlahgr=0;$qtygrr=0;$jumlahgrr=0;$qtytfs=0;$jumlahtfs=0;$qtyop=0;$jumlahop=0;$qtytso=0;$jumlahtso=0;$qtytotal=0;$jumlahtotal=0;
			$sql1="select * from (
            select a.productname,a.uomcode,
            case when a.referenceno like 'GR-%' then sum(a.qty) else 0 end as qtygr,
            case when a.referenceno like 'GR-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgr,
            case when a.referenceno like 'GIR-%' then sum(a.qty) else 0 end as qtygrr,
            case when a.referenceno like 'GIR-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgrr,
            case when a.referenceno like 'TFS-%' then sum(a.qty) else 0 end as qtytfs,
            case when a.referenceno like 'TFS-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtfs,
            case when a.referenceno like 'OP-%' then sum(a.qty) else 0 end as qtyop,
            case when a.referenceno like 'OP-%' then sum(a.qty*a.buyprice) else 0 end as jumlahop,
            case when a.referenceno like 'TSO-%' then sum(a.qty) else 0 end as qtytso,
            case when a.referenceno like 'TSO-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtso,
            case when a.referenceno like '%%' then sum(a.qty) else 0 end as qtytotal,
            case when a.referenceno like '%%' then sum(a.qty*a.buyprice) else 0 end as jumlahtotal
            from productdetailhist a
            join productplant b on b.productid=a.productid and b.slocid=a.slocid and b.unitofissue=a.unitofmeasureid
            join sloc c on c.slocid=a.slocid
            join plant d on d.plantid=c.plantid
            join materialgroup e on e.materialgroupid=b.materialgroupid
            where d.companyid = ".$companyid." and a.qty > 0 and a.sloccode like '%".$sloc."%' and e.description like '%".$materialgroup."%' and a.productname like '%".$product."%'
            and a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'            
            and a.slocid = ".$row['slocid']." and e.materialgroupid = ".$row['materialgroupid']."
            group by a.productid,a.slocid,a.unitofmeasureid) z
            where qtygr <> 0 or qtygrr <> 0 or qtytfs <> 0 or qtyop <> 0 or qtytso <> 0
            order by productname";
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
            
            foreach($dataReader1 as $row1)
            {
                $i+=1;
                
                $this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,$row1['uomcode'])
					->setCellValueByColumnAndRow(3,$line,$row1['qtygr'])
					->setCellValueByColumnAndRow(4,$line,$row1['jumlahgr']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['qtygrr']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['jumlahgrr'])
					->setCellValueByColumnAndRow(7,$line,$row1['qtytfs']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['jumlahtfs'])
					->setCellValueByColumnAndRow(9,$line,($row1['qtyop']/$per))
					->setCellValueByColumnAndRow(10,$line,($row1['jumlahop']/$per))
					->setCellValueByColumnAndRow(11,$line,$row1['qtytso'])
					->setCellValueByColumnAndRow(12,$line,$row1['jumlahtso']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['qtytotal'])
					->setCellValueByColumnAndRow(14,$line,$row1['jumlahtotal']/$per);
                
                $qtygr += $row1['qtygr'];
				$jumlahgr += $row1['jumlahgr']/$per;
				$qtygrr += $row1['qtygrr'];
				$jumlahgrr += $row1['jumlahgrr']/$per;
				$qtytfs += $row1['qtytfs'];
				$jumlahtfs += $row1['jumlahtfs']/$per;
				$qtyop += $row1['qtyop'];
				$jumlahop += $row1['jumlahop']/$per;
				$qtytso += $row1['qtytso'];
				$jumlahtso += $row1['jumlahtso']/$per;
				$qtytotal += $row1['qtytotal'];
				$jumlahtotal += $row1['jumlahtotal']/$per;
                $line++;
            }
            
            $this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['sloccode'].' - '.$row['description'])
				->setCellValueByColumnAndRow(3,$line,$qtygr)
				->setCellValueByColumnAndRow(4,$line,$jumlahgr)
				->setCellValueByColumnAndRow(5,$line,$qtygrr)
				->setCellValueByColumnAndRow(6,$line,$jumlahgrr)
				->setCellValueByColumnAndRow(7,$line,$qtytfs)
				->setCellValueByColumnAndRow(8,$line,$jumlahtfs)
				->setCellValueByColumnAndRow(9,$line,$qtyop)
				->setCellValueByColumnAndRow(10,$line,$jumlahop)
				->setCellValueByColumnAndRow(11,$line,$qtytso)
				->setCellValueByColumnAndRow(12,$line,$jumlahtso)
				->setCellValueByColumnAndRow(13,$line,$qtytotal)
				->setCellValueByColumnAndRow(14,$line,$jumlahtotal);
			$qtygr2 += $qtygr;
			$jumlahgr2 += $jumlahgr;
			$qtygrr2 += $qtygrr;
			$jumlahgrr2 += $qtygrr;
			$qtytfs2 += $qtytfs;
			$jumlahtfs2 += $jumlahtfs;
			$qtyop2 += $qtyop;
			$jumlahop2 += $jumlahop;
			$qtytso2 += $qtytso;
			$jumlahtso2 += $jumlahtso;
			$qtytotal2 += $qtytotal;
			$jumlahtotal2 += $jumlahtotal;
			$line +=2;
            
        }
        
        $this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
				->setCellValueByColumnAndRow(3,$line,$qtygr2)
				->setCellValueByColumnAndRow(4,$line,$jumlahgr2)
				->setCellValueByColumnAndRow(5,$line,$qtygrr2)
				->setCellValueByColumnAndRow(6,$line,$jumlahgrr2)
				->setCellValueByColumnAndRow(7,$line,$qtytfs2)
				->setCellValueByColumnAndRow(8,$line,$jumlahtfs2)
				->setCellValueByColumnAndRow(9,$line,$qtyop2)
				->setCellValueByColumnAndRow(10,$line,$jumlahop2)
				->setCellValueByColumnAndRow(11,$line,$qtytso2)
				->setCellValueByColumnAndRow(12,$line,$jumlahtso2)
				->setCellValueByColumnAndRow(13,$line,$qtytotal2)
				->setCellValueByColumnAndRow(14,$line,$jumlahtotal2);
        
        $this->getFooterXLS($this->phpExcel);
    }
    //3
    public function RekapPengeluaranPersediaanBarangDetailXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
    {
        $this->menuname='rekappengeluaranpersediaanbarangdetail';
		parent::actionDownxls();
        
        $qtygr2=0;$jumlahgr2=0;$qtygrr2=0;$jumlahgrr2=0;$qtytfs2=0;$jumlahtfs2=0;$qtyop2=0;$jumlahop2=0;$qtytso2=0;$jumlahtso2=0;$qtytotal2=0;$jumlahtotal2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description
          from (select a.productname,a.uomcode,a.slocid,a.sloccode,e.materialgroupid,e.description,
          case when a.referenceno like 'SJ-%' then sum(a.qty) else 0 end as qtygr,
          case when a.referenceno like 'SJ-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgr,
          case when a.referenceno like 'GRR-%' then sum(a.qty) else 0 end as qtygrr,
          case when a.referenceno like 'GRR-%' then sum(a.qty*a.buyprice) else 0 end as jumlahgrr,
          case when a.referenceno like 'TFS-%' then sum(a.qty) else 0 end as qtytfs,
          case when a.referenceno like 'TFS-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtfs,
          case when a.referenceno like 'OP-%' then sum(a.qty) else 0 end as qtyop,
          case when a.referenceno like 'OP-%' then sum(a.qty*a.buyprice) else 0 end as jumlahop,
          case when a.referenceno like 'TSO-%' then sum(a.qty) else 0 end as qtytso,
          case when a.referenceno like 'TSO-%' then sum(a.qty*a.buyprice) else 0 end as jumlahtso,
          case when a.referenceno like '%%' then sum(a.qty) else 0 end as qtytotal,
          case when a.referenceno like '%%' then sum(a.qty*a.buyprice) else 0 end as jumlahtotal
          from productdetailhist a
          join productplant b on b.productid=a.productid and b.slocid=a.slocid and b.unitofissue=a.unitofmeasureid
          join sloc c on c.slocid=a.slocid
          join plant d on d.plantid=c.plantid
          join materialgroup e on e.materialgroupid=b.materialgroupid
          where d.companyid = ".$companyid." and a.qty < 0 and a.sloccode like '%".$sloc."%' and e.description like '%".$materialgroup."%' and a.productname like '%".$product."%'
          and a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
          group by a.productid,a.slocid,a.unitofmeasureid
          order by productname) zz          
          where qtygr <> 0 or qtygrr <> 0 or qtytfs <> 0 or qtyop <> 0 or qtytso <> 0
          order by sloccode, description";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
        
        foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
        
        $line=5;
        
        foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Gudang')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sloccode'])
				->setCellValueByColumnAndRow(8,$line,'Material Group')
				->setCellValueByColumnAndRow(9,$line,': '.$row['description']);
            $line++;
            
            $this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Satuan')					
				->setCellValueByColumnAndRow(3,$line,'Qty')
				->setCellValueByColumnAndRow(4,$line,'Nilai')
				->setCellValueByColumnAndRow(5,$line,'Qty')
				->setCellValueByColumnAndRow(6,$line,'Nilai')
				->setCellValueByColumnAndRow(7,$line,'Qty')
				->setCellValueByColumnAndRow(8,$line,'Nilai')
				->setCellValueByColumnAndRow(9,$line,'Qty')
				->setCellValueByColumnAndRow(10,$line,'Nilai')
				->setCellValueByColumnAndRow(11,$line,'Qty')
				->setCellValueByColumnAndRow(12,$line,'Nilai')
				->setCellValueByColumnAndRow(13,$line,'Qty')
				->setCellValueByColumnAndRow(14,$line,'Nilai');
			$line++;
            
            $i=0;$qtygr=0;$jumlahgr=0;$qtygrr=0;$jumlahgrr=0;$qtytfs=0;$jumlahtfs=0;$qtyop=0;$jumlahop=0;$qtytso=0;$jumlahtso=0;$qtytotal=0;$jumlahtotal=0;
			$sql1="select *
            from (select a.productname,a.uomcode,
            case when a.referenceno like 'SJ-%' then -sum(a.qty) else 0 end as qtygr,
            case when a.referenceno like 'SJ-%' then -sum(a.qty*a.buyprice) else 0 end as jumlahgr,
            case when a.referenceno like 'GRR-%' then -sum(a.qty) else 0 end as qtygrr,
            case when a.referenceno like 'GRR-%' then -sum(a.qty*a.buyprice) else 0 end as jumlahgrr,
            case when a.referenceno like 'TFS-%' then -sum(a.qty) else 0 end as qtytfs,
            case when a.referenceno like 'TFS-%' then -sum(a.qty*a.buyprice) else 0 end as jumlahtfs,
            case when a.referenceno like 'OP-%' then -sum(a.qty) else 0 end as qtyop,
            case when a.referenceno like 'OP-%' then -sum(a.qty*a.buyprice) else 0 end as jumlahop,
            case when a.referenceno like 'TSO-%' then -sum(a.qty) else 0 end as qtytso,
            case when a.referenceno like 'TSO-%' then -sum(a.qty*a.buyprice) else 0 end as jumlahtso,
            case when a.referenceno like '%%' then -sum(a.qty) else 0 end as qtytotal,
            case when a.referenceno like '%%' then -sum(a.qty*a.buyprice) else 0 end as jumlahtotal
            from productdetailhist a
            join productplant b on b.productid=a.productid and b.slocid=a.slocid and b.unitofissue=a.unitofmeasureid
            join sloc c on c.slocid=a.slocid
            join plant d on d.plantid=c.plantid
            join materialgroup e on e.materialgroupid=b.materialgroupid
            where d.companyid = ".$companyid." and a.qty < 0 and a.sloccode like '%".$sloc."%' and e.description like '%".$materialgroup."%' and a.productname like '%".$product."%'
            and a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'            
            and a.slocid = ".$row['slocid']." and e.materialgroupid = ".$row['materialgroupid']."
            group by a.productid,a.slocid,a.unitofmeasureid) z
            where qtygr <> 0 or qtygrr <> 0 or qtytfs <> 0 or qtyop <> 0 or qtytso <> 0
            order by productname";
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
            
            foreach($dataReader1 as $row1)
            {
                $i+=1;
                
                $this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,$row1['uomcode'])
					->setCellValueByColumnAndRow(3,$line,$row1['qtygr'])
					->setCellValueByColumnAndRow(4,$line,$row1['jumlahgr']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['qtygrr']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['jumlahgrr'])
					->setCellValueByColumnAndRow(7,$line,$row1['qtytfs']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['jumlahtfs'])
					->setCellValueByColumnAndRow(9,$line,($row1['qtyop']/$per))
					->setCellValueByColumnAndRow(10,$line,($row1['jumlahop']/$per))
					->setCellValueByColumnAndRow(11,$line,$row1['qtytso'])
					->setCellValueByColumnAndRow(12,$line,$row1['jumlahtso']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['qtytotal'])
					->setCellValueByColumnAndRow(14,$line,$row1['jumlahtotal']/$per);
                
                $qtygr += $row1['qtygr'];
				$jumlahgr += $row1['jumlahgr']/$per;
				$qtygrr += $row1['qtygrr'];
				$jumlahgrr += $row1['jumlahgrr']/$per;
				$qtytfs += $row1['qtytfs'];
				$jumlahtfs += $row1['jumlahtfs']/$per;
				$qtyop += $row1['qtyop'];
				$jumlahop += $row1['jumlahop']/$per;
				$qtytso += $row1['qtytso'];
				$jumlahtso += $row1['jumlahtso']/$per;
				$qtytotal += $row1['qtytotal'];
				$jumlahtotal += $row1['jumlahtotal']/$per;
                $line++;
            }
            
            $this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['sloccode'].' - '.$row['description'])
				->setCellValueByColumnAndRow(3,$line,$qtygr)
				->setCellValueByColumnAndRow(4,$line,$jumlahgr)
				->setCellValueByColumnAndRow(5,$line,$qtygrr)
				->setCellValueByColumnAndRow(6,$line,$jumlahgrr)
				->setCellValueByColumnAndRow(7,$line,$qtytfs)
				->setCellValueByColumnAndRow(8,$line,$jumlahtfs)
				->setCellValueByColumnAndRow(9,$line,$qtyop)
				->setCellValueByColumnAndRow(10,$line,$jumlahop)
				->setCellValueByColumnAndRow(11,$line,$qtytso)
				->setCellValueByColumnAndRow(12,$line,$jumlahtso)
				->setCellValueByColumnAndRow(13,$line,$qtytotal)
				->setCellValueByColumnAndRow(14,$line,$jumlahtotal);
			$qtygr2 += $qtygr;
			$jumlahgr2 += $jumlahgr;
			$qtygrr2 += $qtygrr;
			$jumlahgrr2 += $qtygrr;
			$qtytfs2 += $qtytfs;
			$jumlahtfs2 += $jumlahtfs;
			$qtyop2 += $qtyop;
			$jumlahop2 += $jumlahop;
			$qtytso2 += $qtytso;
			$jumlahtso2 += $jumlahtso;
			$qtytotal2 += $qtytotal;
			$jumlahtotal2 += $jumlahtotal;
			$line +=2;
            
        }
        
        $this->getFooterXLS($this->phpExcel);
    }
	
	/* tanpa filter rak
	public function RekapPersediaanBarangDetailXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname='rekappersediaanbarangdetail';
		parent::actionDownxls();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql = "select distinct slocid,sloccode,materialgroupid,description from
							(select barang,satuan,awal,masuk,keluar,(awal+masuk+keluar) as akhir,slocid,sloccode,materialgroupid,description
							from
							(select barang,satuan,awal,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+koreksi+konversiout) as keluar,slocid,sloccode,materialgroupid,description
							from
							(select
							(
							select distinct aa.productid 
							from productstockdet a
							join product aa on aa.productid = a.productid
							join sloc ab on ab.slocid = a.slocid
							where a.productid = t.productid and
							a.unitofmeasureid = t.unitofissue
							) as barang,
							(
							select distinct bb.uomcode 
							from productstockdet b
							join unitofmeasure bb on bb.unitofmeasureid = b.unitofmeasureid
							join sloc ba on ba.slocid = b.slocid
							where b.productid = t.productid and
							b.unitofmeasureid = t.unitofissue
							) as satuan,
							(
							select ifnull(sum(aw.qty),0) 
							from productstockdet aw
							join sloc aaw on aaw.slocid = aw.slocid
							where aw.productid = t.productid and
							aw.transdate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
							aw.slocid = t.slocid
							) as awal,
							(
							select ifnull(sum(c.qty),0) 
							from productstockdet c
							join sloc cc on cc.slocid = c.slocid
							where c.productid = t.productid and
							c.referenceno like 'GR-%' and
							c.slocid = t.slocid and
							c.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as beli,
							(
							select ifnull(sum(d.qty),0) 
							from productstockdet d
							join sloc dd on dd.slocid = d.slocid
							where d.productid = t.productid and
							d.referenceno like 'GIR-%' and
							d.slocid = t.slocid and
							d.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returjual,
							(
							select ifnull(sum(e.qty),0) 
							from productstockdet e
							join sloc ee on ee.slocid = e.slocid
							where e.productid = t.productid and
							e.referenceno like 'TFS-%' and
							e.qty > 0 and
							e.slocid = t.slocid and
							e.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfin,
							(
							select ifnull(sum(f.qty),0) 
							from productstockdet f
							join sloc ff on ff.slocid = f.slocid
							where f.productid = t.productid and
							f.referenceno like 'OP-%' and
							f.qty > 0 and
							f.slocid = t.slocid and
							f.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as produksi,
							(
							select ifnull(sum(g.qty),0) 
							from productstockdet g
							join sloc gg on gg.slocid = g.slocid
							where g.productid = t.productid and
							g.referenceno like 'SJ-%' and
							g.slocid = t.slocid and
							g.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as jual,
							(
							select ifnull(sum(h.qty),0) 
							from productstockdet h
							join sloc hh on hh.slocid = h.slocid
							where h.productid = t.productid and
							h.referenceno like 'GRR-%' and
							h.slocid = t.slocid and
							h.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returbeli,
							(
							select ifnull(sum(i.qty),0) 
							from productstockdet i
							join sloc ii on ii.slocid = i.slocid
							where i.productid = t.productid and
							i.referenceno like 'TFS-%' and
							i.qty < 0 and
							i.slocid = t.slocid and
							i.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfout,
							(
							select ifnull(sum(j.qty),0) 
							from productstockdet j
							join sloc jj on jj.slocid = j.slocid
							where j.productid = t.productid and
							j.referenceno like 'OP-%' and
							j.qty < 0 and
							j.slocid = t.slocid and
							j.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as pemakaian,
							(
							select ifnull(sum(k.qty),0) 
							from productstockdet k
							join sloc kk on kk.slocid = k.slocid
							where k.productid = t.productid and
							k.referenceno like 'TSO-%' and
							k.slocid = t.slocid and
							k.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as koreksi,
							(select ifnull(sum(l.qty),0) 
							from productstockdet l
							join sloc ll on ll.slocid = l.slocid
							where l.productid = t.productid and
							l.referenceno like '%konversi%' and
							l.qty > 0 and
							l.slocid = t.slocid
							and l.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiin,
							(
							select ifnull(sum(m.qty),0) 
							from productstockdet m
							join sloc mm on mm.slocid = m.slocid
							where m.productid = t.productid and
							m.referenceno like '%konversi%' and
							m.qty < 0 and
							m.slocid = t.slocid and
							m.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiout,v.slocid,v.sloccode,u.materialgroupid,u.description
							from productplant t
							join materialgroup u on u.materialgroupid = t.materialgroupid
							join sloc v on v.slocid = t.slocid
							where getcompanyfromsloc(v.slocid) = ".$companyid." and v.sloccode like '%".$sloc."%'
							and u.description like '%".$materialgroup."%') z) zz )zzz where awal<>0 or masuk<>0 or keluar<>0 or akhir<>0
					order by materialgroupid,slocid";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
						$line=5;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Gudang')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sloccode'])
				->setCellValueByColumnAndRow(3,$line,'Material Group')
				->setCellValueByColumnAndRow(4,$line,': '.$row['description']);							
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Satuan')					
				->setCellValueByColumnAndRow(3,$line,'Qty')
				->setCellValueByColumnAndRow(4,$line,'Harga')
				->setCellValueByColumnAndRow(5,$line,'Nilai')
				->setCellValueByColumnAndRow(6,$line,'Qty')
				->setCellValueByColumnAndRow(7,$line,'Nilai')
				->setCellValueByColumnAndRow(8,$line,'Qty')
				->setCellValueByColumnAndRow(9,$line,'Harga')
				->setCellValueByColumnAndRow(10,$line,'Nilai')
				->setCellValueByColumnAndRow(11,$line,'Qty')
				->setCellValueByColumnAndRow(12,$line,'Nilai')
				->setCellValueByColumnAndRow(13,$line,'Qty')
				->setCellValueByColumnAndRow(14,$line,'Nilai')
				->setCellValueByColumnAndRow(15,$line,'');
			$line++;
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1 = "select *,case when akhir < 0 then 'X' else '' end as minus from
							(select barang,satuan,awal,masuk,keluar,(awal+masuk+keluar) as akhir,harga
							from
							(select barang,satuan,awal,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+koreksi+konversiout) as keluar,harga
							from
							(select 
							(
							select distinct aa.productname 
							from productstockdet a
							join product aa on aa.productid = a.productid
							join sloc ab on ab.slocid = a.slocid
							where a.productid = t.productid and
							a.unitofmeasureid = t.unitofissue
							) as barang,
							(
							select distinct bb.uomcode 
							from productstockdet b
							join unitofmeasure bb on bb.unitofmeasureid = b.unitofmeasureid
							join sloc ba on ba.slocid = b.slocid
							where b.productid = t.productid and
							b.unitofmeasureid = t.unitofissue
							) as satuan,
							(
							select ifnull(sum(aw.qty),0) 
							from productstockdet aw
							join sloc aaw on aaw.slocid = aw.slocid
							where aw.productid = t.productid and
							aw.transdate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
							aw.slocid = t.slocid
							) as awal,
							(
							select ifnull(sum(c.qty),0) 
							from productstockdet c
							join sloc cc on cc.slocid = c.slocid
							where c.productid = t.productid and
							c.referenceno like 'GR-%' and
							c.slocid = t.slocid and
							c.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as beli,
							(
							select ifnull(sum(d.qty),0) 
							from productstockdet d
							join sloc dd on dd.slocid = d.slocid
							where d.productid = t.productid and
							d.referenceno like 'GIR-%' and
							d.slocid = t.slocid and
							d.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returjual,
							(
							select ifnull(sum(e.qty),0) 
							from productstockdet e
							join sloc ee on ee.slocid = e.slocid
							where e.productid = t.productid and
							e.referenceno like 'TFS-%' and
							e.qty > 0 and
							e.slocid = t.slocid and
							e.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfin,
							(
							select ifnull(sum(f.qty),0) 
							from productstockdet f
							join sloc ff on ff.slocid = f.slocid
							where f.productid = t.productid and
							f.referenceno like 'OP-%' and
							f.qty > 0 and
							f.slocid = t.slocid and
							f.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as produksi,
							(
							select ifnull(sum(g.qty),0) 
							from productstockdet g
							join sloc gg on gg.slocid = g.slocid
							where g.productid = t.productid and
							g.referenceno like 'SJ-%' and
							g.slocid = t.slocid and
							g.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as jual,
							(
							select ifnull(sum(h.qty),0) 
							from productstockdet h
							join sloc hh on hh.slocid = h.slocid
							where h.productid = t.productid and
							h.referenceno like 'GRR-%' and
							h.slocid = t.slocid and
							h.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returbeli,
							(
							select ifnull(sum(i.qty),0) 
							from productstockdet i
							join sloc ii on ii.slocid = i.slocid
							where i.productid = t.productid and
							i.referenceno like 'TFS-%' and
							i.qty < 0 and
							i.slocid = t.slocid and
							i.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfout,
							(
							select ifnull(sum(j.qty),0) 
							from productstockdet j
							join sloc jj on jj.slocid = j.slocid
							where j.productid = t.productid and
							j.referenceno like 'OP-%' and
							j.qty < 0 and
							j.slocid = t.slocid and
							j.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as pemakaian,
							(
							select ifnull(sum(k.qty),0) 
							from productstockdet k
							join sloc kk on kk.slocid = k.slocid
							where k.productid = t.productid and
							k.referenceno like 'TSO-%' and
							k.slocid = t.slocid and
							k.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as koreksi,
							(select ifnull(sum(l.qty),0) 
							from productstockdet l
							join sloc ll on ll.slocid = l.slocid
							where l.productid = t.productid and
							l.referenceno like '%konversi%' and
							l.qty > 0 and
							l.slocid = t.slocid
							and l.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiin,
							(
							select ifnull(sum(m.qty),0) 
							from productstockdet m
							join sloc mm on mm.slocid = m.slocid
							where m.productid = t.productid and
							m.referenceno like '%konversi%' and
							m.qty < 0 and
							m.slocid = t.slocid and
							m.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiout,
							ifnull((select q.harga 
							from dataharga q
							where q.productid=t.productid
							),0) as harga
							from productplant t
							join materialgroup u on u.materialgroupid = t.materialgroupid
							join sloc v on v.slocid = t.slocid
									where getcompanyfromsloc(v.slocid) = ".$companyid."
              and u.materialgroupid = '".$row['materialgroupid']."' 
							and v.slocid = '".$row['slocid']."' and v.sloccode like '%".$sloc."%'
							and u.description like '%".$materialgroup."%' order by barang) z) zz )zzz 
							where awal<>0 or masuk<>0 or keluar<>0 or akhir<>0 order by barang asc";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

			$i=0;
				
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['barang'])
					->setCellValueByColumnAndRow(2,$line,$row1['satuan'])
					->setCellValueByColumnAndRow(3,$line,$row1['awal'])
					->setCellValueByColumnAndRow(4,$line,$row1['harga']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['awal']*$row1['harga']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['masuk'])
					->setCellValueByColumnAndRow(7,$line,$row1['masuk']*$row1['harga']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['awal']+$row1['masuk'])
					->setCellValueByColumnAndRow(9,$line,$row1['harga']/$per)
					->setCellValueByColumnAndRow(10,$line,($row1['awal']+$row1['masuk'])*$row1['harga']/$per)
					->setCellValueByColumnAndRow(11,$line,$row1['keluar'])
					->setCellValueByColumnAndRow(12,$line,$row1['keluar']*$row1['harga']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['akhir'])
					->setCellValueByColumnAndRow(14,$line,$row1['akhir']*$row1['harga']/$per)
					->setCellValueByColumnAndRow(15,$line,$row1['minus']);
				$qtyawal += $row1['awal'];
				$nilaiawal += ($row1['awal'] * $row1['harga']/$per);
				$qtymasuk += $row1['masuk'];
				$nilaimasuk += ($row1['masuk'] * $row1['harga']/$per);
				$qtytersedia += ($row1['awal'] + $row1['masuk']);
				$nilaitersedia += (($row1['awal'] + $row1['masuk']) * $row1['harga']/$per);
				$qtykeluar += $row1['keluar'];
				$nilaikeluar += ($row1['keluar'] * $row1['harga']/$per);
				$qtyakhir += $row1['akhir'];
				$nilaiakhir += ($row1['akhir'] * $row1['harga']/$per);					
				$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['sloccode'].' - '.$row['description'])
				->setCellValueByColumnAndRow(3,$line,$qtyawal)
				->setCellValueByColumnAndRow(5,$line,$nilaiawal)
				->setCellValueByColumnAndRow(6,$line,$qtymasuk)
				->setCellValueByColumnAndRow(7,$line,$nilaimasuk)
				->setCellValueByColumnAndRow(8,$line,$qtytersedia)
				->setCellValueByColumnAndRow(10,$line,$nilaitersedia)
				->setCellValueByColumnAndRow(11,$line,$qtykeluar)
				->setCellValueByColumnAndRow(12,$line,$nilaikeluar)
				->setCellValueByColumnAndRow(13,$line,$qtyakhir)
				->setCellValueByColumnAndRow(14,$line,$nilaiakhir);
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			$line +=2;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(3,$line,$qtyawal2)
			->setCellValueByColumnAndRow(5,$line,$nilaiawal2)
			->setCellValueByColumnAndRow(6,$line,$qtymasuk2)
			->setCellValueByColumnAndRow(7,$line,$nilaimasuk2)
			->setCellValueByColumnAndRow(8,$line,$qtytersedia2)
			->setCellValueByColumnAndRow(10,$line,$nilaitersedia2)
			->setCellValueByColumnAndRow(11,$line,$qtykeluar2)
			->setCellValueByColumnAndRow(12,$line,$nilaikeluar2)
			->setCellValueByColumnAndRow(13,$line,$qtyakhir2)
			->setCellValueByColumnAndRow(14,$line,$nilaiakhir2);
		
		$this->getFooterXLS($this->phpExcel);	
	}
	*/
  //4
	public function HppXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname='hpp';
		parent::actionDownxls();
		$sql = "select distinct a.materialgroupid,a.description
				from materialgroup a
				join productplant b on b.materialgroupid = a.materialgroupid
				join sloc c on c.slocid = b.slocid
				join plant d on d.plantid = c.plantid
				join product e on e.productid = b.productid
				where d.companyid = '".$companyid."' and a.description like '%{$materialgroup}%'
                and c.sloccode like '%{$sloc}%' and e.productname like '%{$product}%'";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
							$line=4;				
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'Divisi')
									->setCellValueByColumnAndRow(1,$line,': '.$row['description']);							
						$line++;
						
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Nama Barang')
									->setCellValueByColumnAndRow(2,$line,'Gudang')
									->setCellValueByColumnAndRow(3,$line,'Rak')
									->setCellValueByColumnAndRow(4,$line,'Satuan')				
									->setCellValueByColumnAndRow(5,$line,'HPP');
							$line++;
				$sql1 = "select distinct b.productname,c.sloccode,g.description as sbin,f.uomcode as uom,ifnull(a.buyprice,0) as hpp
					from productdetail a
					join product b on b.productid = a.productid
					join sloc c on c.slocid = a.slocid
					join productplant d on d.productid = a.productid and d.slocid = a.slocid and d.unitofissue = a.unitofmeasureid
					join materialgroup e on e.materialgroupid = d.materialgroupid
					join unitofmeasure f on f.unitofmeasureid = a.unitofmeasureid
					join storagebin g on g.storagebinid = a.storagebinid
					where b.productname like '%{$product}%' and c.sloccode like '%{$sloc}%'
                    and e.materialgroupid = '".$row['materialgroupid']."'";
		$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
               $i=0;
								
							foreach($dataReader1 as $row1)
							{
								$i+=1;
									$this->phpExcel->setActiveSheetIndex(0)
											->setCellValueByColumnAndRow(0,$line,$i)
											->setCellValueByColumnAndRow(1,$line,$row1['productname'])
											->setCellValueByColumnAndRow(2,$line,$row1['sloccode'])
											->setCellValueByColumnAndRow(3,$line,$row1['sbin'])
											->setCellValueByColumnAndRow(4,$line,$row1['uom'])
											->setCellValueByColumnAndRow(5,$line,$row1['hpp']/$per);
									$line++;
									
							}
							$line += 1;
			}
		
		
		$this->getFooterXLS($this->phpExcel);
	}
	/*public function HppXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname='hpp';
		parent::actionDownxls();
		$sql = "select distinct a.materialgroupid,a.description
						from materialgroup a
						join productplant b on b.materialgroupid = a.materialgroupid
						join sloc c on c.slocid = b.slocid
						join plant d on d.plantid = c.plantid
						join product e on e.productid = b.productid
						where d.companyid = '".$companyid."'";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
							$line=4;				
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'Divisi')
									->setCellValueByColumnAndRow(1,$line,': '.$row['description']);							
						$line++;
						
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Nama Barang')
									->setCellValueByColumnAndRow(2,$line,'Satuan')					
									->setCellValueByColumnAndRow(3,$line,'HPP');
							$line++;
							$sql1 = "select distinct b.productname,f.description as uom,ifnull(a.buyprice,0) as hpp
											from productdetail a
											join product b on b.productid = a.productid
											join sloc c on c.slocid = a.slocid
											join productplant d on d.productid = a.productid and d.slocid = a.slocid and d.unitofissue = a.unitofmeasureid
											join materialgroup e on e.materialgroupid = d.materialgroupid
											join unitofmeasure f on f.unitofmeasureid = a.unitofmeasureid
											where e.materialgroupid = '".$row['materialgroupid']."'";
		$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
               $i=0;
								
							foreach($dataReader1 as $row1)
							{
								$i+=1;
									$this->phpExcel->setActiveSheetIndex(0)
											->setCellValueByColumnAndRow(0,$line,$i)
											->setCellValueByColumnAndRow(1,$line,$row1['productname'])
											->setCellValueByColumnAndRow(2,$line,$row1['uom'])
											->setCellValueByColumnAndRow(3,$line,$row1['hpp']/$per);
									$line++;
									
							}
							$line += 1;
			}
		
		
		$this->getFooterXLS($this->phpExcel);
	}*/
  //6
	public function RincianNilaiPemakaianStokXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname='rinciannilaipemakaianstok';
		parent::actionDownxls();
		$sql = "select e.slocid as fromslocid,e.sloccode as fromsloccode, e.description as fromslocdesc,
						f.slocid as toslocid, f.sloccode as tosloccode, f.description as toslocdesc
						from productoutputdetail a
						join product b on b.productid = a.productid
						join productoutput c on c.productoutputid = a.productoutputid
						join unitofmeasure d on d.unitofmeasureid = a.uomid
						join sloc e on e.slocid=a.fromslocid
						join sloc f on f.slocid=a.toslocid
						join productplan g on g.productplanid=c.productplanid
						where c.recordstatus = 3 and g.companyid = ".$companyid." and e.sloccode like '%".$sloc."%' and f.sloccode like '%".$sloc."%'
						and c.productoutputdate between 
						'".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
						'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						group by e.slocid,f.slocid
						order by e.sloccode,f.sloccode";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
							$line=4;				
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'Asal')
									->setCellValueByColumnAndRow(1,$line,': '.$row['fromsloccode']);										
						$line++;
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'Tujuan')
									->setCellValueByColumnAndRow(1,$line,': '.$row['tosloccode']);										
						$line++;
						
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Nama Barang')
									->setCellValueByColumnAndRow(2,$line,'Satuan')					
									->setCellValueByColumnAndRow(3,$line,'QTY')
									->setCellValueByColumnAndRow(4,$line,'Harga')
									->setCellValueByColumnAndRow(5,$line,'Jumlah');
							$line++; 
							$sql1 = "select e.sloccode as fromsloccode, f.sloccode as tosloccode, b.productname, a.qty, d.uomcode,
										(select ifnull(z.harga,0) from dataharga z where z.productid=a.productid and z.uom=a.uomid) as harga
										from productoutputdetail a
										join product b on b.productid = a.productid
										join productoutput c on c.productoutputid = a.productoutputid
										join unitofmeasure d on d.unitofmeasureid = a.uomid
										join sloc e on e.slocid=a.fromslocid
										join sloc f on f.slocid=a.toslocid
										join productplan g on g.productplanid=c.productplanid
										where c.recordstatus = 3 and g.companyid = ".$companyid." and e.slocid = '".$row['fromslocid']."' and f.slocid = '".$row['toslocid']."'
										and c.productoutputdate between 
						'".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
						'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
				
               $i=0; $total=0;
								
							foreach($dataReader1 as $row1)
							{
								$i+=1;
									$this->phpExcel->setActiveSheetIndex(0)
											->setCellValueByColumnAndRow(0,$line,$i)
											->setCellValueByColumnAndRow(1,$line,$row1['productname'])
											->setCellValueByColumnAndRow(2,$line,$row1['uomcode'])
											->setCellValueByColumnAndRow(3,$line,$row1['qty'])
											->setCellValueByColumnAndRow(4,$line,$row1['harga']/$per)
											->setCellValueByColumnAndRow(5,$line,($row1['qty']*$row1['harga'])/$per);
									$line++;

									$total+= ($row1['qty']*$row1['harga'])/$per;									
							}
							/*$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(4,$line,'TOTAL PEMAKAIAN'.$row['fromsloccode'].'-'.$row['tosloccode'])
									->setCellValueByColumnAndRow(5,$line,$total);*/
							
																			
						$line++;
							$line += 1;
			}
		
		
		$this->getFooterXLS($this->phpExcel);
	}
  //7
	public function RekapNilaiPemakaianStokXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname='rekapnilaipemakaianstok';
		parent::actionDownxls();
		$sql = "select e.slocid as fromslocid,e.sloccode as fromsloccode, e.description as fromslocdesc,
						f.slocid as toslocid, f.sloccode as tosloccode, f.description as toslocdesc,
						sum(ifnull(a.qty,0)*(select ifnull(z.harga,0) from dataharga z where z.productid=a.productid and z.uom=a.uomid)) as jumlah
						from productoutputdetail a
						join product b on b.productid = a.productid
						join productoutput c on c.productoutputid = a.productoutputid
						join unitofmeasure d on d.unitofmeasureid = a.uomid
						join sloc e on e.slocid=a.fromslocid
						join sloc f on f.slocid=a.toslocid
						join productplan g on g.productplanid=c.productplanid
						where c.recordstatus = 3 and g.companyid = ".$companyid." and e.sloccode like '%".$sloc."%' and f.sloccode like '%".$sloc."%'
						and c.productoutputdate between 
						'".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
						'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						group by e.slocid,f.slocid
						order by e.sloccode,f.sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
							$line=4;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'No')
									->setCellValueByColumnAndRow(1,$line,'Gudang Asal')
									->setCellValueByColumnAndRow(2,$line,'Gudang Tujuan')					
									->setCellValueByColumnAndRow(3,$line,'Jumlah');
									
							$line++; $i=0;	$total=0;
			foreach($dataReader as $row)
			{
				
				$i+=1;
									$this->phpExcel->setActiveSheetIndex(0)
											->setCellValueByColumnAndRow(0,$line,$i)
											->setCellValueByColumnAndRow(1,$line,$row['fromsloccode'].' - '.$row['fromslocdesc'])
											->setCellValueByColumnAndRow(2,$line,$row['tosloccode'].' - '.$row['toslocdesc'])
											->setCellValueByColumnAndRow(3,$line,$row['jumlah']/$per);
											
									$line++;
									$total+= $row['jumlah']/$per;				
			}
			/*$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(2,$line,'TOTAL PEMAKAIAN')
									->setCellValueByColumnAndRow(3,$line,$total);*/
		
		
		$this->getFooterXLS($this->phpExcel);
	}
  //8
	public function RincianNilaiStockOpnameXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
    {
        $this->menuname='rinciannilaistockopname';
		parent::actionDownXLS();
		$total2=0;
		$sql = "select distinct f.slocid,f.sloccode,f.description
						from bsdetail a
						join product b on b.productid=a.productid
						join unitofmeasure c on c.unitofmeasureid=a.unitofmeasureid
						join storagebin d on d.storagebinid=a.storagebinid
						join bsheader e on e.bsheaderid=a.bsheaderid
						join sloc f on f.slocid=e.slocid
						where e.recordstatus=5 and getcompanyfromsloc(f.slocid) = ".$companyid." and f.sloccode like '%".$sloc."%' 
						and b.productname like '%".$product."%' 
						and e.bsdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		/*
        foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
        */
        $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(1, 2, date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
                ->setCellValueByColumnAndRow(3, 2, date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)));
            
        $line = 4;
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(0, $line, 'Gudang ')
                ->setCellValueByColumnAndRow(1, $line, ': ' . $row['sloccode'].' - '.$row['description']);
			
			$line += 1;
            
			$this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(0, $line, 'No')
                ->setCellValueByColumnAndRow(1, $line, 'Nama Barang')
                ->setCellValueByColumnAndRow(2, $line, 'Satuan')
                ->setCellValueByColumnAndRow(3, $line, 'Qty')
                ->setCellValueByColumnAndRow(4, $line, 'Harga')
                ->setCellValueByColumnAndRow(5, $line, 'Jumlah');
			
			$i=0;
            $total=0;
            $line++;
			$sql1 = "select b.productname,c.uomcode,sum(a.qty) as qty,ifnull(sum(a.qty*a.buyprice)/sum(a.qty),0) as harga,ifnull(sum(a.qty*a.buyprice),0) as jumlah
						from bsdetail a
						join product b on b.productid=a.productid
						join unitofmeasure c on c.unitofmeasureid=a.unitofmeasureid
						join storagebin d on d.storagebinid=a.storagebinid
						join bsheader e on e.bsheaderid=a.bsheaderid
						join sloc f on f.slocid=e.slocid
						where e.recordstatus=5 and f.slocid = '".$row['slocid']."' and f.sloccode like '%".$sloc."%' 
						and b.productname like '%".$product."%' 
						and e.bsdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						group by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
            
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				
                if($row1['harga']==0)
                {
                    $harga=0;
                }
                else
                {
                    $harga = $row1['harga']/$per;
                }
                if($row1['jumlah']==0)
                {
                    $jumlah=0;
                }
                else
                {
                    $jumlah = $row1['jumlah']/$per;
                }
                $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(0, $line, $i)
                ->setCellValueByColumnAndRow(1, $line, $row1['productname'])
                ->setCellValueByColumnAndRow(2, $line, $row1['uomcode'])
                ->setCellValueByColumnAndRow(3, $line, $row1['qty'])
                ->setCellValueByColumnAndRow(4, $line, $harga)
                ->setCellValueByColumnAndRow(5, $line, $jumlah);
				
				$total += ($row1['jumlah']/$per);
                $line++;
			}
			
            $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(3, $line, 'TOTAL KOREKSI '.$row['sloccode'])
                ->setCellValueByColumnAndRow(5, $line, ($total));
			$line +=2;
			$total2 += $total;
            
		}
		
        $line += 2;
        $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(3, $line, 'GRAND TOTAL KOREKSI ')
                ->setCellValueByColumnAndRow(5, $line, ($total2));
        
		$this->getFooterXLS($this->phpExcel);
    }
  //12
	public function RekapPersediaanBarangDetailDataHargaXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname='rekappersediaanbarangdetaildataharga';
		parent::actionDownxls();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql = "select distinct slocid,sloccode,materialgroupid,description from
							(select barang,satuan,awal,masuk,keluar,(awal+masuk+keluar) as akhir,slocid,sloccode,materialgroupid,description
							from
							(select barang,satuan,awal,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+koreksi+konversiout) as keluar,slocid,sloccode,materialgroupid,description
							from
							(select
							(
							select distinct aa.productid 
							from productstockdet a
							join product aa on aa.productid = a.productid
							join sloc ab on ab.slocid = a.slocid
							join storagebin ac on ac.storagebinid=a.storagebinid
							where a.productid = t.productid and
							a.unitofmeasureid = t.unitofissue and
							ac.description like '%".$storagebin."%'
							) as barang,
							(
							select distinct bb.uomcode 
							from productstockdet b
							join unitofmeasure bb on bb.unitofmeasureid = b.unitofmeasureid
							join sloc ba on ba.slocid = b.slocid
							join storagebin bc on bc.storagebinid=b.storagebinid
							where b.productid = t.productid and
							b.unitofmeasureid = t.unitofissue and
							bc.description like '%".$storagebin."%'
							) as satuan,
							(
							select ifnull(sum(aw.qty),0) 
							from productstockdet aw
							join sloc aaw on aaw.slocid = aw.slocid
							join storagebin abw on abw.storagebinid=aw.storagebinid
							where aw.productid = t.productid and
							aw.transdate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
							aw.slocid = t.slocid and
							abw.description like '%".$storagebin."%'
							) as awal,
							(
							select ifnull(sum(c.qty),0) 
							from productstockdet c
							join sloc cc on cc.slocid = c.slocid
							join storagebin ccc on ccc.storagebinid=c.storagebinid
							where c.productid = t.productid and
							c.referenceno like 'GR-%' and
							c.slocid = t.slocid and
							ccc.description like '%".$storagebin."%' and
							c.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as beli,
							(
							select ifnull(sum(d.qty),0) 
							from productstockdet d
							join sloc dd on dd.slocid = d.slocid
							join storagebin ddd on ddd.storagebinid=d.storagebinid
							where d.productid = t.productid and
							d.referenceno like 'GIR-%' and
							d.slocid = t.slocid and
							ddd.description like '%".$storagebin."%' and
							d.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returjual,
							(
							select ifnull(sum(e.qty),0) 
							from productstockdet e
							join sloc ee on ee.slocid = e.slocid
							join storagebin eee on eee.storagebinid=e.storagebinid
							where e.productid = t.productid and
							e.referenceno like 'TFS-%' and
							e.qty > 0 and
							e.slocid = t.slocid and
							eee.description like '%".$storagebin."%' and
							e.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfin,
							(
							select ifnull(sum(f.qty),0) 
							from productstockdet f
							join sloc ff on ff.slocid = f.slocid
							join storagebin fff on fff.storagebinid=f.storagebinid
							where f.productid = t.productid and
							f.referenceno like 'OP-%' and
							f.qty > 0 and
							f.slocid = t.slocid and
							fff.description like '%".$storagebin."%' and
							f.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as produksi,
							(
							select ifnull(sum(g.qty),0) 
							from productstockdet g
							join sloc gg on gg.slocid = g.slocid
							join storagebin ggg on ggg.storagebinid=g.storagebinid
							where g.productid = t.productid and
							g.referenceno like 'SJ-%' and
							g.slocid = t.slocid and
							ggg.description like '%".$storagebin."%' and
							g.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as jual,
							(
							select ifnull(sum(h.qty),0) 
							from productstockdet h
							join sloc hh on hh.slocid = h.slocid
							join storagebin hhh on hhh.storagebinid=h.storagebinid
							where h.productid = t.productid and
							h.referenceno like 'GRR-%' and
							h.slocid = t.slocid and
							hhh.description like '%".$storagebin."%' and
							h.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returbeli,
							(
							select ifnull(sum(i.qty),0) 
							from productstockdet i
							join sloc ii on ii.slocid = i.slocid
							join storagebin iii on iii.storagebinid=i.storagebinid
							where i.productid = t.productid and
							i.referenceno like 'TFS-%' and
							i.qty < 0 and
							i.slocid = t.slocid and
							iii.description like '%".$storagebin."%' and
							i.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfout,
							(
							select ifnull(sum(j.qty),0) 
							from productstockdet j
							join sloc jj on jj.slocid = j.slocid
							join storagebin jjj on jjj.storagebinid=j.storagebinid
							where j.productid = t.productid and
							j.referenceno like 'OP-%' and
							j.qty < 0 and
							j.slocid = t.slocid and
							jjj.description like '%".$storagebin."%' and
							j.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as pemakaian,
							(
							select ifnull(sum(k.qty),0) 
							from productstockdet k
							join sloc kk on kk.slocid = k.slocid
							join storagebin kkk on kkk.storagebinid=k.storagebinid
							where k.productid = t.productid and
							k.referenceno like 'TSO-%' and
							k.slocid = t.slocid and
							kkk.description like '%".$storagebin."%' and
							k.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as koreksi,
							(select ifnull(sum(l.qty),0) 
							from productstockdet l
							join sloc ll on ll.slocid = l.slocid
							join storagebin lll on lll.storagebinid=l.storagebinid
							where l.productid = t.productid and
							l.referenceno like '%konversi%' and
							l.qty > 0 and
							l.slocid = t.slocid and
							lll.description like '%".$storagebin."%' and
							l.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiin,
							(
							select ifnull(sum(m.qty),0) 
							from productstockdet m
							join sloc mm on mm.slocid = m.slocid
							join storagebin mmm on mmm.storagebinid=m.storagebinid
							where m.productid = t.productid and
							m.referenceno like '%konversi%' and
							m.qty < 0 and
							m.slocid = t.slocid and
							mmm.description like '%".$storagebin."%' and
							m.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiout,v.slocid,v.sloccode,u.materialgroupid,u.description
							from productplant t
							join materialgroup u on u.materialgroupid = t.materialgroupid
							join sloc v on v.slocid = t.slocid
							where getcompanyfromsloc(v.slocid) = ".$companyid." and v.sloccode like '%".$sloc."%'
							and u.description like '%".$materialgroup."%') z) zz )zzz where awal<>0 or masuk<>0 or keluar<>0 or akhir<>0
					order by materialgroupid,slocid";

		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
						$line=5;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Gudang')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sloccode'])
				->setCellValueByColumnAndRow(6,$line,'Material Group')
				->setCellValueByColumnAndRow(7,$line,': '.$row['description']);							
			if ($storagebin == null)			
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'');}
			else
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'Rak')
				->setCellValueByColumnAndRow(4,$line,': '.$storagebin);}
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Satuan')					
				->setCellValueByColumnAndRow(3,$line,'Qty')
				->setCellValueByColumnAndRow(4,$line,'Harga')
				->setCellValueByColumnAndRow(5,$line,'Nilai')
				->setCellValueByColumnAndRow(6,$line,'Qty')
				->setCellValueByColumnAndRow(7,$line,'Nilai')
				->setCellValueByColumnAndRow(8,$line,'Qty')
				->setCellValueByColumnAndRow(9,$line,'Harga')
				->setCellValueByColumnAndRow(10,$line,'Nilai')
				->setCellValueByColumnAndRow(11,$line,'Qty')
				->setCellValueByColumnAndRow(12,$line,'Nilai')
				->setCellValueByColumnAndRow(13,$line,'Qty')
				->setCellValueByColumnAndRow(14,$line,'Nilai')
				->setCellValueByColumnAndRow(15,$line,'');
			$line++;
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1 = "select *,case when akhir < 0 then 'X' else '' end as minus from
							(select barang,satuan,awal,masuk,keluar,(awal+masuk+keluar) as akhir,harga
							from
							(select barang,satuan,awal,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+koreksi+konversiout) as keluar,harga
							from
							(select 
							(
							select distinct aa.productname 
							from productstockdet a
							join product aa on aa.productid = a.productid
							join sloc ab on ab.slocid = a.slocid
							join storagebin ac on ac.storagebinid=a.storagebinid
							where a.productid = t.productid and
							a.unitofmeasureid = t.unitofissue and
							ac.description like '%".$storagebin."%'
							) as barang,
							(
							select distinct bb.uomcode 
							from productstockdet b
							join unitofmeasure bb on bb.unitofmeasureid = b.unitofmeasureid
							join sloc ba on ba.slocid = b.slocid
							join storagebin bc on bc.storagebinid=b.storagebinid
							where b.productid = t.productid and
							b.unitofmeasureid = t.unitofissue and
							bc.description like '%".$storagebin."%'
							) as satuan,
							(
							select ifnull(sum(aw.qty),0) 
							from productstockdet aw
							join sloc aaw on aaw.slocid = aw.slocid
							join storagebin aww on aww.storagebinid=aw.storagebinid
							where aw.productid = t.productid and
							aw.transdate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
							aw.slocid = t.slocid and
							aww.description like '%".$storagebin."%'
							) as awal,
							(
							select ifnull(sum(c.qty),0) 
							from productstockdet c
							join sloc cc on cc.slocid = c.slocid
							join storagebin ccc on ccc.storagebinid=c.storagebinid
							where c.productid = t.productid and
							c.referenceno like 'GR-%' and
							c.slocid = t.slocid and
							ccc.description like '%".$storagebin."%' and
							c.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as beli,
							(
							select ifnull(sum(d.qty),0) 
							from productstockdet d
							join sloc dd on dd.slocid = d.slocid
							join storagebin ddd on ddd.storagebinid=d.storagebinid
							where d.productid = t.productid and
							d.referenceno like 'GIR-%' and
							d.slocid = t.slocid and
							ddd.description like '%".$storagebin."%' and
							d.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returjual,
							(
							select ifnull(sum(e.qty),0) 
							from productstockdet e
							join sloc ee on ee.slocid = e.slocid
							join storagebin eee on eee.storagebinid=e.storagebinid
							where e.productid = t.productid and
							e.referenceno like 'TFS-%' and
							e.qty > 0 and
							e.slocid = t.slocid and
							eee.description like '%".$storagebin."%' and
							e.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfin,
							(
							select ifnull(sum(f.qty),0) 
							from productstockdet f
							join sloc ff on ff.slocid = f.slocid
							join storagebin fff on fff.storagebinid=f.storagebinid
							where f.productid = t.productid and
							f.referenceno like 'OP-%' and
							f.qty > 0 and
							f.slocid = t.slocid and
							fff.description like '%".$storagebin."%' and
							f.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as produksi,
							(
							select ifnull(sum(g.qty),0) 
							from productstockdet g
							join sloc gg on gg.slocid = g.slocid
							join storagebin ggg on ggg.storagebinid=g.storagebinid
							where g.productid = t.productid and
							g.referenceno like 'SJ-%' and
							g.slocid = t.slocid and
							ggg.description like '%".$storagebin."%' and
							g.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as jual,
							(
							select ifnull(sum(h.qty),0) 
							from productstockdet h
							join sloc hh on hh.slocid = h.slocid
							join storagebin hhh on hhh.storagebinid=h.storagebinid
							where h.productid = t.productid and
							h.referenceno like 'GRR-%' and
							h.slocid = t.slocid and
							hhh.description like '%".$storagebin."%' and
							h.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as returbeli,
							(
							select ifnull(sum(i.qty),0) 
							from productstockdet i
							join sloc ii on ii.slocid = i.slocid
							join storagebin iii on iii.storagebinid=i.storagebinid
							where i.productid = t.productid and
							i.referenceno like 'TFS-%' and
							i.qty < 0 and
							i.slocid = t.slocid and
							iii.description like '%".$storagebin."%' and
							i.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as trfout,
							(
							select ifnull(sum(j.qty),0) 
							from productstockdet j
							join sloc jj on jj.slocid = j.slocid
							join storagebin jjj on jjj.storagebinid=j.storagebinid
							where j.productid = t.productid and
							j.referenceno like 'OP-%' and
							j.qty < 0 and
							j.slocid = t.slocid and
							jjj.description like '%".$storagebin."%' and
							j.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as pemakaian,
							(
							select ifnull(sum(k.qty),0) 
							from productstockdet k
							join sloc kk on kk.slocid = k.slocid
							join storagebin kkk on kkk.storagebinid=k.storagebinid
							where k.productid = t.productid and
							k.referenceno like 'TSO-%' and
							k.slocid = t.slocid and
							kkk.description like '%".$storagebin."%' and
							k.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as koreksi,
							(select ifnull(sum(l.qty),0) 
							from productstockdet l
							join sloc ll on ll.slocid = l.slocid
							join storagebin lll on lll.storagebinid=l.storagebinid
							where l.productid = t.productid and
							l.referenceno like '%konversi%' and
							l.qty > 0 and
							l.slocid = t.slocid and
							lll.description like '%".$storagebin."%' and
							l.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiin,
							(
							select ifnull(sum(m.qty),0) 
							from productstockdet m
							join sloc mm on mm.slocid = m.slocid
							join storagebin mmm on mmm.storagebinid=m.storagebinid
							where m.productid = t.productid and
							m.referenceno like '%konversi%' and
							m.qty < 0 and
							m.slocid = t.slocid and
							m.transdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							) as konversiout,
							ifnull((select q.harga 
							from dataharga q
							where q.productid=t.productid
							),0) as harga
							from productplant t
							join materialgroup u on u.materialgroupid = t.materialgroupid
							join sloc v on v.slocid = t.slocid
									where getcompanyfromsloc(v.slocid) = ".$companyid."
              and u.materialgroupid = '".$row['materialgroupid']."' 
							and v.slocid = '".$row['slocid']."' and v.sloccode like '%".$sloc."%'
							and u.description like '%".$materialgroup."%' order by barang) z) zz )zzz 
							where awal<>0 or masuk<>0 or keluar<>0 or akhir<>0 order by barang asc";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

			$i=0;
				
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['barang'])

					->setCellValueByColumnAndRow(2,$line,$row1['satuan'])
					->setCellValueByColumnAndRow(3,$line,$row1['awal'])
					->setCellValueByColumnAndRow(4,$line,($row1['harga']/$per))
					->setCellValueByColumnAndRow(5,$line,($row1['awal']*$row1['harga']/$per))
					->setCellValueByColumnAndRow(6,$line,$row1['masuk'])
					->setCellValueByColumnAndRow(7,$line,($row1['masuk']*$row1['harga']/$per))
					->setCellValueByColumnAndRow(8,$line,$row1['awal']+$row1['masuk'])
					->setCellValueByColumnAndRow(9,$line,($row1['harga']/$per))
					->setCellValueByColumnAndRow(10,$line,(($row1['awal']+$row1['masuk'])*$row1['harga']/$per))
					->setCellValueByColumnAndRow(11,$line,$row1['keluar'])
					->setCellValueByColumnAndRow(12,$line,$row1['keluar']*$row1['harga']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['akhir'])
					->setCellValueByColumnAndRow(14,$line,($row1['akhir']*$row1['harga']/$per))
					->setCellValueByColumnAndRow(15,$line,$row1['minus']);
				$qtyawal += $row1['awal'];
				$nilaiawal += ($row1['awal'] * $row1['harga']/$per);
				$qtymasuk += $row1['masuk'];
				$nilaimasuk += ($row1['masuk'] * $row1['harga']/$per);
				$qtytersedia += ($row1['awal'] + $row1['masuk']);
				$nilaitersedia += (($row1['awal'] + $row1['masuk']) * $row1['harga']/$per);
				$qtykeluar += $row1['keluar'];
				$nilaikeluar += ($row1['keluar'] * $row1['harga']/$per);
				$qtyakhir += $row1['akhir'];
				$nilaiakhir += ($row1['akhir'] * $row1['harga']/$per);					
				$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['sloccode'].' - '.$row['description'])
				->setCellValueByColumnAndRow(3,$line,$qtyawal)
				->setCellValueByColumnAndRow(5,$line,($nilaiawal))
				->setCellValueByColumnAndRow(6,$line,$qtymasuk)
				->setCellValueByColumnAndRow(7,$line,($nilaimasuk))
				->setCellValueByColumnAndRow(8,$line,$qtytersedia)
				->setCellValueByColumnAndRow(10,$line,($nilaitersedia))
				->setCellValueByColumnAndRow(11,$line,$qtykeluar)
				->setCellValueByColumnAndRow(12,$line,($nilaikeluar))
				->setCellValueByColumnAndRow(13,$line,$qtyakhir)
				->setCellValueByColumnAndRow(14,$line,($nilaiakhir));
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			$line +=2;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(3,$line,$qtyawal2)
			->setCellValueByColumnAndRow(5,$line,($nilaiawal2))
			->setCellValueByColumnAndRow(6,$line,$qtymasuk2)
			->setCellValueByColumnAndRow(7,$line,($nilaimasuk2))
			->setCellValueByColumnAndRow(8,$line,$qtytersedia2)
			->setCellValueByColumnAndRow(10,$line,($nilaitersedia2))
			->setCellValueByColumnAndRow(11,$line,$qtykeluar2)
			->setCellValueByColumnAndRow(12,$line,($nilaikeluar2))
			->setCellValueByColumnAndRow(13,$line,$qtyakhir2)
			->setCellValueByColumnAndRow(14,$line,($nilaiakhir2));
		
		$this->getFooterXLS($this->phpExcel);	
	}
	//13
	public function RekapPerbandinganHPPPenjualanPerDokumenXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
			$this->menuname='rekapperbandinganhpppenjualanperdokumen';
	parent::actionDownxls();
		$sql = "select *,ifnull((100-((nilaihpp/nilaiinvoice)*100)),0) as gm,case when nilaiinvoice <> nilaijournalinvoice then 'X' else '' end as checklist
                from (select a.gino,
                ifnull((select sum(-c.qty*c.buyprice)
                from productdetailhist c
                join sloc d on d.slocid=c.slocid
                join plant e on e.plantid=d.plantid
                where c.referenceno=a.gino and e.companyid=b.companyid),0) as nilaihpp,
                (select f.journalno
                from genjournal f
                where f.referenceno=a.gino and f.companyid=b.companyid) as journalhppno,
                ifnull((select sum(g.debit * g.ratevalue)
                from genledger g
                join genjournal h on h.genjournalid=g.genjournalid
                where h.referenceno=a.gino and h.companyid=b.companyid),0) as nilaijournalhpp,
                ifnull(c.invoiceno,'-') as invoiceno,
                ifnull((select i.amount
                from invoice i
                where i.recordstatus = 3 and i.giheaderid= a.giheaderid),0) as nilaiinvoice,
                (select j.journalno
                from genjournal j
                where j.referenceno=replace(a.gino,'SJ','INV') and j.companyid=b.companyid) as journalinvoiceno,
                ifnull((select sum(k.debit * k.ratevalue)
                from genledger k
                join genjournal l on l.genjournalid=k.genjournalid
                where l.referenceno=replace(a.gino,'SJ','INV') and l.companyid=b.companyid),0) as nilaijournalinvoice
                from giheader a
                join soheader b on b.soheaderid=a.soheaderid
                left join invoice c on c.giheaderid=a.giheaderid and c.recordstatus=3
                where a.recordstatus=3 and b.companyid = ".$companyid."
                and a.giheaderid in (select distinct q.giheaderid from gidetail q join giheader r on r.giheaderid=q.giheaderid join sloc s on s.slocid=q.slocid where s.sloccode like '%".$sloc."%' and r.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
                and a.giheaderid in (select distinct q.giheaderid from gidetail q JOIN giheader r ON r.giheaderid=q.giheaderid JOIN productplant s ON s.productid=q.productid AND s.slocid=q.slocid AND s.unitofissue=q.unitofmeasureid JOIN materialgroup t ON t.materialgroupid=s.materialgroupid WHERE t.description like '%".$materialgroup."%' and r.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
                and a.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
                order by gino";
	$command = Yii::app()->db->createCommand($sql);
	$dataReader=$command->queryAll();
			
			$company = Yii::app()->db->createCommand('select companycode from company where companyid = '.$companyid)->queryScalar();
			
			$line = 2;
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,$line,$company);
			
			$totalhpp = 0; 
			$totaljouhpp = 0;
			$totalinv = 0;
			$totaljouinv = 0; 
			$i=1;
			$line=5;
			foreach($dataReader as $row1)
			{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i)
							->setCellValueByColumnAndRow(1,$line,$row1['gino'])
							->setCellValueByColumnAndRow(2,$line,$row1['nilaihpp']/$per)
							->setCellValueByColumnAndRow(3,$line,$row1['journalhppno'])
							->setCellValueByColumnAndRow(4,$line,($row1['nilaijournalhpp']/$per))
							->setCellValueByColumnAndRow(5,$line,($row1['invoiceno']))
							->setCellValueByColumnAndRow(6,$line,$row1['nilaiinvoice']/$per)
							->setCellValueByColumnAndRow(7,$line,($row1['journalinvoiceno']))
							->setCellValueByColumnAndRow(8,$line,$row1['nilaijournalinvoice']/$per)
							->setCellValueByColumnAndRow(9,$line,(($row1['gm'])))
							->setCellValueByColumnAndRow(10,$line,(($row1['checklist'])));
						
		$totalhpp += ($row1['nilaihpp']/$per);
		$totaljouhpp += ($row1['nilaijournalhpp']/$per);
		$totalinv += ($row1['nilaiinvoice']/$per);
		$totaljouinv += ($row1['nilaijournalinvoice']/$per);
					$line++;
					$i++;
			}
			
			$this->phpExcel->setActiveSheetIndex(0)
		->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
		->setCellValueByColumnAndRow(2,$line,($totalhpp))
		->setCellValueByColumnAndRow(4,$line,($totaljouhpp))
		->setCellValueByColumnAndRow(6,$line,($totalinv))
		->setCellValueByColumnAndRow(8,$line,($totaljouinv))
		->setCellValueByColumnAndRow(9,$line,(100-(($totalhpp/$totalinv)*100)));
	
	$this->getFooterXLS($this->phpExcel);
	}
	//14
	public function RekapPerbandinganHPPReturPenjualanPerDokumenXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
			$this->menuname='rekapperbandinganhppreturpenjualanperdokumen';
	parent::actionDownxls();
			$sql = "select *,ifnull(100-((nilaihpp/nilaiinvoice)*100),0) as gm
							from (select m.gireturno,
							ifnull((select sum(c.qty*c.buyprice)
							from productdetailhist c
							join sloc d on d.slocid=c.slocid
							join plant e on e.plantid=d.plantid
							where c.referenceno=m.gireturno and e.companyid=b.companyid),0) as nilaihpp,
							(select f.journalno
							from genjournal f
							where f.referenceno=m.gireturno and f.companyid=b.companyid) as journalhppno,
							ifnull((select sum(g.debit)
							from genledger g
							join genjournal h on h.genjournalid=g.genjournalid
							where h.referenceno=m.gireturno and h.companyid=b.companyid),0) as nilaijournalhpp,
							replace(m.gireturno,'GIR','NGIR') as invoiceno,
							ifnull((select sum(i.qty*i.price)
							from notagirpro i
							join notagir n on n.notagirid=i.notagirid
							where n.recordstatus=3 and n.gireturid= m.gireturid),0) as nilaiinvoice,
							(select j.journalno
							from genjournal j
							where j.referenceno=replace(m.gireturno,'GIR','NGIR') and j.companyid=b.companyid) as journalinvoiceno,
							ifnull((select sum(k.debit)
							from genledger k
							join genjournal l on l.genjournalid=k.genjournalid
							where l.referenceno=replace(m.gireturno,'GIR','NGIR') and l.companyid=b.companyid),0) as nilaijournalinvoice
							from giretur m
							join giheader a on a.giheaderid=m.giheaderid
							join soheader b on b.soheaderid=a.soheaderid
							where a.recordstatus=3 and b.companyid = ".$companyid."
							and a.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z";
	$command = Yii::app()->db->createCommand($sql);
	$dataReader=$command->queryAll();
			
			$company = Yii::app()->db->createCommand('select companycode from company where companyid = '.$companyid)->queryScalar();
			
			$line = 2;
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,$line,$company);
			
			$totalhpp = 0; 
			$totaljouhpp = 0;
			$totalinv = 0;
			$totaljouinv = 0; 
			$i=1;
			$line=5;
			foreach($dataReader as $row1)
			{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i)
							->setCellValueByColumnAndRow(1,$line,$row1['gireturno'])
							->setCellValueByColumnAndRow(2,$line,$row1['nilaihpp']/$per)
							->setCellValueByColumnAndRow(3,$line,$row1['journalhppno'])
							->setCellValueByColumnAndRow(4,$line,($row1['nilaijournalhpp']/$per))
							->setCellValueByColumnAndRow(5,$line,($row1['invoiceno']))
							->setCellValueByColumnAndRow(6,$line,$row1['nilaiinvoice']/$per)
							->setCellValueByColumnAndRow(7,$line,($row1['journalinvoiceno']))
							->setCellValueByColumnAndRow(8,$line,$row1['nilaijournalinvoice']/$per)
							->setCellValueByColumnAndRow(9,$line,(($row1['gm'])));
					
		$totalhpp += ($row1['nilaihpp']/$per);
		$totaljouhpp += ($row1['nilaijournalhpp']/$per);
		$totalinv += ($row1['nilaiinvoice']/$per);
		$totaljouinv += ($row1['nilaijournalinvoice']/$per);
					$line++;
					$i++;
			}
			
			$this->phpExcel->setActiveSheetIndex(0)
		->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
		->setCellValueByColumnAndRow(2,$line,($totalhpp))
		->setCellValueByColumnAndRow(4,$line,($totaljouhpp))
		->setCellValueByColumnAndRow(6,$line,($totalinv))
		->setCellValueByColumnAndRow(8,$line,($totaljouinv))
		->setCellValueByColumnAndRow(9,$line,(100-(($totalhpp/$totalinv)*100)));
	
	$this->getFooterXLS($this->phpExcel);
	}
	//15
	public function RekapPerbandinganHPPPenjualanPerBarangXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
			$this->menuname='rekapperbandinganhpppenjualanperbarang';
	parent::actionDownxls();
		$sql = "select *,(nilaihpp/qty)/(kubikasi*density) as hppdensity,(nilaiinvoice/qty)/(kubikasi*density) as jualdensity
					from (select productname, panjang, lebar, tinggi, kubikasi, density, sum(qty) as qty, sum(qty*buyprice) as nilaihpp, sum(amount) as nilaiinvoice,
						ifnull((100-(sum(qty*buyprice)/sum(amount))*100),0) as gm
						from (select e.productname, e.panjang, e.lebar, e.tinggi, ((e.panjang * e.lebar * e.tinggi)/1000000) as kubikasi, substring(IF(e.productname like '%T-%',SUBSTRING_INDEX(e.productname, '-', -2),IF(e.productname like '%centian%',SUBSTRING_INDEX(e.productname, '-', -1),'')),1,2) - IF(e.productname like '%centian%',20,0) as density, a.qty,
						ifnull((select f.buyprice from productdetailhist f where f.productid=a.productid and f.slocid=a.slocid and f.unitofmeasureid=a.unitofmeasureid and f.storagebinid=a.storagebinid and f.referenceno=c.gino limit 1),0) as buyprice,
						-- case when (select g.recordstatus from invoice g where g.giheaderid=c.giheaderid) = 3 then 
						getamountdiscso(d.soheaderid,a.sodetailid,a.qty) 
						-- else 0 end 
						as amount
						from gidetail a
						join sodetail b on b.sodetailid=a.sodetailid
						join giheader c on c.giheaderid=a.giheaderid
						join soheader d on d.soheaderid=c.soheaderid
						join product e on e.productid=a.productid
						join sloc h on h.slocid=a.slocid
						join productplant i on i.productid=a.productid and i.slocid=a.slocid
						join materialgroup j on j.materialgroupid=i.materialgroupid
						where c.recordstatus=3 and d.companyid = ".$companyid." and e.productname like '%".$product."%'
						and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
						and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
						group by productname) zz
						order by productname ";
	$command = Yii::app()->db->createCommand($sql);
	$dataReader=$command->queryAll();
			
			$company = Yii::app()->db->createCommand('select companycode from company where companyid = '.$companyid)->queryScalar();
			
			$line = 2;
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,$line,$company);
			
			$totalhpp = 0; 
			$totalinvoice = 0;
			$totalqty=0;
			$i=1;
			$line=5;
			foreach($dataReader as $row1)
			{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i)
							->setCellValueByColumnAndRow(1,$line,$row1['productname'])
							->setCellValueByColumnAndRow(2,$line,$row1['qty'])
							->setCellValueByColumnAndRow(3,$line,($row1['nilaihpp']/$per))
							->setCellValueByColumnAndRow(4,$line,($row1['nilaihpp']/$row1['qty']/$per))
							->setCellValueByColumnAndRow(5,$line,($row1['qty']))
							->setCellValueByColumnAndRow(6,$line,(($row1['nilaiinvoice'])/$per))
							->setCellValueByColumnAndRow(7,$line,((($row1['nilaiinvoice']/$row1['qty']/$per))))
							->setCellValueByColumnAndRow(8,$line,(($row1['gm'])))
							->setCellValueByColumnAndRow(9,$line,$row1['panjang'])
							->setCellValueByColumnAndRow(10,$line,$row1['lebar'])
							->setCellValueByColumnAndRow(11,$line,$row1['tinggi'])
							->setCellValueByColumnAndRow(12,$line,$row1['kubikasi'])
							->setCellValueByColumnAndRow(13,$line,$row1['density'])
							->setCellValueByColumnAndRow(14,$line,$row1['hppdensity'])
							->setCellValueByColumnAndRow(15,$line,$row1['jualdensity'])
					;
					
					$totalqty += ($row1['qty']);
		$totalhpp += ($row1['nilaihpp']/$per);
		$totalinvoice += ($row1['nilaiinvoice']/$per);
					$line++;
					$i++;
			}
			
			$this->phpExcel->setActiveSheetIndex(0)
		->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
		->setCellValueByColumnAndRow(2,$line,($totalqty))
		->setCellValueByColumnAndRow(3,$line,($totalhpp))
		->setCellValueByColumnAndRow(4,$line,($totalhpp/$totalqty))
		->setCellValueByColumnAndRow(5,$line,($totalqty))
		->setCellValueByColumnAndRow(6,$line,($totalinvoice))
		->setCellValueByColumnAndRow(7,$line,($totalinvoice/$totalqty))
		->setCellValueByColumnAndRow(8,$line,(100-(($totalhpp/$totalinvoice)*100)));
	
	$this->getFooterXLS($this->phpExcel);
	}
	//16
	public function RekapPersediaanBarangNotMovingFGXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname='RekapPersediaanBarangNotMovingFG';
		parent::actionDownxls();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
		from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-tfs-grr as keluar2
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%') zz
          where 
		  -- qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or 
		  qtyakhir <> 0 
		  -- or jumlahakhir <> 0 
          ) xa
          where keluar2=0 
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(6,2,GetCompanyCode($companyid));
						$line=5;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Gudang')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sloccode'])
				->setCellValueByColumnAndRow(6,$line,'Material Group')
				->setCellValueByColumnAndRow(7,$line,': '.$row['description'])
				->setCellValueByColumnAndRow(12,$line,'Nama Akun')
				->setCellValueByColumnAndRow(13,$line,': '.$row['accountname']);							
			if ($storagebin == null)			
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'');}
			else
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'Rak')
				->setCellValueByColumnAndRow(4,$line,': '.$storagebin);}
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Satuan')					
				->setCellValueByColumnAndRow(3,$line,'Qty')
				->setCellValueByColumnAndRow(4,$line,'Harga')
				->setCellValueByColumnAndRow(5,$line,'Nilai')
				->setCellValueByColumnAndRow(6,$line,'Qty')
				->setCellValueByColumnAndRow(7,$line,'Nilai')
				->setCellValueByColumnAndRow(8,$line,'Qty')
				->setCellValueByColumnAndRow(9,$line,'Harga')
				->setCellValueByColumnAndRow(10,$line,'Nilai')
				->setCellValueByColumnAndRow(11,$line,'Qty')
				->setCellValueByColumnAndRow(12,$line,'Nilai')
				->setCellValueByColumnAndRow(13,$line,'Qty')
				->setCellValueByColumnAndRow(14,$line,'Nilai')
				->setCellValueByColumnAndRow(15,$line,'');
			$line++;
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select * from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-tfs-grr as keluar2
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and l.slocid = ".$row['slocid']." and o.materialgroupid = ".$row['materialgroupid'].") zz
          where 
		  -- qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or 
		  qtyakhir <> 0 
		  -- or jumlahakhir <> 0 
          ) xa
          where keluar2=0 
          order by keluar2";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
				
			foreach($dataReader1 as $row1)
			{
              
              
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,$row1['uomcode'])
					->setCellValueByColumnAndRow(3,$line,$row1['qtyawal'])
					->setCellValueByColumnAndRow(4,$line,$row1['hargaawal']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['jumlahawal']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['qtymasuk'])
					->setCellValueByColumnAndRow(7,$line,$row1['jumlahmasuk']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['qtytersedia'])
					->setCellValueByColumnAndRow(9,$line,($row1['hargatersedia']/$per))
					->setCellValueByColumnAndRow(10,$line,($row1['jumlahtersedia']/$per))
					->setCellValueByColumnAndRow(11,$line,$row1['qtykeluar'])
					->setCellValueByColumnAndRow(12,$line,$row1['jumlahkeluar']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['qtyakhir'])
					->setCellValueByColumnAndRow(14,$line,$row1['jumlahakhir']/$per)
					->setCellValueByColumnAndRow(15,$line,$row1['minus']);
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;				
				$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['sloccode'].' - '.$row['description'])
				->setCellValueByColumnAndRow(3,$line,$qtyawal)
				->setCellValueByColumnAndRow(5,$line,$nilaiawal)
				->setCellValueByColumnAndRow(6,$line,$qtymasuk)
				->setCellValueByColumnAndRow(7,$line,$nilaimasuk)
				->setCellValueByColumnAndRow(8,$line,$qtytersedia)
				->setCellValueByColumnAndRow(10,$line,$nilaitersedia)
				->setCellValueByColumnAndRow(11,$line,$qtykeluar)
				->setCellValueByColumnAndRow(12,$line,$nilaikeluar)
				->setCellValueByColumnAndRow(13,$line,$qtyakhir)
				->setCellValueByColumnAndRow(14,$line,$nilaiakhir);
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			$line +=2;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(3,$line,$qtyawal2)
			->setCellValueByColumnAndRow(5,$line,$nilaiawal2)
			->setCellValueByColumnAndRow(6,$line,$qtymasuk2)
			->setCellValueByColumnAndRow(7,$line,$nilaimasuk2)
			->setCellValueByColumnAndRow(8,$line,$qtytersedia2)
			->setCellValueByColumnAndRow(10,$line,$nilaitersedia2)
			->setCellValueByColumnAndRow(11,$line,$qtykeluar2)
			->setCellValueByColumnAndRow(12,$line,$nilaikeluar2)
			->setCellValueByColumnAndRow(13,$line,$qtyakhir2)
			->setCellValueByColumnAndRow(14,$line,$nilaiakhir2);
		
		$this->getFooterXLS($this->phpExcel);	
	}
	//17
	public function RekapPersediaanBarangSlowMovingXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname='rekappersediaanbarangslowmoving';
		parent::actionDownxls();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%') zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(5,2,GetCompanyCode($companyid));
						$line=5;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Gudang')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sloccode'])
				->setCellValueByColumnAndRow(6,$line,'Material Group')
				->setCellValueByColumnAndRow(7,$line,': '.$row['description'])
				->setCellValueByColumnAndRow(12,$line,'Nama Akun')
				->setCellValueByColumnAndRow(13,$line,': '.$row['accountname']);							
			if ($storagebin == null)			
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'');}
			else
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'Rak')
				->setCellValueByColumnAndRow(4,$line,': '.$storagebin);}
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Satuan')					
				->setCellValueByColumnAndRow(3,$line,'Qty')
				->setCellValueByColumnAndRow(4,$line,'Harga')
				->setCellValueByColumnAndRow(5,$line,'Nilai')
				->setCellValueByColumnAndRow(6,$line,'Qty')
				->setCellValueByColumnAndRow(7,$line,'Nilai')
				->setCellValueByColumnAndRow(8,$line,'Qty')
				->setCellValueByColumnAndRow(9,$line,'Harga')
				->setCellValueByColumnAndRow(10,$line,'Nilai')
				->setCellValueByColumnAndRow(11,$line,'Qty')
				->setCellValueByColumnAndRow(12,$line,'Nilai')
				->setCellValueByColumnAndRow(13,$line,'Qty')
				->setCellValueByColumnAndRow(14,$line,'Nilai')
				->setCellValueByColumnAndRow(15,$line,'');
			$line++;
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select * from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-tfs-grr as keluar2
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and l.slocid = ".$row['slocid']." and o.materialgroupid = ".$row['materialgroupid'].") zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0 
          ) xa
          where keluar2 > - ".$keluar3."  
          order by keluar2";
		$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
				
			foreach($dataReader1 as $row1)
			{
              
              
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,$row1['uomcode'])
					->setCellValueByColumnAndRow(3,$line,$row1['qtyawal'])
					->setCellValueByColumnAndRow(4,$line,$row1['hargaawal']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['jumlahawal']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['qtymasuk'])
					->setCellValueByColumnAndRow(7,$line,$row1['jumlahmasuk']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['qtytersedia'])
					->setCellValueByColumnAndRow(9,$line,$row1['hargatersedia']/$per)
					->setCellValueByColumnAndRow(10,$line,$row1['jumlahtersedia']/$per)
					->setCellValueByColumnAndRow(11,$line,$row1['qtykeluar'])
					->setCellValueByColumnAndRow(12,$line,$row1['jumlahkeluar']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['qtyakhir'])
					->setCellValueByColumnAndRow(14,$line,$row1['jumlahakhir']/$per)
					->setCellValueByColumnAndRow(15,$line,$row1['minus']);
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;				
				$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['sloccode'].' - '.$row['description'])
				->setCellValueByColumnAndRow(3,$line,$qtyawal)
				->setCellValueByColumnAndRow(5,$line,$nilaiawal)
				->setCellValueByColumnAndRow(6,$line,$qtymasuk)
				->setCellValueByColumnAndRow(7,$line,$nilaimasuk)
				->setCellValueByColumnAndRow(8,$line,$qtytersedia)
				->setCellValueByColumnAndRow(10,$line,$nilaitersedia)
				->setCellValueByColumnAndRow(11,$line,$qtykeluar)
				->setCellValueByColumnAndRow(12,$line,$nilaikeluar)
				->setCellValueByColumnAndRow(13,$line,$qtyakhir)
				->setCellValueByColumnAndRow(14,$line,$nilaiakhir);
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			$line +=2;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(3,$line,$qtyawal2)
			->setCellValueByColumnAndRow(5,$line,$nilaiawal2)
			->setCellValueByColumnAndRow(6,$line,$qtymasuk2)
			->setCellValueByColumnAndRow(7,$line,$nilaimasuk2)
			->setCellValueByColumnAndRow(8,$line,$qtytersedia2)
			->setCellValueByColumnAndRow(10,$line,$nilaitersedia2)
			->setCellValueByColumnAndRow(11,$line,$qtykeluar2)
			->setCellValueByColumnAndRow(12,$line,$nilaikeluar2)
			->setCellValueByColumnAndRow(13,$line,$qtyakhir2)
			->setCellValueByColumnAndRow(14,$line,$nilaiakhir2);
		
		$this->getFooterXLS($this->phpExcel);	
	}
	//18
	public function RekapPersediaanBarangFastMovingXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname='RekapPersediaanBarangFastMoving';
		parent::actionDownxls();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%') zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
						$line=5;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Gudang')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sloccode'])
				->setCellValueByColumnAndRow(6,$line,'Material Group')
				->setCellValueByColumnAndRow(7,$line,': '.$row['description'])
				->setCellValueByColumnAndRow(12,$line,'Nama Akun')
				->setCellValueByColumnAndRow(13,$line,': '.$row['accountname']);							
			if ($storagebin == null)			
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'');}
			else
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'Rak')
				->setCellValueByColumnAndRow(4,$line,': '.$storagebin);}
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Satuan')					
				->setCellValueByColumnAndRow(3,$line,'Qty')
				->setCellValueByColumnAndRow(4,$line,'Harga')
				->setCellValueByColumnAndRow(5,$line,'Nilai')
				->setCellValueByColumnAndRow(6,$line,'Qty')
				->setCellValueByColumnAndRow(7,$line,'Nilai')
				->setCellValueByColumnAndRow(8,$line,'Qty')
				->setCellValueByColumnAndRow(9,$line,'Harga')
				->setCellValueByColumnAndRow(10,$line,'Nilai')
				->setCellValueByColumnAndRow(11,$line,'Qty')
				->setCellValueByColumnAndRow(12,$line,'Nilai')
				->setCellValueByColumnAndRow(13,$line,'Qty')
				->setCellValueByColumnAndRow(14,$line,'Nilai')
				->setCellValueByColumnAndRow(15,$line,'');
			$line++;
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select * from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-tfs-grr as keluar2
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and l.slocid = ".$row['slocid']." and o.materialgroupid = ".$row['materialgroupid'].") zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0 
          ) xa
          where keluar2 < - ".$keluar3."  
          order by keluar2";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
				
			foreach($dataReader1 as $row1)
			{
              
              
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,$row1['uomcode'])
					->setCellValueByColumnAndRow(3,$line,$row1['qtyawal'])
					->setCellValueByColumnAndRow(4,$line,$row1['hargaawal']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['jumlahawal']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['qtymasuk'])
					->setCellValueByColumnAndRow(7,$line,$row1['jumlahmasuk']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['qtytersedia'])
					->setCellValueByColumnAndRow(9,$line,($row1['hargatersedia']/$per))
					->setCellValueByColumnAndRow(10,$line,($row1['jumlahtersedia']/$per))
					->setCellValueByColumnAndRow(11,$line,$row1['qtykeluar'])
					->setCellValueByColumnAndRow(12,$line,$row1['jumlahkeluar']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['qtyakhir'])
					->setCellValueByColumnAndRow(14,$line,$row1['jumlahakhir']/$per)
					->setCellValueByColumnAndRow(15,$line,$row1['minus']);
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;				
				$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['sloccode'].' - '.$row['description'])
				->setCellValueByColumnAndRow(3,$line,$qtyawal)
				->setCellValueByColumnAndRow(5,$line,$nilaiawal)
				->setCellValueByColumnAndRow(6,$line,$qtymasuk)
				->setCellValueByColumnAndRow(7,$line,$nilaimasuk)
				->setCellValueByColumnAndRow(8,$line,$qtytersedia)
				->setCellValueByColumnAndRow(10,$line,$nilaitersedia)
				->setCellValueByColumnAndRow(11,$line,$qtykeluar)
				->setCellValueByColumnAndRow(12,$line,$nilaikeluar)
				->setCellValueByColumnAndRow(13,$line,$qtyakhir)
				->setCellValueByColumnAndRow(14,$line,$nilaiakhir);
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			$line +=2;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(3,$line,$qtyawal2)
			->setCellValueByColumnAndRow(5,$line,$nilaiawal2)
			->setCellValueByColumnAndRow(6,$line,$qtymasuk2)
			->setCellValueByColumnAndRow(7,$line,$nilaimasuk2)
			->setCellValueByColumnAndRow(8,$line,$qtytersedia2)
			->setCellValueByColumnAndRow(10,$line,$nilaitersedia2)
			->setCellValueByColumnAndRow(11,$line,$qtykeluar2)
			->setCellValueByColumnAndRow(12,$line,$nilaikeluar2)
			->setCellValueByColumnAndRow(13,$line,$qtyakhir2)
			->setCellValueByColumnAndRow(14,$line,$nilaiakhir2);
		
		$this->getFooterXLS($this->phpExcel);	
	}
	//19
	public function KartuStokBarangXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
    {
        $this->menuname='kartustokbarang';
		parent::actionDownxls();
        
        $sql        = "select distinct a.description,a.materialgroupid
										from materialgroup a
										join productplant b on b.materialgroupid=a.materialgroupid
										join sloc c on c.slocid = b.slocid
										join plant d on d.plantid = c.plantid
										join company e on e.companyid = d.companyid
										join product f on f.productid = b.productid
										where e.companyid = " . $companyid . " and f.productid in
										(select distinct z.productid 
										from productdetailhist z
										join sloc za on za.slocid = z.slocid
										join plant zb on zb.plantid = za.plantid
										join company zc on zc.companyid = zb.companyid
										join product zd on zd.productid = z.productid
										where zc.companyid = " . $companyid . " and z.slocid = b.slocid 
										and za.sloccode like '%" . $sloc . "%' and zd.productname like '%" . $product . "%' and z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and a.description like '%" . $materialgroup . "%'
										order by description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
        
        $this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
						$line=4;
    
        $this->phpExcel->setActiveSheetIndex(0)
                        ->setCellValueByColumnAndRow(0,$line,'Dokumen')
                        ->setCellValueByColumnAndRow(1,$line,'Tanggal')
                        ->setCellValueByColumnAndRow(2,$line,'Awal')
                        ->setCellValueByColumnAndRow(3,$line,'Masuk')
                        ->setCellValueByColumnAndRow(4,$line,'Keluar')
                        ->setCellValueByColumnAndRow(5,$line,'Akhir')
                        ->setCellValueByColumnAndRow(6,$line,'Harga')
                        ->setCellValueByColumnAndRow(7,$line,'Jumlah');
        $line++;
        
        foreach ($dataReader as $row) {
            $this->phpExcel->setActiveSheetIndex(0)
                        ->setCellValueByColumnAndRow(0,$line,'Material Group')
                        ->setCellValueByColumnAndRow(1,$line,$row['description']);
            $line++;
            
            $awal1       = 0;
            $masuk1      = 0;
            $keluar1     = 0;
            $saldo1      = 0;
            $sql1        = "select distinct productid,productname,slocid,sloccode from
                    (select productid,productname,awal,dokumen,tanggal,slocid,sloccode,masuk,keluar,(awal+masuk+keluar) as saldo
                    from
                    (select productid,productname,awal,dokumen,tanggal,slocid,sloccode,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+konversiout+koreksi) as keluar
                    from
                    (select productid,productname,referenceno as dokumen, buydate as tanggal,slocid,sloccode,awal,
                    case when instr(referenceno,'GR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as beli,
                    case when instr(referenceno,'GIR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as returjual,
                    case when (instr(referenceno,'TFS-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as trfin,
                    case when (instr(referenceno,'OP-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as produksi,
                    case when (instr(referenceno,'konversi') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as konversiin,
                    case when instr(referenceno,'SJ-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as jual,
                    case when instr(referenceno,'GRR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as returbeli,
                    case when (instr(referenceno,'TFS') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as trfout,
                    case when (instr(referenceno,'OP-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as pemakaian,
                    case when (instr(referenceno,'konversi') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as konversiout,
                    case when instr(referenceno,'TSO') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as koreksi
                    from
                    (select a.productid,g.productname,a.referenceno,a.buydate,a.qty,b.slocid,b.sloccode,
                        (select ifnull(sum(x.qty),0) from productdetailhist x
                        where x.productid = a.productid and x.slocid = a.slocid and
                    x.buydate < '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "') as awal
                    from productdetailhist a
                    join sloc b on b.slocid = a.slocid
                    join plant c on c.plantid = b.plantid
                    join company d on d.companyid = c.companyid
                    join productplant e on e.productid=a.productid and e.slocid=a.slocid and e.unitofissue=a.unitofmeasureid
                    join storagebin f on f.storagebinid=a.storagebinid
                    join product g on g.productid=a.productid
                    where d.companyid = " . $companyid . " and b.sloccode like '%" . $sloc . "%' and e.materialgroupid = '" . $row['materialgroupid'] . "'
                    and g.productname like '%" . $product . "%' and 
                    a.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                    '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') z) zz) zzz) zzzz
                    order by productname,sloccode";
		$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
            foreach ($dataReader1 as $row1) {
                $this->phpExcel->setActiveSheetIndex(0)
                        ->setCellValueByColumnAndRow(0,$line,$row1['productname'])
                        ->setCellValueByColumnAndRow(7,$line,$row1['sloccode']);
                $line++;
                
                $sql2        = "select awal,dokumen,tanggal,masuk,keluar,(awal+masuk+keluar) as saldo,buyprice,case when masuk <> 0 then (masuk * buyprice) else (keluar * buyprice) end as nilai
		                    from
		                    (select awal,dokumen,tanggal,(beli+returjual+trfin+produksi+konversiin) as masuk,(jual+returbeli+trfout+pemakaian+konversiout+koreksi) as keluar,buyprice
		                    from
		                    (select referenceno as dokumen, buydate as tanggal,slocid,awal,
		                    case when instr(referenceno,'GR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as beli,
		                    case when instr(referenceno,'GIR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as returjual,
		                    case when (instr(referenceno,'TFS-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as trfin,
		                    case when (instr(referenceno,'OP-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as produksi,
													case when (instr(referenceno,'konversi') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty > 0) then qty else 0 end as konversiin,
		                    case when instr(referenceno,'SJ-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as jual,
		                    case when instr(referenceno,'GRR-') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as returbeli,
		                    case when (instr(referenceno,'TFS') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as trfout,
		                    case when (instr(referenceno,'OP-') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as pemakaian,
													case when (instr(referenceno,'konversi') > 0) and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') and (qty < 0) then qty else 0 end as konversiout,
		                    case when instr(referenceno,'TSO') > 0 and (z.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
													'" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') then qty else 0 end as koreksi,buyprice
		                    from
		                    (select a.referenceno,a.buydate,a.qty,a.slocid,
														(select ifnull(sum(x.qty),0) from productdetailhist x
														where x.productid = '" . $row1['productid'] . "' and x.slocid = '" . $row1['slocid'] . "' and
		                    x.buydate < '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "') as awal,a.buyprice
		                    from productdetailhist a
		                    join sloc b on b.slocid = a.slocid
		                    join plant c on c.plantid = b.plantid
		                    join company d on d.companyid = c.companyid
		                    where a.productid = '" . $row1['productid'] . "' and a.slocid = '" . $row1['slocid'] . "' and
													a.buydate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' and 
                                                        '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "') z) zz) zzz";
		$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
                $awal        = 0;
                $masuk       = 0;
                $keluar      = 0;
                $saldo       = 0;
                
                foreach ($dataReader2 as $row2) {
                    $this->phpExcel->setActiveSheetIndex(0)
                        ->setCellValueByColumnAndRow(0,$line,$row2['dokumen'])
                        ->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($row2['tanggal'])))
                        ->setCellValueByColumnAndRow(3,$line,$row2['masuk'])
                        ->setCellValueByColumnAndRow(4,$line,$row2['keluar'])
                        ->setCellValueByColumnAndRow(6,$line,$row2['buyprice']/$per)
                        ->setCellValueByColumnAndRow(7,$line,$row2['nilai']/$per);
                        
                    $awal = $row2['awal'];
                    $masuk += $row2['masuk'];
                    $keluar += $row2['keluar'];
                    $saldo = $awal + $masuk + $keluar;
                    $line++;
                }
                $line++;
                
                $this->phpExcel->setActiveSheetIndex(0)
                        ->setCellValueByColumnAndRow(1,$line,'Total')
                        ->setCellValueByColumnAndRow(2,$line,$awal)
                        ->setCellValueByColumnAndRow(3,$line,$masuk)
                        ->setCellValueByColumnAndRow(4,$line,$keluar)
                        ->setCellValueByColumnAndRow(5,$line,$saldo);
                    
                $awal1 += $awal;
                $masuk1 += $masuk;
                $keluar1 += $keluar;
                $saldo1 += $saldo;
                $line++;
            }
            
            $this->phpExcel->setActiveSheetIndex(0)
                        ->setCellValueByColumnAndRow(1,$line,'Grand Total')
                        ->setCellValueByColumnAndRow(2,$line,$awal1)
                        ->setCellValueByColumnAndRow(3,$line,$masuk1)
                        ->setCellValueByColumnAndRow(4,$line,$keluar1)
                        ->setCellValueByColumnAndRow(5,$line,$saldo1);
        }
        
        $this->getFooterXLS($this->phpExcel);   
    }
	//20
	public function RekapPersediaanBarangDetailPersediaanXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
    {
        $this->menuname='rekappersediaanbarangdetailpersediaan';
		parent::actionDownxls();
        
        $qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;
        $qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		
		$sql="select distinct accountid,accountname,slocid,sloccode
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountid,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%'
					and q.accountcode between '110501' and '11050199999999999999999999999999') zz
          where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
          -- where qtyawal <> 0 or (jumlahawal > 1 and jumlahawal < -1) or qtymasuk <> 0 or (jumlahmasuk > 1 and jumlahmasuk < -1) or qtykeluar <> 0 or (jumlahkeluar > 1 and jumlahkeluar < -1) or qtyakhir <> 0 or (jumlahakhir > 1 and jumlahakhir < -1)
          order by accountname,sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
        
        foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
						$line=5;
        
        foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Nama Akun')
				->setCellValueByColumnAndRow(1,$line,': '.$row['accountname'])
				->setCellValueByColumnAndRow(6,$line,'Gudang')
				->setCellValueByColumnAndRow(7,$line,': '.$row['sloccode']);
			if ($storagebin == null)			
            {
                $this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'');
            }
			else
			{
                $this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'Rak')
				->setCellValueByColumnAndRow(4,$line,': '.$storagebin);
            }
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Satuan')					
				->setCellValueByColumnAndRow(3,$line,'Qty')
				->setCellValueByColumnAndRow(4,$line,'Harga')
				->setCellValueByColumnAndRow(5,$line,'Nilai')
				->setCellValueByColumnAndRow(6,$line,'Qty')
				->setCellValueByColumnAndRow(7,$line,'Nilai')
				->setCellValueByColumnAndRow(8,$line,'Qty')
				->setCellValueByColumnAndRow(9,$line,'Harga')
				->setCellValueByColumnAndRow(10,$line,'Nilai')
				->setCellValueByColumnAndRow(11,$line,'Qty')
				->setCellValueByColumnAndRow(12,$line,'Nilai')
				->setCellValueByColumnAndRow(13,$line,'Qty')
				->setCellValueByColumnAndRow(14,$line,'Nilai')
				->setCellValueByColumnAndRow(15,$line,'');
			$line++;
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
            case when qtyakhir < 0 then 'X' else '' end as minus
            from (select k.productname,m.uomcode,l.sloccode,o.description,
            ifnull((select sum(a.qty)
            from productdetailhist a
            where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
            ifnull((select sum(a.qty*a.buyprice)
            from productdetailhist a
            where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
            ifnull((select sum(a.qty)
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
            ifnull((select sum(a.qty*a.buyprice)
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
            ifnull((select sum(a.qty)
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
            ifnull((select sum(a.qty*a.buyprice)
            from productdetailhist a
            where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
            ifnull((select sum(a.qty)
            from productdetailhist a
            where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
            ifnull((select sum(a.qty*a.buyprice)
            from productdetailhist a
            where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir
            from productplant j
            join product k on k.productid=j.productid
            join sloc l on l.slocid=j.slocid
            join unitofmeasure m on m.unitofmeasureid=j.unitofissue
            join plant n on n.plantid=l.plantid
            join materialgroup o on o.materialgroupid=j.materialgroupid
            join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
            join account q on q.accountid=p.accpersediaan and q.companyid=n.companyid
            where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' 
            and q.accountid = ".$row['accountid']." and l.slocid = ".$row['slocid'].") zz
            where qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or qtyakhir <> 0 or jumlahakhir <> 0
            -- where qtyawal <> 0 or (jumlahawal > 1 and jumlahawal < -1) or qtymasuk <> 0 or (jumlahmasuk > 1 and jumlahmasuk < -1) or qtykeluar <> 0 or (jumlahkeluar > 1 and jumlahkeluar < -1) or qtyakhir <> 0 or (jumlahakhir > 1 and jumlahakhir < -1)
            order by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
            
            foreach($dataReader1 as $row1)
            {
            $i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,$row1['uomcode'])
					->setCellValueByColumnAndRow(3,$line,$row1['qtyawal'])
					->setCellValueByColumnAndRow(4,$line,$row1['hargaawal'])
					->setCellValueByColumnAndRow(5,$line,$row1['jumlahawal'])
					->setCellValueByColumnAndRow(6,$line,$row1['qtymasuk'])
					->setCellValueByColumnAndRow(7,$line,$row1['jumlahmasuk'])
					->setCellValueByColumnAndRow(8,$line,$row1['qtytersedia'])
					->setCellValueByColumnAndRow(9,$line,($row1['hargatersedia']))
					->setCellValueByColumnAndRow(10,$line,($row1['jumlahtersedia']))
					->setCellValueByColumnAndRow(11,$line,$row1['qtykeluar'])
					->setCellValueByColumnAndRow(12,$line,$row1['jumlahkeluar'])
					->setCellValueByColumnAndRow(13,$line,$row1['qtyakhir'])
					->setCellValueByColumnAndRow(14,$line,$row1['jumlahakhir'])
					->setCellValueByColumnAndRow(15,$line,$row1['minus']);
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal'];
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk'];
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia'];
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar'];
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir'];
				$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['accountname'].' - '.$row['sloccode'].'      >>>>>')
				->setCellValueByColumnAndRow(3,$line,$qtyawal)
				->setCellValueByColumnAndRow(5,$line,$nilaiawal)
				->setCellValueByColumnAndRow(6,$line,$qtymasuk)
				->setCellValueByColumnAndRow(7,$line,$nilaimasuk)
				->setCellValueByColumnAndRow(8,$line,$qtytersedia)
				->setCellValueByColumnAndRow(10,$line,$nilaitersedia)
				->setCellValueByColumnAndRow(11,$line,$qtykeluar)
				->setCellValueByColumnAndRow(12,$line,$nilaikeluar)
				->setCellValueByColumnAndRow(13,$line,$qtyakhir)
				->setCellValueByColumnAndRow(14,$line,$nilaiakhir);
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			$line +=2;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(3,$line,$qtyawal2)
			->setCellValueByColumnAndRow(5,$line,$nilaiawal2)
			->setCellValueByColumnAndRow(6,$line,$qtymasuk2)
			->setCellValueByColumnAndRow(7,$line,$nilaimasuk2)
			->setCellValueByColumnAndRow(8,$line,$qtytersedia2)
			->setCellValueByColumnAndRow(10,$line,$nilaitersedia2)
			->setCellValueByColumnAndRow(11,$line,$qtykeluar2)
			->setCellValueByColumnAndRow(12,$line,$nilaikeluar2)
			->setCellValueByColumnAndRow(13,$line,$qtyakhir2)
			->setCellValueByColumnAndRow(14,$line,$nilaiakhir2);
        
        $this->getFooterXLS($this->phpExcel);
  }
	
	//21
	
	//22
	
	//23
	
	//24
    public function HppActualVsBomXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
    {
        $this->menuname='hppactualvsbom';
		parent::actionDownxls();
        
		$sql = "SELECT DISTINCT d.slocid,d.sloccode
						FROM productoutputfg a
						JOIN productoutput b ON b.productoutputid=a.productoutputid
						JOIN product c ON c.productid=a.productid
						JOIN sloc d ON d.slocid=a.slocid
						JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
						JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
						JOIN storagebin g ON g.storagebinid=a.storagebinid
						WHERE b.companyid = ".$companyid." AND b.recordstatus = getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.sloccode LIKE '%".$sloc."%' AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
						ORDER BY sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
        
        $this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
        
        $line = 5;
        
        foreach($dataReader as $row)
		{        
            $this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'GUDANG : '.$row['sloccode']);
            $line++;
			
			$sql1 = "SELECT DISTINCT c.productid,c.productname,b.productoutputno,b.productoutputdate,a.productoutputfgid,j.qty,j.buyprice,j.qty * j.buyprice as jumlah,h.unitofmeasureid,h.uomcode,i.bomid,i.bomversion
					FROM productoutputfg a
					JOIN productoutput b ON b.productoutputid=a.productoutputid
					JOIN product c ON c.productid=a.productid
					JOIN sloc d ON d.slocid=a.slocid
					JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
					JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
					JOIN storagebin g ON g.storagebinid=a.storagebinid
					JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
					JOIN billofmaterial i ON i.bomid=a.bomid
					JOIN productdetailhist j on j.productoutputfgid=a.productoutputfgid AND j.productid=a.productid and j.qty > 0
					WHERE b.companyid = ".$companyid." AND b.recordstatus=getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.slocid = ".$row['slocid']." AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
					ORDER BY productoutputdate,productoutputno,productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
            
			foreach($dataReader1 as $row1)				
			{
				$sql2 = "SELECT ".$row1['qty']." as qtybom,sum(buyprice) as buypricebom,".$row1['qty']." * sum(buyprice) as jumlahbom
				    FROM (SELECT a.qty * (SELECT r.buyprice FROM productdetail r WHERE r.productid=a.productid AND r.slocid=e.slocid AND r.unitofmeasureid=a.uomid Limit 1) as buyprice
								FROM bomdetail a
								JOIN billofmaterial b ON b.bomid=a.bomid
								JOIN product c ON c.productid=a.productid
								LEFT JOIN productplant e ON e.productid=a.productid AND e.unitofissue=a.uomid AND e.slocid=(SELECT q.slocid FROM productoutputfg q WHERE q.productoutputfgid = ".$row1['productoutputfgid'].")
								LEFT JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
								LEFT JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
								WHERE c.isstock = 1 AND a.bomid = ".$row1['bomid']."
						UNION
								SELECT k.qty as buyprice
									FROM bomdetail k
									JOIN billofmaterial l ON l.bomid=k.bomid
									JOIN product m ON m.productid=k.productid
									JOIN productoutputfg n ON n.bomid=l.bomid
									JOIN unitofmeasure o ON o.unitofmeasureid=k.uomid
									WHERE m.isstock = 0 AND n.productoutputfgid = ".$row1['productoutputfgid'].") z
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				foreach($dataReader2 as $row2)				
				{
/*				$foh = "(SELECT if(t.productname LIKE '%busa balokan%' OR t.productname LIKE '%busa cylinder%',if(t.tinggi>0,p.foh * ((t.panjang * t.lebar * t.tinggi)/1000000) * t.density,p.foh * getVolumeCylinder(t.panjang,t.lebar/2) * t.density),if(t.isfohulbom=0,p.foh * v.cycletime,(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=v.bomid AND y.productname LIKE 'FOH %'))) FROM fohul p JOIN productplant q ON q.mgprocessid=p.mgprocessid join productoutputfg r ON r.productid=q.productid AND r.slocid=q.slocid AND r.uomid=q.unitofissue JOIN sloc u ON u.slocid=r.slocid AND u.plantid=p.plantid JOIN productoutput s ON s.productoutputid=r.productoutputid join product t ON t.productid=r.productid JOIN billofmaterial v ON v.bomid=r.bomid WHERE p.recordstatus = 3 and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') AND r.productoutputfgid = ".$row1['productoutputfgid']." AND p.companyid = ".$companyid.")
				";
				$ul = "(SELECT if(t.productname LIKE '%busa balokan%' OR t.productname LIKE '%busa cylinder%',if(t.tinggi>0,p.ul * ((t.panjang * t.lebar * t.tinggi)/1000000) * t.density,p.ul * getVolumeCylinder(t.panjang,t.lebar/2) * t.density),if(t.isfohulbom=0,p.ul * v.cycletime,(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=v.bomid AND y.productname LIKE 'UL %'))) FROM fohul p JOIN productplant q ON q.mgprocessid=p.mgprocessid join productoutputfg r ON r.productid=q.productid AND r.slocid=q.slocid AND r.uomid=q.unitofissue JOIN sloc u ON u.slocid=r.slocid AND u.plantid=p.plantid JOIN productoutput s ON s.productoutputid=r.productoutputid join product t ON t.productid=r.productid JOIN billofmaterial v ON v.bomid=r.bomid WHERE p.recordstatus = 3 and  month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') AND r.productoutputfgid = ".$row1['productoutputfgid']." AND p.companyid = ".$companyid.")
				";*/
				$foh = "(SELECT if(e.productname LIKE '%busa balokan%' OR e.productname LIKE '%busa cylinder%',if(e.tinggi>0,(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * ((e.panjang * e.lebar * e.tinggi)/1000000) * e.density,(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * getVolumeCylinder(e.panjang,e.lebar/2) * e.density),if(e.isfohulbom=0,(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * f.cycletime,(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=f.bomid AND y.productname LIKE 'FOH %')))
				FROM productoutputfg a
				JOIN productoutput b ON b.productoutputid=a.productoutputid
				JOIN productplant c ON c.productid=a.productid AND c.slocid=a.slocid AND c.unitofissue=a.uomid
				JOIN sloc d ON d.slocid=a.slocid
				JOIN product e ON e.productid=a.productid
				JOIN billofmaterial f ON f.bomid=a.bomid 
				WHERE a.productoutputfgid = ".$row1['productoutputfgid']." AND b.companyid = ".$companyid.")
				";
				$ul = "(SELECT if(e.productname LIKE '%busa balokan%' OR e.productname LIKE '%busa cylinder%',if(e.tinggi>0,(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * ((e.panjang * e.lebar * e.tinggi)/1000000) * e.density,(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * getVolumeCylinder(e.panjang,e.lebar/2) * e.density),if(e.isfohulbom=0,(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * f.cycletime,(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=f.bomid AND y.productname LIKE 'UL %')))
				FROM productoutputfg a
				JOIN productoutput b ON b.productoutputid=a.productoutputid
				JOIN productplant c ON c.productid=a.productid AND c.slocid=a.slocid AND c.unitofissue=a.uomid
				JOIN sloc d ON d.slocid=a.slocid
				JOIN product e ON e.productid=a.productid
				JOIN billofmaterial f ON f.bomid=a.bomid 
				WHERE a.productoutputfgid = ".$row1['productoutputfgid']." AND b.companyid = ".$companyid.")
				";
				$cad = "(select IFNULL((sum(qtydetail*price)) * 0.03,0)
								from (select ifnull(a.qty/b.qtyoutput,0) as qtydetail,a.productid,
								ifnull(c.buyprice,0) as price
								from productoutputdetail a
								join productoutputfg b on b.productoutputfgid = a.productoutputfgid
								join productdetailhist c on c.productoutputdetailid=a.productoutputdetailid
								join product d on d.productid = a.productid
								where a.productoutputfgid = ".$row1['productoutputfgid']." and d.isstock = 1
								AND (a.bomid IS NULL OR a.bomid = 0)) z)
				";
					$sql3 = "SELECT productname,sum(qty) as qty,sum(buyprice) as buyprice,sum(jumlah) as jumlah,unitofmeasureid,uomcode,isstock,sum(qtybom) as qtybom,sum(jumlahbom)/sum(qtybom) as buypricebom,sum(jumlahbom) as jumlahbom
							FROM (SELECT c.productname,-sum(j.qty) as qty,-sum(j.qty * j.buyprice)/-sum(j.qty) as buyprice,-sum(j.qty * j.buyprice) as jumlah,h.unitofmeasureid,h.uomcode,c.isstock,0 as qtybom,0 as jumlahbom
									FROM productoutputdetail a
									JOIN productoutput b ON b.productoutputid=a.productoutputid
									JOIN product c ON c.productid=a.productid
									JOIN sloc d ON d.slocid=a.toslocid
									JOIN productplant e ON e.productid=a.productid AND e.slocid=a.toslocid AND e.unitofissue=a.uomid
									JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
									JOIN storagebin g ON g.storagebinid=a.storagebinid
									JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
									JOIN productdetailhist j on j.productoutputdetailid=a.productoutputdetailid AND j.productid=a.productid
									WHERE c.isstock = 1 AND a.productoutputfgid = ".$row1['productoutputfgid']."
									GROUP BY productname
							UNION
									SELECT m.productname,n.qtyoutput as qty,sum(case when m.productname like 'FOH%' then ".$foh." else case when m.productname like 'UL%' then ".$ul." else case when m.productname like 'CAD%' then ".$cad." else 0 end end end) as buyprice,sum(n.qtyoutput * case when m.productname like 'FOH%' then ".$foh." else case when m.productname like 'UL%' then ".$ul." else case when m.productname like 'CAD%' then ".$cad." else 0 end end end) AS jumlah,o.unitofmeasureid,o.uomcode,m.isstock,n.qtyoutput as qtybom,sum(n.qtyoutput * k.qty) as jumlahbom
									FROM bomdetail k
									JOIN billofmaterial l ON l.bomid=k.bomid
									JOIN product m ON m.productid=k.productid
									JOIN productoutputfg n ON n.bomid=l.bomid
									JOIN unitofmeasure o ON o.unitofmeasureid=k.uomid
									WHERE m.isstock = 0 AND n.productoutputfgid = ".$row1['productoutputfgid']."
									GROUP BY productname
							UNION
									SELECT c.productname,0 as qty,0 as buyprice,0 as jumlah,h.unitofmeasureid,h.uomcode,c.isstock,".$row1['qty']." * a.qty as qtybom,
									".$row1['qty']." * a.qty * (SELECT r.buyprice FROM productdetail r WHERE r.productid=a.productid AND r.slocid=e.slocid AND r.unitofmeasureid=a.uomid Limit 1) as jumlahbom
									FROM bomdetail a
									JOIN billofmaterial b ON b.bomid=a.bomid
									JOIN product c ON c.productid=a.productid
									LEFT JOIN productplant e ON e.productid=a.productid AND e.unitofissue=a.uomid AND e.slocid=(SELECT q.slocid FROM productoutputfg q WHERE q.productoutputfgid = ".$row1['productoutputfgid'].")
									LEFT JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
									LEFT JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
									WHERE c.isstock = 1 AND a.bomid = ".$row1['bomid']."
									GROUP BY productname
							) z
							GROUP BY productname,uomcode
							ORDER BY isstock desc, productname";
					$dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();
					
                    $this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$row1['productname'])
						->setCellValueByColumnAndRow(1,$line,$row1['uomcode'])
						->setCellValueByColumnAndRow(2,$line,$row1['qty'])
						->setCellValueByColumnAndRow(3,$line,$row1['buyprice']/$per)
						->setCellValueByColumnAndRow(4,$line,$row1['jumlah']/$per)
						->setCellValueByColumnAndRow(5,$line,$row2['qtybom'])
						->setCellValueByColumnAndRow(6,$line,$row2['buypricebom']/$per)
						->setCellValueByColumnAndRow(7,$line,$row2['jumlahbom']/$per);
                    
                    $line ++;
                    
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'    BOM VERSION : '.$row1['bomversion'].' - (ID = '.$row1['bomid'].')')
						->setCellValueByColumnAndRow(2,$line,$row1['productoutputno'])
						->setCellValueByColumnAndRow(3,$line,$row1['productoutputdate']);
                    
                    $line++;
					
					foreach($dataReader3 as $row3)
					{
						$this->phpExcel->setActiveSheetIndex(0)
						      ->setCellValueByColumnAndRow(0,$line,'    -  '.$row3['productname'])
						      ->setCellValueByColumnAndRow(1,$line,$row3['uomcode'])
						      ->setCellValueByColumnAndRow(2,$line,$row3['qty'])
						      ->setCellValueByColumnAndRow(3,$line,$row3['buyprice']/$per)
						      ->setCellValueByColumnAndRow(4,$line,$row3['jumlah']/$per)
						      ->setCellValueByColumnAndRow(5,$line,$row3['qtybom'])
						      ->setCellValueByColumnAndRow(6,$line,$row3['buypricebom']/$per)
						      ->setCellValueByColumnAndRow(7,$line,$row3['jumlahbom']/$per);
                        
                        $line++;
					}
				    $line++;
				}
			}
		}
        
        $this->getFooterXLS($this->phpExcel);
  }
	//25
	
	//26
	
	//27
	
	//28
	public function RekapPerbandinganHPPPenjualanPerCustomerPerBarangXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
    {
        $this->menuname='rekapperbandinganhpppenjualanpercustomerperbarang';
		parent::actionDownxls();
      
        $grandtotalqty=0;$grandtotalhpp=0;$grandtotalinvoice=0;
		$sql = "select distinct k.addressbookid,k.fullname
        from gidetail a
        join sodetail b on b.sodetailid=a.sodetailid
        join giheader c on c.giheaderid=a.giheaderid
        join soheader d on d.soheaderid=c.soheaderid
        join addressbook k ON k.addressbookid=d.addressbookid
        join product e on e.productid=a.productid
        join sloc h on h.slocid=a.slocid
        join productplant i on i.productid=a.productid and i.slocid=a.slocid
        join materialgroup j on j.materialgroupid=i.materialgroupid
        where c.recordstatus=3 and d.companyid = ".$companyid." and e.productname like '%".$product."%'
        and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
        and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
        order by k.fullname ";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
      
		$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(4,2,GetCompanyCode($companyid));
						$line=4;
      
        foreach($dataReader as $row)
        {
            $i=0;$totalqty=0;$totalhpp=0;$totalinvoice=0;
            $this->phpExcel->setActiveSheetIndex(0)
              ->setCellValueByColumnAndRow(0,$line,$row['fullname']);
            $line++;
            $this->phpExcel->setActiveSheetIndex(0)
              ->setCellValueByColumnAndRow(0,$line,'No')
              ->setCellValueByColumnAndRow(1,$line,'Nama Barang')
              ->setCellValueByColumnAndRow(2,$line,'Qty')
              ->setCellValueByColumnAndRow(3,$line,'Total HPP')
              ->setCellValueByColumnAndRow(4,$line,'HPP/Unit')
              ->setCellValueByColumnAndRow(5,$line,'Qty')
              ->setCellValueByColumnAndRow(6,$line,'Total Jual')
              ->setCellValueByColumnAndRow(7,$line,'Jual/Unit')
              ->setCellValueByColumnAndRow(8,$line,'GM');
            $line++;
            
            $sql1 = "select productname, sum(qty) as qty, sum(qty*buyprice) as nilaihpp, sum(amount) as nilaiinvoice,
						ifnull((100-(sum(qty*buyprice)/sum(amount))*100),0) as gm
						from (select e.productname,a.qty,
						ifnull((select f.buyprice from productdetailhist f where f.productid=a.productid and f.slocid=a.slocid and f.unitofmeasureid=a.unitofmeasureid and f.storagebinid=a.storagebinid and f.referenceno=c.gino limit 1),0) as buyprice,
						-- case when (select g.recordstatus from invoice g where g.giheaderid=c.giheaderid) = 3 then 
						getamountdiscso(d.soheaderid,a.sodetailid,a.qty) 
						-- else 0 end 
						as amount
						from gidetail a
						join sodetail b on b.sodetailid=a.sodetailid
						join giheader c on c.giheaderid=a.giheaderid
						join soheader d on d.soheaderid=c.soheaderid
						join product e on e.productid=a.productid
						join sloc h on h.slocid=a.slocid
						join productplant i on i.productid=a.productid and i.slocid=a.slocid
						join materialgroup j on j.materialgroupid=i.materialgroupid
						where c.recordstatus=3 and d.addressbookid = ".$row['addressbookid']." and d.companyid = ".$companyid." and e.productname like '%".$product."%'
						and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
						and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
						group by productname
						order by productname ";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
            foreach($dataReader1 as $row1)
			{
				$i+=1;
                $this->phpExcel->setActiveSheetIndex(0)
                  ->setCellValueByColumnAndRow(0,$line,$i)
                  ->setCellValueByColumnAndRow(1,$line,$row1['productname'])
                  ->setCellValueByColumnAndRow(2,$line,$row1['qty'])
                  ->setCellValueByColumnAndRow(3,$line,$row1['nilaihpp']/$per)
                  ->setCellValueByColumnAndRow(4,$line,($row1['nilaihpp']/$row1['qty'])/$per)
                  ->setCellValueByColumnAndRow(5,$line,$row1['qty'])
                  ->setCellValueByColumnAndRow(6,$line,$row1['nilaiinvoice']/$per)
                  ->setCellValueByColumnAndRow(7,$line,($row1['nilaiinvoice']/$row1['qty'])/$per)
                  ->setCellValueByColumnAndRow(8,$line,$row1['gm']);
                $totalqty += ($row1['qty']);
                $totalhpp += ($row1['nilaihpp']/$per);
                $totalinvoice += ($row1['nilaiinvoice']/$per);
                $line++;
            }
          
            $a = 0;$b = 0;$c = 0;
			if ($totalqty != 0) {
				$a = $totalhpp / $totalqty;
				$b = $totalinvoice / $totalqty;
			}
			if ($totalinvoice != 0) {
				$c = $totalhpp/$totalinvoice;
			}
            $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'].' >>>')
                ->setCellValueByColumnAndRow(2,$line,$totalqty)
                ->setCellValueByColumnAndRow(3,$line,$totalhpp)
                ->setCellValueByColumnAndRow(4,$line,$a)
                ->setCellValueByColumnAndRow(5,$line,$totalqty)
                ->setCellValueByColumnAndRow(6,$line,$totalinvoice)
                ->setCellValueByColumnAndRow(7,$line,$b)
                ->setCellValueByColumnAndRow(8,$line,100-(($c)*100));
            $line++;
          
            $grandtotalqty += $totalqty;
			$grandtotalhpp += $totalhpp;
			$grandtotalinvoice += $totalinvoice;
        }
        $d = 0;$e = 0;$f = 0;
		if ($totalqty != 0) {
			$d = $grandtotalhpp / $grandtotalqty;
			$e = $grandtotalinvoice / $grandtotalqty;
		}
		if ($grandtotalinvoice != 0) {
			$f = $grandtotalhpp/$grandtotalinvoice;
		}
        
        $line++;
        $this->phpExcel->setActiveSheetIndex(0)
            ->setCellValueByColumnAndRow(1,$line,'<<< GRAND TOTAL >>>')
            ->setCellValueByColumnAndRow(2,$line,$grandtotalqty)
            ->setCellValueByColumnAndRow(3,$line,$grandtotalhpp)
            ->setCellValueByColumnAndRow(4,$line,$d)
            ->setCellValueByColumnAndRow(5,$line,$grandtotalqty)
            ->setCellValueByColumnAndRow(6,$line,$grandtotalinvoice)
            ->setCellValueByColumnAndRow(7,$line,$e)
            ->setCellValueByColumnAndRow(8,$line,100-(($f)*100));
        $line++;
        $this->getFooterXLS($this->phpExcel);
    }
	//29
	
	//30
	
	//31
	
	//32
	
	//33
	public function RekapPerbandinganHPPPenjualanPerKastaPerBarangXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
        $this->menuname='rekapperbandinganhpppenjualanperkastaperbarang';
	    parent::actionDownxls();
		$sql = "select groupkastaid, groupname
				from (select e.productname,a.qty, k.groupkastaid, k.groupname
				from gidetail a
				join sodetail b on b.sodetailid=a.sodetailid
				join giheader c on c.giheaderid=a.giheaderid
				join soheader d on d.soheaderid=c.soheaderid
				join product e on e.productid=a.productid
				join sloc h on h.slocid=a.slocid
				join productplant i on i.productid=a.productid and i.slocid=a.slocid and i.unitofissue=a.unitofmeasureid
				join materialgroup j on j.materialgroupid=i.materialgroupid
                left join groupkasta k on k.groupkastaid = j.groupkastaid
				where c.recordstatus=3 and d.companyid = ".$companyid." and k.groupkastaid is not null and e.productname like '%".$product."%'
				and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
				and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
				group by groupkastaid
				order by groupname ";

	    
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
        $company = Yii::app()->db->createCommand('select companycode from company where companyid = '.$companyid)->queryScalar();
        
        $line = 2;
        $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
        ->setCellValueByColumnAndRow(3,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
        ->setCellValueByColumnAndRow(5,$line,$company);
        
		$totalqty2=0; $totalhpp2=0; $totalinvoice2=0;
        $line=5;
        foreach($dataReader as $row)
        {
            $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(1,$line,$row['groupname']);
            $line++;
            $i=1;

            $sql1 = "select *,(nilaihpp/qty)/(kubikasi*density) as hppdensity,(nilaiinvoice/qty)/(kubikasi*density) as jualdensity
			from (select productname, panjang, lebar, tinggi, kubikasi, density, sum(qty) as qty, sum(qty*buyprice) as nilaihpp, sum(amount) as nilaiinvoice,ifnull((100-(sum(qty*buyprice)/sum(amount))*100),0) as gm
			from (select e.productname, e.panjang, e.lebar, e.tinggi, ((e.panjang * e.lebar * e.tinggi)/1000000) as kubikasi, substring(IF(e.productname like '%T-%',SUBSTRING_INDEX(e.productname, '-', -2),IF(e.productname like '%centian%',SUBSTRING_INDEX(e.productname, '-', -1),'')),1,2) - IF(e.productname like '%centian%',20,0) as density, a.qty,
			ifnull((select f.buyprice from productdetailhist f where f.productid=a.productid and f.slocid=a.slocid and f.unitofmeasureid=a.unitofmeasureid and f.storagebinid=a.storagebinid and f.referenceno=c.gino limit 1),0) as buyprice,
			-- case when (select g.recordstatus from invoice g where g.giheaderid=c.giheaderid) = 3 then 
			getamountdiscso(d.soheaderid,a.sodetailid,a.qty) 
			-- else 0 end 
            as amount
            from gidetail a
            join sodetail b on b.sodetailid=a.sodetailid
            join giheader c on c.giheaderid=a.giheaderid
            join soheader d on d.soheaderid=c.soheaderid
            join product e on e.productid=a.productid
            join sloc h on h.slocid=a.slocid
            join productplant i on i.productid=a.productid and i.slocid=a.slocid and i.unitofissue=a.unitofmeasureid
            join materialgroup j on j.materialgroupid=i.materialgroupid
            left join groupkasta k on k.groupkastaid = j.groupkastaid
            where c.recordstatus=3 and d.companyid = ".$companyid." and e.productname like '%".$product."%'
            and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
            and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and k.groupkastaid = {$row['groupkastaid']}) z
            group by productname) zz
            order by productname ";
            $dataReader1 = Yii::app()->db->createCommand($sql1)->queryAll();
			
            $i=1; $totalqty=0; $totalhpp=0; $totalinvoice=0;

            foreach($dataReader1 as $row1) {
                $this->phpExcel->setActiveSheetIndex(0)
                    ->setCellValueByColumnAndRow(0,$line,$i)
                    ->setCellValueByColumnAndRow(1,$line,$row1['productname'])
                    ->setCellValueByColumnAndRow(2,$line,$row1['qty'])
                    ->setCellValueByColumnAndRow(3,$line,($row1['nilaihpp']/$per))
                    ->setCellValueByColumnAndRow(4,$line,($row1['nilaihpp']/$row1['qty']/$per))
                    ->setCellValueByColumnAndRow(5,$line,($row1['qty']))
                    ->setCellValueByColumnAndRow(6,$line,(($row1['nilaiinvoice'])/$per))
                    ->setCellValueByColumnAndRow(7,$line,((($row1['nilaiinvoice']/$row1['qty']/$per))))
                    ->setCellValueByColumnAndRow(8,$line,(($row1['gm'])))
                    ->setCellValueByColumnAndRow(9,$line,$row1['panjang'])
                    ->setCellValueByColumnAndRow(10,$line,$row1['lebar'])
                    ->setCellValueByColumnAndRow(11,$line,$row1['tinggi'])
                    ->setCellValueByColumnAndRow(12,$line,$row1['kubikasi'])
                    ->setCellValueByColumnAndRow(13,$line,$row1['density'])
                    ->setCellValueByColumnAndRow(14,$line,$row1['hppdensity'])
                    ->setCellValueByColumnAndRow(15,$line,$row1['jualdensity']);
    
                $totalqty += ($row1['qty']);
		        $totalhpp += ($row1['nilaihpp']/$per);
		        $totalinvoice += ($row1['nilaiinvoice']/$per);

                $line++;
                $i++;
            }

            $a = 0;$b = 0;$c = 0; $ag = 0;$bg = 0;$cg = 0;
            if ($totalqty != 0) {
            	$ag = $totalhpp / $totalqty;
            	$bg = $totalinvoice / $totalqty;
            }
            if ($totalinvoice != 0) {
            	$cg = $totalhpp/$totalinvoice;
            }
			
            $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['groupname'])
                ->setCellValueByColumnAndRow(2,$line,($totalqty))
                ->setCellValueByColumnAndRow(3,$line,($totalhpp))
                ->setCellValueByColumnAndRow(4,$line,($ag))
                ->setCellValueByColumnAndRow(5,$line,($totalqty))
                ->setCellValueByColumnAndRow(6,$line,($totalinvoice))
                ->setCellValueByColumnAndRow(7,$line,($bg))
                ->setCellValueByColumnAndRow(8,$line,(100-(($cg)*100)));
            $line=$line+2;
			
			$totalqty2 += $totalqty;
			$totalhpp2 += $totalhpp;
			$totalinvoice2 += $totalinvoice;
        }
		if ($totalqty2 != 0) {
			$a = $totalhpp2 / $totalqty2;
			$b = $totalinvoice2 / $totalqty2;
		}
		if ($totalinvoice2 != 0) {
			$c = $totalhpp2/$totalinvoice2;
		}
			
        $this->phpExcel->setActiveSheetIndex(0)
		    ->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
		    ->setCellValueByColumnAndRow(2,$line,($totalqty2))
		    ->setCellValueByColumnAndRow(3,$line,($totalhpp2))
		    ->setCellValueByColumnAndRow(4,$line,($a))
		    ->setCellValueByColumnAndRow(5,$line,($totalqty2))
		    ->setCellValueByColumnAndRow(6,$line,($totalinvoice2))
		    ->setCellValueByColumnAndRow(7,$line,($b))
		    ->setCellValueByColumnAndRow(8,$line,(100-(($c)*100)));
	
	    $this->getFooterXLS($this->phpExcel);
	}
	//34
	
	//35
	
	//36
	public function RekapPersediaanBarangNotMovingBBWIPXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname='RekapPersediaanBarangNotMovingBBWIP';
		parent::actionDownxls();
		$qtyawal2=0;$nilaiawal2=0;$qtymasuk2=0;$nilaimasuk2=0;$qtytersedia2=0;$nilaitersedia2=0;$qtykeluar2=0;$nilaikeluar2=0;$qtyakhir2=0;$nilaiakhir2=0;
		$sql="select distinct slocid,sloccode,materialgroupid,description,accountname
		from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-grr as keluar2
          from (select k.productname,m.uomcode,l.slocid,l.sloccode,o.materialgroupid,o.description,q.accountname,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
					left join slocaccounting p on p.slocid=j.slocid and p.materialgroupid=j.materialgroupid
					left join account q on q.accountid=p.accpersediaan
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and q.accountname like '%".$account."%') zz
          where 
		  -- qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or 
		  qtyakhir <> 0 
		  -- or jumlahakhir <> 0 
          ) xa
          where keluar2=0 
          order by sloccode, description";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
						->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
						->setCellValueByColumnAndRow(6,2,GetCompanyCode($companyid));
						$line=5;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Gudang')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sloccode'])
				->setCellValueByColumnAndRow(6,$line,'Material Group')
				->setCellValueByColumnAndRow(7,$line,': '.$row['description'])
				->setCellValueByColumnAndRow(12,$line,'Nama Akun')
				->setCellValueByColumnAndRow(13,$line,': '.$row['accountname']);							
			if ($storagebin == null)			
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'');}
			else
				{$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'Rak')
				->setCellValueByColumnAndRow(4,$line,': '.$storagebin);}
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Satuan')					
				->setCellValueByColumnAndRow(3,$line,'Qty')
				->setCellValueByColumnAndRow(4,$line,'Harga')
				->setCellValueByColumnAndRow(5,$line,'Nilai')
				->setCellValueByColumnAndRow(6,$line,'Qty')
				->setCellValueByColumnAndRow(7,$line,'Nilai')
				->setCellValueByColumnAndRow(8,$line,'Qty')
				->setCellValueByColumnAndRow(9,$line,'Harga')
				->setCellValueByColumnAndRow(10,$line,'Nilai')
				->setCellValueByColumnAndRow(11,$line,'Qty')
				->setCellValueByColumnAndRow(12,$line,'Nilai')
				->setCellValueByColumnAndRow(13,$line,'Qty')
				->setCellValueByColumnAndRow(14,$line,'Nilai')
				->setCellValueByColumnAndRow(15,$line,'');
			$line++;
			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
			$sql1="select * from (select *, ifnull((jumlahawal/qtyawal),0) as hargaawal, qtyawal+qtymasuk as qtytersedia, ifnull(((jumlahawal+jumlahmasuk)/(qtyawal+qtymasuk)),0) as hargatersedia, jumlahawal+jumlahmasuk as jumlahtersedia,
          case when qtyakhir < 0 then 'X' else '' end as minus,qtykeluar-koreksi-grr as keluar2
          from (select k.productname,m.uomcode,l.sloccode,o.description,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyawal,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate < '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahawal,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtymasuk,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty > 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahmasuk,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtykeluar,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.qty < 0 and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahkeluar,
          ifnull((select sum(a.qty)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as qtyakhir,
          ifnull((select sum(a.qty*a.buyprice)
          from productdetailhist a
          where a.buydate <= '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid = j.productid and a.slocid = j.slocid and a.unitofmeasureid = j.unitofissue),0) as jumlahakhir,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TSO-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as koreksi,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'TFS-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as tfs,
            (
            select ifnull(sum(z.qty),0) 
            from productstockdet z
            where z.qty < 0 and
            z.productid = k.productid and
            z.referenceno like 'GRR-%' and
            z.slocid = j.slocid and
            z.transdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' 
            and '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
            ) as grr
          
          from productplant j
          join product k on k.productid=j.productid
          join sloc l on l.slocid=j.slocid
          join unitofmeasure m on m.unitofmeasureid=j.unitofissue
          join plant n on n.plantid=l.plantid
          join materialgroup o on o.materialgroupid=j.materialgroupid
          where k.isstock=1 and n.companyid = ".$companyid." and l.sloccode like '%".$sloc."%' and o.description like '%".$materialgroup."%' and k.productname like '%".$product."%' and l.slocid = ".$row['slocid']." and o.materialgroupid = ".$row['materialgroupid'].") zz
          where 
		  -- qtyawal <> 0 or jumlahawal <> 0 or qtymasuk <> 0 or jumlahmasuk <> 0 or qtykeluar <> 0 or jumlahkeluar <> 0 or 
		  qtyakhir <> 0 
		  -- or jumlahakhir <> 0 
          ) xa
          where keluar2=0 
          order by keluar2";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

			$i=0;$qtyawal=0;$nilaiawal=0;$qtymasuk=0;$nilaimasuk=0;$qtytersedia=0;$nilaitersedia=0;$qtykeluar=0;$nilaikeluar=0;$qtyakhir=0;$nilaiakhir=0;
				
			foreach($dataReader1 as $row1)
			{
              
              
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['productname'])
					->setCellValueByColumnAndRow(2,$line,$row1['uomcode'])
					->setCellValueByColumnAndRow(3,$line,$row1['qtyawal'])
					->setCellValueByColumnAndRow(4,$line,$row1['hargaawal']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['jumlahawal']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['qtymasuk'])
					->setCellValueByColumnAndRow(7,$line,$row1['jumlahmasuk']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['qtytersedia'])
					->setCellValueByColumnAndRow(9,$line,($row1['hargatersedia']/$per))
					->setCellValueByColumnAndRow(10,$line,($row1['jumlahtersedia']/$per))
					->setCellValueByColumnAndRow(11,$line,$row1['qtykeluar'])
					->setCellValueByColumnAndRow(12,$line,$row1['jumlahkeluar']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['qtyakhir'])
					->setCellValueByColumnAndRow(14,$line,$row1['jumlahakhir']/$per)
					->setCellValueByColumnAndRow(15,$line,$row1['minus']);
				$qtyawal += $row1['qtyawal'];
				$nilaiawal += $row1['jumlahawal']/$per;
				$qtymasuk += $row1['qtymasuk'];
				$nilaimasuk += $row1['jumlahmasuk']/$per;
				$qtytersedia += $row1['qtytersedia'];
				$nilaitersedia += $row1['jumlahtersedia']/$per;
				$qtykeluar += $row1['qtykeluar'];
				$nilaikeluar += $row1['jumlahkeluar']/$per;
				$qtyakhir += $row1['qtyakhir'];
				$nilaiakhir += $row1['jumlahakhir']/$per;				
				$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['sloccode'].' - '.$row['description'])
				->setCellValueByColumnAndRow(3,$line,$qtyawal)
				->setCellValueByColumnAndRow(5,$line,$nilaiawal)
				->setCellValueByColumnAndRow(6,$line,$qtymasuk)
				->setCellValueByColumnAndRow(7,$line,$nilaimasuk)
				->setCellValueByColumnAndRow(8,$line,$qtytersedia)
				->setCellValueByColumnAndRow(10,$line,$nilaitersedia)
				->setCellValueByColumnAndRow(11,$line,$qtykeluar)
				->setCellValueByColumnAndRow(12,$line,$nilaikeluar)
				->setCellValueByColumnAndRow(13,$line,$qtyakhir)
				->setCellValueByColumnAndRow(14,$line,$nilaiakhir);
			$qtyawal2 += $qtyawal;
			$nilaiawal2 += $nilaiawal;
			$qtymasuk2 += $qtymasuk;
			$nilaimasuk2 += $nilaimasuk;
			$qtytersedia2 += $qtytersedia;
			$nilaitersedia2 += $nilaitersedia;
			$qtykeluar2 += $qtykeluar;
			$nilaikeluar2 += $nilaikeluar;
			$qtyakhir2 += $qtyakhir;
			$nilaiakhir2 += $nilaiakhir;
			$line +=2;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(3,$line,$qtyawal2)
			->setCellValueByColumnAndRow(5,$line,$nilaiawal2)
			->setCellValueByColumnAndRow(6,$line,$qtymasuk2)
			->setCellValueByColumnAndRow(7,$line,$nilaimasuk2)
			->setCellValueByColumnAndRow(8,$line,$qtytersedia2)
			->setCellValueByColumnAndRow(10,$line,$nilaitersedia2)
			->setCellValueByColumnAndRow(11,$line,$qtykeluar2)
			->setCellValueByColumnAndRow(12,$line,$nilaikeluar2)
			->setCellValueByColumnAndRow(13,$line,$qtyakhir2)
			->setCellValueByColumnAndRow(14,$line,$nilaiakhir2);
		
		$this->getFooterXLS($this->phpExcel);	
	}
	//37
	public function RekapPerbandinganHPPPenjualanPerKastaPerGroupMaterialXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
        $this->menuname='rekapperbandinganhpppenjualanperkastapergroupmaterial';
	    parent::actionDownxls();
		$sql = "select groupkastaid, groupname
						from (select e.productname,a.qty, k.groupkastaid, k.groupname
						from gidetail a
						join sodetail b on b.sodetailid=a.sodetailid
						join giheader c on c.giheaderid=a.giheaderid
						join soheader d on d.soheaderid=c.soheaderid
						join product e on e.productid=a.productid
						join sloc h on h.slocid=a.slocid
						join productplant i on i.productid=a.productid and i.slocid=a.slocid and i.unitofissue=a.unitofmeasureid
						join materialgroup j on j.materialgroupid=i.materialgroupid
                        left join groupkasta k on k.groupkastaid = j.groupkastaid
						where c.recordstatus=3 and d.companyid = ".$companyid."
						and k.groupkastaid is not null
						and e.productname like '%".$product."%'
						and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
						and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
						group by groupkastaid
						order by groupname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
        $company = Yii::app()->db->createCommand('select companycode from company where companyid = '.$companyid)->queryScalar();
        
        $line = 2;
        $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
        ->setCellValueByColumnAndRow(3,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
        ->setCellValueByColumnAndRow(5,$line,$company);
        
		$totalqty3 = 0; $totalhpp3 = 0; $totalinvoice3 = 0;
        $line=5;
        foreach($dataReader as $row)
        {
            $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(0,$line,$row['groupname']);
            $line++;
			
			$sql1 = "select materialgroupid, description
							from (select e.productname,a.qty, j.materialgroupid, j.description, l.nourut
							from gidetail a
							join sodetail b on b.sodetailid=a.sodetailid
							join giheader c on c.giheaderid=a.giheaderid
							join soheader d on d.soheaderid=c.soheaderid
							join product e on e.productid=a.productid
							join sloc h on h.slocid=a.slocid
							join productplant i on i.productid=a.productid and i.slocid=a.slocid and i.unitofissue=a.unitofmeasureid
							join materialgroup j on j.materialgroupid=i.materialgroupid
							join materialgroup l on l.materialgroupid=j.parentmatgroupid
							left join groupkasta k on k.groupkastaid = j.groupkastaid
							where c.recordstatus=3 and k.groupkastaid = ".$row['groupkastaid']." and d.companyid = ".$companyid."
							and k.groupkastaid is not null
							and e.productname like '%".$product."%'
							and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
							and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by materialgroupid
							order by nourut
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty2 = 0; $totalhpp2 = 0; $totalinvoice2 = 0;
			
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,$row1['description']);
				$line++;
				
				$sql2 = "select *,(nilaihpp/qty)/(kubikasi*density) as hppdensity,(nilaiinvoice/qty)/(kubikasi*density) as jualdensity
				from (select productname, panjang, lebar, tinggi, kubikasi, density, sum(qty) as qty, sum(qty*buyprice) as nilaihpp, sum(amount) as nilaiinvoice,ifnull((100-(sum(qty*buyprice)/sum(amount))*100),0) as gm
				from (select e.productname, e.panjang, e.lebar, e.tinggi, ((e.panjang * e.lebar * e.tinggi)/1000000) as kubikasi, substring(IF(e.productname like '%T-%',SUBSTRING_INDEX(e.productname, '-', -2),IF(e.productname like '%centian%',SUBSTRING_INDEX(e.productname, '-', -1),'')),1,2) - IF(e.productname like '%centian%',20,0) as density, a.qty,
				ifnull((select f.buyprice from productdetailhist f where f.productid=a.productid and f.slocid=a.slocid and f.unitofmeasureid=a.unitofmeasureid and f.storagebinid=a.storagebinid and f.referenceno=c.gino limit 1),0) as buyprice,
				-- case when (select g.recordstatus from invoice g where g.giheaderid=c.giheaderid) = 3 then 
				getamountdiscso(d.soheaderid,a.sodetailid,a.qty) 
				-- else 0 end 
				as amount
				from gidetail a
				join sodetail b on b.sodetailid=a.sodetailid
				join giheader c on c.giheaderid=a.giheaderid
				join soheader d on d.soheaderid=c.soheaderid
				join product e on e.productid=a.productid
				join sloc h on h.slocid=a.slocid
				join productplant i on i.productid=a.productid and i.slocid=a.slocid and i.unitofissue=a.unitofmeasureid
				join materialgroup j on j.materialgroupid=i.materialgroupid
				left join groupkasta k on k.groupkastaid = j.groupkastaid
				where c.recordstatus=3 and d.companyid = ".$companyid." and e.productname like '%".$product."%'
				and h.sloccode like '%".$sloc."%' and j.description like '%".$materialgroup."%'
				and c.gidate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and k.groupkastaid = {$row['groupkastaid']} and j.materialgroupid = {$row1['materialgroupid']}) z
				group by productname) zz
				order by productname ";
				$dataReader2 = Yii::app()->db->createCommand($sql2)->queryAll();
				
				$i=0; $totalqty = 0; $totalhpp = 0; $totalinvoice = 0;

				foreach($dataReader2 as $row2) {
					$i+=1;
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$i)
						->setCellValueByColumnAndRow(1,$line,$row2['productname'])
						->setCellValueByColumnAndRow(2,$line,$row2['qty'])
						->setCellValueByColumnAndRow(3,$line,($row2['nilaihpp']/$per))
						->setCellValueByColumnAndRow(4,$line,($row2['nilaihpp']/$row2['qty']/$per))
						->setCellValueByColumnAndRow(5,$line,($row2['qty']))
						->setCellValueByColumnAndRow(6,$line,(($row2['nilaiinvoice'])/$per))
						->setCellValueByColumnAndRow(7,$line,((($row2['nilaiinvoice']/$row2['qty']/$per))))
						->setCellValueByColumnAndRow(8,$line,(($row2['gm'])));
						//->setCellValueByColumnAndRow(9,$line,$row2['panjang'])
						//->setCellValueByColumnAndRow(10,$line,$row2['lebar'])
						//->setCellValueByColumnAndRow(11,$line,$row2['tinggi'])
						//->setCellValueByColumnAndRow(12,$line,$row2['kubikasi'])
						//->setCellValueByColumnAndRow(13,$line,$row2['density'])
						//->setCellValueByColumnAndRow(14,$line,$row2['hppdensity'])
						//->setCellValueByColumnAndRow(15,$line,$row2['jualdensity']);
		
					$totalqty += ($row2['qty']);
					$totalhpp += ($row2['nilaihpp']/$per);
					$totalinvoice += ($row2['nilaiinvoice']/$per);

					$line++;
				}

				$ag = 0; $bg = 0; $cg = 0;

				if ($totalqty != 0) {
					$ag = $totalhpp / $totalqty;
					$bg = $totalinvoice / $totalqty;
				}
				if ($totalinvoice != 0) {
					$cg = $totalhpp/$totalinvoice;
				}
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,'JUMLAH '.$row1['description'])
					->setCellValueByColumnAndRow(2,$line,($totalqty))
					->setCellValueByColumnAndRow(3,$line,($totalhpp))
					->setCellValueByColumnAndRow(4,$line,($ag))
					->setCellValueByColumnAndRow(5,$line,($totalqty))
					->setCellValueByColumnAndRow(6,$line,($totalinvoice))
					->setCellValueByColumnAndRow(7,$line,($bg))
					->setCellValueByColumnAndRow(8,$line,(100-(($cg)*100)));
				$line=$line+2;
				
				$totalqty2 += $totalqty;
				$totalhpp2 += $totalhpp;
				$totalinvoice2 += $totalinvoice;
			}
			$ag2 = 0; $bg2 = 0; $cg2 = 0;
			if ($totalqty2 != 0) {
				$ag2 = $totalhpp2 / $totalqty2;
				$bg2 = $totalinvoice2 / $totalqty2;
			}
			if ($totalinvoice2 != 0) {
				$cg2 = $totalhpp2/$totalinvoice2;
			}
			
            $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['groupname'])
                ->setCellValueByColumnAndRow(2,$line,($totalqty2))
                ->setCellValueByColumnAndRow(3,$line,($totalhpp2))
                ->setCellValueByColumnAndRow(4,$line,($ag2))
                ->setCellValueByColumnAndRow(5,$line,($totalqty))
                ->setCellValueByColumnAndRow(6,$line,($totalinvoice2))
                ->setCellValueByColumnAndRow(7,$line,($bg2))
                ->setCellValueByColumnAndRow(8,$line,(100-(($cg2)*100)));
            $line=$line+2;
				
			$totalqty3 += $totalqty2;
			$totalhpp3 += $totalhpp2;
			$totalinvoice3 += $totalinvoice2;
        }
		$a = 0;$b = 0;$c = 0;
		if ($totalqty3 != 0) {
			$a = $totalhpp3 / $totalqty3;
			$b = $totalinvoice3 / $totalqty3;
		}
		if ($totalinvoice3 != 0) {
			$c = $totalhpp3/$totalinvoice3;
		}
			
        $this->phpExcel->setActiveSheetIndex(0)
		    ->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
		    ->setCellValueByColumnAndRow(2,$line,($totalqty3))
		    ->setCellValueByColumnAndRow(3,$line,($totalhpp3))
		    ->setCellValueByColumnAndRow(4,$line,($a))
		    ->setCellValueByColumnAndRow(5,$line,($totalqty3))
		    ->setCellValueByColumnAndRow(6,$line,($totalinvoice3))
		    ->setCellValueByColumnAndRow(7,$line,($b))
		    ->setCellValueByColumnAndRow(8,$line,(100-(($c)*100)));
	
	    $this->getFooterXLS($this->phpExcel);
	}
	//38
	public function RekapPerbandinganHPPPenjualanReturPerKastaPerGroupMaterialXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
        $this->menuname='rekapperbandinganhpppenjualanreturperkastapergroupmaterial';
	    parent::actionDownxls();
		$sql = "select distinct groupkastaid,groupname from
							(select distinct m.groupkastaid,m.groupname
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
							join materialgroup l on l.materialgroupid=j.materialgroupid
							join groupkasta m on m.groupkastaid=l.groupkastaid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
							union
							select distinct p.groupkastaid,p.groupname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							join groupkasta p on p.groupkastaid=o.groupkastaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
							)z
							order by groupname
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();
			
        $company = Yii::app()->db->createCommand('select companycode from company where companyid = '.$companyid)->queryScalar();
        
        $line = 2;
        $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
        ->setCellValueByColumnAndRow(3,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
        ->setCellValueByColumnAndRow(5,$line,$company);
        
		$totalqty3 = 0; $totalhpp3 = 0; $totalinvoice3 = 0;
        $line=5;
        foreach($dataReader as $row)
        {
            $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(0,$line,$row['groupname']);
            $line++;
			
			$sql1 = "select distinct materialgroupid,description from
							(select distinct l.materialgroupid,l.description,m.nourut
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
							join materialgroup l on l.materialgroupid=j.materialgroupid
							join materialgroup m on m.materialgroupid=l.parentmatgroupid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and l.groupkastaid = ".$row['groupkastaid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
							union
							select distinct o.materialgroupid,o.description,p.nourut
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							join materialgroup p on p.materialgroupid=o.parentmatgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and o.groupkastaid = ".$row['groupkastaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
							)z
							order by nourut
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty2 = 0; $totalhpp2 = 0; $totalinvoice2 = 0;
			
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,$row1['description']);
				$line++;
				
				$sql2 = "select productname,sum(qty) as qty,sum(netto) as nilaiinvoice, SUM(nilaihpp) as nilaihpp, ifnull((1-(SUM(nilaihpp)/SUM(netto))),0) as gm from 
							(select productname,sum(qty) as qty,sum(nett) as netto,SUM(hpp) AS nilaihpp from
							(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							,(select m.buyprice*-m.qty FROM productdetailhist m WHERE m.gidetailid=ss.gidetailid AND m.qty<0) AS hpp
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
							join materialgroup l on l.materialgroupid=j.materialgroupid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and l.groupkastaid = ".$row['groupkastaid']." and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
							)z group by productname
							union
							select productname,-1*sum(qty) as qty,-1*sum(nett) as netto,SUM(hpp) AS nilaihpp from
							(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
							,(select p.buyprice*-p.qty FROM productdetailhist p WHERE p.gireturdetailid=c.gireturdetailid) AS hpp
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and o.groupkastaid = ".$row['groupkastaid']." and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
							)z group by productname )zz 
							group by productname order by productname
				";
				$dataReader2 = Yii::app()->db->createCommand($sql2)->queryAll();
				
				$i=0; $totalqty = 0; $totalhpp = 0; $totalinvoice = 0;

				foreach($dataReader2 as $row2) {
					if($row2['qty'] <> 0){$hargahpp = $row2['nilaihpp']/$row2['qty']; $hargajual = $row2['nilaiinvoice']/$row2['qty'];}else{$hargahpp = 0; $hargajual = 0;}
					$i+=1;
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$i)
						->setCellValueByColumnAndRow(1,$line,$row2['productname'])
						->setCellValueByColumnAndRow(2,$line,$row2['qty'])
						->setCellValueByColumnAndRow(3,$line,($row2['nilaihpp']/$per))
						->setCellValueByColumnAndRow(4,$line,($hargahpp/$per))
						->setCellValueByColumnAndRow(5,$line,($row2['qty']))
						->setCellValueByColumnAndRow(6,$line,(($row2['nilaiinvoice'])/$per))
						->setCellValueByColumnAndRow(7,$line,((($hargajual/$per))))
						->setCellValueByColumnAndRow(8,$line,(($row2['gm'])));
						//->setCellValueByColumnAndRow(9,$line,$row2['panjang'])
						//->setCellValueByColumnAndRow(10,$line,$row2['lebar'])
						//->setCellValueByColumnAndRow(11,$line,$row2['tinggi'])
						//->setCellValueByColumnAndRow(12,$line,$row2['kubikasi'])
						//->setCellValueByColumnAndRow(13,$line,$row2['density'])
						//->setCellValueByColumnAndRow(14,$line,$row2['hppdensity'])
						//->setCellValueByColumnAndRow(15,$line,$row2['jualdensity']);
		
					$totalqty += ($row2['qty']);
					$totalhpp += ($row2['nilaihpp']/$per);
					$totalinvoice += ($row2['nilaiinvoice']/$per);

					$line++;
				}

				$ag = 0; $bg = 0; $cg = 0;

				if ($totalqty != 0) {
					$ag = $totalhpp / $totalqty;
					$bg = $totalinvoice / $totalqty;
				}
				if ($totalinvoice != 0) {
					$cg = $totalhpp/$totalinvoice;
				}
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,'JUMLAH '.$row1['description'])
					->setCellValueByColumnAndRow(2,$line,($totalqty))
					->setCellValueByColumnAndRow(3,$line,($totalhpp))
					->setCellValueByColumnAndRow(4,$line,($ag))
					->setCellValueByColumnAndRow(5,$line,($totalqty))
					->setCellValueByColumnAndRow(6,$line,($totalinvoice))
					->setCellValueByColumnAndRow(7,$line,($bg))
					->setCellValueByColumnAndRow(8,$line,(100-(($cg)*100)));
				$line=$line+2;
				
				$totalqty2 += $totalqty;
				$totalhpp2 += $totalhpp;
				$totalinvoice2 += $totalinvoice;
			}
			$ag2 = 0; $bg2 = 0; $cg2 = 0;
			if ($totalqty2 != 0) {
				$ag2 = $totalhpp2 / $totalqty2;
				$bg2 = $totalinvoice2 / $totalqty2;
			}
			if ($totalinvoice2 != 0) {
				$cg2 = $totalhpp2/$totalinvoice2;
			}
			
            $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['groupname'])
                ->setCellValueByColumnAndRow(2,$line,($totalqty2))
                ->setCellValueByColumnAndRow(3,$line,($totalhpp2))
                ->setCellValueByColumnAndRow(4,$line,($ag2))
                ->setCellValueByColumnAndRow(5,$line,($totalqty))
                ->setCellValueByColumnAndRow(6,$line,($totalinvoice2))
                ->setCellValueByColumnAndRow(7,$line,($bg2))
                ->setCellValueByColumnAndRow(8,$line,(100-(($cg2)*100)));
            $line=$line+2;
				
			$totalqty3 += $totalqty2;
			$totalhpp3 += $totalhpp2;
			$totalinvoice3 += $totalinvoice2;
        }
		$a = 0;$b = 0;$c = 0;
		if ($totalqty3 != 0) {
			$a = $totalhpp3 / $totalqty3;
			$b = $totalinvoice3 / $totalqty3;
		}
		if ($totalinvoice3 != 0) {
			$c = $totalhpp3/$totalinvoice3;
		}
			
        $this->phpExcel->setActiveSheetIndex(0)
		    ->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
		    ->setCellValueByColumnAndRow(2,$line,($totalqty3))
		    ->setCellValueByColumnAndRow(3,$line,($totalhpp3))
		    ->setCellValueByColumnAndRow(4,$line,($a))
		    ->setCellValueByColumnAndRow(5,$line,($totalqty3))
		    ->setCellValueByColumnAndRow(6,$line,($totalinvoice3))
		    ->setCellValueByColumnAndRow(7,$line,($b))
		    ->setCellValueByColumnAndRow(8,$line,(100-(($c)*100)));
	
	    $this->getFooterXLS($this->phpExcel);
	}
	//39
	public function RekapPerbandinganHPPPenjualanReturPerProvinsiPerZonaPerSubzonaPerCustomerPerMaterialgroupXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
    $this->menuname='rekapperbandinganhpppenjualanreturperprovinsiperzonapercustomer';
    parent::actionDownxls();

    $customer = '';
    $employee = '';
    $salesarea = '';
    $spvid = '';
    $isdisplay3='';
    $isdisplay2='';
	
    if(isset($spv)&& $spv!=''){
      $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
    }else{
      $spvid = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
    }else{
      $spvid1 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
    }else{
      $spvid2 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
    }else{
      $spvid3 = "";
    }

    $sql = "select distinct marketname from 
				(select a1.marketareaid,SUBSTRING_INDEX(a1.marketname,'-','1') AS marketname
				from marketarea a1
				where a1.marketareaid = 1
				union
				select distinct l.marketareaid,SUBSTRING_INDEX(l.marketname,'-','1') AS marketname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				join marketarea l on l.marketareaid=g.marketareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%'
				and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct n.marketareaid,SUBSTRING_INDEX(n.marketname,'-','1') AS marketname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				join marketarea n on n.marketareaid=k.marketareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%'
				and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by marketareaid
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();

    $company = Yii::app()->db->createCommand('select companycode from company where companyid = '.$companyid)->queryScalar();
        
    $line = 2;
    $this->phpExcel->setActiveSheetIndex(0)
      ->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
      ->setCellValueByColumnAndRow(3,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
      ->setCellValueByColumnAndRow(5,$line,$company);
    $line++;

    if(isset($spv) && $spv!='')
		{                
		  $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
		  $fullname = Yii::app()->db->createCommand($sql)->queryScalar();
		}

    $totalqty5=0;$totalhpp5=0;$totalinvoice5=0;
		$cg5=0;
		foreach($dataReader as $row)
		{
      $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(0,$line,'PROVINSI : '.$row['marketname']);
      $line++;
      $sql1 = "select distinct marketname from 
					(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') AS marketname
					from marketarea a1
					where a1.marketareaid = 1
					and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') AS marketname
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join employee f on f.employeeid = b.employeeid
			    join addressbook g on g.addressbookid = b.addressbookid  
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
					join invoice j on j.giheaderid = h.giheaderid
			    join salesarea k on k.salesareaid = g.salesareaid
					join marketarea l on l.marketareaid=g.marketareaid
					where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
					and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
					and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
					and j.invoiceno is not null and invoiceno not like '%-%-%'
					and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') AS marketname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join marketarea n on n.marketareaid=k.marketareaid
					where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
					and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
					and i.productname like '%".$product."%'
					and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
					)z order by marketareaid
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

      $totalqty4=0;$totalhpp4=0;$totalinvoice4=0;
      $cg4=0;
      foreach($dataReader1 as $row1)
      {
        $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(0,$line,'ZONA : '.$row1['marketname']);
        $line++;

        $sql2 = "select distinct marketname from 
						(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','3'),'-','-1') AS marketname
						from marketarea a1
						where a1.marketareaid = 1
						and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') AS marketname
						from soheader b
						join sodetail c on c.soheaderid = b.soheaderid
						join gidetail d on d.sodetailid = c.sodetailid
						join product e on e.productid = d.productid
						join employee f on f.employeeid = b.employeeid
					  join addressbook g on g.addressbookid = b.addressbookid  
						join giheader h on h.giheaderid = d.giheaderid
						join sloc i on i.slocid = d.slocid
						join invoice j on j.giheaderid = h.giheaderid
					  join salesarea k on k.salesareaid = g.salesareaid
						join marketarea l on l.marketareaid=g.marketareaid
						where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
						and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
						and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
						and j.invoiceno is not null and invoiceno not like '%-%-%'
						and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') AS marketname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join marketarea n on n.marketareaid=k.marketareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%'
						and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						)z order by marketareaid
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();
				
				$totalqty3=0;$totalhpp3=0;$totalinvoice3=0;
				$cg3=0;

        foreach($dataReader2 as $row2) 
        {
          $this->phpExcel->setActiveSheetIndex(0)
            ->setCellValueByColumnAndRow(0,$line,'SUB ZONA : '.$row2['marketname']);
          $line++;

          $sql3 = "select distinct addressbookid,fullname from 
							(select distinct g.addressbookid,g.fullname
							from soheader b
							join sodetail c on c.soheaderid = b.soheaderid
							join gidetail d on d.sodetailid = c.sodetailid
							join product e on e.productid = d.productid
							join employee f on f.employeeid = b.employeeid
						  join addressbook g on g.addressbookid = b.addressbookid  
							join giheader h on h.giheaderid = d.giheaderid
							join sloc i on i.slocid = d.slocid
							join invoice j on j.giheaderid = h.giheaderid
						  join salesarea k on k.salesareaid = g.salesareaid
							join marketarea l on l.marketareaid=g.marketareaid
							where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
							and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
							and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
							and j.invoiceno is not null and invoiceno not like '%-%-%'
							and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
							union
							select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join marketarea n on n.marketareaid=k.marketareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%'
							and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
							)z order by fullname
					";
					$dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();
					
					$totalqty2=0;$totalhpp2=0;$totalinvoice2=0;
					$cg2=0;

          foreach($dataReader3 as $row3)
          {
            $this->phpExcel->setActiveSheetIndex(0)
              ->setCellValueByColumnAndRow(0,$line,'CUSTOMER : '.$row3['fullname']);
            $line++;
            
            $sql4 = "select distinct materialgroupid,description
								,sum(nett) as netto
								from (select ax.materialgroupid,ax.description
								,sum(ifnull((select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty) from gidetail zzb join sodetail zza on zza.sodetailid = zzb.sodetailid where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid),0)) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = ss.productid and j.slocid=ss.slocid and j.unitofissue=ss.unitofmeasureid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								join marketarea az on az.marketareaid=d.marketareaid
								join materialgroup ax on ax.materialgroupid=j.materialgroupid
								where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' ".$spvid3." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
								and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
								and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
								and d.addressbookid = '".$row3['addressbookid']."'
								and a.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								group by materialgroupid
								union
								select ax.materialgroupid,ax.description
								,sum(ifnull(a.qty*a.price,0)) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
								join marketarea az on az.marketareaid=k.marketareaid
								join materialgroup ax on ax.materialgroupid=n.materialgroupid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%'
								and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
								and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
								and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
								and k.addressbookid = '".$row3['addressbookid']."'
								and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								group by materialgroupid
								) zz
								group by materialgroupid
								order by description
						";
						$dataReader4=Yii::app()->db->createCommand($sql4)->queryAll();
						
						$totalqty1=0;$totalhpp1=0;$totalinvoice1=0;
            foreach($dataReader4 as $row4)
            {
              $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(0,$line,'MATERIAL GROUP : '.$row4['description']);
              $line++;

              $sql5 = "select productname,sum(qty) as qty,sum(netto) as nilaiinvoice, SUM(nilaihpp) as nilaihpp, ifnull((1-(SUM(nilaihpp)/SUM(netto))),0) as gm from 
									(select productname,sum(qty) as qty,sum(nett) as netto,SUM(hpp) AS nilaihpp from
									(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
									(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
									(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
									(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
									from gidetail zzb 
									join sodetail zza on zza.sodetailid = zzb.sodetailid
									where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
									,(select m.buyprice*-m.qty FROM productdetailhist m WHERE m.gidetailid=ss.gidetailid AND m.qty<0) AS hpp
									from invoice a 
									join giheader b on b.giheaderid = a.giheaderid
									join soheader c on c.soheaderid = b.soheaderid
									join addressbook d on d.addressbookid = c.addressbookid
									join employee e on e.employeeid = c.employeeid
									join salesarea f on f.salesareaid = d.salesareaid
									join sodetail g on g.soheaderid = b.soheaderid
									join gidetail ss on ss.giheaderid = b.giheaderid
									join sloc h on h.slocid = ss.slocid
									join product i on i.productid = ss.productid
									join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
									join materialgroup l on l.materialgroupid=j.materialgroupid
									join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
									join marketarea az on az.marketareaid=d.marketareaid
									where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
									c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
									e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%'
                  -- and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
                  -- and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
                  -- and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
                  and d.addressbookid = '".$row3['addressbookid']."'
                  and l.materialgroupid = '".$row4['materialgroupid']."'
									and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
									and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
									)z group by productname
									union
									select productname,-1*sum(qty) as qty,-1*sum(nett) as netto,SUM(hpp) AS nilaihpp from
									(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
									,(select p.buyprice*-p.qty FROM productdetailhist p WHERE p.gireturdetailid=c.gireturdetailid) AS hpp
									from notagirpro a
									join notagir b on b.notagirid=a.notagirid
									join gireturdetail c on c.gireturdetailid=a.gireturdetailid
									join giretur d on d.gireturid=b.gireturid
									join gidetail e on e.gidetailid=c.gidetailid
									join giheader f on f.giheaderid=d.giheaderid
									join sodetail g on g.sodetailid=e.sodetailid
									join soheader h on h.soheaderid=f.soheaderid
									join product i on i.productid = a.productid
									join sloc j on j.slocid = a.slocid
									join addressbook k on k.addressbookid = h.addressbookid
									join employee l on l.employeeid = h.employeeid
									join salesarea m on m.salesareaid = k.salesareaid
									join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
									join materialgroup o on o.materialgroupid=n.materialgroupid
									join unitofmeasure p on p.unitofmeasureid = a.uomid
									join marketarea az on az.marketareaid=k.marketareaid
									where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
									and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
									and i.productname like '%".$product."%'
				  -- and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
                  -- and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
                  -- and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
                  and k.addressbookid = '".$row3['addressbookid']."'
                  and o.materialgroupid = '".$row4['materialgroupid']."'
									and d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
									)z group by productname )zz 
									group by productname order by productname
							";
							$dataReader5=Yii::app()->db->createCommand($sql5)->queryAll();

              $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(0,$line,'No')
                ->setCellValueByColumnAndRow(1,$line,'Nama Barang')
                ->setCellValueByColumnAndRow(2,$line,'Qty')
                ->setCellValueByColumnAndRow(3,$line,'Total HPP')
                ->setCellValueByColumnAndRow(4,$line,'HPP/Unit')
                ->setCellValueByColumnAndRow(5,$line,'Qty')
                ->setCellValueByColumnAndRow(6,$line,'Total Jual')
                ->setCellValueByColumnAndRow(7,$line,'Jual/Unit')
                ->setCellValueByColumnAndRow(8,$line,'GM');
              $line++;

              $i=0;$totalqty=0;$totalhpp=0;$totalinvoice=0;
              foreach($dataReader5 as $row5)
              {
                if($row5['qty'] <> 0){$hargahpp = $row5['nilaihpp']/$row5['qty']; $hargajual = $row5['nilaiinvoice']/$row5['qty'];}else{$hargahpp = 0; $hargajual = 0;}
								$i+=1;

                $this->phpExcel->setActiveSheetIndex(0)
                  ->setCellValueByColumnAndRow(0,$line,$i)
                  ->setCellValueByColumnAndRow(1,$line,$row5['productname'])
                  ->setCellValueByColumnAndRow(2,$line,$row5['qty'])
                  ->setCellValueByColumnAndRow(3,$line,$row5['nilaihpp'])
                  ->setCellValueByColumnAndRow(4,$line,$hargahpp)
                  ->setCellValueByColumnAndRow(5,$line,$row5['qty'])
                  ->setCellValueByColumnAndRow(6,$line,$row5['nilaiinvoice'])
                  ->setCellValueByColumnAndRow(7,$line,$hargajual)
                  ->setCellValueByColumnAndRow(8,$line,100*$row5['gm']);
                $line++;
                $totalqty += ($row5['qty']);
                $totalhpp += ($row5['nilaihpp']/$per);
                $totalinvoice += ($row5['nilaiinvoice']/$per);
              }
              $ag = 0; $bg = 0; $cg = 0;
							if ($totalqty != 0) {
								$ag = $totalhpp / $totalqty;
								$bg = $totalinvoice / $totalqty;
							}
							if ($totalinvoice != 0) {
								$cg = $totalhpp/$totalinvoice;
							}
              $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(1,$line,'TOTAL MG '.$row4['description'])
                ->setCellValueByColumnAndRow(2,$line,$totalqty)
                ->setCellValueByColumnAndRow(3,$line,$totalhpp)
                ->setCellValueByColumnAndRow(4,$line,$ag)
                ->setCellValueByColumnAndRow(5,$line,$totalqty)
                ->setCellValueByColumnAndRow(6,$line,$totalinvoice)
                ->setCellValueByColumnAndRow(7,$line,$bg)
                ->setCellValueByColumnAndRow(8,$line,(100-(($cg)*100)));
              $line++;

              $totalqty1 += $totalqty;
							$totalhpp1 += $totalhpp;
							$totalinvoice1 += $totalinvoice;
            }
            if ($totalinvoice1 != 0) {
							$cg1 = $totalhpp1/$totalinvoice1;
						}
            $this->phpExcel->setActiveSheetIndex(0)
              ->setCellValueByColumnAndRow(1,$line,'TOTAL CUSTOMER '.$row3['fullname'])
              ->setCellValueByColumnAndRow(2,$line,$totalqty1)
              ->setCellValueByColumnAndRow(3,$line,$totalhpp1)
              ->setCellValueByColumnAndRow(5,$line,$totalqty1)
              ->setCellValueByColumnAndRow(6,$line,$totalinvoice1)
              ->setCellValueByColumnAndRow(8,$line,100-(($cg1)*100));
            $line++;
            $totalqty2 += $totalqty1;
						$totalhpp2 += $totalhpp1;
						$totalinvoice2 += $totalinvoice1;
          }
          if ($totalinvoice2 != 0) {
						$cg2 = $totalhpp2/$totalinvoice2;
					}
          $this->phpExcel->setActiveSheetIndex(0)
            ->setCellValueByColumnAndRow(1,$line,'TOTAL SUB ZONA '.$row2['marketname'])
            ->setCellValueByColumnAndRow(2,$line,$totalqty2)
            ->setCellValueByColumnAndRow(3,$line,$totalhpp2)
            ->setCellValueByColumnAndRow(5,$line,$totalqty2)
            ->setCellValueByColumnAndRow(6,$line,$totalinvoice2)
            ->setCellValueByColumnAndRow(8,$line,(100-(($cg2)*100)));
          $line++;
          $totalqty3 += $totalqty2;
					$totalhpp3 += $totalhpp2;
					$totalinvoice3 += $totalinvoice2;
        }
        if ($totalinvoice3 != 0) {
					$cg3 = $totalhpp3/$totalinvoice3;
				}
         $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(1,$line,'TOTAL ZONA '.$row1['marketname'])
          ->setCellValueByColumnAndRow(2,$line,$totalqty3)
          ->setCellValueByColumnAndRow(3,$line,$totalhpp3)
          ->setCellValueByColumnAndRow(5,$line,$totalqty3)
          ->setCellValueByColumnAndRow(6,$line,$totalinvoice3)
          ->setCellValueByColumnAndRow(8,$line,(100-(($cg3)*100)));
        $line++;
        $totalqty4 += $totalqty3;
				$totalhpp4 += $totalhpp3;
				$totalinvoice4 += $totalinvoice3;
      }
      if ($totalinvoice4 != 0) {
				$cg4 = $totalhpp4/$totalinvoice4;
			}
      $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(1,$line,'TOTAL PROVINSI '.$row['marketname'])
        ->setCellValueByColumnAndRow(2,$line,$totalqty4)
        ->setCellValueByColumnAndRow(3,$line,$totalhpp4)
        ->setCellValueByColumnAndRow(5,$line,$totalqty4)
        ->setCellValueByColumnAndRow(6,$line,$totalinvoice4)
        ->setCellValueByColumnAndRow(8,$line,(100-(($cg4)*100)));
      $line=$line+2;
      $totalqty5 += $totalqty4;
			$totalhpp5 += $totalhpp4;
			$totalinvoice5 += $totalinvoice4;
    }
    if ($totalinvoice5 != 0) {
			$cg5 = $totalhpp5/$totalinvoice5;
		}
    $this->phpExcel->setActiveSheetIndex(0)
      ->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
      ->setCellValueByColumnAndRow(2,$line,$totalqty5)
      ->setCellValueByColumnAndRow(3,$line,$totalhpp5)
      ->setCellValueByColumnAndRow(5,$line,$totalqty5)
      ->setCellValueByColumnAndRow(6,$line,$totalinvoice5)
      ->setCellValueByColumnAndRow(8,$line,(100-(($cg5)*100)));
    $line=$line++;
    $this->getFooterXLS($this->phpExcel);
  }
	//40
	public function RekapPotensiPenjualanReturPelunasanGMPerCustomerXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
    $this->menuname='rekappotensipenjualanreturpembayarangmpercustomer';
    parent::actionDownxls();

    $customer = '';
		$employee = '';
		$salesarea = '';
		$spvid = '';
		$isdisplay3='';
		$isdisplay2='';

    $grandTotal = array(
    'font'  => array(
        'bold' => true,
        'size'  => 14,
    ));

    $totalTipe = array (
      'font'  => array(
        'bold' => true,
        'size'  => 12,
    ));

    $totalKategori = array (
      'font'  => array(
        'bold' => true,
        'size'  => 11,
    ));
      
    if(isset($spv)&& $spv!=''){
      $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
    }else{
      $spvid = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
    }else{
      $spvid1 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
    }else{
      $spvid2 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
    }else{
      $spvid3 = "";
    }  
    //,SUBSTRING_INDEX(marketname,'-','1') AS provinsi,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','2'),'-','-1') AS zona,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','3'),'-','-1') AS subzona

    $sql = "select a.customertypeid,a.customertypename
				from customertype a
				where a.recordstatus = 1
				order by a.customertypeid desc
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();

    $line = 2;
    $this->phpExcel->setActiveSheetIndex(0)
      ->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
      ->setCellValueByColumnAndRow(3,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
      ->setCellValueByColumnAndRow(5,$line,GetCompanyCode($companyid));
    $line++;

    if(isset($spv) && $spv!='')
		{
		  $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
		  $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

		   $this->phpExcel->setActiveSheetIndex(0)
			  ->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR ')
			  ->setCellValueByColumnAndRow(1,$line,$fullname);
        $line++;
		}
		
		$totalpotensi=0;$totalinvoice=0;$totalhpp=0;$totalpayamount=0;

    foreach($dataReader as $row)
    {
      $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(0,$line,'TIPE CUSTOMER : '.$row['customertypename']);
      $line++;

      $sql1 = "select a.custcategoryid,a.custcategoryname
					from custcategory a
					where a.recordstatus = 1
					order by a.custcategoryid asc
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalpotensi1=0;$totalinvoice1=0;$totalhpp1=0;$totalpayamount1=0;
      foreach($dataReader1 as $row1)
      {
        $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(0,$line,'KATEGORI CUSTOMER : '.$row1['custcategoryname']);
        $line++;

        $sql2 = "SELECT *,if(nilaiinvoice=0,0,100*(1-(nilaihpp/nilaiinvoice))) AS gm,if(potensi=0,0,100*(nilaiinvoice/potensi)) as perpotensi,if(nilaiinvoice=0,0,100*(payamount/nilaiinvoice)) as perpayamount
						FROM (select addressbookid,fullname,customertypeid,custcategoryid
						,IFNULL((select sum(netto) as nilaiinvoice
						FROM (
						select addressbookid,customertypeid,custcategoryid,fullname,sum(nett) as netto
						FROM (select DISTINCT d3.addressbookid,d3.customertypeid,d3.custcategoryid,d3.fullname,ss3.gidetailid,
						(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty) from gidetail zzb join sodetail zza on zza.sodetailid = zzb.sodetailid where zzb.giheaderid = b3.giheaderid and zzb.productid = i3.productid and zzb.gidetailid=ss3.gidetailid) as nett
						from invoice a3
						join giheader b3 ON b3.giheaderid = a3.giheaderid
						join soheader c3 ON c3.soheaderid = b3.soheaderid
						join addressbook d3 ON d3.addressbookid = c3.addressbookid
						join employee e3 ON e3.employeeid = c3.employeeid
						join salesarea f3 ON f3.salesareaid = d3.salesareaid
						join sodetail g3 ON g3.soheaderid = b3.soheaderid
						join gidetail ss3 on ss3.giheaderid = b3.giheaderid
						join sloc h3 on h3.slocid = ss3.slocid
						join product i3 on i3.productid = ss3.productid
						join productplant j3 on j3.productid = i3.productid and j3.slocid=g3.slocid and j3.unitofissue=ss3.unitofmeasureid
						join materialgroup l3 on l3.materialgroupid=j3.materialgroupid
						join unitofmeasure k3 on k3.unitofmeasureid = ss3.unitofmeasureid
						join marketarea az3 on az3.marketareaid=d3.marketareaid
						where a3.recordstatus = 3 and a3.invoiceno is not null and invoiceno not like '%-%-%' and c3.companyid = ".$companyid." and h3.sloccode like '%".$sloc."%' and d3.fullname like '%".$customer."%' and e3.fullname like '%".$employee."%' and f3.areaname like '%".$salesarea."%' and i3.productname like '%".$product."%'
						and a3.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)z group by addressbookid
						UNION
						select addressbookid,customertypeid,custcategoryid,fullname,-1*sum(nett) as netto from
						(select DISTINCT k4.addressbookid,k4.customertypeid,k4.custcategoryid,k4.fullname,a4.notagirproid,(a4.qty*a4.price) as nett
						from notagirpro a4
						join notagir b4 on b4.notagirid=a4.notagirid
						join gireturdetail c4 on c4.gireturdetailid=a4.gireturdetailid
						join giretur d4 on d4.gireturid=b4.gireturid
						join gidetail e4 on e4.gidetailid=c4.gidetailid
						join giheader f4 on f4.giheaderid=d4.giheaderid
						join sodetail g4 on g4.sodetailid=e4.sodetailid
						join soheader h4 on h4.soheaderid=f4.soheaderid
						join product i4 on i4.productid = a4.productid
						join sloc j4 on j4.slocid = a4.slocid
						join addressbook k4 on k4.addressbookid = h4.addressbookid
						join employee l4 on l4.employeeid = h4.employeeid
						join salesarea m4 on m4.salesareaid = k4.salesareaid
						join productplant n4 on n4.productid=a4.productid and n4.slocid=a4.slocid and n4.unitofissue=a4.uomid
						join materialgroup o4 on o4.materialgroupid=n4.materialgroupid
						join unitofmeasure p4 on p4.unitofmeasureid = a4.uomid
						join marketarea az4 on az4.marketareaid=k4.marketareaid
						where h4.companyid = ".$companyid." and b4.recordstatus = 3 and j4.sloccode like '%".$sloc."%' and k4.fullname like '%".$customer."%' and l4.fullname like '%".$employee."%' and m4.areaname like '%".$salesarea."%' and i4.productname like '%".$product."%'
						and d4.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						) z2 group by addressbookid
						) zz2
						WHERE zz2.addressbookid = zz3.addressbookid),0) AS nilaiinvoice
						,IFNULL((select sum(nilaihpp) as nilaihpp
						FROM (
						select addressbookid,customertypeid,custcategoryid,fullname,sum(hpp) as nilaihpp
						FROM (select DISTINCT d1.addressbookid,d1.customertypeid,d1.custcategoryid,d1.fullname,ss1.gidetailid,
						(select m1.buyprice*-m1.qty FROM productdetailhist m1 WHERE m1.gidetailid=ss1.gidetailid AND m1.qty<0) AS hpp
						from invoice a1
						join giheader b1 ON b1.giheaderid = a1.giheaderid
						join soheader c1 ON c1.soheaderid = b1.soheaderid
						join addressbook d1 ON d1.addressbookid = c1.addressbookid
						join employee e1 ON e1.employeeid = c1.employeeid
						join salesarea f1 ON f1.salesareaid = d1.salesareaid
						join sodetail g1 ON g1.soheaderid = b1.soheaderid
						join gidetail ss1 on ss1.giheaderid = b1.giheaderid
						join sloc h1 on h1.slocid = ss1.slocid
						join product i1 on i1.productid = ss1.productid
						join productplant j1 on j1.productid = i1.productid and j1.slocid=g1.slocid and j1.unitofissue=ss1.unitofmeasureid
						join materialgroup l1 on l1.materialgroupid=j1.materialgroupid
						join unitofmeasure k1 on k1.unitofmeasureid = ss1.unitofmeasureid
						join marketarea az1 on az1.marketareaid=d1.marketareaid
						where a1.recordstatus = 3 and a1.invoiceno is not null and a1.invoiceno not like '%-%-%' and c1.companyid = ".$companyid." and h1.sloccode like '%".$sloc."%' and d1.fullname like '%".$customer."%' and e1.fullname like '%".$employee."%' and f1.areaname like '%".$salesarea."%' and i1.productname like '%".$product."%'
						and a1.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)z group by addressbookid
						UNION
						select addressbookid,customertypeid,custcategoryid,fullname,sum(hpp) as nilaihpp from
						(select DISTINCT k2.addressbookid,k2.customertypeid,k2.custcategoryid,k2.fullname,a2.notagirproid,(select p2.buyprice*-p2.qty FROM productdetailhist p2 WHERE p2.gireturdetailid=c2.gireturdetailid) AS hpp
						from notagirpro a2
						join notagir b2 on b2.notagirid=a2.notagirid
						join gireturdetail c2 on c2.gireturdetailid=a2.gireturdetailid
						join giretur d2 on d2.gireturid=b2.gireturid
						join gidetail e2 on e2.gidetailid=c2.gidetailid
						join giheader f2 on f2.giheaderid=d2.giheaderid
						join sodetail g2 on g2.sodetailid=e2.sodetailid
						join soheader h2 on h2.soheaderid=f2.soheaderid
						join product i2 on i2.productid = a2.productid
						join sloc j2 on j2.slocid = a2.slocid
						join addressbook k2 on k2.addressbookid = h2.addressbookid
						join employee l2 on l2.employeeid = h2.employeeid
						join salesarea m2 on m2.salesareaid = k2.salesareaid
						join productplant n2 on n2.productid=a2.productid and n2.slocid=a2.slocid and n2.unitofissue=a2.uomid
						join materialgroup o2 on o2.materialgroupid=n2.materialgroupid
						join unitofmeasure p2 on p2.unitofmeasureid = a2.uomid
						join marketarea az2 on az2.marketareaid=k2.marketareaid
						where h2.companyid = ".$companyid." and b2.recordstatus = 3 and j2.sloccode like '%".$sloc."%' and k2.fullname like '%".$customer."%' and l2.fullname like '%".$employee."%' and m2.areaname like '%".$salesarea."%' and i2.productname like '%".$product."%'
						and d2.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						) z1 group by addressbookid
						) zz1
						WHERE zz1.addressbookid = zz3.addressbookid),0) AS nilaihpp,
						ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)
						-- +ifnull(f.returnamount,0)
						+ifnull(f.obamount,0)
						)*ifnull(f.currencyrate,0))
						from cutarinv f
						join cutar g on g.cutarid=f.cutarid
						join invoice h on h.invoiceid=f.invoiceid
						join giheader i on i.giheaderid=h.giheaderid
						join soheader j on j.soheaderid=i.soheaderid
						where g.recordstatus=3 and g.companyid = ".$companyid." and g.docdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and j.addressbookid = zz3.addressbookid),0) as payamount
						,ifnull((select sum(a.amount) from addresspotensi a where a.addressbookid=zz3.addressbookid),0) as potensi
						FROM (
						select addressbookid,customertypeid,custcategoryid,fullname
						FROM (select DISTINCT d5.addressbookid,d5.customertypeid,d5.custcategoryid,d5.fullname,ss5.gidetailid
						from invoice a5
						join giheader b5 ON b5.giheaderid = a5.giheaderid
						join soheader c5 ON c5.soheaderid = b5.soheaderid
						join addressbook d5 ON d5.addressbookid = c5.addressbookid
						join employee e5 ON e5.employeeid = c5.employeeid
						join salesarea f5 ON f5.salesareaid = d5.salesareaid
						join sodetail g5 ON g5.soheaderid = b5.soheaderid
						join gidetail ss5 on ss5.giheaderid = b5.giheaderid
						join sloc h5 on h5.slocid = ss5.slocid
						join product i5 on i5.productid = ss5.productid
						join productplant j5 on j5.productid = i5.productid and j5.slocid=g5.slocid and j5.unitofissue=ss5.unitofmeasureid
						join materialgroup l5 on l5.materialgroupid=j5.materialgroupid
						join unitofmeasure k5 on k5.unitofmeasureid = ss5.unitofmeasureid
						join marketarea az5 on az5.marketareaid=d5.marketareaid
						where a5.recordstatus = 3 and a5.invoiceno is not null and invoiceno not like '%-%-%' and c5.companyid = ".$companyid." and h5.sloccode like '%".$sloc."%' and d5.fullname like '%".$customer."%' and e5.fullname like '%".$employee."%' and f5.areaname like '%".$salesarea."%' and i5.productname like '%".$product."%'
						and a5.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)z group by addressbookid
						UNION
						select addressbookid,customertypeid,custcategoryid,fullname from
						(select DISTINCT k6.addressbookid,k6.customertypeid,k6.custcategoryid,k6.fullname,a6.notagirproid
						from notagirpro a6
						join notagir b6 on b6.notagirid=a6.notagirid
						join gireturdetail c6 on c6.gireturdetailid=a6.gireturdetailid
						join giretur d6 on d6.gireturid=b6.gireturid
						join gidetail e6 on e6.gidetailid=c6.gidetailid
						join giheader f6 on f6.giheaderid=d6.giheaderid
						join sodetail g6 on g6.sodetailid=e6.sodetailid
						join soheader h6 on h6.soheaderid=f6.soheaderid
						join product i6 on i6.productid = a6.productid
						join sloc j6 on j6.slocid = a6.slocid
						join addressbook k6 on k6.addressbookid = h6.addressbookid
						join employee l6 on l6.employeeid = h6.employeeid
						join salesarea m6 on m6.salesareaid = k6.salesareaid
						join productplant n6 on n6.productid=a6.productid and n6.slocid=a6.slocid and n6.unitofissue=a6.uomid
						join materialgroup o6 on o6.materialgroupid=n6.materialgroupid
						join unitofmeasure p6 on p6.unitofmeasureid = a6.uomid
						join marketarea az6 on az6.marketareaid=k6.marketareaid
						where h6.companyid = ".$companyid." and b6.recordstatus = 3 and j6.sloccode like '%".$sloc."%' and k6.fullname like '%".$customer."%' and l6.fullname like '%".$employee."%' and m6.areaname like '%".$salesarea."%' and i6.productname like '%".$product."%'
						and d6.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						) z3 group by addressbookid
						) zz3
						) z4
						WHERE z4.customertypeid = ".$row['customertypeid']." and z4.custcategoryid = ".$row1['custcategoryid']."
						order BY z4.fullname
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();

        $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(0,$line,'No')
          ->setCellValueByColumnAndRow(1,$line,'Nama Customer')
          ->setCellValueByColumnAndRow(2,$line,'Potensi Market')
          ->setCellValueByColumnAndRow(3,$line,'Penjualan-Retur')
          ->setCellValueByColumnAndRow(4,$line,'%')
          ->setCellValueByColumnAndRow(5,$line,'Pembayaran')
          ->setCellValueByColumnAndRow(6,$line,'%')
          ->setCellValueByColumnAndRow(7,$line,'GM');
        $line++;

        $i=0;$totalpotensi2=0;$totalinvoice2=0;$totalhpp2=0;$totalpayamount2=0;
        foreach($dataReader2 as $row2)
        {
          $i+=1;
          $this->phpExcel->setActiveSheetIndex(0)
            ->setCellValueByColumnAndRow(0,$line,$i)
            ->setCellValueByColumnAndRow(1,$line,$row2['fullname'])
            ->setCellValueByColumnAndRow(2,$line,$row2['potensi']/$per)
            ->setCellValueByColumnAndRow(3,$line,$row2['nilaiinvoice']/$per)
            ->setCellValueByColumnAndRow(4,$line,$row2['perpotensi'])
            ->setCellValueByColumnAndRow(5,$line,$row2['payamount']/$per)
            ->setCellValueByColumnAndRow(6,$line,$row2['perpayamount'])
            ->setCellValueByColumnAndRow(7,$line,$row2['gm']);
          $line++;
          
          $totalpotensi2 += ($row2['potensi']/$per);
					$totalinvoice2 += ($row2['nilaiinvoice']/$per);
					$totalhpp2 += ($row2['nilaihpp']/$per);
					$totalpayamount2 += ($row2['payamount']/$per);
        }
        $gm2=0;$perpotensi2=0;$perpayamount2=0;
        if ($totalinvoice2 != 0) {
					$gm2 = 100-(100*$totalhpp2/$totalinvoice2);
					$perpayamount2 = (100*$totalpayamount2/$totalinvoice2);
				}
				if ($totalpotensi2 != 0) {
					$perpotensi2 = (100*$totalhpp2/$totalpotensi2);
				}

        $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($totalKategori);
        $this->phpExcel->getActiveSheet()->getStyle("C{$line}")->applyFromArray($totalKategori);
        $this->phpExcel->getActiveSheet()->getStyle("D{$line}")->applyFromArray($totalKategori);
        $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($totalKategori);
        $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($totalKategori);
        $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($totalKategori);
        $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($totalKategori);

        $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(1,$line,'TOTAL KATEGORI CUSTOMER : '.$row1['custcategoryname'])
          ->setCellValueByColumnAndRow(2,$line,$totalpotensi2)
          ->setCellValueByColumnAndRow(3,$line,$totalinvoice2)
          ->setCellValueByColumnAndRow(4,$line,$perpotensi2)
          ->setCellValueByColumnAndRow(5,$line,$totalpayamount2)
          ->setCellValueByColumnAndRow(6,$line,$perpayamount2)
          ->setCellValueByColumnAndRow(7,$line,$gm2);
        $line++;

        $totalpotensi1 += $totalpotensi2;
				$totalinvoice1 += $totalinvoice2;
				$totalhpp1 += $totalhpp2;
				$totalpayamount1 += $totalpayamount2;
      }
      $gm1=0;$perpotensi1=0;$perpayamount1=0;
			if ($totalinvoice1 != 0) {
				$gm1 = 100-(100*$totalhpp1/$totalinvoice1);
				$perpayamount1 = (100*$totalpayamount1/$totalinvoice1);
			}
			if ($totalpotensi1 != 0) {
				$perpotensi1 = (100*$totalhpp1/$totalpotensi1);
			}
      $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($totalTipe);
      $this->phpExcel->getActiveSheet()->getStyle("C{$line}")->applyFromArray($totalTipe);
      $this->phpExcel->getActiveSheet()->getStyle("D{$line}")->applyFromArray($totalTipe);
      $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($totalTipe);
      $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($totalTipe);
      $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($totalTipe);
      $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($totalTipe);

      $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(1,$line,'TOTAL TIPE CUSTOMER : '.$row['customertypename'])
        ->setCellValueByColumnAndRow(2,$line,$totalpotensi1)
        ->setCellValueByColumnAndRow(3,$line,$totalinvoice1)
        ->setCellValueByColumnAndRow(4,$line,$perpotensi1)
        ->setCellValueByColumnAndRow(5,$line,$totalpayamount1)
        ->setCellValueByColumnAndRow(6,$line,$perpayamount1)
        ->setCellValueByColumnAndRow(7,$line,$gm1);
      $line=$line+2;

      $totalpotensi += $totalpotensi1;
			$totalinvoice += $totalinvoice1;
			$totalhpp += $totalhpp1;
			$totalpayamount += $totalpayamount1;
    }
    $gm=0;$perpotensi=0;$perpayamount=0;
		if ($totalinvoice != 0) {
			$gm = 100-(100*$totalhpp/$totalinvoice);
			$perpayamount = (100*$totalpayamount/$totalinvoice);
		}
		if ($totalpotensi != 0) {
			$perpotensi = (100*$totalhpp/$totalpotensi);
		}
    $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("C{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("D{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($grandTotal);

    $this->phpExcel->setActiveSheetIndex(0)
      ->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
      ->setCellValueByColumnAndRow(2,$line,$totalpotensi)
      ->setCellValueByColumnAndRow(3,$line,$totalinvoice)
      ->setCellValueByColumnAndRow(4,$line,$perpotensi)
      ->setCellValueByColumnAndRow(5,$line,$totalpayamount)
      ->setCellValueByColumnAndRow(6,$line,$perpayamount)
      ->setCellValueByColumnAndRow(7,$line,$gm);
    $line++;
    $this->getFooterXLS($this->phpExcel);
  }
	//41
	
	//42
	public function RekapPerbandinganHPPPenjualanReturPerProvinsiPerZonaPerSubzonaPerCustomerXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
    $this->menuname='rekaphpppenjualanreturperzonapersubzonapercustomer';
    parent::actionDownxls();

    $customer = '';
		$employee = '';
		$salesarea = '';
		$spvid = '';
		$isdisplay3='';
		$isdisplay2='';

    $grandTotal = array(
    'font'  => array(
        'bold' => true,
        'size'  => 14,
    ));

    $totalZona = array (
      'font'  => array(
        'bold' => true,
        'size'  => 13,
    ));

    $totalTipe = array (
      'font'  => array(
        'bold' => true,
        'size'  => 12,
    ));

    $totalKategori = array (
      'font'  => array(
        'bold' => true,
        'size'  => 11,
    ));
      
    if(isset($spv)&& $spv!=''){
      $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
    }else{
      $spvid = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
    }else{
      $spvid1 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
    }else{
      $spvid2 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
    }else{
      $spvid3 = "";
    }  
    //,SUBSTRING_INDEX(marketname,'-','1') AS provinsi,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','2'),'-','-1') AS zona,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','3'),'-','-1') AS subzona

    $sql = "select distinct marketname from 
				(select a1.marketareaid,SUBSTRING_INDEX(a1.marketname,'-','1') AS marketname
				from marketarea a1
				where a1.marketareaid = 1
				union
				select distinct l.marketareaid,SUBSTRING_INDEX(l.marketname,'-','1') AS marketname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				join marketarea l on l.marketareaid=g.marketareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%'
				and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct n.marketareaid,SUBSTRING_INDEX(n.marketname,'-','1') AS marketname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				join marketarea n on n.marketareaid=k.marketareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%'
				and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by marketareaid
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();

    $line = 2;
    $this->phpExcel->setActiveSheetIndex(0)
      ->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
      ->setCellValueByColumnAndRow(3,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
      ->setCellValueByColumnAndRow(5,$line,GetCompanyCode($companyid));
    $line++;

    if(isset($spv) && $spv!='')
		{
		  $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
		  $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

		   $this->phpExcel->setActiveSheetIndex(0)
			  ->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR ')
			  ->setCellValueByColumnAndRow(1,$line,$fullname);
        $line++;
		}
		
		$totalqty3=0;$totalhpp3=0;$totalinvoice3=0;$totalpotensi3=0;

    foreach($dataReader as $row)
    {
      $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(0,$line,'PROVINSI : '.$row['marketname']);
      $line++;

      $sql1 = "select distinct marketname from 
					(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') AS marketname
					from marketarea a1
					where a1.marketareaid = 1
					and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') AS marketname
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join employee f on f.employeeid = b.employeeid
			    join addressbook g on g.addressbookid = b.addressbookid  
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
					join invoice j on j.giheaderid = h.giheaderid
			    join salesarea k on k.salesareaid = g.salesareaid
					join marketarea l on l.marketareaid=g.marketareaid
					where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
					and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
					and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
					and j.invoiceno is not null and invoiceno not like '%-%-%'
					and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') AS marketname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join marketarea n on n.marketareaid=k.marketareaid
					where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
					and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
					and i.productname like '%".$product."%'
					and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
					)z order by marketareaid
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalqty2=0;$totalhpp2=0;$totalinvoice2=0;$totalpotensi2=0;
      foreach($dataReader1 as $row1)
      {
        $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(0,$line,'ZONA : '.$row1['marketname']);
        $line++;

        $sql2 = "select distinct marketname from 
						(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','3'),'-','-1') AS marketname
						from marketarea a1
						where a1.marketareaid = 1
						and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') AS marketname
						from soheader b
						join sodetail c on c.soheaderid = b.soheaderid
						join gidetail d on d.sodetailid = c.sodetailid
						join product e on e.productid = d.productid
						join employee f on f.employeeid = b.employeeid
					  join addressbook g on g.addressbookid = b.addressbookid  
						join giheader h on h.giheaderid = d.giheaderid
						join sloc i on i.slocid = d.slocid
						join invoice j on j.giheaderid = h.giheaderid
					  join salesarea k on k.salesareaid = g.salesareaid
						join marketarea l on l.marketareaid=g.marketareaid
						where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
						and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
						and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
						and j.invoiceno is not null and invoiceno not like '%-%-%'
						and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') AS marketname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join marketarea n on n.marketareaid=k.marketareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%'
						and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						)z order by marketareaid
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();

        $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(0,$line,'No')
          ->setCellValueByColumnAndRow(1,$line,'Customer')
          ->setCellValueByColumnAndRow(2,$line,'Tipe')
          ->setCellValueByColumnAndRow(3,$line,'Potensi')
          ->setCellValueByColumnAndRow(4,$line,'Total Jual')
          ->setCellValueByColumnAndRow(5,$line,'GM');
        $line++;

        $totalqty1=0;$totalhpp1=0;$totalinvoice1=0;$totalpotensi1=0;
        foreach($dataReader2 as $row2)
        {
          $this->phpExcel->setActiveSheetIndex(0)
            ->setCellValueByColumnAndRow(0,$line,'SUB ZONA : '.$row2['marketname']);
          $line++;

          $sql3 = "select fullname,customertypename,potensi,sum(qty) as qty,sum(netto) as nilaiinvoice, SUM(nilaihpp) as nilaihpp, ifnull((1-(SUM(nilaihpp)/SUM(netto))),0) as gm from 
              (select fullname,customertypename,potensi,sum(qty) as qty,sum(nett) as netto,SUM(hpp) AS nilaihpp from
              (select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
              (select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
              (ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
              (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
              from gidetail zzb 
              join sodetail zza on zza.sodetailid = zzb.sodetailid
              where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
              ,(select m.buyprice*-m.qty FROM productdetailhist m WHERE m.gidetailid=ss.gidetailid AND m.qty<0) AS hpp
              ,(select a9.customertypename from customertype a9 where a9.customertypeid=d.customertypeid) as customertypename
              ,(select sum(a9.amount) from addresspotensi a9 where a9.addressbookid=d.addressbookid) as potensi
              from invoice a 
              join giheader b on b.giheaderid = a.giheaderid
              join soheader c on c.soheaderid = b.soheaderid
              join addressbook d on d.addressbookid = c.addressbookid
              join employee e on e.employeeid = c.employeeid
              join salesarea f on f.salesareaid = d.salesareaid
              join sodetail g on g.soheaderid = b.soheaderid
              join gidetail ss on ss.giheaderid = b.giheaderid
              join sloc h on h.slocid = ss.slocid
              join product i on i.productid = ss.productid
              join productplant j on j.productid = i.productid and j.slocid=g.slocid and j.unitofissue=ss.unitofmeasureid
              join materialgroup l on l.materialgroupid=j.materialgroupid
              join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
              join marketarea az on az.marketareaid=d.marketareaid
              where a.recordstatus = 3 and a.invoiceno is not null and invoiceno not like '%-%-%' and
              c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
              e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%'
              and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
              and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
              and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay3."
              )z group by fullname
              union
              select fullname,customertypename,potensi,-1*sum(qty) as qty,-1*sum(nett) as netto,SUM(hpp) AS nilaihpp from
              (select distinct a.notagirproid,k.fullname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
              ,(select p.buyprice*-p.qty FROM productdetailhist p WHERE p.gireturdetailid=c.gireturdetailid) AS hpp
              ,(select a9.customertypename from customertype a9 where a9.customertypeid=k.customertypeid) as customertypename
              ,(select sum(a9.amount) from addresspotensi a9 where a9.addressbookid=k.addressbookid) as potensi
              from notagirpro a
              join notagir b on b.notagirid=a.notagirid
              join gireturdetail c on c.gireturdetailid=a.gireturdetailid
              join giretur d on d.gireturid=b.gireturid
              join gidetail e on e.gidetailid=c.gidetailid
              join giheader f on f.giheaderid=d.giheaderid
              join sodetail g on g.sodetailid=e.sodetailid
              join soheader h on h.soheaderid=f.soheaderid
              join product i on i.productid = a.productid
              join sloc j on j.slocid = a.slocid
              join addressbook k on k.addressbookid = h.addressbookid
              join employee l on l.employeeid = h.employeeid
              join salesarea m on m.salesareaid = k.salesareaid
              join productplant n on n.productid=a.productid and n.slocid=a.slocid and n.unitofissue=a.uomid
              join materialgroup o on o.materialgroupid=n.materialgroupid
              join unitofmeasure p on p.unitofmeasureid = a.uomid
              join marketarea az on az.marketareaid=k.marketareaid
              where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
              and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
              and i.productname like '%".$product."%'
              and SUBSTRING_INDEX(az.marketname,'-','1') = '".$row['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(az.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
              and d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' ".$isdisplay2."
              )z group by fullname )zz 
              group by fullname order by fullname";
          $dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();
          
          $i=0;$totalqty=0;$totalhpp=0;$totalinvoice=0;$totalpotensi=0;
                
          foreach($dataReader3 as $row3)
          {
            if($row3['qty'] <> 0){$hargahpp = $row3['nilaihpp']/$row3['qty']; $hargajual = $row3['nilaiinvoice']/$row3['qty'];}else{$hargahpp = 0; $hargajual = 0;}
            $i+=1;
            $this->phpExcel->setActiveSheetIndex(0)
              ->setCellValueByColumnAndRow(0,$line,$i)
              ->setCellValueByColumnAndRow(1,$line,$row3['fullname'])
              ->setCellValueByColumnAndRow(2,$line,$row3['customertypename'])
              ->setCellValueByColumnAndRow(3,$line,$row3['potensi']/$per)
              ->setCellValueByColumnAndRow(4,$line,$row3['nilaiinvoice']/$per)
              ->setCellValueByColumnAndRow(5,$line,100*$row3['gm']);
            $line++;
            
            $totalqty += ($row3['qty']);
            $totalhpp += ($row3['nilaihpp']);
            $totalinvoice += ($row3['nilaiinvoice']);
            $totalpotensi += ($row3['potensi']);
          }
          $ag = 0; $bg = 0; $cg = 0;
          if ($totalqty != 0) {
            $ag = $totalhpp / $totalqty;
            $bg = $totalinvoice / $totalqty;
          }
          if ($totalinvoice != 0) {
            $cg = $totalhpp/$totalinvoice;
          }

          $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("C{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("D{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($totalKategori);

          $this->phpExcel->setActiveSheetIndex(0)
            ->setCellValueByColumnAndRow(1,$line,'TOTAL SUB ZONA '.$row2['marketname'])
            ->setCellValueByColumnAndRow(3,$line,$totalpotensi/$per)
            ->setCellValueByColumnAndRow(4,$line,$totalinvoice/$per)
            ->setCellValueByColumnAndRow(5,$line,100-(($cg)*100));
          $line++;

          $totalqty1 += $totalqty;
          $totalhpp1 += $totalhpp;
          $totalinvoice1 += $totalinvoice;
          $totalpotensi1 += $totalpotensi;
        }
        if ($totalinvoice1 != 0) {
					$cg1 = $totalhpp1/$totalinvoice1;
				}

        $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("C{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("D{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($totalTipe);

        $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(1,$line,'TOTAL ZONA '.$row1['marketname'])
          ->setCellValueByColumnAndRow(3,$line,$totalpotensi1/$per)
          ->setCellValueByColumnAndRow(4,$line,$totalinvoice1/$per)
          ->setCellValueByColumnAndRow(5,$line,100-(($cg1)*100));
        $line++;

        $totalqty2 += $totalqty1;
				$totalhpp2 += $totalhpp1;
				$totalinvoice2 += $totalinvoice1;
				$totalpotensi2 += $totalpotensi1;
      }
      if ($totalinvoice2 != 0) {
				$cg2 = $totalhpp2/$totalinvoice2;
			}
      $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("C{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("D{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($totalZona);

      $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(1,$line,'TOTAL PROVINSI '.$row['marketname'])
        ->setCellValueByColumnAndRow(3,$line,$totalpotensi2/$per)
        ->setCellValueByColumnAndRow(4,$line,$totalinvoice2/$per)
        ->setCellValueByColumnAndRow(5,$line,100-(($cg2)*100));
      $line=$line+2;

      $totalqty3 += $totalqty2;
			$totalhpp3 += $totalhpp2;
			$totalinvoice3 += $totalinvoice2;
			$totalpotensi3 += $totalpotensi2;
    }
    if ($totalinvoice3 != 0) {
			$cg3 = $totalhpp3/$totalinvoice3;
		}
    $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("C{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("D{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($grandTotal);

    $this->phpExcel->setActiveSheetIndex(0)
      ->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
      ->setCellValueByColumnAndRow(3,$line,$totalpotensi3/$per)
      ->setCellValueByColumnAndRow(4,$line,$totalinvoice3/$per)
      ->setCellValueByColumnAndRow(5,$line,100-(($cg3)*100));
    $line++;
    $this->getFooterXLS($this->phpExcel);
  }
	//43
	public function RekapPotensiTargetPenjualanReturPelunasanGMPerProvinsiPerZonaPerSubzonaPerTipePerKategoriPerCustomerXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
    $this->menuname='rekappotensitargetpenjualanreturpembayaranperzonapercustomer';
    parent::actionDownxls();

    $customer = '';
		$employee = '';
		$salesarea = '';
		$spvid = '';
		$isdisplay3='';
		$isdisplay2='';

    $grandTotal = array(
    'font'  => array(
        'bold' => true,
        'size'  => 14,
    ));

    $totalZona = array (
      'font'  => array(
        'bold' => true,
        'size'  => 13,
    ));

    $totalTipe = array (
      'font'  => array(
        'bold' => true,
        'size'  => 12,
    ));

    $totalKategori = array (
      'font'  => array(
        'bold' => true,
        'size'  => 11,
    ));
      
    if(isset($spv)&& $spv!=''){
      $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
    }else{
      $spvid = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
    }else{
      $spvid1 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
    }else{
      $spvid2 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
    }else{
      $spvid3 = "";
    }  
    //,SUBSTRING_INDEX(marketname,'-','1') AS provinsi,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','2'),'-','-1') AS zona,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','3'),'-','-1') AS subzona

    $sql = "select distinct marketname from 
				(select a1.marketareaid,SUBSTRING_INDEX(a1.marketname,'-','1') AS marketname
				from marketarea a1
				where a1.marketareaid = 1
				union
				select distinct l.marketareaid,SUBSTRING_INDEX(l.marketname,'-','1') AS marketname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				join marketarea l on l.marketareaid=g.marketareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%'
				and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct n.marketareaid,SUBSTRING_INDEX(n.marketname,'-','1') AS marketname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				join marketarea n on n.marketareaid=k.marketareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%'
				and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by marketareaid
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();

    $line = 2;
    $this->phpExcel->setActiveSheetIndex(0)
      ->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
      ->setCellValueByColumnAndRow(3,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
      ->setCellValueByColumnAndRow(5,$line,GetCompanyCode($companyid));
    $line++;

    if(isset($spv) && $spv!='')
		{
		  $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
		  $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

		   $this->phpExcel->setActiveSheetIndex(0)
			  ->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR ')
			  ->setCellValueByColumnAndRow(1,$line,$fullname);
        $line++;
		}
		
		$totalpotensi=0;$totaltarget=0;$totalinvoice=0;$totalhpp=0;$totalpayamount=0;

    foreach($dataReader as $row)
    {
      $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(0,$line,'PROVINSI : '.$row['marketname']);
      $line++;

      $sql1 = "select distinct marketname from 
					(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') AS marketname
					from marketarea a1
					where a1.marketareaid = 1
					and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') AS marketname
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join employee f on f.employeeid = b.employeeid
			    join addressbook g on g.addressbookid = b.addressbookid  
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
					join invoice j on j.giheaderid = h.giheaderid
			    join salesarea k on k.salesareaid = g.salesareaid
					join marketarea l on l.marketareaid=g.marketareaid
					where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
					and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
					and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
					and j.invoiceno is not null and invoiceno not like '%-%-%'
					and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') AS marketname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join marketarea n on n.marketareaid=k.marketareaid
					where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
					and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
					and i.productname like '%".$product."%'
					and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
					)z order by marketareaid
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalpotensi1=0;$totaltarget1=0;$totalinvoice1=0;$totalhpp1=0;$totalpayamount1=0;
      foreach($dataReader1 as $row1)
      {
        $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(0,$line,'ZONA : '.$row1['marketname']);
        $line++;

        $sql2 = "select distinct marketname from 
						(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','3'),'-','-1') AS marketname
						from marketarea a1
						where a1.marketareaid = 1
						and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') AS marketname
						from soheader b
						join sodetail c on c.soheaderid = b.soheaderid
						join gidetail d on d.sodetailid = c.sodetailid
						join product e on e.productid = d.productid
						join employee f on f.employeeid = b.employeeid
				  	join addressbook g on g.addressbookid = b.addressbookid  
						join giheader h on h.giheaderid = d.giheaderid
						join sloc i on i.slocid = d.slocid
						join invoice j on j.giheaderid = h.giheaderid
					  join salesarea k on k.salesareaid = g.salesareaid
						join marketarea l on l.marketareaid=g.marketareaid
						where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
						and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
						and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
						and j.invoiceno is not null and invoiceno not like '%-%-%'
						and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') AS marketname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join marketarea n on n.marketareaid=k.marketareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%'
						and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						)z order by marketareaid
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();

        $totalpotensi2=0;$totaltarget2=0;$totalinvoice2=0;$totalhpp2=0;$totalpayamount2=0;
        foreach($dataReader2 as $row2)
        {
          $this->phpExcel->setActiveSheetIndex(0)
            ->setCellValueByColumnAndRow(0,$line,'SUB ZONA : '.$row2['marketname']);
          $line++;

          $sql3 = "select distinct customertypeid,customertypename from 
						(select distinct o.customertypeid,o.customertypename
						from soheader b
						join sodetail c on c.soheaderid = b.soheaderid
						join gidetail d on d.sodetailid = c.sodetailid
						join product e on e.productid = d.productid
						join employee f on f.employeeid = b.employeeid
					  join addressbook g on g.addressbookid = b.addressbookid  
						join giheader h on h.giheaderid = d.giheaderid
						join sloc i on i.slocid = d.slocid
						join invoice j on j.giheaderid = h.giheaderid
					  join salesarea k on k.salesareaid = g.salesareaid
						join marketarea l on l.marketareaid=g.marketareaid
						join customertype o on o.customertypeid=g.customertypeid and o.recordstatus=1
						where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
						and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
						and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
						and j.invoiceno is not null and invoiceno not like '%-%-%'
						and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
						union
						select distinct o.customertypeid,o.customertypename
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join marketarea n on n.marketareaid=k.marketareaid
						join customertype o on o.customertypeid=k.customertypeid and o.recordstatus=1
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%'
						and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
						)z order by customertypeid
					";
          $dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();
          
          $totalpotensi3=0;$totaltarget3=0;$totalinvoice3=0;$totalhpp3=0;$totalpayamount3=0;
                
          foreach($dataReader3 as $row3)
          {
            $this->phpExcel->setActiveSheetIndex(0)
              ->setCellValueByColumnAndRow(0,$line,'TIPE CUSTOMER : '.$row3['customertypename']);
            $line++;
            
            $sql4 = "select distinct custcategoryid,custcategoryname from 
              (select distinct o.custcategoryid,o.custcategoryname
              from soheader b
              join sodetail c on c.soheaderid = b.soheaderid
              join gidetail d on d.sodetailid = c.sodetailid
              join product e on e.productid = d.productid
              join employee f on f.employeeid = b.employeeid
              join addressbook g on g.addressbookid = b.addressbookid and g.customertypeid=".$row3['customertypeid']."
              join giheader h on h.giheaderid = d.giheaderid
              join sloc i on i.slocid = d.slocid
              join invoice j on j.giheaderid = h.giheaderid
              join salesarea k on k.salesareaid = g.salesareaid
              join marketarea l on l.marketareaid=g.marketareaid
              join custcategory o on o.custcategoryid=g.custcategoryid and o.recordstatus=1
              where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
              and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
              and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
              and j.invoiceno is not null and invoiceno not like '%-%-%'
              and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
              and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
              union
              select distinct o.custcategoryid,o.custcategoryname
              from notagirpro a
              join notagir b on b.notagirid=a.notagirid
              join gireturdetail c on c.gireturdetailid=a.gireturdetailid
              join giretur d on d.gireturid=b.gireturid
              join gidetail e on e.gidetailid=c.gidetailid
              join giheader f on f.giheaderid=d.giheaderid
              join sodetail g on g.sodetailid=e.sodetailid
              join soheader h on h.soheaderid=f.soheaderid
              join product i on i.productid = a.productid
              join sloc j on j.slocid = a.slocid
              join addressbook k on k.addressbookid = h.addressbookid and k.customertypeid=".$row3['customertypeid']."
              join employee l on l.employeeid = h.employeeid
              join salesarea m on m.salesareaid = k.salesareaid
              join marketarea n on n.marketareaid=k.marketareaid
              join custcategory o on o.custcategoryid=k.custcategoryid and o.recordstatus=1
              where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
              and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
              and i.productname like '%".$product."%'
              and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
              and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
              and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
              )z order by custcategoryid
						";
            $dataReader4=Yii::app()->db->createCommand($sql4)->queryAll();
						
						$totalpotensi4=0;$totaltarget4=0;$totalinvoice4=0;$totalhpp4=0;$totalpayamount4=0;

            foreach($dataReader4 as $row4)
            {
              $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(0,$line,'KATEGORI CUSTOMER :'.$row4['custcategoryname']);
              $line++;

              $sql5 = "SELECT *,if(nilaiinvoice=0,0,100*(1-(nilaihpp/nilaiinvoice))) AS gm,if(potensi=0,0,100*(target/potensi)) as perpotensi,if(target=0,0,100*(nilaiinvoice/target)) as pertarget,if(nilaiinvoice=0,0,100*(payamount/nilaiinvoice)) as perpayamount
									FROM (select addressbookid,target,fullname,customertypeid,custcategoryid
									,IFNULL((select sum(netto) as nilaiinvoice
									FROM (
									select addressbookid,target,customertypeid,custcategoryid,fullname,sum(nett) as netto
									FROM (select DISTINCT d3.addressbookid,0 as target,d3.customertypeid,d3.custcategoryid,d3.fullname,ss3.gidetailid,
									(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty) from gidetail zzb join sodetail zza on zza.sodetailid = zzb.sodetailid where zzb.giheaderid = b3.giheaderid and zzb.productid = i3.productid and zzb.gidetailid=ss3.gidetailid) as nett
									from invoice a3
									join giheader b3 ON b3.giheaderid = a3.giheaderid
									join soheader c3 ON c3.soheaderid = b3.soheaderid
									join addressbook d3 ON d3.addressbookid = c3.addressbookid
									join employee e3 ON e3.employeeid = c3.employeeid
									join salesarea f3 ON f3.salesareaid = d3.salesareaid
									join sodetail g3 ON g3.soheaderid = b3.soheaderid
									join gidetail ss3 on ss3.giheaderid = b3.giheaderid
									join sloc h3 on h3.slocid = ss3.slocid
									join product i3 on i3.productid = ss3.productid
									join productplant j3 on j3.productid = i3.productid and j3.slocid=g3.slocid and j3.unitofissue=ss3.unitofmeasureid
									join materialgroup l3 on l3.materialgroupid=j3.materialgroupid
									join unitofmeasure k3 on k3.unitofmeasureid = ss3.unitofmeasureid
									join marketarea az3 on az3.marketareaid=d3.marketareaid
									where a3.recordstatus = 3 and a3.invoiceno is not null and invoiceno not like '%-%-%' and c3.companyid = ".$companyid." and h3.sloccode like '%".$sloc."%' and d3.fullname like '%".$customer."%' and e3.fullname like '%".$employee."%' and f3.areaname like '%".$salesarea."%' and i3.productname like '%".$product."%'
							    and SUBSTRING_INDEX(az3.marketname,'-','1') = '".$row['marketname']."'
							    and SUBSTRING_INDEX(SUBSTRING_INDEX(az3.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							    and SUBSTRING_INDEX(SUBSTRING_INDEX(az3.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and a3.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
									and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									)z group by addressbookid
									UNION
									select addressbookid,target,customertypeid,custcategoryid,fullname,-1*sum(nett) as netto from
									(select DISTINCT k4.addressbookid,0 as target,k4.customertypeid,k4.custcategoryid,k4.fullname,a4.notagirproid,(a4.qty*a4.price) as nett
									from notagirpro a4
									join notagir b4 on b4.notagirid=a4.notagirid
									join gireturdetail c4 on c4.gireturdetailid=a4.gireturdetailid
									join giretur d4 on d4.gireturid=b4.gireturid
									join gidetail e4 on e4.gidetailid=c4.gidetailid
									join giheader f4 on f4.giheaderid=d4.giheaderid
									join sodetail g4 on g4.sodetailid=e4.sodetailid
									join soheader h4 on h4.soheaderid=f4.soheaderid
									join product i4 on i4.productid = a4.productid
									join sloc j4 on j4.slocid = a4.slocid
									join addressbook k4 on k4.addressbookid = h4.addressbookid
									join employee l4 on l4.employeeid = h4.employeeid
									join salesarea m4 on m4.salesareaid = k4.salesareaid
									join productplant n4 on n4.productid=a4.productid and n4.slocid=a4.slocid and n4.unitofissue=a4.uomid
									join materialgroup o4 on o4.materialgroupid=n4.materialgroupid
									join unitofmeasure p4 on p4.unitofmeasureid = a4.uomid
									join marketarea az4 on az4.marketareaid=k4.marketareaid
									where h4.companyid = ".$companyid." and b4.recordstatus = 3 and j4.sloccode like '%".$sloc."%' and k4.fullname like '%".$customer."%' and l4.fullname like '%".$employee."%' and m4.areaname like '%".$salesarea."%' and i4.productname like '%".$product."%'
							    and SUBSTRING_INDEX(az4.marketname,'-','1') = '".$row['marketname']."'
							    and SUBSTRING_INDEX(SUBSTRING_INDEX(az4.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							    and SUBSTRING_INDEX(SUBSTRING_INDEX(az4.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and d4.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									) z2 group by addressbookid
									) zz2
									WHERE zz2.addressbookid = zz3.addressbookid),0) AS nilaiinvoice
									,IFNULL((select sum(nilaihpp) as nilaihpp
									FROM (
									select addressbookid,target,customertypeid,custcategoryid,fullname,sum(hpp) as nilaihpp
									FROM (select DISTINCT d1.addressbookid,0 as target,d1.customertypeid,d1.custcategoryid,d1.fullname,ss1.gidetailid,
									(select m1.buyprice*-m1.qty FROM productdetailhist m1 WHERE m1.gidetailid=ss1.gidetailid AND m1.qty<0) AS hpp
									from invoice a1
									join giheader b1 ON b1.giheaderid = a1.giheaderid
									join soheader c1 ON c1.soheaderid = b1.soheaderid
									join addressbook d1 ON d1.addressbookid = c1.addressbookid
									join employee e1 ON e1.employeeid = c1.employeeid
									join salesarea f1 ON f1.salesareaid = d1.salesareaid
									join sodetail g1 ON g1.soheaderid = b1.soheaderid
									join gidetail ss1 on ss1.giheaderid = b1.giheaderid
									join sloc h1 on h1.slocid = ss1.slocid
									join product i1 on i1.productid = ss1.productid
									join productplant j1 on j1.productid = i1.productid and j1.slocid=g1.slocid and j1.unitofissue=ss1.unitofmeasureid
									join materialgroup l1 on l1.materialgroupid=j1.materialgroupid
									join unitofmeasure k1 on k1.unitofmeasureid = ss1.unitofmeasureid
									join marketarea az1 on az1.marketareaid=d1.marketareaid
									where a1.recordstatus = 3 and a1.invoiceno is not null and a1.invoiceno not like '%-%-%' and c1.companyid = ".$companyid." and h1.sloccode like '%".$sloc."%' and d1.fullname like '%".$customer."%' and e1.fullname like '%".$employee."%' and f1.areaname like '%".$salesarea."%' and i1.productname like '%".$product."%'
							    and SUBSTRING_INDEX(az1.marketname,'-','1') = '".$row['marketname']."'
						    	and SUBSTRING_INDEX(SUBSTRING_INDEX(az1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
							    and SUBSTRING_INDEX(SUBSTRING_INDEX(az1.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and a1.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
									and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									)z group by addressbookid
									UNION
									select addressbookid,target,customertypeid,custcategoryid,fullname,sum(hpp) as nilaihpp from
									(select DISTINCT k2.addressbookid,0 as target,k2.customertypeid,k2.custcategoryid,k2.fullname,a2.notagirproid,(select p2.buyprice*-p2.qty FROM productdetailhist p2 WHERE p2.gireturdetailid=c2.gireturdetailid) AS hpp
									from notagirpro a2
									join notagir b2 on b2.notagirid=a2.notagirid
									join gireturdetail c2 on c2.gireturdetailid=a2.gireturdetailid
									join giretur d2 on d2.gireturid=b2.gireturid
									join gidetail e2 on e2.gidetailid=c2.gidetailid
									join giheader f2 on f2.giheaderid=d2.giheaderid
									join sodetail g2 on g2.sodetailid=e2.sodetailid
									join soheader h2 on h2.soheaderid=f2.soheaderid
									join product i2 on i2.productid = a2.productid
									join sloc j2 on j2.slocid = a2.slocid
									join addressbook k2 on k2.addressbookid = h2.addressbookid
									join employee l2 on l2.employeeid = h2.employeeid
									join salesarea m2 on m2.salesareaid = k2.salesareaid
									join productplant n2 on n2.productid=a2.productid and n2.slocid=a2.slocid and n2.unitofissue=a2.uomid
									join materialgroup o2 on o2.materialgroupid=n2.materialgroupid
									join unitofmeasure p2 on p2.unitofmeasureid = a2.uomid
									join marketarea az2 on az2.marketareaid=k2.marketareaid
									where h2.companyid = ".$companyid." and b2.recordstatus = 3 and j2.sloccode like '%".$sloc."%' and k2.fullname like '%".$customer."%' and l2.fullname like '%".$employee."%' and m2.areaname like '%".$salesarea."%' and i2.productname like '%".$product."%'
						    	and SUBSTRING_INDEX(az2.marketname,'-','1') = '".$row['marketname']."'
                  and SUBSTRING_INDEX(SUBSTRING_INDEX(az2.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
                  and SUBSTRING_INDEX(SUBSTRING_INDEX(az2.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and d2.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									) z1 group by addressbookid
									) zz1
									WHERE zz1.addressbookid = zz3.addressbookid),0) AS nilaihpp,
									ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)
									-- +ifnull(f.returnamount,0)
									+ifnull(f.obamount,0)
									)*ifnull(f.currencyrate,0))
									from cutarinv f
									join cutar g on g.cutarid=f.cutarid
									join invoice h on h.invoiceid=f.invoiceid
									join giheader i on i.giheaderid=h.giheaderid
									join soheader j on j.soheaderid=i.soheaderid
									where g.recordstatus=3 and g.companyid = ".$companyid." and g.docdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									and j.addressbookid = zz3.addressbookid),0) as payamount
									,ifnull((select sum(a.amount) from addresspotensi a where a.addressbookid=zz3.addressbookid),0) as potensi
									FROM (
									select addressbookid,target,customertypeid,custcategoryid,fullname
									FROM (select DISTINCT d5.addressbookid,0 as target,d5.customertypeid,d5.custcategoryid,d5.fullname,ss5.gidetailid
									from invoice a5
									join giheader b5 ON b5.giheaderid = a5.giheaderid
									join soheader c5 ON c5.soheaderid = b5.soheaderid
									join addressbook d5 ON d5.addressbookid = c5.addressbookid
									join employee e5 ON e5.employeeid = c5.employeeid
									join salesarea f5 ON f5.salesareaid = d5.salesareaid
									join sodetail g5 ON g5.soheaderid = b5.soheaderid
									join gidetail ss5 on ss5.giheaderid = b5.giheaderid
									join sloc h5 on h5.slocid = ss5.slocid
									join product i5 on i5.productid = ss5.productid
									join productplant j5 on j5.productid = i5.productid and j5.slocid=g5.slocid and j5.unitofissue=ss5.unitofmeasureid
									join materialgroup l5 on l5.materialgroupid=j5.materialgroupid
									join unitofmeasure k5 on k5.unitofmeasureid = ss5.unitofmeasureid
									join marketarea az5 on az5.marketareaid=d5.marketareaid
									where a5.recordstatus = 3 and a5.invoiceno is not null and invoiceno not like '%-%-%' and c5.companyid = ".$companyid." and h5.sloccode like '%".$sloc."%' and d5.fullname like '%".$customer."%' and e5.fullname like '%".$employee."%' and f5.areaname like '%".$salesarea."%' and i5.productname like '%".$product."%'
                  and SUBSTRING_INDEX(az5.marketname,'-','1') = '".$row['marketname']."'
                  and SUBSTRING_INDEX(SUBSTRING_INDEX(az5.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
                  and SUBSTRING_INDEX(SUBSTRING_INDEX(az5.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and a5.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
									and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									)z group by addressbookid
									UNION
									select addressbookid,target,customertypeid,custcategoryid,fullname from
									(select DISTINCT k6.addressbookid,0 as target,k6.customertypeid,k6.custcategoryid,k6.fullname,a6.notagirproid
									from notagirpro a6
									join notagir b6 on b6.notagirid=a6.notagirid
									join gireturdetail c6 on c6.gireturdetailid=a6.gireturdetailid
									join giretur d6 on d6.gireturid=b6.gireturid
									join gidetail e6 on e6.gidetailid=c6.gidetailid
									join giheader f6 on f6.giheaderid=d6.giheaderid
									join sodetail g6 on g6.sodetailid=e6.sodetailid
									join soheader h6 on h6.soheaderid=f6.soheaderid
									join product i6 on i6.productid = a6.productid
									join sloc j6 on j6.slocid = a6.slocid
									join addressbook k6 on k6.addressbookid = h6.addressbookid
									join employee l6 on l6.employeeid = h6.employeeid
									join salesarea m6 on m6.salesareaid = k6.salesareaid
									join productplant n6 on n6.productid=a6.productid and n6.slocid=a6.slocid and n6.unitofissue=a6.uomid
									join materialgroup o6 on o6.materialgroupid=n6.materialgroupid
									join unitofmeasure p6 on p6.unitofmeasureid = a6.uomid
									join marketarea az6 on az6.marketareaid=k6.marketareaid
									where h6.companyid = ".$companyid." and b6.recordstatus = 3 and j6.sloccode like '%".$sloc."%' and k6.fullname like '%".$customer."%' and l6.fullname like '%".$employee."%' and m6.areaname like '%".$salesarea."%' and i6.productname like '%".$product."%'
                  and SUBSTRING_INDEX(az6.marketname,'-','1') = '".$row['marketname']."'
                  and SUBSTRING_INDEX(SUBSTRING_INDEX(az6.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
                  and SUBSTRING_INDEX(SUBSTRING_INDEX(az6.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
									and d6.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									) z3 group by addressbookid
									) zz3
									) z4
									WHERE z4.customertypeid = ".$row3['customertypeid']." and z4.custcategoryid = ".$row4['custcategoryid']."
									order BY z4.fullname
							";
              $dataReader5=Yii::app()->db->createCommand($sql5)->queryAll();

              $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(0,$line,'No')
                ->setCellValueByColumnAndRow(1,$line,'Nama Customer')
                ->setCellValueByColumnAndRow(2,$line,'Potensi Market')
                ->setCellValueByColumnAndRow(3,$line,'Target')
                ->setCellValueByColumnAndRow(4,$line,'%')
                ->setCellValueByColumnAndRow(5,$line,'Penjualan-Retur')
                ->setCellValueByColumnAndRow(6,$line,'%')
                ->setCellValueByColumnAndRow(7,$line,'Pembayaran')
                ->setCellValueByColumnAndRow(8,$line,'%')
                ->setCellValueByColumnAndRow(9,$line,'GM');
              $line++;

              $i=0;$totalpotensi5=0;$totaltarget5=0;$totalinvoice5=0;$totalhpp5=0;$totalpayamount5=0;

              foreach($dataReader5 as $row5)
              {
                $i+=1;
                $this->phpExcel->setActiveSheetIndex(0)
                  ->setCellValueByColumnAndRow(0,$line,$i)
                  ->setCellValueByColumnAndRow(1,$line,$row5['fullname'])
                  ->setCellValueByColumnAndRow(2,$line,$row5['potensi']/$per)
                  ->setCellValueByColumnAndRow(3,$line,$row5['target']/$per)
                  ->setCellValueByColumnAndRow(4,$line,$row5['perpotensi']/$per)
                  ->setCellValueByColumnAndRow(5,$line,$row5['nilaiinvoice']/$per)
                  ->setCellValueByColumnAndRow(6,$line,$row5['pertarget']/$per)
                  ->setCellValueByColumnAndRow(7,$line,$row5['payamount']/$per)
                  ->setCellValueByColumnAndRow(8,$line,$row5['perpayamount']/$per)
                  ->setCellValueByColumnAndRow(9,$line,$row5['gm']);
                $line++;

                $totalpotensi5 += ($row5['potensi']);
								$totaltarget5 += ($row5['target']);
								$totalinvoice5 += ($row5['nilaiinvoice']);
								$totalhpp5 += ($row5['nilaihpp']);
								$totalpayamount5 += ($row5['payamount']);
              }
              $gm5=0;$perpotensi5=0;$pertarget5=0;$perpayamount5=0;

              if ($totalpotensi5 != 0) {
								$perpotensi5 = (100*$totaltarget5/$totalpotensi5);
							}
							if ($totaltarget5 != 0) {
								$pertarget5 = (100*$totalinvoice5/$totaltarget5);
							}
							if ($totalinvoice5 != 0) {
								$gm5 = 100-(100*$totalhpp5/$totalinvoice5);
								$perpayamount5 = (100*$totalpayamount5/$totalinvoice5);
							}

              $this->phpExcel->setActiveSheetIndex(0)
                ->setCellValueByColumnAndRow(1,$line,'TOTAL KATEGORI CUSTOMER '.$row4['custcategoryname'])
                ->setCellValueByColumnAndRow(2,$line,$totalpotensi5/$per)
                ->setCellValueByColumnAndRow(3,$line,$totaltarget5/$per)
                ->setCellValueByColumnAndRow(4,$line,$perpotensi5/$per)
                ->setCellValueByColumnAndRow(5,$line,$totalinvoice5/$per)
                ->setCellValueByColumnAndRow(6,$line,$pertarget5/$per)
                ->setCellValueByColumnAndRow(7,$line,$totalpayamount5/$per)
                ->setCellValueByColumnAndRow(8,$line,$perpayamount5/$per)
                ->setCellValueByColumnAndRow(9,$line,$gm5);
              $line++;

              $totalpotensi4 += $totalpotensi5;
              $totaltarget4 += $totaltarget5;
              $totalinvoice4 += $totalinvoice5;
              $totalhpp4 += $totalhpp5;
              $totalpayamount4 += $totalpayamount5; 
            }
            $gm4=0;$perpotensi4=0;$pertarget4=0;$perpayamount4=0;
						if ($totalpotensi4 != 0) {
							$perpotensi4 = (100*$totaltarget4/$totalpotensi4);
						}
						if ($totaltarget4 != 0) {
							$pertarget4 = (100*$totalinvoice4/$totaltarget4);
						}
						if ($totalinvoice4 != 0) {
							$gm4 = 100-(100*$totalhpp4/$totalinvoice4);
							$perpayamount4 = (100*$totalpayamount4/$totalinvoice4);
						}
            $this->phpExcel->setActiveSheetIndex(0)
              ->setCellValueByColumnAndRow(1,$line,'TOTAL TIPE  CUSTOMER '.$row3['customertypename'])
              ->setCellValueByColumnAndRow(2,$line,$totalpotensi4/$per)
              ->setCellValueByColumnAndRow(3,$line,$totaltarget4/$per)
              ->setCellValueByColumnAndRow(4,$line,$perpotensi4/$per)
              ->setCellValueByColumnAndRow(5,$line,$totalinvoice4/$per)
              ->setCellValueByColumnAndRow(6,$line,$pertarget4/$per)
              ->setCellValueByColumnAndRow(7,$line,$totalpayamount4/$per)
              ->setCellValueByColumnAndRow(8,$line,$perpayamount4/$per)
              ->setCellValueByColumnAndRow(9,$line,$gm4);
            $line++;

            $totalpotensi3 += $totalpotensi4;
						$totaltarget3 += $totaltarget4;
						$totalinvoice3 += $totalinvoice4;
						$totalhpp3 += $totalhpp4;
						$totalpayamount3 += $totalpayamount4;
          }
          $gm3=0;$perpotensi3=0;$pertarget3=0;$perpayamount3=0;
					if ($totalpotensi3 != 0) {
						$perpotensi3 = (100*$totaltarget3/$totalpotensi3);
					}
					if ($totaltarget3 != 0) {
						$pertarget3 = (100*$totalinvoice3/$totaltarget3);
					}
					if ($totalinvoice3 != 0) {
						$gm3 = 100-(100*$totalhpp3/$totalinvoice3);
						$perpayamount3 = (100*$totalpayamount3/$totalinvoice3);
					}

          $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("C{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("D{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($totalKategori);

          $this->phpExcel->setActiveSheetIndex(0)
            ->setCellValueByColumnAndRow(1,$line,'TOTAL SUB ZONA '.$row2['marketname'])
            ->setCellValueByColumnAndRow(2,$line,$totalpotensi3/$per)
            ->setCellValueByColumnAndRow(3,$line,$totaltarget3/$per)
            ->setCellValueByColumnAndRow(4,$line,$perpotensi3/$per)
            ->setCellValueByColumnAndRow(5,$line,$totalinvoice3/$per)
            ->setCellValueByColumnAndRow(6,$line,$pertarget3/$per)
            ->setCellValueByColumnAndRow(7,$line,$totalpayamount3/$per)
            ->setCellValueByColumnAndRow(8,$line,$perpayamount3/$per)
            ->setCellValueByColumnAndRow(9,$line,$gm3);
          $line++;

          $totalpotensi2 += $totalpotensi3;
					$totaltarget2 += $totaltarget3;
					$totalinvoice2 += $totalinvoice3;
					$totalhpp2 += $totalhpp3;
					$totalpayamount2 += $totalpayamount3;
        }
        $gm2=0;$perpotensi2=0;$pertarget2=0;$perpayamount2=0;
				if ($totalpotensi2 != 0) {
					$perpotensi2 = (100*$totaltarget2/$totalpotensi2);
				}
				if ($totaltarget2 != 0) {
					$pertarget2 = (100*$totalinvoice2/$totaltarget2);
				}
				if ($totalinvoice2 != 0) {
					$gm2 = 100-(100*$totalhpp2/$totalinvoice2);
					$perpayamount2 = (100*$totalpayamount2/$totalinvoice2);
				}

        $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("C{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("D{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($totalTipe);

        $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(1,$line,'TOTAL ZONA '.$row1['marketname'])
          ->setCellValueByColumnAndRow(2,$line,$totalpotensi2/$per)
          ->setCellValueByColumnAndRow(3,$line,$totaltarget2/$per)
          ->setCellValueByColumnAndRow(4,$line,$perpotensi2/$per)
          ->setCellValueByColumnAndRow(5,$line,$totalinvoice2/$per)
          ->setCellValueByColumnAndRow(6,$line,$pertarget2/$per)
          ->setCellValueByColumnAndRow(7,$line,$totalpayamount2/$per)
          ->setCellValueByColumnAndRow(8,$line,$perpayamount2/$per)
          ->setCellValueByColumnAndRow(9,$line,$gm2);
        $line++;

        $totalpotensi1 += $totalpotensi2;
				$totaltarget1 += $totaltarget2;
				$totalinvoice1 += $totalinvoice2;
				$totalhpp1 += $totalhpp2;
				$totalpayamount1 += $totalpayamount2;
      }
      $gm1=0;$perpotensi1=0;$pertarget1=0;$perpayamount1=0;
			if ($totalpotensi1 != 0) {
				$perpotensi1 = (100*$totaltarget1/$totalpotensi1);
			}
			if ($totaltarget1 != 0) {
				$pertarget1 = (100*$totalinvoice1/$totaltarget1);
			}
			if ($totalinvoice1 != 0) {
				$gm1 = 100-(100*$totalhpp1/$totalinvoice1);
				$perpayamount1 = (100*$totalpayamount1/$totalinvoice1);
			}
      $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("C{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("D{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($totalZona);

      $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(1,$line,'TOTAL PROVINSI '.$row1['marketname'])
        ->setCellValueByColumnAndRow(2,$line,$totalpotensi1/$per)
        ->setCellValueByColumnAndRow(3,$line,$totaltarget1/$per)
        ->setCellValueByColumnAndRow(4,$line,$perpotensi1/$per)
        ->setCellValueByColumnAndRow(5,$line,$totalinvoice1/$per)
        ->setCellValueByColumnAndRow(6,$line,$pertarget1/$per)
        ->setCellValueByColumnAndRow(7,$line,$totalpayamount1/$per)
        ->setCellValueByColumnAndRow(8,$line,$perpayamount1/$per)
        ->setCellValueByColumnAndRow(9,$line,$gm1);
      $line=$line+2;

      $totalpotensi += $totalpotensi1;
			$totaltarget += $totaltarget1;
			$totalinvoice += $totalinvoice1;
			$totalhpp += $totalhpp1;
			$totalpayamount += $totalpayamount1;
    }
    $gm=0;$perpotensi=0;$pertarget=0;$perpayamount=0;
		if ($totalpotensi != 0) {
			$perpotensi = (00*$totaltarget/$totalpotensi);
		}
		if ($totaltarget != 0) {
			$pertarget = (00*$totalinvoice/$totaltarget);
		}
		if ($totalinvoice != 0) {
			$gm = 00-(00*$totalhpp/$totalinvoice);
			$perpayamount = (00*$totalpayamount/$totalinvoice);
		}
    $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("C{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("D{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($grandTotal);

    $this->phpExcel->setActiveSheetIndex(0)
      ->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
      ->setCellValueByColumnAndRow(2,$line,$totalpotensi/$per)
      ->setCellValueByColumnAndRow(3,$line,$totaltarget/$per)
      ->setCellValueByColumnAndRow(4,$line,$perpotensi/$per)
      ->setCellValueByColumnAndRow(5,$line,$totalinvoice/$per)
      ->setCellValueByColumnAndRow(6,$line,$pertarget/$per)
      ->setCellValueByColumnAndRow(7,$line,$totalpayamount/$per)
      ->setCellValueByColumnAndRow(8,$line,$perpayamount/$per)
      ->setCellValueByColumnAndRow(9,$line,$gm);
    $line++;
    $this->getFooterXLS($this->phpExcel);
  }
	//44
	public function RekapPotensiTargetPenjualanReturPelunasanGMPerProvinsiPerZonaPerSubzonaPerCustomerXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
    $this->menuname='rekappotensitargetpenjualanreturpembayaranpercustomer';
    parent::actionDownxls();

    $customer = '';
		$employee = '';
		$salesarea = '';
		$spvid = '';
		$isdisplay3='';
		$isdisplay2='';

    $grandTotal = array(
    'font'  => array(
        'bold' => true,
        'size'  => 14,
    ));

    $totalZona = array (
      'font'  => array(
        'bold' => true,
        'size'  => 13,
    ));

    $totalTipe = array (
      'font'  => array(
        'bold' => true,
        'size'  => 12,
    ));

    $totalKategori = array (
      'font'  => array(
        'bold' => true,
        'size'  => 11,
    ));
      
    if(isset($spv)&& $spv!=''){
      $spvid = " and (b.spvid='".$spv."' or b.employeeid='".$spv."')";
    }else{
      $spvid = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid1 = " and (h.spvid='".$spv."' or h.employeeid='".$spv."')";
    }else{
      $spvid1 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid2 = " and (za.spvid='".$spv."' or za.employeeid='".$spv."')";
    }else{
      $spvid2 = "";
    }
    if(isset($spv)&& $spv!=''){
      $spvid3 = " and (c.spvid='".$spv."' or c.employeeid='".$spv."')";
    }else{
      $spvid3 = "";
    }  
    //,SUBSTRING_INDEX(marketname,'-','1') AS provinsi,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','2'),'-','-1') AS zona,SUBSTRING_INDEX(SUBSTRING_INDEX(marketname,'-','3'),'-','-1') AS subzona

    $sql = "select distinct marketname from 
				(select a1.marketareaid,SUBSTRING_INDEX(a1.marketname,'-','1') AS marketname
				from marketarea a1
				where a1.marketareaid = 1
				union
				select distinct l.marketareaid,SUBSTRING_INDEX(l.marketname,'-','1') AS marketname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				join marketarea l on l.marketareaid=g.marketareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and invoiceno not like '%-%-%'
				and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct n.marketareaid,SUBSTRING_INDEX(n.marketname,'-','1') AS marketname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				join marketarea n on n.marketareaid=k.marketareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%'
				and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by marketareaid
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();

    $line = 2;
    $this->phpExcel->setActiveSheetIndex(0)
      ->setCellValueByColumnAndRow(1,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
      ->setCellValueByColumnAndRow(3,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
      ->setCellValueByColumnAndRow(5,$line,GetCompanyCode($companyid));
    $line++;

    if(isset($spv) && $spv!='')
		{
		  $sql = "SELECT fullname FROM employee WHERE employeeid='".$spv."'";                
		  $fullname = Yii::app()->db->createCommand($sql)->queryScalar();   

		   $this->phpExcel->setActiveSheetIndex(0)
			  ->setCellValueByColumnAndRow(0,$line,'LAPORAN PER SUPERVISOR ')
			  ->setCellValueByColumnAndRow(1,$line,$fullname);
        $line++;
		}
		
		$totalpotensi=0;$totaltarget=0;$totalinvoice=0;$totalhpp=0;$totalpayamount=0;

    foreach($dataReader as $row)
    {
      $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(0,$line,'PROVINSI : '.$row['marketname']);
      $line++;

      $sql1 = "select distinct marketname from 
					(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') AS marketname
					from marketarea a1
					where a1.marketareaid = 1
					and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') AS marketname
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join employee f on f.employeeid = b.employeeid
			    join addressbook g on g.addressbookid = b.addressbookid  
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
					join invoice j on j.giheaderid = h.giheaderid
			    join salesarea k on k.salesareaid = g.salesareaid
					join marketarea l on l.marketareaid=g.marketareaid
					where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
					and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
					and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
					and j.invoiceno is not null and invoiceno not like '%-%-%'
					and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
					union
					select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') AS marketname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join marketarea n on n.marketareaid=k.marketareaid
					where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
					and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
					and i.productname like '%".$product."%'
					and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
					)z order by marketareaid
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$totalpotensi1=0;$totaltarget1=0;$totalinvoice1=0;$totalhpp1=0;$totalpayamount1=0;
      foreach($dataReader1 as $row1)
      {
        $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(0,$line,'ZONA : '.$row1['marketname']);
        $line++;

        $sql2 = "select distinct marketname from 
						(select a1.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','3'),'-','-1') AS marketname
						from marketarea a1
						where a1.marketareaid = 1
						and SUBSTRING_INDEX(a1.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(a1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct l.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','3'),'-','-1') AS marketname
						from soheader b
						join sodetail c on c.soheaderid = b.soheaderid
						join gidetail d on d.sodetailid = c.sodetailid
						join product e on e.productid = d.productid
						join employee f on f.employeeid = b.employeeid
				  	join addressbook g on g.addressbookid = b.addressbookid  
						join giheader h on h.giheaderid = d.giheaderid
						join sloc i on i.slocid = d.slocid
						join invoice j on j.giheaderid = h.giheaderid
					  join salesarea k on k.salesareaid = g.salesareaid
						join marketarea l on l.marketareaid=g.marketareaid
						where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
						and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' ".$spvid." 
						and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
						and j.invoiceno is not null and invoiceno not like '%-%-%'
						and j.invoicedate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(l.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(l.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						union
						select distinct n.marketareaid,SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','3'),'-','-1') AS marketname
						from notagirpro a
						join notagir b on b.notagirid=a.notagirid
						join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						join giretur d on d.gireturid=b.gireturid
						join gidetail e on e.gidetailid=c.gidetailid
						join giheader f on f.giheaderid=d.giheaderid
						join sodetail g on g.sodetailid=e.sodetailid
						join soheader h on h.soheaderid=f.soheaderid
						join product i on i.productid = a.productid
						join sloc j on j.slocid = a.slocid
						join addressbook k on k.addressbookid = h.addressbookid
						join employee l on l.employeeid = h.employeeid
						join salesarea m on m.salesareaid = k.salesareaid
						join marketarea n on n.marketareaid=k.marketareaid
						where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
						and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' ".$spvid1." and m.areaname like '%".$salesarea."%'
						and i.productname like '%".$product."%'
						and d.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						and SUBSTRING_INDEX(n.marketname,'-','1') = '".$row['marketname']."'
						and SUBSTRING_INDEX(SUBSTRING_INDEX(n.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
						)z order by marketareaid
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();

        $totalpotensi2=0;$totaltarget2=0;$totalinvoice2=0;$totalhpp2=0;$totalpayamount2=0;
        foreach($dataReader2 as $row2)
        {
          $this->phpExcel->setActiveSheetIndex(0)
            ->setCellValueByColumnAndRow(0,$line,'SUB ZONA : '.$row2['marketname']);
          $line++;
          
          $totalpotensi3=0;$totaltarget3=0;$totalinvoice3=0;$totalhpp3=0;$totalpayamount3=0;
						
          $totalpotensi4=0;$totaltarget4=0;$totalinvoice4=0;$totalhpp4=0;$totalpayamount4=0;
              
          $sql5 = "SELECT *,if(nilaiinvoice=0,0,100*(1-(nilaihpp/nilaiinvoice))) AS gm,if(potensi=0,0,100*(target/potensi)) as perpotensi,if(target=0,0,100*(nilaiinvoice/target)) as pertarget,if(nilaiinvoice=0,0,100*(payamount/nilaiinvoice)) as perpayamount
            FROM (select addressbookid,target,fullname,customertypeid,custcategoryid,customertypename,custcategoryname
            ,IFNULL((select sum(netto) as nilaiinvoice
            FROM (
            select addressbookid,target,customertypeid,custcategoryid,customertypename,custcategoryname,fullname,sum(nett) as netto
            FROM (select DISTINCT d3.addressbookid,0 as target,d3.customertypeid,d3.custcategoryid,d3.fullname,ss3.gidetailid,
            (select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty) from gidetail zzb join sodetail zza on zza.sodetailid = zzb.sodetailid where zzb.giheaderid = b3.giheaderid and zzb.productid = i3.productid and zzb.gidetailid=ss3.gidetailid) as nett,za1.customertypename,za2.custcategoryname
            from invoice a3
            join giheader b3 ON b3.giheaderid = a3.giheaderid
            join soheader c3 ON c3.soheaderid = b3.soheaderid
            join addressbook d3 ON d3.addressbookid = c3.addressbookid
            join employee e3 ON e3.employeeid = c3.employeeid
            join salesarea f3 ON f3.salesareaid = d3.salesareaid
            join sodetail g3 ON g3.soheaderid = b3.soheaderid
            join gidetail ss3 on ss3.giheaderid = b3.giheaderid
            join sloc h3 on h3.slocid = ss3.slocid
            join product i3 on i3.productid = ss3.productid
            join productplant j3 on j3.productid = i3.productid and j3.slocid=g3.slocid and j3.unitofissue=ss3.unitofmeasureid
            join materialgroup l3 on l3.materialgroupid=j3.materialgroupid
            join unitofmeasure k3 on k3.unitofmeasureid = ss3.unitofmeasureid
            join marketarea az3 on az3.marketareaid=d3.marketareaid
            left join customertype za1 on za1.customertypeid = d3.customertypeid
            left join custcategory za2 on za2.custcategoryid = d3.custcategoryid
            where a3.recordstatus = 3 and a3.invoiceno is not null and invoiceno not like '%-%-%' and c3.companyid = ".$companyid." and h3.sloccode like '%".$sloc."%' and d3.fullname like '%".$customer."%' and e3.fullname like '%".$employee."%' and f3.areaname like '%".$salesarea."%' and i3.productname like '%".$product."%'
            and SUBSTRING_INDEX(az3.marketname,'-','1') = '".$row['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az3.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az3.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
            and a3.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
            and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
            )z group by addressbookid
            UNION
            select addressbookid,target,customertypeid,custcategoryid,fullname,customertypename,custcategoryname,-1*sum(nett) as netto from
            (select DISTINCT k4.addressbookid,0 as target,k4.customertypeid,k4.custcategoryid,k4.fullname,a4.notagirproid,(a4.qty*a4.price) as nett,za3.customertypename, za4.custcategoryname
            from notagirpro a4
            join notagir b4 on b4.notagirid=a4.notagirid
            join gireturdetail c4 on c4.gireturdetailid=a4.gireturdetailid
            join giretur d4 on d4.gireturid=b4.gireturid
            join gidetail e4 on e4.gidetailid=c4.gidetailid
            join giheader f4 on f4.giheaderid=d4.giheaderid
            join sodetail g4 on g4.sodetailid=e4.sodetailid
            join soheader h4 on h4.soheaderid=f4.soheaderid
            join product i4 on i4.productid = a4.productid
            join sloc j4 on j4.slocid = a4.slocid
            join addressbook k4 on k4.addressbookid = h4.addressbookid
            join employee l4 on l4.employeeid = h4.employeeid
            join salesarea m4 on m4.salesareaid = k4.salesareaid
            join productplant n4 on n4.productid=a4.productid and n4.slocid=a4.slocid and n4.unitofissue=a4.uomid
            join materialgroup o4 on o4.materialgroupid=n4.materialgroupid
            join unitofmeasure p4 on p4.unitofmeasureid = a4.uomid
            join marketarea az4 on az4.marketareaid=k4.marketareaid
            left join customertype za3 on za3.customertypeid = k4.customertypeid
            left join custcategory za4 on za4.custcategoryid = k4.custcategoryid
            where h4.companyid = ".$companyid." and b4.recordstatus = 3 and j4.sloccode like '%".$sloc."%' and k4.fullname like '%".$customer."%' and l4.fullname like '%".$employee."%' and m4.areaname like '%".$salesarea."%' and i4.productname like '%".$product."%'
            and SUBSTRING_INDEX(az4.marketname,'-','1') = '".$row['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az4.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az4.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
            and d4.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
            ) z2 group by addressbookid
            ) zz2
            WHERE zz2.addressbookid = zz3.addressbookid),0) AS nilaiinvoice
            ,IFNULL((select sum(nilaihpp) as nilaihpp
            FROM (
            select addressbookid,target,customertypeid,custcategoryid,customertypename,custcategoryname,fullname,sum(hpp) as nilaihpp
            FROM (select DISTINCT d1.addressbookid,0 as target,za5.customertypename,za6.custcategoryname,d1.customertypeid,d1.custcategoryid,d1.fullname,ss1.gidetailid,
            (select m1.buyprice*-m1.qty FROM productdetailhist m1 WHERE m1.gidetailid=ss1.gidetailid AND m1.qty<0) AS hpp
            from invoice a1
            join giheader b1 ON b1.giheaderid = a1.giheaderid
            join soheader c1 ON c1.soheaderid = b1.soheaderid
            join addressbook d1 ON d1.addressbookid = c1.addressbookid
            join employee e1 ON e1.employeeid = c1.employeeid
            join salesarea f1 ON f1.salesareaid = d1.salesareaid
            join sodetail g1 ON g1.soheaderid = b1.soheaderid
            join gidetail ss1 on ss1.giheaderid = b1.giheaderid
            join sloc h1 on h1.slocid = ss1.slocid
            join product i1 on i1.productid = ss1.productid
            join productplant j1 on j1.productid = i1.productid and j1.slocid=g1.slocid and j1.unitofissue=ss1.unitofmeasureid
            join materialgroup l1 on l1.materialgroupid=j1.materialgroupid
            join unitofmeasure k1 on k1.unitofmeasureid = ss1.unitofmeasureid
            join marketarea az1 on az1.marketareaid=d1.marketareaid
            left join customertype za5 on za5.customertypeid = d1.customertypeid
            left join custcategory za6 on za6.custcategoryid = d1.custcategoryid
            where a1.recordstatus = 3 and a1.invoiceno is not null and a1.invoiceno not like '%-%-%' and c1.companyid = ".$companyid." and h1.sloccode like '%".$sloc."%' and d1.fullname like '%".$customer."%' and e1.fullname like '%".$employee."%' and f1.areaname like '%".$salesarea."%' and i1.productname like '%".$product."%'
            and SUBSTRING_INDEX(az1.marketname,'-','1') = '".$row['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az1.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az1.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
            and a1.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
            and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
            )z group by addressbookid
            UNION
            select addressbookid,target,customertypeid,custcategoryid,customertypename,custcategoryname,fullname,sum(hpp) as nilaihpp from
            (select DISTINCT k2.addressbookid,0 as target,k2.customertypeid,k2.custcategoryid,za7.customertypename,za8.custcategoryname,k2.fullname,a2.notagirproid,(select p2.buyprice*-p2.qty FROM productdetailhist p2 WHERE p2.gireturdetailid=c2.gireturdetailid) AS hpp
            from notagirpro a2
            join notagir b2 on b2.notagirid=a2.notagirid
            join gireturdetail c2 on c2.gireturdetailid=a2.gireturdetailid
            join giretur d2 on d2.gireturid=b2.gireturid
            join gidetail e2 on e2.gidetailid=c2.gidetailid
            join giheader f2 on f2.giheaderid=d2.giheaderid
            join sodetail g2 on g2.sodetailid=e2.sodetailid
            join soheader h2 on h2.soheaderid=f2.soheaderid
            join product i2 on i2.productid = a2.productid
            join sloc j2 on j2.slocid = a2.slocid
            join addressbook k2 on k2.addressbookid = h2.addressbookid
            join employee l2 on l2.employeeid = h2.employeeid
            join salesarea m2 on m2.salesareaid = k2.salesareaid
            join productplant n2 on n2.productid=a2.productid and n2.slocid=a2.slocid and n2.unitofissue=a2.uomid
            join materialgroup o2 on o2.materialgroupid=n2.materialgroupid
            join unitofmeasure p2 on p2.unitofmeasureid = a2.uomid
            join marketarea az2 on az2.marketareaid=k2.marketareaid
            left join customertype za7 on za7.customertypeid = k2.customertypeid
            left join custcategory za8 on za8.custcategoryid = k2.custcategoryid
            where h2.companyid = ".$companyid." and b2.recordstatus = 3 and j2.sloccode like '%".$sloc."%' and k2.fullname like '%".$customer."%' and l2.fullname like '%".$employee."%' and m2.areaname like '%".$salesarea."%' and i2.productname like '%".$product."%'
            and SUBSTRING_INDEX(az2.marketname,'-','1') = '".$row['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az2.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az2.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
            and d2.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
            ) z1 group by addressbookid
            ) zz1
            WHERE zz1.addressbookid = zz3.addressbookid),0) AS nilaihpp,
            ifnull((select sum((ifnull(f.cashamount,0)+ifnull(f.bankamount,0)+ifnull(f.discamount,0)
            -- +ifnull(f.returnamount,0)
            +ifnull(f.obamount,0)
            )*ifnull(f.currencyrate,0))
            from cutarinv f
            join cutar g on g.cutarid=f.cutarid
            join invoice h on h.invoiceid=f.invoiceid
            join giheader i on i.giheaderid=h.giheaderid
            join soheader j on j.soheaderid=i.soheaderid
            where g.recordstatus=3 and g.companyid = ".$companyid." and g.docdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
            and j.addressbookid = zz3.addressbookid),0) as payamount
            ,ifnull((select sum(a.amount) from addresspotensi a where a.addressbookid=zz3.addressbookid),0) as potensi
            FROM (
            select addressbookid,target,customertypeid,custcategoryid,customertypename,custcategoryname,fullname
            FROM (select DISTINCT d5.addressbookid,0 as target,d5.customertypeid,d5.custcategoryid,d5.fullname,ss5.gidetailid,za9.customertypename,za10.custcategoryname
            from invoice a5
            join giheader b5 ON b5.giheaderid = a5.giheaderid
            join soheader c5 ON c5.soheaderid = b5.soheaderid
            join addressbook d5 ON d5.addressbookid = c5.addressbookid
            join employee e5 ON e5.employeeid = c5.employeeid
            join salesarea f5 ON f5.salesareaid = d5.salesareaid
            join sodetail g5 ON g5.soheaderid = b5.soheaderid
            join gidetail ss5 on ss5.giheaderid = b5.giheaderid
            join sloc h5 on h5.slocid = ss5.slocid
            join product i5 on i5.productid = ss5.productid
            join productplant j5 on j5.productid = i5.productid and j5.slocid=g5.slocid and j5.unitofissue=ss5.unitofmeasureid
            join materialgroup l5 on l5.materialgroupid=j5.materialgroupid
            join unitofmeasure k5 on k5.unitofmeasureid = ss5.unitofmeasureid
            join marketarea az5 on az5.marketareaid=d5.marketareaid
            left join customertype za9 on za9.customertypeid = d5.customertypeid
            left join custcategory za10 on za10.custcategoryid = d5.custcategoryid
            where a5.recordstatus = 3 and a5.invoiceno is not null and invoiceno not like '%-%-%' and c5.companyid = ".$companyid." and h5.sloccode like '%".$sloc."%' and d5.fullname like '%".$customer."%' and e5.fullname like '%".$employee."%' and f5.areaname like '%".$salesarea."%' and i5.productname like '%".$product."%'
            and SUBSTRING_INDEX(az5.marketname,'-','1') = '".$row['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az5.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az5.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
            and a5.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
            and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
            )z group by addressbookid
            UNION
            select addressbookid,target,customertypeid,custcategoryid,customertypename,custcategoryname,fullname from
            (select DISTINCT k6.addressbookid,0 as target,k6.customertypeid,k6.custcategoryid,k6.fullname,a6.notagirproid,za11.customertypename,za12.custcategoryname
            from notagirpro a6
            join notagir b6 on b6.notagirid=a6.notagirid
            join gireturdetail c6 on c6.gireturdetailid=a6.gireturdetailid
            join giretur d6 on d6.gireturid=b6.gireturid
            join gidetail e6 on e6.gidetailid=c6.gidetailid
            join giheader f6 on f6.giheaderid=d6.giheaderid
            join sodetail g6 on g6.sodetailid=e6.sodetailid
            join soheader h6 on h6.soheaderid=f6.soheaderid
            join product i6 on i6.productid = a6.productid
            join sloc j6 on j6.slocid = a6.slocid
            join addressbook k6 on k6.addressbookid = h6.addressbookid
            join employee l6 on l6.employeeid = h6.employeeid
            join salesarea m6 on m6.salesareaid = k6.salesareaid
            join productplant n6 on n6.productid=a6.productid and n6.slocid=a6.slocid and n6.unitofissue=a6.uomid
            join materialgroup o6 on o6.materialgroupid=n6.materialgroupid
            join unitofmeasure p6 on p6.unitofmeasureid = a6.uomid
            join marketarea az6 on az6.marketareaid=k6.marketareaid
            left join customertype za11 on za11.customertypeid = k6.customertypeid
            left join custcategory za12 on za12.custcategoryid = k6.custcategoryid
            where h6.companyid = ".$companyid." and b6.recordstatus = 3 and j6.sloccode like '%".$sloc."%' and k6.fullname like '%".$customer."%' and l6.fullname like '%".$employee."%' and m6.areaname like '%".$salesarea."%' and i6.productname like '%".$product."%'
            and SUBSTRING_INDEX(az6.marketname,'-','1') = '".$row['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az6.marketname,'-','2'),'-','-1') = '".$row1['marketname']."'
            and SUBSTRING_INDEX(SUBSTRING_INDEX(az6.marketname,'-','3'),'-','-1') = '".$row2['marketname']."'
            and d6.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
            ) z3 group by addressbookid
            ) zz3
            ) z4
            order BY z4.customertypeid desc, z4.fullname asc
          ";
          
          $dataReader5=Yii::app()->db->createCommand($sql5)->queryAll();

          $this->phpExcel->setActiveSheetIndex(0)
            ->setCellValueByColumnAndRow(0,$line,'No')
            ->setCellValueByColumnAndRow(1,$line,'Nama Customer')
            ->setCellValueByColumnAndRow(2,$line,'Tipe Customer')
            ->setCellValueByColumnAndRow(3,$line,'Kategori Customer')
            ->setCellValueByColumnAndRow(4,$line,'Potensi Market')
            ->setCellValueByColumnAndRow(5,$line,'Target')
            ->setCellValueByColumnAndRow(6,$line,'%')
            ->setCellValueByColumnAndRow(7,$line,'Penjualan-Retur')
            ->setCellValueByColumnAndRow(8,$line,'%')
            ->setCellValueByColumnAndRow(9,$line,'Pembayaran')
            ->setCellValueByColumnAndRow(10,$line,'%')
            ->setCellValueByColumnAndRow(11,$line,'GM');
          $line++;

          $i=0;$totalpotensi5=0;$totaltarget5=0;$totalinvoice5=0;$totalhpp5=0;$totalpayamount5=0;

          foreach($dataReader5 as $row5)
          {
            $i+=1;
            $this->phpExcel->setActiveSheetIndex(0)
              ->setCellValueByColumnAndRow(0,$line,$i)
              ->setCellValueByColumnAndRow(1,$line,$row5['fullname'])
              ->setCellValueByColumnAndRow(2,$line,$row5['customertypename'])
              ->setCellValueByColumnAndRow(3,$line,$row5['custcategoryname'])
              ->setCellValueByColumnAndRow(4,$line,$row5['potensi']/$per)
              ->setCellValueByColumnAndRow(5,$line,$row5['target']/$per)
              ->setCellValueByColumnAndRow(6,$line,$row5['perpotensi'])
              ->setCellValueByColumnAndRow(7,$line,$row5['nilaiinvoice']/$per)
              ->setCellValueByColumnAndRow(8,$line,$row5['pertarget'])
              ->setCellValueByColumnAndRow(9,$line,$row5['payamount']/$per)
              ->setCellValueByColumnAndRow(10,$line,$row5['perpayamount'])
              ->setCellValueByColumnAndRow(11,$line,$row5['gm']);
            $line++;

            $totalpotensi5 += ($row5['potensi']);
            $totaltarget5 += ($row5['target']);
            $totalinvoice5 += ($row5['nilaiinvoice']);
            $totalhpp5 += ($row5['nilaihpp']);
            $totalpayamount5 += ($row5['payamount']);
          }
          $gm5=0;$perpotensi5=0;$pertarget5=0;$perpayamount5=0;

          if ($totalpotensi5 != 0) {
            $perpotensi5 = (100*$totaltarget5/$totalpotensi5);
          }
          if ($totaltarget5 != 0) {
            $pertarget5 = (100*$totalinvoice5/$totaltarget5);
          }
          if ($totalinvoice5 != 0) {
            $gm5 = 100-(100*$totalhpp5/$totalinvoice5);
            $perpayamount5 = (100*$totalpayamount5/$totalinvoice5);
          }

          $totalpotensi4 += $totalpotensi5;
          $totaltarget4 += $totaltarget5;
          $totalinvoice4 += $totalinvoice5;
          $totalhpp4 += $totalhpp5;
          $totalpayamount4 += $totalpayamount5; 
          $gm4=0;$perpotensi4=0;$pertarget4=0;$perpayamount4=0;
          if ($totalpotensi4 != 0) {
            $perpotensi4 = (100*$totaltarget4/$totalpotensi4);
          }
          if ($totaltarget4 != 0) {
            $pertarget4 = (100*$totalinvoice4/$totaltarget4);
          }
          if ($totalinvoice4 != 0) {
            $gm4 = 100-(100*$totalhpp4/$totalinvoice4);
            $perpayamount4 = (100*$totalpayamount4/$totalinvoice4);
          }

          $totalpotensi3 += $totalpotensi4;
          $totaltarget3 += $totaltarget4;
          $totalinvoice3 += $totalinvoice4;
          $totalhpp3 += $totalhpp4;
          $totalpayamount3 += $totalpayamount4;

          $gm3=0;$perpotensi3=0;$pertarget3=0;$perpayamount3=0;
					if ($totalpotensi3 != 0) {
						$perpotensi3 = (100*$totaltarget3/$totalpotensi3);
					}
					if ($totaltarget3 != 0) {
						$pertarget3 = (100*$totalinvoice3/$totaltarget3);
					}
					if ($totalinvoice3 != 0) {
						$gm3 = 100-(100*$totalhpp3/$totalinvoice3);
						$perpayamount3 = (100*$totalpayamount3/$totalinvoice3);
					}

          $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("I{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("J{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("K{$line}")->applyFromArray($totalKategori);
          $this->phpExcel->getActiveSheet()->getStyle("L{$line}")->applyFromArray($totalKategori);

          $this->phpExcel->setActiveSheetIndex(0)
            ->setCellValueByColumnAndRow(1,$line,'TOTAL SUB ZONA '.$row2['marketname'])
            ->setCellValueByColumnAndRow(4,$line,$totalpotensi3/$per)
            ->setCellValueByColumnAndRow(5,$line,$totaltarget3/$per)
            ->setCellValueByColumnAndRow(6,$line,$perpotensi3)
            ->setCellValueByColumnAndRow(7,$line,$totalinvoice3/$per)
            ->setCellValueByColumnAndRow(8,$line,$pertarget3)
            ->setCellValueByColumnAndRow(9,$line,$totalpayamount3/$per)
            ->setCellValueByColumnAndRow(10,$line,$perpayamount3)
            ->setCellValueByColumnAndRow(11,$line,$gm3);
          $line++;

          $totalpotensi2 += $totalpotensi3;
					$totaltarget2 += $totaltarget3;
					$totalinvoice2 += $totalinvoice3;
					$totalhpp2 += $totalhpp3;
					$totalpayamount2 += $totalpayamount3;
        }
        $gm2=0;$perpotensi2=0;$pertarget2=0;$perpayamount2=0;
				if ($totalpotensi2 != 0) {
					$perpotensi2 = (100*$totaltarget2/$totalpotensi2);
				}
				if ($totaltarget2 != 0) {
					$pertarget2 = (100*$totalinvoice2/$totaltarget2);
				}
				if ($totalinvoice2 != 0) {
					$gm2 = 100-(100*$totalhpp2/$totalinvoice2);
					$perpayamount2 = (100*$totalpayamount2/$totalinvoice2);
				}

        $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("I{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("J{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("K{$line}")->applyFromArray($totalTipe);
        $this->phpExcel->getActiveSheet()->getStyle("L{$line}")->applyFromArray($totalTipe);

        $this->phpExcel->setActiveSheetIndex(0)
          ->setCellValueByColumnAndRow(1,$line,'TOTAL ZONA '.$row1['marketname'])
          ->setCellValueByColumnAndRow(4,$line,$totalpotensi2/$per)
          ->setCellValueByColumnAndRow(5,$line,$totaltarget2/$per)
          ->setCellValueByColumnAndRow(6,$line,$perpotensi2)
          ->setCellValueByColumnAndRow(7,$line,$totalinvoice2/$per)
          ->setCellValueByColumnAndRow(8,$line,$pertarget2)
          ->setCellValueByColumnAndRow(9,$line,$totalpayamount2/$per)
          ->setCellValueByColumnAndRow(10,$line,$perpayamount2)
          ->setCellValueByColumnAndRow(11,$line,$gm2);
        $line++;

        $totalpotensi1 += $totalpotensi2;
				$totaltarget1 += $totaltarget2;
				$totalinvoice1 += $totalinvoice2;
				$totalhpp1 += $totalhpp2;
				$totalpayamount1 += $totalpayamount2;
      }
      $gm1=0;$perpotensi1=0;$pertarget1=0;$perpayamount1=0;
			if ($totalpotensi1 != 0) {
				$perpotensi1 = (100*$totaltarget1/$totalpotensi1);
			}
			if ($totaltarget1 != 0) {
				$pertarget1 = (100*$totalinvoice1/$totaltarget1);
			}
			if ($totalinvoice1 != 0) {
				$gm1 = 100-(100*$totalhpp1/$totalinvoice1);
				$perpayamount1 = (100*$totalpayamount1/$totalinvoice1);
			}
      $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("I{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("J{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("K{$line}")->applyFromArray($totalZona);
      $this->phpExcel->getActiveSheet()->getStyle("L{$line}")->applyFromArray($totalZona);

      $this->phpExcel->setActiveSheetIndex(0)
        ->setCellValueByColumnAndRow(1,$line,'TOTAL PROVINSI '.$row['marketname'])
        ->setCellValueByColumnAndRow(4,$line,$totalpotensi1/$per)
        ->setCellValueByColumnAndRow(5,$line,$totaltarget1/$per)
        ->setCellValueByColumnAndRow(6,$line,$perpotensi1)
        ->setCellValueByColumnAndRow(7,$line,$totalinvoice1/$per)
        ->setCellValueByColumnAndRow(8,$line,$pertarget1)
        ->setCellValueByColumnAndRow(9,$line,$totalpayamount1/$per)
        ->setCellValueByColumnAndRow(10,$line,$perpayamount1)
        ->setCellValueByColumnAndRow(11,$line,$gm1);
      $line=$line+2;

      $totalpotensi += $totalpotensi1;
			$totaltarget += $totaltarget1;
			$totalinvoice += $totalinvoice1;
			$totalhpp += $totalhpp1;
			$totalpayamount += $totalpayamount1;
    }
    $gm=0;$perpotensi=0;$pertarget=0;$perpayamount=0;
		if ($totalpotensi != 0) {
			$perpotensi = (00*$totaltarget/$totalpotensi);
		}
		if ($totaltarget != 0) {
			$pertarget = (00*$totalinvoice/$totaltarget);
		}
		if ($totalinvoice != 0) {
			$gm = 00-(00*$totalhpp/$totalinvoice);
			$perpayamount = (00*$totalpayamount/$totalinvoice);
		}
    $this->phpExcel->getActiveSheet()->getStyle("B{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("E{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("F{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("G{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("H{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("I{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("J{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("K{$line}")->applyFromArray($grandTotal);
    $this->phpExcel->getActiveSheet()->getStyle("L{$line}")->applyFromArray($grandTotal);

    $this->phpExcel->setActiveSheetIndex(0)
      ->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
      ->setCellValueByColumnAndRow(4,$line,$totalpotensi/$per)
      ->setCellValueByColumnAndRow(5,$line,$totaltarget/$per)
      ->setCellValueByColumnAndRow(6,$line,$perpotensi)
      ->setCellValueByColumnAndRow(7,$line,$totalinvoice/$per)
      ->setCellValueByColumnAndRow(8,$line,$pertarget)
      ->setCellValueByColumnAndRow(9,$line,$totalpayamount/$per)
      ->setCellValueByColumnAndRow(10,$line,$perpayamount)
      ->setCellValueByColumnAndRow(11,$line,$gm);
    $line++;
    $this->getFooterXLS($this->phpExcel);
  }
	//45
	
	//46
	
	//47
	
	//48
	public function RekapHppActualVsBomXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname = 'rekaphppactualvsbom';	
		parent::actionDownxls();

		$sql = "SELECT DISTINCT d.slocid,d.sloccode
						FROM productoutputfg a
						JOIN productoutput b ON b.productoutputid=a.productoutputid
						JOIN product c ON c.productid=a.productid
						JOIN sloc d ON d.slocid=a.slocid
						JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
						JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
						JOIN storagebin g ON g.storagebinid=a.storagebinid
						WHERE b.companyid = ".$companyid." AND b.recordstatus = getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.sloccode LIKE '%".$sloc."%' AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
						ORDER BY sloccode";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();

		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
			
		$line = 5;
		$qty2 = 0;
		$buyprice2 = 0;
		$jumlah2 = 0;
		$qtybom2 = 0;
		$buypricebom2 = 0;
		$jumlahbom2 = 0;

		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GUDANG : '.$row['sloccode']);
			$line+=2;

			$sql1 = "select distinct productid,productname, productoutputfgid, bomid, uomcode, sum(qty) as qty, sum(qty*buyprice)/sum(qty) as buyprice, sum(jumlah) as jumlah,productoutputdate
			from (SELECT DISTINCT c.productid,c.productname,b.productoutputid,b.productoutputno,b.productoutputdate,a.productoutputfgid,j.qty,j.buyprice,j.qty * j.buyprice as jumlah,h.unitofmeasureid,h.uomcode,i.bomid,i.bomversion
					FROM productoutputfg a
					JOIN productoutput b ON b.productoutputid=a.productoutputid
					JOIN product c ON c.productid=a.productid
					JOIN sloc d ON d.slocid=a.slocid
					JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
					JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
					JOIN storagebin g ON g.storagebinid=a.storagebinid
					JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
					JOIN billofmaterial i ON i.bomid=a.bomid
					JOIN productdetailhist j on j.productoutputfgid=a.productoutputfgid AND j.productid=a.productid and j.qty > 0
					WHERE b.companyid = ".$companyid." AND b.recordstatus=3 AND c.productname LIKE '%".$product."%' AND d.slocid = ".$row['slocid']." AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
					ORDER BY productoutputdate,productoutputno,productname) z
					group by productname";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

			$qty1 = 0;
			$buyprice1 = 0;
			$jumlah1 = 0;
			$qtybom1 = 0;
			$buypricebom1 = 0;
			$jumlahbom1 = 0;
			foreach($dataReader1 as $row1)
			{
				$sql2 = "SELECT ".$row1['qty']." as qtybom,sum(buyprice) as buypricebom,".$row1['qty']." * sum(buyprice) as jumlahbom
				    FROM (SELECT a.qty * (SELECT r.buyprice FROM productdetail r WHERE r.productid=a.productid AND r.slocid=e.slocid AND r.unitofmeasureid=a.uomid Limit 1) as buyprice
								FROM bomdetail a
								JOIN billofmaterial b ON b.bomid=a.bomid
								JOIN product c ON c.productid=a.productid
								LEFT JOIN productplant e ON e.productid=a.productid AND e.unitofissue=a.uomid AND e.slocid=(SELECT q.slocid FROM productoutputfg q WHERE q.productoutputfgid = ".$row1['productoutputfgid'].")
								LEFT JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
								LEFT JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
								WHERE c.isstock = 1 AND a.bomid = ".$row1['bomid']."
						UNION
								SELECT k.qty as buyprice
									FROM bomdetail k
									JOIN billofmaterial l ON l.bomid=k.bomid
									JOIN product m ON m.productid=k.productid
									JOIN productoutputfg n ON n.bomid=l.bomid
									JOIN unitofmeasure o ON o.unitofmeasureid=k.uomid
									WHERE m.isstock = 0 AND n.productoutputfgid = ".$row1['productoutputfgid'].") z
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();

				foreach($dataReader2 as $row2)
				{
					
					$foh = "(SELECT if(e.isfohulbom=0,if(e.productname LIKE '%busa balokan%' OR e.productname LIKE '%busa cylinder%',if(e.tinggi>0,(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * ((e.panjang * e.lebar * e.tinggi)/1000000) * e.density,(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * getVolumeCylinder(e.panjang,e.lebar/2) * e.density),(SELECT p.foh FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * f.cycletime),(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=f.bomid AND y.productname LIKE 'FOH %'))
						FROM productoutputfg a
						JOIN productoutput b ON b.productoutputid=a.productoutputid
						JOIN productplant c ON c.productid=a.productid AND c.slocid=a.slocid AND c.unitofissue=a.uomid
						JOIN sloc d ON d.slocid=a.slocid
						JOIN product e ON e.productid=a.productid
						JOIN billofmaterial f ON f.bomid=a.bomid 
						WHERE a.productoutputfgid = ".$row1['productoutputfgid']." AND b.companyid = ".$companyid.")
					";

					$ul = "(SELECT if(e.isfohulbom=0,if(e.productname LIKE '%busa balokan%' OR e.productname LIKE '%busa cylinder%',if(e.tinggi>0,(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * ((e.panjang * e.lebar * e.tinggi)/1000000) * e.density,(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * getVolumeCylinder(e.panjang,e.lebar/2) * e.density),(SELECT p.ul FROM fohul p WHERE p.recordstatus=3 and p.plantid=d.plantid AND p.mgprocessid=c.mgprocessid and month(p.perioddate) = month('".$row1['productoutputdate']."') AND year(p.perioddate) = year('".$row1['productoutputdate']."') ) * f.cycletime),(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=f.bomid AND y.productname LIKE 'UL %'))
						FROM productoutputfg a
						JOIN productoutput b ON b.productoutputid=a.productoutputid
						JOIN productplant c ON c.productid=a.productid AND c.slocid=a.slocid AND c.unitofissue=a.uomid
						JOIN sloc d ON d.slocid=a.slocid
						JOIN product e ON e.productid=a.productid
						JOIN billofmaterial f ON f.bomid=a.bomid 
						WHERE a.productoutputfgid = ".$row1['productoutputfgid']." AND b.companyid = ".$companyid.")
					";

					$cad = "(SELECT if(isfohulbom=0,IFNULL((sum(qtydetail*price)) * 0.03,0),cadang)
									from (SELECT ifnull(a.qty/b.qtyoutput,0) as qtydetail,a.productid,e.isfohulbom,ifnull(c.buyprice,0) as price,(SELECT w.qty FROM bomdetail w JOIN product y ON y.productid=w.productid WHERE w.bomid=b.bomid AND y.productname LIKE 'CADANGAN %') AS cadang
									from productoutputdetail a
									join productoutputfg b on b.productoutputfgid = a.productoutputfgid
									join productdetailhist c on c.productoutputdetailid=a.productoutputdetailid
									join product d on d.productid = a.productid
									join product e on e.productid = b.productid
									where a.productoutputfgid = ".$row1['productoutputfgid']." and d.isstock = 1
									AND (a.bomid IS NULL OR a.bomid = 0)) z)
					";
				
					$sql3 = "select productname,sum(qty) as qty,sum(buyprice) as buyprice,sum(jumlah) as jumlah,unitofmeasureid,uomcode,isstock,sum(qtybom) as qtybom,if(sum(qtybom)>0,sum(jumlahbom)/sum(qtybom),0) as buypricebom,sum(jumlahbom) as jumlahbom
							FROM (select c.productname,-sum(j.qty) as qty,-sum(j.qty * j.buyprice)/-sum(j.qty) as buyprice,-sum(j.qty * j.buyprice) as jumlah,h.unitofmeasureid,h.uomcode,c.isstock,0 as qtybom,0 as jumlahbom
									FROM productoutputdetail a
									JOIN productoutput b ON b.productoutputid=a.productoutputid
									join productoutputfg p on p.productoutputid = b.productoutputid and p.productoutputfgid = a.productoutputfgid 
									JOIN product c ON c.productid=a.productid
									JOIN sloc d ON d.slocid=a.toslocid
									JOIN productplant e ON e.productid=a.productid AND e.slocid=a.toslocid AND e.unitofissue=a.uomid
									JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
									JOIN storagebin g ON g.storagebinid=a.storagebinid
									JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
									JOIN productdetailhist j on j.productoutputdetailid=a.productoutputdetailid AND j.productid=a.productid
									WHERE c.isstock = 1 
									and p.productid = {$row1['productid']} and b.recordstatus=3
									and b.productoutputdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "' and b.companyid={$companyid}
									GROUP BY productname
							UNION
									SELECT m.productname,sum(n.qtyoutput) as qty,(case when m.productname like 'FOH%' then ".$foh." else case when m.productname like 'UL%' then ".$ul." else case when m.productname like 'CAD%' then ".$cad." else 0 end end end) as buyprice,sum(n.qtyoutput * case when m.productname like 'FOH%' then ".$foh." else case when m.productname like 'UL%' then ".$ul." else case when m.productname like 'CAD%' then ".$cad." else 0 end end end) AS jumlah,o.unitofmeasureid,o.uomcode,m.isstock,sum(n.qtyoutput) as qtybom,sum(n.qtyoutput * k.qty) as jumlahbom
									FROM bomdetail k
									JOIN billofmaterial l ON l.bomid=k.bomid
									JOIN product m ON m.productid=k.productid
									JOIN productoutputfg n ON n.bomid=l.bomid
									join productoutput p on p.productoutputid = n.productoutputid
									JOIN unitofmeasure o ON o.unitofmeasureid=k.uomid
									WHERE m.isstock = 0 
									-- AND n.productoutputfgid = ".$row1['productoutputfgid']."
									and l.productid = {$row1['productid']}
									and p.productoutputdate between '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "' and p.companyid={$companyid}
									GROUP BY productname
							UNION
									SELECT c.productname,0 as qty,0 as buyprice,0 as jumlah,h.unitofmeasureid,h.uomcode,c.isstock,".$row1['qty']." * a.qty as qtybom,
									".$row1['qty']." * a.qty * (SELECT r.buyprice FROM productdetail r WHERE r.productid=a.productid AND r.slocid=e.slocid AND r.unitofmeasureid=a.uomid Limit 1) as jumlahbom
									FROM bomdetail a
									JOIN billofmaterial b ON b.bomid=a.bomid
									JOIN product c ON c.productid=a.productid
									LEFT JOIN productplant e ON e.productid=a.productid AND e.unitofissue=a.uomid AND e.slocid=(SELECT q.slocid FROM productoutputfg q WHERE q.productoutputfgid = ".$row1['productoutputfgid'].")
									LEFT JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
									LEFT JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
									WHERE c.isstock = 1 AND a.bomid in (".$row1['bomid'].")
									GROUP BY productname
							) z
							GROUP BY productname,uomcode
							ORDER BY isstock desc, productname";
					$dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();

					$this->phpExcel->getActiveSheet()->getStyle("A{$line}:J{$line}")->getFont()->setBold(true);
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$row1['productname'])
						->setCellValueByColumnAndRow(1,$line,$row1['uomcode'])
						->setCellValueByColumnAndRow(2,$line,$row1['qty'])
						->setCellValueByColumnAndRow(3,$line,$row1['buyprice']/$per)
						->setCellValueByColumnAndRow(4,$line,$row1['jumlah']/$per)
						->setCellValueByColumnAndRow(5,$line,$row2['qtybom'])
						->setCellValueByColumnAndRow(6,$line,$row2['buypricebom']/$per)
						->setCellValueByColumnAndRow(7,$line,$row2['jumlahbom']/$per)
						->setCellValueByColumnAndRow(8,$line,($row1['qty']/$row2['qtybom']))
						->setCellValueByColumnAndRow(9,$line,($row2['jumlahbom']== 0 ? '0' : $row1['jumlah']/$row2['jumlahbom']));
					$line ++;

					foreach($dataReader3 as $row3)
					{
						$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,$row3['productname'])
						->setCellValueByColumnAndRow(1,$line,$row3['uomcode'])
						->setCellValueByColumnAndRow(2,$line,$row3['qty'])
						->setCellValueByColumnAndRow(3,$line,$row3['buyprice']/$per)
						->setCellValueByColumnAndRow(4,$line,$row3['jumlah']/$per)
						->setCellValueByColumnAndRow(5,$line,$row3['qtybom'])
						->setCellValueByColumnAndRow(6,$line,$row3['buypricebom']/$per)
						->setCellValueByColumnAndRow(7,$line,$row3['jumlahbom']/$per)
						->setCellValueByColumnAndRow(8,$line,($row3['qtybom']== 0 ? '0' : $row3['qty']/$row3['qtybom']))
						->setCellValueByColumnAndRow(9,$line,($row3['jumlahbom']== 0 ? '0' : $row3['jumlah']/$row3['jumlahbom']));
						$line++;
					}
					$line++; 

					$qty1 += $row1['qty'];
					$buyprice1 += $row1['buyprice'];
					$jumlah1 += $row1['jumlah'];
					$qtybom1 += $row2['qtybom'];
					$buypricebom1 += $row2['buypricebom'];
					$jumlahbom1 += $row2['jumlahbom'];

				}
			}
			$this->phpExcel->getActiveSheet()->getStyle("A{$line}:J{$line}")->getFont()->setBold(true);
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL GUDANG : '.$row['sloccode'])
				->setCellValueByColumnAndRow(2,$line,$qty1)
				->setCellValueByColumnAndRow(3,$line,$buyprice1/$per)
				->setCellValueByColumnAndRow(4,$line,$jumlah1/$per)
				->setCellValueByColumnAndRow(5,$line,$qtybom1)
				->setCellValueByColumnAndRow(6,$line,$buypricebom1/$per)
				->setCellValueByColumnAndRow(7,$line,$jumlahbom1/$per);
			$line+=2;

			$qty2 += $qty1;
			$buyprice2 += $buyprice1;
			$jumlah2 += $jumlah1;
			$qtybom2 += $qtybom1;
			$buypricebom2 += $buypricebom1;
			$jumlahbom2 += $jumlahbom1;
		}
		$this->phpExcel->getActiveSheet()->getStyle("A{$line}:J{$line}")->getFont()->setBold(true);
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'TOTAL PRODUKSI')
			->setCellValueByColumnAndRow(2,$line,$qty2)
			->setCellValueByColumnAndRow(3,$line,$buyprice2/$per)
			->setCellValueByColumnAndRow(4,$line,$jumlah2/$per)
			->setCellValueByColumnAndRow(5,$line,$qtybom2)
			->setCellValueByColumnAndRow(6,$line,$buypricebom2/$per)
			->setCellValueByColumnAndRow(7,$line,$jumlahbom2/$per);
		$this->getFooterXLS($this->phpExcel);
	}
/*	public function RekapHppActualVsBomXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
	$this->menuname = 'rekaphppactualvsbom';
	parent::actionDownxls();

	$sql = "SELECT DISTINCT d.slocid,d.sloccode
	FROM productoutputfg a
	JOIN productoutput b ON b.productoutputid=a.productoutputid
	JOIN product c ON c.productid=a.productid
	JOIN sloc d ON d.slocid=a.slocid
	JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
	JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
	JOIN storagebin g ON g.storagebinid=a.storagebinid
	WHERE b.companyid = ".$companyid." AND b.recordstatus = getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.sloccode LIKE '%".$sloc."%' AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
	ORDER BY sloccode";
	$dataReader=Yii::app()->db->createCommand($sql)->queryAll();

	$this->phpExcel->setActiveSheetIndex(0)
	->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
	->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
	->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));

	$line = 5;
	$qty2 = 0;
	$buyprice2 = 0;
	$jumlah2 = 0;
	$qtybom2 = 0;
	$buypricebom2 = 0;
	$jumlahbom2 = 0;

	foreach($dataReader as $row)
	{
	$this->phpExcel->setActiveSheetIndex(0)
	->setCellValueByColumnAndRow(0,$line,'GUDANG : '.$row['sloccode']);
	$line++;

	$sql1 = "select distinct productid,productname, productoutputfgid, bomid, uomcode, sum(qty) as qty, sum(qty*buyprice)/sum(qty) as buyprice, sum(jumlah) as jumlah
	from (SELECT DISTINCT c.productid,c.productname,b.productoutputid,b.productoutputno,b.productoutputdate,a.productoutputfgid,j.qty,j.buyprice,j.qty * j.buyprice as jumlah,h.unitofmeasureid,h.uomcode,i.bomid,i.bomversion
	FROM productoutputfg a
	JOIN productoutput b ON b.productoutputid=a.productoutputid
	JOIN product c ON c.productid=a.productid
	JOIN sloc d ON d.slocid=a.slocid
	JOIN productplant e ON e.productid=a.productid AND e.slocid=a.slocid AND e.unitofissue=a.uomid
	JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
	JOIN storagebin g ON g.storagebinid=a.storagebinid
	JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
	JOIN billofmaterial i ON i.bomid=a.bomid
	JOIN productdetailhist j on j.productoutputfgid=a.productoutputfgid AND j.productid=a.productid and j.qty > 0
	WHERE b.companyid = ".$companyid." AND b.recordstatus=getwfmaxstatbywfname('appop') AND c.productname LIKE '%".$product."%' AND d.slocid = ".$row['slocid']." AND f.description LIKE '%".$materialgroup."%' AND g.description LIKE '%".$storagebin."%' AND b.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
	ORDER BY productoutputdate,productoutputno,productname) z
	group by productname";
	$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

	$qty1 = 0;
	$buyprice1 = 0;
	$jumlah1 = 0;
	$qtybom1 = 0;
	$buypricebom1 = 0;
	$jumlahbom1 = 0;
	foreach($dataReader1 as $row1)
	{
	$sql2 = "SELECT ".$row1['qty']." as qtybom,sum(buyprice) as buypricebom,".$row1['qty']." * sum(buyprice) as jumlahbom
	FROM (SELECT a.qty * (SELECT r.buyprice FROM productdetail r WHERE r.productid=a.productid AND r.slocid=e.slocid AND r.unitofmeasureid=a.uomid Limit 1) as buyprice
	FROM bomdetail a
	JOIN billofmaterial b ON b.bomid=a.bomid
	JOIN product c ON c.productid=a.productid
	LEFT JOIN productplant e ON e.productid=a.productid AND e.unitofissue=a.uomid AND e.slocid=(SELECT q.slocid FROM productoutputfg q WHERE q.productoutputfgid = ".$row1['productoutputfgid'].")
	LEFT JOIN materialgroup f ON f.materialgroupid=e.materialgroupid
	LEFT JOIN unitofmeasure h ON h.unitofmeasureid=a.uomid
	WHERE c.isstock = 1 AND a.bomid = ".$row1['bomid']."
	UNION
	SELECT k.qty as buyprice
	FROM bomdetail k
	JOIN billofmaterial l ON l.bomid=k.bomid
	JOIN product m ON m.productid=k.productid
	JOIN productoutputfg n ON n.bomid=l.bomid
	JOIN unitofmeasure o ON o.unitofmeasureid=k.uomid
	WHERE m.isstock = 0 AND n.productoutputfgid = ".$row1['productoutputfgid'].") z
	";
	$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();

	foreach($dataReader2 as $row2)
	{
	$this->phpExcel->setActiveSheetIndex(0)
	->setCellValueByColumnAndRow(0,$line,$row1['productname'])
	->setCellValueByColumnAndRow(1,$line,$row1['uomcode'])
	->setCellValueByColumnAndRow(2,$line,$row1['qty'])
	->setCellValueByColumnAndRow(3,$line,$row1['buyprice']/$per)
	->setCellValueByColumnAndRow(4,$line,$row1['jumlah']/$per)
	->setCellValueByColumnAndRow(5,$line,$row2['qtybom'])
	->setCellValueByColumnAndRow(6,$line,$row2['buypricebom']/$per)
	->setCellValueByColumnAndRow(7,$line,$row2['jumlahbom']/$per);
	$line ++;

	$qty1 += $row1['qty'];
	$buyprice1 += $row1['buyprice'];
	$jumlah1 += $row1['jumlah'];
	$qtybom1 += $row2['qtybom'];
	$buypricebom1 += $row2['buypricebom'];
	$jumlahbom1 += $row2['jumlahbom'];

	}
	}
	$this->phpExcel->setActiveSheetIndex(0)
	->setCellValueByColumnAndRow(0,$line,'TOTAL GUDANG : '.$row['sloccode'])
	->setCellValueByColumnAndRow(2,$line,$qty1)
	//->setCellValueByColumnAndRow(3,$line,$buyprice1/$per)
	->setCellValueByColumnAndRow(4,$line,$jumlah1/$per)
	->setCellValueByColumnAndRow(5,$line,$qtybom1)
	//->setCellValueByColumnAndRow(6,$line,$buypricebom1/$per)
	->setCellValueByColumnAndRow(7,$line,$jumlahbom1/$per);
	$line+=2;

	$qty2 += $qty1;
	$buyprice2 += $buyprice1;
	$jumlah2 += $jumlah1;
	$qtybom2 += $qtybom1;
	$buypricebom2 += $buypricebom1;
	$jumlahbom2 += $jumlahbom1;
	}
	$this->phpExcel->setActiveSheetIndex(0)
	->setCellValueByColumnAndRow(0,$line,'TOTAL PRODUKSI')
	->setCellValueByColumnAndRow(2,$line,$qty2)
	//->setCellValueByColumnAndRow(3,$line,$buyprice2/$per)
	->setCellValueByColumnAndRow(4,$line,$jumlah2/$per)
	->setCellValueByColumnAndRow(5,$line,$qtybom2)
	//->setCellValueByColumnAndRow(6,$line,$buypricebom2/$per)
	->setCellValueByColumnAndRow(7,$line,$jumlahbom2/$per);
	$this->getFooterXLS($this->phpExcel);
	}
*/	
	//49
	public function RekapPerformaProdukXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname = 'rekapperformaproduk';
		parent::actionDownxls();
		ini_set('max_execution_time', 200);

		$sql = "SELECT p.productid,p.productname,materialtypecode,(SELECT g.groupname FROM productplant p2 JOIN materialgroup m2 ON m2.materialgroupid=p2.materialgroupid JOIN groupkasta g ON g.groupkastaid=m2.groupkastaid WHERE p2.recordstatus = 1 AND p2.productid=p.productid LIMIT 1) as kasta
				FROM product p 
				JOIN materialtype m ON m.materialtypeid=p.materialtypeid
				WHERE p.isstock = 1
				AND p.materialtypeid IN (1,3,4,14,15,16,19,20,22,24,25,27,28,30)
				ORDER BY p.productid ASC
				-- Limit 500
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();

		$this->phpExcel->setActiveSheetIndex(0)
		->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
		->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
		->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
		
		$this->phpExcel->setActiveSheetIndex(0)
			->mergeCells('A4:A5')
			->mergeCells('B4:B5')
			->mergeCells('C4:C5')
			->mergeCells('D4:D5')
			->setCellValueByColumnAndRow(0,4,'NO.')
			->setCellValueByColumnAndRow(1,4,'NAMA BARANG');

		$line=6;$i=0;

		foreach($dataReader as $row)
		{
			$com = "";
			if ($companyid > 0){$com = " AND p.companyid = {$companyid} ";}
			$i=$i+1;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row['productname'])
				->setCellValueByColumnAndRow(2,$line,$row['materialtypecode'])
				->setCellValueByColumnAndRow(3,$line,$row['kasta'])
				;
			
			$sql1 = "SELECT p.plantid,p.plantcode
					FROM plant p
					WHERE p.recordstatus = 1 AND p.nourut > 0 {$com}
					ORDER BY p.nourut ASC
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();
			
			$column=4;$qtysaldoawal1=0;$qtyproduksi1=0;$qtyjual1=0;$totalhpp1=0;$totaljual1=0;

			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->mergeCellsByColumnAndRow($column,4,$column+7,4)
					->setCellValueByColumnAndRow($column,4,$row1['plantcode']);
				
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow($column,5,'Saldo Awal')
					->setCellValueByColumnAndRow($column+1,5,'Qty Produksi')
					->setCellValueByColumnAndRow($column+2,5,'Qty Jual')
					->setCellValueByColumnAndRow($column+3,5,'HPP/Unit')
					->setCellValueByColumnAndRow($column+4,5,'Total HPP')
					->setCellValueByColumnAndRow($column+5,5,'Jual/Unit')
					->setCellValueByColumnAndRow($column+6,5,'Total Jual')
					->setCellValueByColumnAndRow($column+7,5,'GM');

				$sql2 = "SELECT ifnull(sum(p2.qty),0)
						FROM productdetailhist p2
						JOIN sloc s ON s.slocid=p2.slocid
						JOIN plant p5 ON p5.plantid=s.plantid
						WHERE p2.productid = {$row['productid']} AND p5.plantid = {$row1['plantid']} AND p2.buydate < '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "'
				";
				$qtysaldoawal=Yii::app()->db->createCommand($sql2)->queryScalar();

				$sql3 = "SELECT ifnull(sum(p3.qtyoutput),0)
						FROM productoutputfg p3
						JOIN productoutput p4 ON p4.productoutputid=p3.productoutputid
						JOIN sloc s2 ON s2.slocid=p3.slocid
						JOIN plant p6 ON p6.plantid=s2.plantid
						WHERE p3.productid = {$row['productid']} AND p4.recordstatus=3 AND p6.plantid = {$row1['plantid']} AND p4.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
				";
				$qtyproduksi=Yii::app()->db->createCommand($sql3)->queryScalar();

				$sql4 = "SELECT *,IFNULL(totalhpp/qtyjual,0) AS hppunit,IFNULL(totaljual/qtyjual,0) AS jualunit
						FROM (SELECT IFNULL(SUM(qty),0) AS qtyjual,IFNULL(SUM(tothpp),0) AS totalhpp,IFNULL(SUM(totjual),0) AS totaljual
						FROM (SELECT IFNULL(g.qty,0) AS qty,IFNULL((SELECT p.buyprice*g.qty FROM productdetailhist p WHERE p.gidetailid=g.gidetailid and p.qty<0),0) AS tothpp,IFNULL(getamountdiscso(g2.soheaderid,g.sodetailid,g.qty),0) AS totjual
						FROM gidetail g
						JOIN giheader g2 ON g2.giheaderid=g.giheaderid
						JOIN invoice i ON i.giheaderid=g2.giheaderid 
						JOIN sloc s ON s.slocid=g.slocid
						WHERE i.recordstatus = 3 AND s.plantid = {$row1['plantid']}
						AND g.productid = {$row['productid']} AND i.invoicedate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
						UNION
						SELECT IFNULL(-1*n.qty,0) AS qty,IFNULL((select -1*p2.buyprice*n.qty FROM productdetailhist p2 WHERE p2.gireturdetailid=n.gireturdetailid),0) AS tothpp,IFNULL((-1*n.qty*n.price),0) AS totjual
						FROM notagirpro n
						JOIN notagir n2 ON n2.notagirid=n.notagirid 
						JOIN sloc s2 ON s2.slocid=n.slocid 
						WHERE n2.recordstatus = 3 AND s2.plantid = {$row1['plantid']}
						AND n.productid = {$row['productid']} AND n2.docdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "'
						) z) zz
				";
				$dataReader4=Yii::app()->db->createCommand($sql4)->queryRow();
				
				$qtyjual=$dataReader4['qtyjual'];
				$hppunit=$dataReader4['hppunit'];
				$totalhpp=$dataReader4['totalhpp'];
				$jualunit=$dataReader4['jualunit'];
				$totaljual=$dataReader4['totaljual'];
				
				$gm=0; if ($totaljual <> 0) {$gm=100*($totaljual-$totalhpp)/$totaljual;}
					
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow($column,$line,$qtysaldoawal)
					->setCellValueByColumnAndRow($column+1,$line,$qtyproduksi)
					->setCellValueByColumnAndRow($column+2,$line,$qtyjual)
					->setCellValueByColumnAndRow($column+3,$line,$hppunit)
					->setCellValueByColumnAndRow($column+4,$line,$totalhpp)
					->setCellValueByColumnAndRow($column+5,$line,$jualunit)
					->setCellValueByColumnAndRow($column+6,$line,$totaljual)
					->setCellValueByColumnAndRow($column+7,$line,$gm);
				
				$column = $column + 8;
				
				$qtysaldoawal1 += $qtysaldoawal;
				$qtyproduksi1 += $qtyproduksi;
				$qtyjual1 += $qtyjual;
				$totalhpp1 += $totalhpp;
				$totaljual1 += $totaljual;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->mergeCellsByColumnAndRow($column,4,$column+7,4)
				->setCellValueByColumnAndRow($column,4,'TOTAL');
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow($column,5,'Saldo Awal')
				->setCellValueByColumnAndRow($column+1,5,'Qty Produksi')
				->setCellValueByColumnAndRow($column+2,5,'Qty Jual')
				->setCellValueByColumnAndRow($column+3,5,'HPP/Unit')
				->setCellValueByColumnAndRow($column+4,5,'Total HPP')
				->setCellValueByColumnAndRow($column+5,5,'Jual/Unit')
				->setCellValueByColumnAndRow($column+6,5,'Total Jual')
				->setCellValueByColumnAndRow($column+7,5,'GM');
			
			
			$hppunit1=0;$jualunit1=0; if ($qtyjual1 <> 0) {$hppunit1=$totalhpp1/$qtyjual1;$jualunit1=$totaljual1/$qtyjual1;}
			$gm1=0; if ($totaljual1 <> 0) {$gm1=100*($totaljual1-$totalhpp1)/$totaljual1;}
				
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow($column,$line,$qtysaldoawal1)
				->setCellValueByColumnAndRow($column+1,$line,$qtyproduksi1)
				->setCellValueByColumnAndRow($column+2,$line,$qtyjual1)
				->setCellValueByColumnAndRow($column+3,$line,$hppunit1)
				->setCellValueByColumnAndRow($column+4,$line,$totalhpp1)
				->setCellValueByColumnAndRow($column+5,$line,$jualunit1)
				->setCellValueByColumnAndRow($column+6,$line,$totaljual1)
				->setCellValueByColumnAndRow($column+7,$line,$gm1)
				;
				
			$line ++;
		}
		$this->getFooterXLS($this->phpExcel);
	}
	//50
	public function RekapProdukDariKainXLS($companyid,$sloc,$materialgroup,$storagebin,$product,$productcollectid,$account,$startacccode,$endacccode,$keluar3,$startdate,$enddate,$per)
	{
		$this->menuname = 'rekapprodukdarikain';
		parent::actionDownxls();
		$com = "";
		if ($companyid > 0){$com = " AND p3.companyid = {$companyid} ";}

		$sql = "SELECT DISTINCT p.productid,p.productname
				FROM product p
				LEFT JOIN productoutputdetail p2 ON p2.productid=p.productid 
				JOIN productoutput p3 ON p3.productoutputid=p2.productoutputid
				JOIN sloc s ON s.slocid=p2.fromslocid
				WHERE p.productname LIKE '%KAIN%' AND p.productname NOT LIKE '%WIP%' AND p.productname NOT LIKE 'KAIN POTONGAN%' AND s.sloccode LIKE '%BB%' AND p3.recordstatus=3 AND p3.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "' {$com}
		";
		$dataReader=Yii::app()->db->createCommand($sql)->queryAll();

		$this->phpExcel->setActiveSheetIndex(0)
		->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
		->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
		->setCellValueByColumnAndRow(3,1,GetCompanyCode($companyid));
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,4,'NO.')
			->setCellValueByColumnAndRow(1,4,'NAMA BARANG');
				
/*		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow($column,5,'Saldo Awal')
			->setCellValueByColumnAndRow($column+1,5,'Qty Produksi')
			->setCellValueByColumnAndRow($column+2,5,'Qty Jual')
			->setCellValueByColumnAndRow($column+3,5,'HPP/Unit')
			->setCellValueByColumnAndRow($column+4,5,'Total HPP')
			->setCellValueByColumnAndRow($column+5,5,'Jual/Unit')
			->setCellValueByColumnAndRow($column+6,5,'Total Jual')
			->setCellValueByColumnAndRow($column+7,5,'GM');
*/
		$line=5;$i=0;

		foreach($dataReader as $row)
		{
			$sql1 = "SELECT DISTINCT p3.productid,p3.bomid,p4.productname
					FROM productoutputdetail p 
					JOIN productoutput p2 ON p2.productoutputid=p.productoutputid 
					JOIN productoutputfg p3 ON p3.productoutputfgid=p.productoutputfgid 
					JOIN product p4 ON p4.productid=p3.productid
					WHERE p2.recordstatus=3 AND p2.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "' {$com}
					AND p.productid = {$row['productid']}
			";
			$dataReader1=Yii::app()->db->createCommand($sql1)->queryAll();

			foreach($dataReader1 as $row1)
			{
				$sql2 = "SELECT DISTINCT p3.productid,p3.bomid,p4.productname
						FROM productoutputdetail p 
						JOIN productoutput p2 ON p2.productoutputid=p.productoutputid 
						JOIN productoutputfg p3 ON p3.productoutputfgid=p.productoutputfgid 
						JOIN product p4 ON p4.productid=p3.productid
						WHERE p2.recordstatus=3 AND p2.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "' {$com}
						AND p.productid = {$row1['productid']} AND p.bomid = {$row1['bomid']}
				";
				$dataReader2=Yii::app()->db->createCommand($sql2)->queryAll();

				foreach($dataReader2 as $row2)
				{
					$sql3 = "SELECT DISTINCT p3.productid,p3.bomid,p4.productname
							FROM productoutputdetail p 
							JOIN productoutput p2 ON p2.productoutputid=p.productoutputid 
							JOIN productoutputfg p3 ON p3.productoutputfgid=p.productoutputfgid 
							JOIN product p4 ON p4.productid=p3.productid
							WHERE p2.recordstatus=3 AND p2.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "' {$com}
							AND p.productid = {$row2['productid']} AND p.bomid = {$row2['bomid']}
					";
					$dataReader3=Yii::app()->db->createCommand($sql3)->queryAll();

					foreach($dataReader3 as $row3)
					{
						$sql4 = "SELECT DISTINCT p3.productid,p3.bomid,p4.productname
								FROM productoutputdetail p 
								JOIN productoutput p2 ON p2.productoutputid=p.productoutputid 
								JOIN productoutputfg p3 ON p3.productoutputfgid=p.productoutputfgid 
								JOIN product p4 ON p4.productid=p3.productid
								WHERE p2.recordstatus=3 AND p2.productoutputdate BETWEEN '" . date(Yii::app()->params['datetodb'], strtotime($startdate)) . "' AND '" . date(Yii::app()->params['datetodb'], strtotime($enddate)) . "' {$com}
								AND p.productid = {$row3['productid']} AND p.bomid = {$row3['bomid']}
						";
						$dataReader4=Yii::app()->db->createCommand($sql4)->queryAll();

						foreach($dataReader4 as $row4)
						{
							$i=$i+1;
							$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,$i)
								->setCellValueByColumnAndRow(1,$line,$row['productname'])
								->setCellValueByColumnAndRow(2,$line,$row1['productname'])
								->setCellValueByColumnAndRow(3,$line,$row2['productname'])
								->setCellValueByColumnAndRow(4,$line,$row3['productname'])
								->setCellValueByColumnAndRow(5,$line,$row4['productname'])
							;
						
							$line ++;
						}
					}
				}
			}
		}
		$this->getFooterXLS($this->phpExcel);
	}
}
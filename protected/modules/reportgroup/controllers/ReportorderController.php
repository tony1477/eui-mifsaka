<?php
class ReportorderController extends Controller
{
	public $menuname = 'reportorder';
	public function actionIndex()
	{
		$this->renderPartial('index',array());
	}
		
	public function actionDownPDF()
	{
	  parent::actionDownload();
		if (isset($_GET['lro']) && isset($_GET['company']) && isset($_GET['sloc']) && isset($_GET['customer']) && isset($_GET['sales']) && isset($_GET['product']) && isset($_GET['salesarea']) && isset($_GET['startdate']) && isset($_GET['enddate']) && isset($_GET['per']))
		{
			if ($_GET['lro'] == 1)
			{
				$this->RincianPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 2)
			{
				$this->RekapPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 3)
			{
				$this->RekapPenjualanPerCustomer($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 4)
			{
				$this->RekapPenjualanPerSales($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 5)
			{
				$this->RekapPenjualanPerBarang($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 6)
			{
				$this->RekapPenjualanPerArea($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 7)
			{
				$this->RekapPenjualanPerCustomerPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 8)
			{
				$this->RekapPenjualanPerCustomerPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 9)
			{
				$this->RekapPenjualanPerSalesPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 10)
			{
				$this->RekapPenjualanPerSalesPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 11)
			{
				$this->RekapPenjualanPerAreaPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 12)
			{
				$this->RekapPenjualanPerAreaPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 13)
			{
				$this->RincianReturPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 14)
			{
				$this->RekapReturPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 15)
			{
				$this->RekapReturPenjualanPerCustomer($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 16)
			{
				$this->RekapReturPenjualanPerSales($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 17)
			{
				$this->RekapReturPenjualanPerBarang($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 18)
			{
				$this->RekapReturPenjualanPerArea($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 19)
			{
				$this->RekapReturPenjualanPerCustomerPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 20)
			{
				$this->RekapReturPenjualanPerCustomerPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 21)
			{
				$this->RekapReturPenjualanPerSalesPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 22)
			{
				$this->RekapReturPenjualanPerSalesPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 23)
			{
				$this->RekapReturPenjualanPerAreaPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 24)
			{
				$this->RekapReturPenjualanPerAreaPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 25)
			{
				$this->RincianPenjualanReturPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 26)
			{
				$this->RekapPenjualanReturPenjualanPerDokumen($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 27)
			{
				$this->RekapPenjualanReturPenjualanPerCustomer($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 28)
			{
				$this->RekapPenjualanReturPenjualanPerSales($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 29)
			{
				$this->RekapPenjualanReturPenjualanPerBarang($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 30)
			{
				$this->RekapPenjualanReturPenjualanPerArea($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 31)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 32)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 33)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 34)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 35)
			{
				$this->RekapPenjualanReturPenjualanPerAreaPerBarangTotal($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 36)
			{
				$this->RekapPenjualanReturPenjualanPerAreaPerBarangRincian($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 37)
			{
				$this->RincianSalesOrderPerDokumen($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
            else
			if ($_GET['lro'] == 38)
			{
				$this->RincianSalesOrderOutstanding($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
            else
			if ($_GET['lro'] == 39)
			{
				$this->RekapSuratJalanBelumDibuatkanFaktur($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 40)
			{
				$this->RekapPenjualanPerCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 41)
			{
				$this->RekapReturPenjualanPerCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 42)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 43)
			{
				$this->RekapPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 44)
			{
				$this->RekapReturPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 45)
			{
				$this->RekapPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 46)
			{
				$this->RekapTotalPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 47)
			{
				$this->RekapTotalReturPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 48)
			{
				$this->RekapTotalPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahun($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 49)
			{
				$this->RekapPenjualanPerBarangPerBulanQty($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 50)
			{
				$this->RekapPenjualanPerBarangPerBulanNilai($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 51)
			{
				$this->RekapPenjualanPerBarangPerBulanQtydanNilai($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 52)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalNilai($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 53)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianNilai($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 54)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalQty($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 55)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianQty($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 56)
			{
				$this->RekapSalesOrderOutstandingPerBarang($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 57)
			{
				$this->LaporanStatusBelumMax($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
		}
	}
	//1
	public function RincianPenjualanPerDokumen($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$total1=0;$totaldisc1=0;$totalnetto1=0;$disc= 0;
		$sql = "select a.invoiceid,a.invoiceno, b.gino, a.invoicedate, d.fullname as customer,h.fullname as sales, e.paydays, c.shipto, a.headernote
				from invoice a
				join giheader b on b.giheaderid = a.giheaderid
				join soheader c on c.soheaderid = b.soheaderid
				join addressbook d on d.addressbookid = c.addressbookid
				join paymentmethod e on e.paymentmethodid = c.paymentmethodid
				join gidetail f on f.giheaderid = b.giheaderid
				join sloc g on g.slocid = f.slocid
				join employee h on h.employeeid = c.employeeid
				join product i on i.productid = f.productid
				join salesarea j on j.salesareaid = d.salesareaid
				where a.recordstatus = 3 and c.companyid = ".$companyid." and g.sloccode like '%".$sloc."%'
				and d.fullname like '%".$customer."%' and h.fullname like '%".$employee."%' and i.productname like '%".$product."%'
				and j.areaname like '%".$salesarea."%' and b.gino is not null
				and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by invoiceno order by invoicedate";
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rincian Penjualan Per Dokumen';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'No Bukti');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['invoiceno']);
				$this->pdf->text(10,$this->pdf->gety()+20,'No SJ');$this->pdf->text(30,$this->pdf->gety()+20,': '.$row['gino']);
				$this->pdf->text(10,$this->pdf->gety()+15,'Sales');$this->pdf->text(30,$this->pdf->gety()+15,': '.$row['sales']);
				$this->pdf->text(10,$this->pdf->gety()+25,'T.O.P');$this->pdf->text(30,$this->pdf->gety()+25,': '.$row['paydays'].' HARI');
				$this->pdf->text(150,$this->pdf->gety()+10,''.date(Yii::app()->params['dateviewfromdb'], strtotime($row['invoicedate'])));
				$this->pdf->text(150,$this->pdf->gety()+15,'Kepada YTH');
				$this->pdf->text(150,$this->pdf->gety()+20,''.$row['customer']);
				$this->pdf->text(150,$this->pdf->gety()+25,''.$row['shipto']);
				$sql1 = "select distinct ss.gidetailid,a.invoiceno,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nominal,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and c.companyid = ".$companyid." 
							and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' 
							  and e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' 
							  and i.productname like '%".$product."%' and a.invoiceid = ".$row['invoiceid']." 
							  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								order by ss.sodetailid";
			
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$total = 0;$i=0;$totalqty=0;
				$this->pdf->sety($this->pdf->gety()+27);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,85,20,15,30,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Unit','Price','Total');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','L','R','R');
				$this->pdf->setFont('Arial','',8);
				$total = 0;
				$totalqty = 0;
				$diskon =0;
				$netto = 0;
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatCurrency($row1['qty']),$row1['uomcode'],
						Yii::app()->format->formatCurrency($row1['price']/$per),
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
					));
					$totalqty += $row1['qty'];
					$total += $row1['nominal']/$per;
					$netto += $row1['nett']/$per;
					$diskon = $total - $netto ;
					$bilangan = explode(".",$netto);
				}
				$this->pdf->row(array(
						'','Total',
						Yii::app()->format->formatCurrency($totalqty),'',
						'Nominal',
						Yii::app()->format->formatCurrency($total),
					));
				$this->pdf->row(array(
						'','',
						'',
						'',
						'Diskon',
						Yii::app()->format->formatCurrency($diskon),
					));
				$this->pdf->row(array(
						'',
						'Terbilang : '.$this->eja($bilangan[0]),
						'',
						'',
						'Netto',
						Yii::app()->format->formatCurrency($netto),
					));
					$this->pdf->row(array(
						'',
						'Note : '.$row['headernote'],
						'',
						'',
						'',
						'',
					));
					$total1 += $total;
					$totaldisc1 += $diskon;
					$totalnetto1 += $netto;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->colalign = array('C','C','C','R');
			$this->pdf->setwidths(array(40,40,20,40));
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
					'GRAND TOTAL  '.Yii::app()->format->formatCurrency($total1),
						'TOTAL DISCOUNT  '.Yii::app()->format->formatCurrency($totaldisc1),'',
						'TOTAL NETTO  '.Yii::app()->format->formatCurrency($totalnetto1),
						
			));
			$this->pdf->Output();
	}
	//2
	public function RekapPenjualanPerDokumen($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						  from gidetail zzb 
							join sodetail zza on zza.sodetailid = zzb.sodetailid
							where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
              c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
              e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
              a.invoiceno is not null and a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by invoiceno
                  )z group by invoiceno"; 
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Dokumen';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			$this->pdf->setFont('Arial','B',8);
                        $this->pdf->sety($this->pdf->gety()+10);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,20,20,40,30,25,25,25));
			$this->pdf->colheader = array('No','No Bukti','Tanggal','Customer','Nominal','Disc','Netto','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','L','L','R','R','R','L');		
			$totalnominal1=0;$i=0;$totaldisc1=0;$totaljumlah1=0;
			foreach($dataReader as $row)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',7);
				$this->pdf->row(array(
					$i,$row['invoiceno'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row['invoicedate'])),
					$row['fullname'],
					Yii::app()->format->formatCurrency($row['nominal']/$per),
					Yii::app()->format->formatCurrency($row['disc']/$per),
					Yii::app()->format->formatCurrency($row['netto']/$per),
					$row['headernote']
				));
                $totalnominal1 += $row['nominal']/$per;
                $totaldisc1 += $row['disc']/$per;
                $totaljumlah1 += $row['netto']/$per;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->colalign = array('C','C','C','C');
			$this->pdf->setwidths(array(40,50,40,40));
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
					'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
						'NETTO : '.Yii::app()->format->formatCurrency($totaljumlah1),
			));
			$this->pdf->Output();
	}
	//3
	public function RekapPenjualanPerCustomer($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
		$sql = "select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and k.areaname like '%".$salesarea."%'
				and j.invoiceno is not null and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Customer';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
						
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
				$sql1 = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						  from gidetail zzb 
						  join sodetail zza on zza.sodetailid = zzb.sodetailid
						  where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							left join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%'  and i.productname like '%".$product."%' and a.invoiceno is not null and 
							a.invoiceno is not null and a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
							and d.addressbookid = ".$row['addressbookid']." order by invoiceno)z group by invoiceno"; 
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,20,20,25,25,25,55));
				$this->pdf->colheader = array('No','No Dokumen','Tanggal','Nominal','Disc','Netto','Keterangan');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','L');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totaldisc = 0;
				$total = 0;
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['invoiceno'],
						date(Yii::app()->params['dateviewfromdb'], strtotime($row1['invoicedate'])),
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
						Yii::app()->format->formatCurrency($row1['disc']/$per),
						Yii::app()->format->formatCurrency($row1['netto']/$per),$row1['headernote']
					));
					$totalnominal += $row1['nominal']/$per;
					$totaldisc += $row1['disc']/$per;
					$total += $row1['netto']/$per;
				}
				$this->pdf->row(array(
						'','Total ','',
						Yii::app()->format->formatCurrency($totalnominal),
						Yii::app()->format->formatCurrency($totaldisc),
						Yii::app()->format->formatCurrency($total),
					));
					$totalnominal1 += $totalnominal;
					$totaldisc1 += $totaldisc;
					$totaljumlah1 += $total;
				$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('C','C','C','C');
				$this->pdf->setwidths(array(40,40,50,40));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
						'NETTO : '.Yii::app()->format->formatCurrency($totaljumlah1),
					));
					
			$this->pdf->Output();
	}
	//4
	public function RekapPenjualanPerSales($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
		$sql = "select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%'
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Sales';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
						
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$sql1 = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
                  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
                  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
                  a.invoiceno is not null and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
					and e.employeeid = ".$row['employeeid']." order by fullname
                  )z group by fullname";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,80,30,30,30,30));
				$this->pdf->colheader = array('No','Nama Customer','Nominal','Disc','Netto');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totaldisc = 0;
				$total = 0;
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['fullname'],
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
						Yii::app()->format->formatCurrency($row1['disc']/$per),
						Yii::app()->format->formatCurrency($row1['netto']/$per),
					));
					$totalnominal += $row1['nominal']/$per;
					$totaldisc += $row1['disc']/$per;
					$total += $row1['netto']/$per;
				}
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
						'','TOTAL SALES',
						Yii::app()->format->formatCurrency($totalnominal),
						Yii::app()->format->formatCurrency($totaldisc),
						Yii::app()->format->formatCurrency($total),
					));
					$totalnominal1 += $totalnominal;
					$totaldisc1 += $totaldisc;
					$totaljumlah1 += $total;
				$this->pdf->sety($this->pdf->gety()+5);	
				$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('C','C','C','C');
				$this->pdf->setwidths(array(30,50,50,50));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
						'NETTO : '.Yii::app()->format->formatCurrency($totaljumlah1),
					));
			$this->pdf->Output();
	}
	//5
	public function RekapPenjualanPerBarang($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
				from soheader za 
				join giheader zb on zb.soheaderid = za.soheaderid
				join gidetail zc on zc.giheaderid = zb.giheaderid
				join sodetail zs on zs.sodetailid = zc.sodetailid
				left join employee zd on zd.employeeid = za.employeeid
				join product ze on ze.productid = zs.productid
				left join addressbook zf on zf.addressbookid = za.addressbookid
				left join salesarea zg on zg.salesareaid = zf.salesareaid
				join sloc zh on zh.slocid = zc.slocid
				join invoice zi on zi.giheaderid = zc.giheaderid
				join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
				join materialgroup zk on zk.materialgroupid=zj.materialgroupid
				where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
				zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
				zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
				zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				order by description";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Barang';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Material Group');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['description']);
				$sql1 = "select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoiceno is not null and j.materialgroupid = ".$row['materialgroupid']."
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)zz group by productname order by productname";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totalqty=0;$totalnetto=0;$totaldisc=0;$totalnominal=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,15,20,30,25,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totalqty = 0;
				$totalnetto = 0;
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatCurrency($row1['qty']),
						Yii::app()->format->formatCurrency($row1['harga']/$per),
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
						Yii::app()->format->formatCurrency(($row1['nominal']/$per)-($row1['netto']/$per)),
						Yii::app()->format->formatCurrency($row1['netto']/$per),
					));
					$totalnominal += $row1['nominal']/$per;
					$totalqty += $row1['qty'];
					$totaldisc += ($row1['nominal']/$per)-($row1['netto']/$per);
					$totalnetto += $row1['netto']/$per;
					
				}
				$this->pdf->row(array(
						'','Total '.$row['description'],
						Yii::app()->format->formatCurrency($totalqty),'',
						Yii::app()->format->formatCurrency($totalnominal),
						Yii::app()->format->formatCurrency($totaldisc),
						Yii::app()->format->formatCurrency($totalnetto),
					));					
					$totalqty1 += $totalqty;					
					$totalnominal1 += $totalnominal;
					$totaldisc1 += $totaldisc;
					$totalnetto1 += $totalnetto;
					
				$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('C','C','C','C');
				$this->pdf->setwidths(array(40,40,40,40));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
						'JUMLAH : '.Yii::app()->format->formatCurrency($totalnetto1),
					));
			$this->pdf->Output();
	}
	//6
	public function RekapPenjualanPerArea($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totaljumlah2=0;;
		$sql = "select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
          group by zg.areaname order by areaname";
				
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan Per Area';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Area');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['areaname']);
			$this->pdf->text(10,$this->pdf->gety()+10,'Area');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['areaname']);
			
			$sql1 = "select distinct a.materialgroupid,a.description,b.productid
				from materialgroup a
				join productplant b on b.materialgroupid = a.materialgroupid
				join product c on c.productid = b.productid
				join sloc d on d.slocid = b.slocid
				join gidetail e on e.productid = c.productid
				join giheader f on f.giheaderid = e.giheaderid
				join soheader g on g.soheaderid = f.soheaderid
				join addressbook h on h.addressbookid = g.addressbookid
				join salesarea i on i.salesareaid = h.salesareaid
				join invoice j on j.giheaderid = f.giheaderid
				join employee k on k.employeeid = g.employeeid
				where j.recordstatus = 3 and g.companyid = ".$companyid." and i.salesareaid = ".$row['salesareaid']." and k.fullname like '%".$employee."%' 
				and c.productname like '%".$product."%' and d.sloccode like '%".$sloc."%' and h.fullname like '%".$customer."%' 
				and j.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by a.description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$totalqty1 = 0;
		$totalnominal1 = 0;
		$totaldisc1 = 0;
		$totaljumlah1 = 0;
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','',10);
					$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
					$sql2 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
							  a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
        					   '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
		    				and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']."
							) zz group by productid";
					
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					$totalgrupdisc = 0;$totalgrupnominal=0;$totalgrup=0;$i=0;$totalgrupqty=0;
					$this->pdf->sety($this->pdf->gety()+18);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,30,30,30,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Disc','Netto');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totalgrupqty =0;
					$totalgrupnominal =0;
					$totalgrupdisc =0;
					$totalgrup =0;
					foreach($dataReader2 as $row2)
					{
                        $i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatNumber($row2['giqty']),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalgrupqty += $row2['giqty'];
						$totalgrupnominal += $row2['nominal']/$per;
						$totalgrupdisc += (($row2['nominal']/$per) - ($row2['netto']/$per));
						$totalgrup += $row2['netto']/$per;
						
					}
					$this->pdf->setFont('Arial','BI',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatCurrency($totalgrupqty),
							Yii::app()->format->formatCurrency($totalgrupnominal),
							Yii::app()->format->formatCurrency($totalgrupdisc),
							Yii::app()->format->formatCurrency($totalgrup),
						));
						
						$totalqty1 += $totalgrupqty;
						$totalnominal1 += $totalgrupnominal;
						$totaldisc1 += $totalgrupdisc;
						$totaljumlah1 += $totalgrup;
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
							'','TOTAL '.$row['areaname'],
							Yii::app()->format->formatCurrency($totalqty1),
							Yii::app()->format->formatCurrency($totalnominal1),
							Yii::app()->format->formatCurrency($totaldisc1),
							Yii::app()->format->formatCurrency($totaljumlah1),
							));
						$totalqty2 += $totalqty1;
						$totalnominal2 += $totalnominal1;
						$totaldisc2 += $totaldisc1;
						$totaljumlah2 += $totaljumlah1;
		}
			$this->pdf->colalign = array('C','C','C','C');
			$this->pdf->setwidths(array(40,50,40,40));
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
					'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal2),
						'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc2),
						'NETTO : '.Yii::app()->format->formatCurrency($totaljumlah2),
			));
		$this->pdf->Output();
	}
	//7
	public function RekapPenjualanPerCustomerPerBarangTotal($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and j.invoicedate between
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Customer Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select barang,sum(qty) as giqty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)zz group by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatCurrency($row1['giqty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['giqty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL CUSTOMER '.$row['fullname'],
							Yii::app()->format->formatCurrency($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//8
	public function RekapPenjualanPerCustomerPerBarangRincian($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and j.invoicedate between
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Customer Per Barang (Rincian)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'CUSTOMER');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['fullname']);
				$this->pdf->sety($this->pdf->gety()+8);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,15,20,30,25,30));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
				$sql1 = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
				from soheader za 
				join giheader zb on zb.soheaderid = za.soheaderid
				join gidetail zc on zc.giheaderid = zb.giheaderid
				join sodetail zs on zs.sodetailid = zc.sodetailid
				left join employee zd on zd.employeeid = za.employeeid
				join product ze on ze.productid = zs.productid
				left join addressbook zf on zf.addressbookid = za.addressbookid
				left join salesarea zg on zg.salesareaid = zf.salesareaid
				join sloc zh on zh.slocid = zc.slocid
				join invoice zi on zi.giheaderid = zc.giheaderid
				join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
				join materialgroup zk on zk.materialgroupid=zj.materialgroupid
				where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
				zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
				zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and
				zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'	order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','B',9);
					$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
					$sql2 = "select productid,productname,sum(qty) as giqty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+7);
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['giqty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['giqty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;						
					}
					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatCurrency($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
										
				}
			
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL CUSTOMER '.$row['fullname'],
				Yii::app()->format->formatCurrency($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
			
			}
			
				$this->pdf->colalign = array('C','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty2),
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totaldisc2),
						Yii::app()->format->formatCurrency($totalnetto2),
					));
			$this->pdf->Output();
	}
	//9
	public function RekapPenjualanPerSalesPerBarangTotal($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%'
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Sales Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select productid,productname,description as barang,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,l.description,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and 
						  e.employeeid = ".$row['employeeid']." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatCurrency($row1['giqty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['giqty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL SALES '.$row['fullname'],
							Yii::app()->format->formatCurrency($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//10
	public function RekapPenjualanPerSalesPerBarangRincian($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%'
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Sales Per Barang (Rincian)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['fullname']);
				$this->pdf->sety($this->pdf->gety()+8);
					
					$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
				$sql1 = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
				from soheader za 
				join giheader zb on zb.soheaderid = za.soheaderid
				join gidetail zc on zc.giheaderid = zb.giheaderid
				join sodetail zs on zs.sodetailid = zc.sodetailid
				left join employee zd on zd.employeeid = za.employeeid
				join product ze on ze.productid = zs.productid
				left join addressbook zf on zf.addressbookid = za.addressbookid
				left join salesarea zg on zg.salesareaid = zf.salesareaid
				join sloc zh on zh.slocid = zc.slocid
				join invoice zi on zi.giheaderid = zc.giheaderid
				join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
				join materialgroup zk on zk.materialgroupid=zj.materialgroupid
				where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
				zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
				zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zd.employeeid = ".$row['employeeid']." and
				zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'	order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','B',9);
					$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
					$sql2 = "select productid,productname,sum(qty) as giqty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.employeeid = ".$row['employeeid']." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+7);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,15,20,30,25,30));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$this->pdf->setFont('Arial','',8);
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['giqty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['giqty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;						
					}
					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatCurrency($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
										
				}
			
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL SALES '.$row['fullname'],
				Yii::app()->format->formatCurrency($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
			
			}
			
				$this->pdf->colalign = array('C','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty2),
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totaldisc2),
						Yii::app()->format->formatCurrency($totalnetto2),
					));
			$this->pdf->Output();
	}
	//11
	public function RekapPenjualanPerAreaPerBarangTotal($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct zg.salesareaid,zg.areaname
				   from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				   join addressbook zf on zf.addressbookid = za.addressbookid
				   left join salesarea zg on zg.salesareaid = zf.salesareaid
				   join product zh on zh.productid = zc.productid
				   join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                group by zg.areaname order by zg.areaname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Area Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['areaname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select productid,productname,description as barang,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,l.description,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and 
						  e.fullname like '%".$employee."%' and f.salesareaid = ".$row['salesareaid']." and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz group by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatCurrency($row1['giqty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['giqty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL AREA '.$row['areaname'],
							Yii::app()->format->formatCurrency($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//12
	public function RekapPenjualanPerAreaPerBarangRincian($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select distinct zg.salesareaid,zg.areaname
				   from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				   join addressbook zf on zf.addressbookid = za.addressbookid
				   left join salesarea zg on zg.salesareaid = zf.salesareaid
				   join product zh on zh.productid = zc.productid
				   join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                group by zg.areaname order by zg.areaname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Area Per Barang (Rincian)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['areaname']);
				$this->pdf->sety($this->pdf->gety()+8);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,15,20,30,25,30));
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
				$sql1 = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
				from soheader za 
				join giheader zb on zb.soheaderid = za.soheaderid
				join gidetail zc on zc.giheaderid = zb.giheaderid
				join sodetail zs on zs.sodetailid = zc.sodetailid
				left join employee zd on zd.employeeid = za.employeeid
				join product ze on ze.productid = zs.productid
				left join addressbook zf on zf.addressbookid = za.addressbookid
				left join salesarea zg on zg.salesareaid = zf.salesareaid
				join sloc zh on zh.slocid = zc.slocid
				join invoice zi on zi.giheaderid = zc.giheaderid
				join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
				join materialgroup zk on zk.materialgroupid=zj.materialgroupid
				where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
				zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
				zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and
				zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'	order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','B',9);
					$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
					$sql2 = "select productid,productname,sum(qty) as giqty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.salesareaid = ".$row['salesareaid']." and i.productname like '%".$product."%' 
							and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+7);
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['giqty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['giqty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;						
					}
					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatCurrency($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
										
				}
			
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL AREA '.$row['areaname'],
				Yii::app()->format->formatCurrency($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
			
			}
			
				$this->pdf->colalign = array('C','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty2),
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totaldisc2),
						Yii::app()->format->formatCurrency($totalnetto2),
					));
			$this->pdf->Output();
	}
	//13	
	public function RincianReturPenjualanPerDokumen($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;
		$sql = "select distinct b.notagirid,b.notagirno,i.fullname as customer,d.gireturdate,j.paycode,h.taxid,b.headernote
						from notagirpro a
						left join notagir b on b.notagirid=a.notagirid
						left join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						left join giretur d on d.gireturid=b.gireturid
						left join product e on e.productid=a.productid
						left join gidetail f on f.gidetailid=c.gidetailid
						left join giheader g on g.giheaderid=d.giheaderid
						left join soheader h on h.soheaderid=g.soheaderid
						left join addressbook i on i.addressbookid=h.addressbookid
						left join paymentmethod j on j.paymentmethodid=h.paymentmethodid
						left join sloc k on k.slocid=a.slocid
						left join employee l on l.employeeid = h.employeeid
						where k.sloccode like '%".$sloc."%' and b.recordstatus = 3 and i.fullname like '%".$customer."%' and 
						h.companyid = ".$companyid." and e.productname like '%".$product."%' and l.fullname like '%".$employee."%' and
						d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Retur Penjualan Per Dokumen';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->sety($this->pdf->gety()+5);
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+0,'Dokumen');$this->pdf->text(40,$this->pdf->gety()+0,': '.$row['notagirno']);
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['customer']);
			$this->pdf->text(130,$this->pdf->gety()+0,'Tanggal');$this->pdf->text(160,$this->pdf->gety()+0,': '.date(Yii::app()->params['dateviewfromdb'], strtotime($row['gireturdate'])));
			$this->pdf->text(130,$this->pdf->gety()+5,'T.O.P');$this->pdf->text(160,$this->pdf->gety()+5,': '.$row['paycode'].' HARI');                
			$sql1 = "select *,(nominal-netto) as disc from
							(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and b.notagirid = ".$row['notagirid']." 
							and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)z order by notagirno,notagirproid";
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$i=0;$totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,20,20,30,50));
				$this->pdf->coldetailalign = array('L','L','R','R','R','L');
			$this->pdf->colheader = array('No','Nama Barang','Qty','Harga','Jumlah','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['productname'],
					Yii::app()->format->formatNumber($row1['qty']),
					Yii::app()->format->formatCurrency($row1['price']/$per),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					$row1['headernote'],
				));
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;

			}
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','Keterangan : '.$row['headernote'],
				Yii::app()->format->formatNumber($totalqty),
				'','Nominal',
				Yii::app()->format->formatCurrency($totalnominal),
			));
			
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','','',
				'','Diskon',
				Yii::app()->format->formatCurrency($totaldiskon),
			));
			
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','','',
				'','Netto',
				Yii::app()->format->formatCurrency($totalnetto),
			));
						
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$this->pdf->sety($this->pdf->gety()+15);
			$this->pdf->checkPageBreak(20);
		}

		$this->pdf->colalign = array('R','R','R');
		$this->pdf->setwidths(array(60,60,60));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'GRAND TOTAL  '.Yii::app()->format->formatCurrency($totalnominal1),
			'TOTAL DISCOUNT  '.Yii::app()->format->formatCurrency($totaldiskon1),
			'TOTAL NETTO  '.Yii::app()->format->formatCurrency($totalnetto1),
		));
		$this->pdf->Output();
	}
	//14
	public function RekapReturPenjualanPerDokumen($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		
		$this->pdf->title='Rekap Retur Penjualan Per Dokumen';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		$i=0;$nominal=0;$diskon=0;$netto=0;

		$this->pdf->sety($this->pdf->gety()+10);
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->colalign = array('C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,22,18,58,30,25,30));
		$this->pdf->colheader = array('No','Dokumen','Tanggal','Customer','Nominal','Diskon','Netto');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('R','L','L','L','R','R','R');
		
		foreach($dataReader as $row)
		{
			$i+=1;
			$this->pdf->SetFont('Arial','',8);
			$this->pdf->row(array(
				$i,$row['notagirno'],
				date(Yii::app()->params['dateviewfromdb'], strtotime($row['gireturdate'])),
				$row['fullname'],
				Yii::app()->format->formatCurrency($row['nominal']/$per),
				Yii::app()->format->formatCurrency(($row['nominal']/$per) - ($row['netto']/$per)),
				Yii::app()->format->formatCurrency($row['netto']/$per),
			));
			$nominal += $row['nominal']/$per;
			$diskon += ($row['nominal']/$per) - ($row['netto']/$per);
			$netto += $row['netto']/$per;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->setFont('Arial','B',10);
		$this->pdf->row(array(
			'','','','GRAND TOTAL',
				Yii::app()->format->formatCurrency($nominal),
				Yii::app()->format->formatCurrency($diskon),
				Yii::app()->format->formatCurrency($netto),
		));
		$this->pdf->Output();
	}
	//15
	public function RekapReturPenjualanPerCustomer($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
  {
        parent::actionDownload();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;$totalnominal2=0;$totaldiskon2=0;$totalnetto2=0;
		$sql = "select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
				
            $command=$this->connection->createCommand($sql);
            $dataReader=$command->queryAll();
            
            foreach($dataReader as $row)
            {
                $this->pdf->companyid = $companyid;
            }
            
            $this->pdf->title='Rekap Retur Penjualan Per Customer';
            $this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
            $this->pdf->AddPage('P');
            foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
				$sql1 = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,a.qty,
							(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
				
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totalppn = 0;$totalnominal=0;$total=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,22,20,25,25,25,55));
				$this->pdf->colheader = array('No','No Dokumen','Tanggal','Nominal','Diskon','Netto','Keterangan');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R','L');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totaldiskon = 0;
				$totalnetto = 0;
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['notagirno'],
						date(Yii::app()->params['dateviewfromdb'], strtotime($row1['gireturdate'])),
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
						Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
						Yii::app()->format->formatCurrency($row1['netto']/$per),$row1['headernote']
					));
					$totalnominal += $row1['nominal']/$per;
					$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
					$totalnetto += $row1['netto']/$per;
				}
				$this->pdf->row(array(
						'','Total ','',
						Yii::app()->format->formatCurrency($totalnominal),
						Yii::app()->format->formatCurrency($totaldiskon),
						Yii::app()->format->formatCurrency($totalnetto),
					));
					$totalnominal1 += $totalnominal;
					$totaldiskon1 += $totaldiskon;
					$totalnetto1 += $totalnetto;
				$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('C','C','C','C');
				$this->pdf->setwidths(array(40,40,50,40));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISKON : '.Yii::app()->format->formatCurrency($totaldiskon1),
						'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
  }
	//16
	public function RekapReturPenjualanPerSales($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;$totalnominal2=0;$totaldiskon2=0;$totalnetto2=0;
		$sql = "select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Retur Penjualan Per Sales';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
						
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Sales');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
				$sql1 = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
				
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totaldiskon = 0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,80,30,25,30,30));
				$this->pdf->colheader = array('No','Nama Customer','Nominal','Diskon','Netto');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);

				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['fullname'],
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
						Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
						Yii::app()->format->formatCurrency($row1['netto']/$per),
					));
					$totalnominal += $row1['nominal']/$per;
					$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
					$totalnetto += $row1['netto']/$per;
				}
				$this->pdf->row(array(
						'','Total Sales',
						Yii::app()->format->formatCurrency($totalnominal),
						Yii::app()->format->formatCurrency($totaldiskon),
						Yii::app()->format->formatCurrency($totalnetto),
					));
					$totalnominal1 += $totalnominal;
					$totaldiskon1 += $totaldiskon;
					$totalnetto1 += $totalnetto;
				$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('C','C','C','C');
				$this->pdf->setwidths(array(40,40,50,40));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISKON : '.Yii::app()->format->formatCurrency($totaldiskon1),
						'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//17
	public function RekapReturPenjualanPerBarang($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
            parent::actionDownload();
					$totalnominal1 = 0;
					$totaldiskon1 = 0;
					$totalnetto1 = 0;
					$sql = "select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
			
            $command=$this->connection->createCommand($sql);
            $dataReader=$command->queryAll();
            
            foreach($dataReader as $row)
            {
                $this->pdf->companyid = $companyid;
            }
            
            $this->pdf->title='Rekap Retur Penjualan Per Barang';
            $this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
            $this->pdf->AddPage('P');
			
            $this->pdf->sety($this->pdf->gety()+0);
            
            foreach($dataReader as $row)
            {
                $this->pdf->SetFont('Arial','',10);
                $this->pdf->text(10,$this->pdf->gety()+10,'Divisi');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['description']);
                $sql1 = "select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							(a.qty*g.price) as nom,a.price,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and n.materialgroupid = ".$row['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname order by productname";
                $command1=$this->connection->createCommand($sql1);
                $dataReader1=$command1->queryAll();
                $totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;$i=0;
                $this->pdf->sety($this->pdf->gety()+15);
                $this->pdf->setFont('Arial','B',8);
                $this->pdf->colalign = array('C','C','C','C','C','C','C');
                $this->pdf->setwidths(array(10,60,15,20,30,25,30));
                $this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
                $this->pdf->RowHeader();
                $this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
                $this->pdf->setFont('Arial','',8);
               
                foreach($dataReader1 as $row1)
                {
                    $i+=1;
                        $this->pdf->row(array(
                                $i,$row1['productname'],
                                Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qty']),
                                Yii::app()->format->formatCurrency($row1['harga']/$per),
																Yii::app()->format->formatCurrency($row1['nominal']/$per),
                                Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
                                Yii::app()->format->formatCurrency($row1['netto']/$per),
                        ));
                        $totalqty += $row1['qty'];
                        $totalnominal += $row1['nominal']/$per;
												$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
                        $totalnetto += $row1['netto']/$per;
                }
                $this->pdf->row(array(
                        '','Total : '.$row['description'],
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty),'',
                        Yii::app()->format->formatCurrency($totalnominal),
                        Yii::app()->format->formatCurrency($totaldiskon),
                        Yii::app()->format->formatCurrency($totalnetto),
                ));
					$totalnominal1 += $totalnominal;
					$totaldiskon1 += $totaldiskon;
					$totalnetto1 += $totalnetto;
                $this->pdf->checkPageBreak(20);
            }
			
				$this->pdf->colalign = array('C','C','C','C');
				$this->pdf->setwidths(array(40,40,50,40));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISKON : '.Yii::app()->format->formatCurrency($totaldiskon1),
						'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1),
					));
					
            $this->pdf->Output();
  }
	//18
	public function RekapReturPenjualanPerArea($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
			$totalqty1 = 0;
			$totalnominal1 = 0;
			$totaldiskon1 = 0;
			$totalnetto1 = 0;
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";

		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Retur Penjualan Per Area';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Area');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['areaname']);
			$sql1 = "select distinct a.materialgroupid,a.description,f.productid
					from materialgroup a
					join productplant b on b.materialgroupid = a.materialgroupid
					join gireturdetail e on e.productid = b.productid
					join gidetail c on c.gidetailid = e.gidetailid
					join product f on f.productid = e.productid
					join giheader g on g.giheaderid = c.giheaderid
					join soheader h on h.soheaderid = g.soheaderid
					join addressbook i on i.addressbookid = h.addressbookid
					join salesarea j on j.salesareaid = i.salesareaid
					join giretur k on k.gireturid = e.gireturid
					where k.recordstatus = 3 and h.companyid = ".$companyid." and f.productname like '%".$product."%'
					and j.salesareaid = ".$row['salesareaid']."
					and k.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					group by description";
			
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				foreach($dataReader1 as $row1)
				{
					$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
					$sql2 = "select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
							and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid";
					
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					$totalnetto = 0;$totalnominal=0;$totaldiskon=0;$i=0;$totalqty=0;
					$this->pdf->sety($this->pdf->gety()+20);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,80,20,30,20,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Diskon','Netto');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					foreach($dataReader2 as $row2)
					{
                        $i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qty']),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['qty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldiskon += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;
					}
					$this->pdf->row(array(
							'','Total '.$row1['description'],
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldiskon),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldiskon1 += $totaldiskon;
						$totalnetto1 += $totalnetto;
					$this->pdf->checkPageBreak(20);
				}
		}
			$this->pdf->colalign = array('C','C','C','C');
			$this->pdf->setwidths(array(50,40,40,40));
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
					'TOTAL :',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISKON : '.Yii::app()->format->formatCurrency($totaldiskon1),
						'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1),
			));
		$this->pdf->Output();
	}
	//19
	public function RekapReturPenjualanPerCustomerPerBarangTotal($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Retur Penjualan Per Customer Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by barang order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatCurrency($row1['qty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['qty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL CUSTOMER '.$row['fullname'],
							Yii::app()->format->formatCurrency($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//20
	public function RekapReturPenjualanPerCustomerPerBarangRincian($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Retur Penjualan Per Customer Per Barang (Rincian)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'CUSTOMER');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['fullname']);
				$this->pdf->sety($this->pdf->gety()+8);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,15,20,30,25,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
				$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
							and m.areaname like '%".$salesarea."%' and k.addressbookid = ".$row['addressbookid']."
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','B',9);
					$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
					$sql2 = "select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct a.notagirproid,i.productname,a.qty,g.price,(a.qty*g.price) as nom,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']."
							and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+7);
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['qty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['qty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;						
					}
					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatCurrency($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
										
				}
			
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL CUSTOMER '.$row['fullname'],
				Yii::app()->format->formatCurrency($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
			
			}
			
				$this->pdf->colalign = array('C','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty2),
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totaldisc2),
						Yii::app()->format->formatCurrency($totalnetto2),
					));
			$this->pdf->Output();
	}
	//21
	public function RekapReturPenjualanPerSalesPerBarangTotal($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Retur Penjualan Per Sales Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by barang order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatCurrency($row1['qty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['qty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL SALES '.$row['fullname'],
							Yii::app()->format->formatCurrency($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//22
	public function RekapReturPenjualanPerSalesPerBarangRincian($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Retur Penjualan Per Sales Per Barang (Rincian)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['fullname']);
				$this->pdf->sety($this->pdf->gety()+8);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,15,20,30,25,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
				$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
							and m.areaname like '%".$salesarea."%' and l.employeeid = ".$row['employeeid']."
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','B',9);
					$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
					$sql2 = "select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct a.notagirproid,i.productname,a.qty,g.price,(a.qty*g.price) as nom,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']."
							and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+7);
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['qty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['qty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;						
					}
					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatCurrency($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
										
				}
			
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL SALES '.$row['fullname'],
				Yii::app()->format->formatCurrency($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
			
			}
			
				$this->pdf->colalign = array('C','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty2),
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totaldisc2),
						Yii::app()->format->formatCurrency($totalnetto2),
					));
			$this->pdf->Output();
	}
	//23
	public function RekapReturPenjualanPerAreaPerBarangTotal($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Retur Penjualan Per Area Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['areaname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by barang order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatCurrency($row1['qty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['qty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL AREA '.$row['areaname'],
							Yii::app()->format->formatCurrency($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//24
	public function RekapReturPenjualanPerAreaPerBarangRincian($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Retur Penjualan Per Area Per Barang (Rincian)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['areaname']);
				$this->pdf->sety($this->pdf->gety()+8);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,15,20,30,25,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
				$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
							and m.areaname like '%".$salesarea."%' and m.salesareaid = ".$row['salesareaid']."
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','B',9);
					$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
					$sql2 = "select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
							(select distinct a.notagirproid,i.productname,a.qty,g.price,(a.qty*g.price) as nom,(a.qty*a.price) as nett
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']."
							and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+7);
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['qty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['qty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;						
					}
					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatCurrency($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
										
				}
			
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL AREA '.$row['areaname'],
				Yii::app()->format->formatCurrency($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
			
			}
			
				$this->pdf->colalign = array('C','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty2),
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totaldisc2),
						Yii::app()->format->formatCurrency($totalnetto2),
					));
			$this->pdf->Output();
	}
	//25
	public function RincianPenjualanReturPenjualanPerDokumen($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$total1=0;$totaldisc1=0;$totalnetto1=0;$disc= 0;
		$sql = "select a.invoiceid,a.invoiceno, b.gino, a.invoicedate, d.fullname as customer,h.fullname as sales, e.paydays, c.shipto, a.headernote
				from invoice a
				join giheader b on b.giheaderid = a.giheaderid
				join soheader c on c.soheaderid = b.soheaderid
				join addressbook d on d.addressbookid = c.addressbookid
				join paymentmethod e on e.paymentmethodid = c.paymentmethodid
				join gidetail f on f.giheaderid = b.giheaderid
				join sloc g on g.slocid = f.slocid
				join employee h on h.employeeid = c.employeeid
				join product i on i.productid = f.productid
				join salesarea j on j.salesareaid = d.salesareaid
				where a.recordstatus = 3 and c.companyid = ".$companyid." and g.sloccode like '%".$sloc."%'
				and d.fullname like '%".$customer."%' and h.fullname like '%".$employee."%' and i.productname like '%".$product."%'
				and j.areaname like '%".$salesarea."%' and b.gino is not null
				and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by invoiceno order by invoicedate";
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rincian Penjualan - Retur Per Dokumen';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'No Bukti');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['invoiceno']);
				$this->pdf->text(10,$this->pdf->gety()+20,'No SJ');$this->pdf->text(30,$this->pdf->gety()+20,': '.$row['gino']);
				$this->pdf->text(10,$this->pdf->gety()+15,'Sales');$this->pdf->text(30,$this->pdf->gety()+15,': '.$row['sales']);
				$this->pdf->text(10,$this->pdf->gety()+25,'T.O.P');$this->pdf->text(30,$this->pdf->gety()+25,': '.$row['paydays'].' HARI');
				$this->pdf->text(150,$this->pdf->gety()+10,''.date(Yii::app()->params['dateviewfromdb'], strtotime($row['invoicedate'])));
				$this->pdf->text(150,$this->pdf->gety()+15,'Kepada YTH');
				$this->pdf->text(150,$this->pdf->gety()+20,''.$row['customer']);
				$this->pdf->text(150,$this->pdf->gety()+25,''.$row['shipto']);
				$sql1 = "select distinct ss.gidetailid,a.invoiceno,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nominal,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and c.companyid = ".$companyid." 
							and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' 
							  and e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' 
							  and i.productname like '%".$product."%' and a.invoiceid = ".$row['invoiceid']." 
							  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'";
			
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$total = 0;$i=0;$totalqty=0;
				$this->pdf->sety($this->pdf->gety()+27);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,85,20,15,30,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Unit','Price','Total');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','L','R','R');
				$this->pdf->setFont('Arial','',8);
				$total = 0;
				$totalqty = 0;
				$diskon =0;
				$netto = 0;
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatCurrency($row1['qty']),$row1['uomcode'],
						Yii::app()->format->formatCurrency($row1['price']/$per),
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
					));
					$totalqty += $row1['qty'];
					$total += $row1['nominal']/$per;
					$netto += $row1['nett']/$per;
					$diskon = $total - $netto ;
					$bilangan = explode(".",$netto);
				}
				$this->pdf->row(array(
						'','Total',
						Yii::app()->format->formatCurrency($totalqty),'',
						'Nominal',
						Yii::app()->format->formatCurrency($total),
					));
				$this->pdf->row(array(
						'','',
						'',
						'',
						'Diskon',
						Yii::app()->format->formatCurrency($diskon),
					));
				$this->pdf->row(array(
						'',
						'Terbilang : '.$this->eja($bilangan[0]),
						'',
						'',
						'Netto',
						Yii::app()->format->formatCurrency($netto),
					));
					$this->pdf->row(array(
						'',
						'Note : '.$row['headernote'],
						'',
						'',
						'',
						'',
					));
					$totalqty1 += $totalqty;
					$total1 += $total;
					$totaldisc1 += $diskon;
					$totalnetto1 += $netto;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->coldetailalign = array('C','R','R','R','R');
			$this->pdf->setwidths(array(40,30,40,40,40));
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
					'TOTAL PENJUALAN ',
					'QTY  '.Yii::app()->format->formatCurrency($totalqty1),
					'NOMINAL  '.Yii::app()->format->formatCurrency($total1),
					'DISKON  '.Yii::app()->format->formatCurrency($totaldisc1),
					'NETTO  '.Yii::app()->format->formatCurrency($totalnetto1),
						
			));
			
			$totqty1=0;$totalnom1=0;$totaldisk1=0;$totalnett1=0;
		$sql = "select distinct b.notagirid,b.notagirno,i.fullname as customer,d.gireturdate,j.paycode,h.taxid,b.headernote
						from notagirpro a
						left join notagir b on b.notagirid=a.notagirid
						left join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						left join giretur d on d.gireturid=b.gireturid
						left join product e on e.productid=a.productid
						left join gidetail f on f.gidetailid=c.gidetailid
						left join giheader g on g.giheaderid=d.giheaderid
						left join soheader h on h.soheaderid=g.soheaderid
						left join addressbook i on i.addressbookid=h.addressbookid
						left join paymentmethod j on j.paymentmethodid=h.paymentmethodid
						left join sloc k on k.slocid=a.slocid
						left join employee l on l.employeeid = h.employeeid
						where k.sloccode like '%".$sloc."%' and b.recordstatus = 3 and i.fullname like '%".$customer."%' and 
						h.companyid = ".$companyid." and e.productname like '%".$product."%' and l.fullname like '%".$employee."%' and
						d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		{
				$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Penjualan - Retur Per Dokumen';
		$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		$this->pdf->sety($this->pdf->gety()+5);
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Dokumen');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['notagirno']);
			$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['customer']);
			$this->pdf->text(130,$this->pdf->gety()+5,'Tanggal');$this->pdf->text(160,$this->pdf->gety()+5,': '.date(Yii::app()->params['dateviewfromdb'], strtotime($row['gireturdate'])));
			$this->pdf->text(130,$this->pdf->gety()+10,'T.O.P');$this->pdf->text(160,$this->pdf->gety()+10,': '.$row['paycode'].' HARI');                
			$sql1 = "select *,(nominal-netto) as disc from
							(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and b.notagirid = ".$row['notagirid']." 
							and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)z order by notagirno,notagirproid";
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$i=0;$totqty=0;$totalnom=0;$totaldisk=0;$totalnett=0;
			$this->pdf->sety($this->pdf->gety()+12);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,60,20,20,30,50));
			$this->pdf->colheader = array('No','Nama Barang','Qty','Harga','Jumlah','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['productname'],
					Yii::app()->format->formatNumber($row1['qty']),
					Yii::app()->format->formatCurrency($row1['price']/$per),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					$row1['headernote'],
				));
				$totqty += $row1['qty'];
				$totalnom += $row1['nominal']/$per;
				$totaldisk += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnett += $row1['netto']/$per;

			}
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','Keterangan : '.$row['headernote'],
				Yii::app()->format->formatNumber($totqty),
				'','Nominal',
				Yii::app()->format->formatCurrency($totalnom),
			));
			
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','','',
				'','Diskon',
				Yii::app()->format->formatCurrency($totaldisk),
			));
			
			$this->pdf->setFont('Arial','',9);
			$this->pdf->row(array(
				'','','',
				'','Netto',
				Yii::app()->format->formatCurrency($totalnett),
			));
						
			$totqty1 += $totqty;
			$totalnom1 += $totalnom;
			$totaldisk1 += $totaldisk;
			$totalnett1 += $totalnett;			
			$this->pdf->checkPageBreak(20);
		}

		$this->pdf->coldetailalign = array('C','R','R','R','R');
			$this->pdf->setwidths(array(40,30,40,40,40));
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
					'TOTAL RETUR PENJUALAN ',
					'QTY  '.Yii::app()->format->formatCurrency($totqty1),
					'NOMINAL  '.Yii::app()->format->formatCurrency($totalnom1),
					'DISKON  '.Yii::app()->format->formatCurrency($totaldisk1),
					'NETTO  '.Yii::app()->format->formatCurrency($totalnett1),						
			));
			$this->pdf->sety($this->pdf->gety()+10);			
			
			$this->pdf->coldetailalign = array('C','R','R','R','R');
			$this->pdf->setwidths(array(30,30,45,40,45));
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
					'GRAND TOTAL',
					'QTY  '.Yii::app()->format->formatCurrency($totalqty1-$totqty1),
					'NOMINAL  '.Yii::app()->format->formatCurrency($total1-$totalnom1),
					'DISKON  '.Yii::app()->format->formatCurrency($totaldisc1-$totaldisk1),
					'NETTO  '.Yii::app()->format->formatCurrency($totalnetto1-$totalnett1),
			));
			
			$this->pdf->Output();
	}
	//26
	public function RekapPenjualanReturPenjualanPerDokumen($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
		$sql = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
				(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
						where a.recordstatus = 3 and a.invoiceno is not null and
                  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
                  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
                  a.invoiceno is not null and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by invoiceno
                  )z group by invoiceno"; 
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Dokumen';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			$this->pdf->setFont('Arial','B',8);
                        $this->pdf->sety($this->pdf->gety()+10);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,20,20,40,30,25,25,25));
			$this->pdf->colheader = array('No','No Bukti','Tanggal','Customer','Nominal','Disc','Jumlah','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','L','L','R','R','R','L');		
			$total = 0;$i=0;$totalqty=0;
			foreach($dataReader as $row)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',7);
				$this->pdf->row(array(
					$i,$row['invoiceno'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row['invoicedate'])),
					$row['fullname'],
					Yii::app()->format->formatCurrency($row['nominal']/$per),
					Yii::app()->format->formatCurrency($row['disc']/$per),
					Yii::app()->format->formatCurrency($row['netto']/$per),
					$row['headernote']
				));				
                $totalnominal1 += $row['nominal']/$per;
                $totaldisc1 += $row['disc']/$per;
                $totaljumlah1 += $row['netto']/$per;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->colalign = array('C','C','C','C');
			$this->pdf->setwidths(array(40,40,40,40));
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
					'TOTAL PENJUALAN',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
						'JUMLAH : '.Yii::app()->format->formatCurrency($totaljumlah1),
			));
			
			$sqlo = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
            $commando=$this->connection->createCommand($sqlo);
            $dataReadero=$commando->queryAll();
            
            foreach($dataReadero as $row)
            {
                $this->pdf->companyid = $companyid;
            }
            
            $this->pdf->title='Rekap Retur Penjualan Per Dokumen';
            $this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
            $this->pdf->AddPage('P');
            $i=0;

            $this->pdf->sety($this->pdf->gety()+10);
            $this->pdf->setFont('Arial','B',10);
            $this->pdf->colalign = array('C','C','C','C','C','C','C');
            $this->pdf->setwidths(array(10,22,30,40,30,25,30));
            $this->pdf->colheader = array('No','Dokumen','Tanggal','Customer','Nominal','Diskons','Total');
            $this->pdf->RowHeader();
            $this->pdf->coldetailalign = array('L','L','L','L','R','R','R');
            
            foreach($dataReadero as $row)
            {
                $i+=1;
                $this->pdf->SetFont('Arial','',8);
                $this->pdf->row(array(
                        $i,$row['notagirno'],
                        $row['gireturdate'],
                        $row['fullname'],
                        Yii::app()->format->formatCurrency($row['nominal']/$per),
                        Yii::app()->format->formatCurrency(($row['nominal']/$per) - ($row['netto']/$per)),
                        Yii::app()->format->formatCurrency($row['netto']/$per),
                ));
                $totalnominal2 += $row['nominal']/$per;
                $totalppn2 += ($row['nominal']/$per) - ($row['netto']/$per);
                $totaljumlah2 += $row['netto']/$per;
                $this->pdf->checkPageBreak(20);
            }
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->row(array(
					'','','','TOTAL RETUR',
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totalppn2),
						Yii::app()->format->formatCurrency($totaljumlah2),
			));			
			$this->pdf->setFont('Arial','B',10);
			$this->pdf->colalign = array('C','R','R','R');
            $this->pdf->setwidths(array(40,50,50,50));
			$this->pdf->row(array(
					'GRAND TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1-$totalnominal2),
						'DISKON : '.Yii::app()->format->formatCurrency($totaldisc1-$totalppn2),
						'JUMLAH : '.Yii::app()->format->formatCurrency($totaljumlah1-$totaljumlah2),
			));
			$this->pdf->Output();
	}
	//27
	public function RekapPenjualanReturPenjualanPerCustomer($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;$totalnominal2=0;$totaldiskon2=0;$totalnetto2=0;
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";

		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
            
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
            
		$this->pdf->title='Rekap Penjualan - Retur Per Customer';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
			$sql1 = "select * from
							(select invoiceno as dokumen,invoicedate as tanggal,sum(nom) as nominal,(sum(nom)-sum(nett)) as diskon,sum(nett) as netto,headernote from
							(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						  from gidetail zzb 
						  join sodetail zza on zza.sodetailid = zzb.sodetailid
						  where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
							a.invoiceno is not null and a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
							and d.addressbookid = ".$row['addressbookid']." order by invoiceno)z group by invoiceno
							union
							select notagirno as dokumen,gireturdate as tanggal,sum(nom) as nominal,sum(disc) as diskon,sum(nett) as netto,headernote from
							(select distinct a.notagirproid,b.notagirno,(-1*a.qty*g.price) as nom,(-1*a.qty*g.price)-(-1*a.qty*a.price) as disc,
							(-1*a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno)zz order by dokumen";
					
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$totalppn = 0;$totalnominal=0;$total=0;$i=0;
			$this->pdf->sety($this->pdf->gety()+15);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,22,20,25,25,25,55));
			$this->pdf->colheader = array('No','No Dokumen','Tanggal','Nominal','Diskon','Netto','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','L');
			$this->pdf->setFont('Arial','',8);
			$totalnominal = 0;
			$totaldiskon = 0;
			$totalnetto = 0;
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row1['dokumen'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row1['tanggal'])),
					Yii::app()->format->formatCurrency($row1['nominal']/$per),
					Yii::app()->format->formatCurrency($row1['diskon']/$per),
					Yii::app()->format->formatCurrency($row1['netto']/$per),$row1['headernote']
				));
			$totalnominal += $row1['nominal']/$per;
			$totaldiskon += $row1['diskon']/$per;
			$totalnetto += $row1['netto']/$per;
			}
			$this->pdf->row(array(
				'','Total ','',
				Yii::app()->format->formatCurrency($totalnominal),
				Yii::app()->format->formatCurrency($totaldiskon),
				Yii::app()->format->formatCurrency($totalnetto),
			));
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->colalign = array('C','C','C','C');
		$this->pdf->setwidths(array(40,40,50,40));
		$this->pdf->setFont('Arial','B',9);
		$this->pdf->row(array(
			'TOTAL',
			'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
			'DISKON : '.Yii::app()->format->formatCurrency($totaldiskon1),
			'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1),
		));
					
		$this->pdf->Output();
  }
	//28
	public function RekapPenjualanReturPenjualanPerSales($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
		$sql = "select distinct employeeid,fullname from
			(select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%'
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Sales';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
						
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$sql1 = "select distinct fullname,sum(nominal) as nominal,sum(disc) as disc,sum(netto) as netto from
							(select fullname,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
                  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
                  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
                  a.invoiceno is not null and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
					and e.employeeid = ".$row['employeeid'].")z group by fullname
					union
					select fullname, -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by fullname) zz group by fullname order by fullname";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,80,30,30,30,30));
				$this->pdf->colheader = array('No','Nama Customer','Nominal','Disc','Netto');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;
				$totaldisc = 0;
				$total = 0;
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['fullname'],
						Yii::app()->format->formatCurrency($row1['nominal']/$per),
						Yii::app()->format->formatCurrency($row1['disc']/$per),
						Yii::app()->format->formatCurrency($row1['netto']/$per),
					));
					$totalnominal += $row1['nominal']/$per;
					$totaldisc += $row1['disc']/$per;
					$total += $row1['netto']/$per;
				}
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
						'','TOTAL SALES',
						Yii::app()->format->formatCurrency($totalnominal),
						Yii::app()->format->formatCurrency($totaldisc),
						Yii::app()->format->formatCurrency($total),
					));
					$totalnominal1 += $totalnominal;
					$totaldisc1 += $totaldisc;
					$totaljumlah1 += $total;
				$this->pdf->sety($this->pdf->gety()+5);	
				$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('C','C','C','C');
				$this->pdf->setwidths(array(30,50,50,50));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'TOTAL',
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
						'NETTO : '.Yii::app()->format->formatCurrency($totaljumlah1),
					));
			$this->pdf->Output();
	}
	//29
	public function RekapPenjualanReturPenjualanPerBarang($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
      parent::actionDownload();
			$totalqty1 = 0;$totalnominal1 = 0;$totaldiskon1 = 0;$totalnetto1 = 0;				
			$sql = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description";
			
            $command=$this->connection->createCommand($sql);
            $dataReader=$command->queryAll();
            
            foreach($dataReader as $row)
            {
                $this->pdf->companyid = $companyid;
            }
            
            $this->pdf->title='Rekap Penjualan - Retur Per Barang';
            $this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
            $this->pdf->AddPage('P');
			
            $this->pdf->sety($this->pdf->gety()+0);
            
            foreach($dataReader as $row)
            {
                $this->pdf->SetFont('Arial','',10);
                $this->pdf->text(10,$this->pdf->gety()+10,'Material Group');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['description']);
                $sql1 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row['materialgroupid']."
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row['materialgroupid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname)zz 
								group by productname order by productname";
                $command1=$this->connection->createCommand($sql1);
                $dataReader1=$command1->queryAll();
                $totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;$i=0;
                $this->pdf->sety($this->pdf->gety()+15);
                $this->pdf->setFont('Arial','B',8);
                $this->pdf->colalign = array('C','C','C','C','C','C','C');
                $this->pdf->setwidths(array(10,60,15,20,30,25,30));
                $this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
                $this->pdf->RowHeader();
                $this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
                $this->pdf->setFont('Arial','',8);
               
                foreach($dataReader1 as $row1)
                {
                    $i+=1;
                        $this->pdf->row(array(
                                $i,$row1['productname'],
                                Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['qty']),
                                Yii::app()->format->formatCurrency($row1['harga']/$per),
																Yii::app()->format->formatCurrency($row1['nominal']/$per),
                                Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
                                Yii::app()->format->formatCurrency($row1['netto']/$per),
                        ));
                        $totalqty += $row1['qty'];
                        $totalnominal += $row1['nominal']/$per;
												$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
                        $totalnetto += $row1['netto']/$per;
                }
                $this->pdf->row(array(
                        '','Total : '.$row['description'],
                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty),'',
                        Yii::app()->format->formatCurrency($totalnominal),
                        Yii::app()->format->formatCurrency($totaldiskon),
                        Yii::app()->format->formatCurrency($totalnetto),
                ));
					$totalqty1 += $totalqty;
					$totalnominal1 += $totalnominal;
					$totaldiskon1 += $totaldiskon;
					$totalnetto1 += $totalnetto;
                $this->pdf->checkPageBreak(20);
            }
			
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->colalign = array('C','R','R','R');
				$this->pdf->setwidths(array(30,30,45,40,45));
				$this->pdf->sety($this->pdf->gety()+5);
				$this->pdf->row(array(
						'GRAND TOTAL',
						'QTY  '.Yii::app()->format->formatCurrency($totalqty1),
						'NOMINAL  '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISKON  '.Yii::app()->format->formatCurrency($totaldiskon1),
						'NETTO  '.Yii::app()->format->formatCurrency($totalnetto1),
					));
            $this->pdf->Output();
  }
	//30
	public function RekapPenjualanReturPenjualanPerArea($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
			$totalqty1 = 0;
			$totalnominal1 = 0;
			$totaldiskon1 = 0;
			$totalnetto1 = 0;
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname";

		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Retur Penjualan Per Area';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Area');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row['areaname']);
			$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description";
			
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				foreach($dataReader1 as $row1)
				{
					$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
					$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								)z group by productname
								union
								select productname,-1*sum(qty),-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,a.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname)zz 
								group by productname order by productname";
					
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					$totalnetto = 0;$totalnominal=0;$totaldiskon=0;$i=0;$totalqty=0;
					$this->pdf->sety($this->pdf->gety()+20);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,80,20,30,20,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Diskon','Netto');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					foreach($dataReader2 as $row2)
					{
                        $i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row2['qty']),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['qty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldiskon += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;
					}
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','Total '.$row1['description'],
							Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldiskon),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldiskon1 += $totaldiskon;
						$totalnetto1 += $totalnetto;
					$this->pdf->checkPageBreak(20);
				}
		}
			$this->pdf->colalign = array('C','R','R','R');
			$this->pdf->setwidths(array(30,30,45,40,45));
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->sety($this->pdf->gety()+10);
			$this->pdf->row(array(
			'GRAND TOTAL :',
			'QTY  '.Yii::app()->format->formatCurrency($totalqty1),
			'NOMINAL  '.Yii::app()->format->formatCurrency($totalnominal1),
			'DISKON  '.Yii::app()->format->formatCurrency($totaldiskon1),
			'NETTO  '.Yii::app()->format->formatCurrency($totalnetto1),
			));
		$this->pdf->Output();
	}
	//31
	public function RekapPenjualanReturPenjualanPerCustomerPerBarangTotal($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from
							(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz group by barang
							union
							select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by barang) zz group by barang order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatCurrency($row1['qty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['qty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL CUSTOMER '.$row['fullname'],
							Yii::app()->format->formatCurrency($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//32
	public function RekapPenjualanReturPenjualanPerCustomerPerBarangRincian($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totaljumlah1=0;$totalnominal2=0;$totalppn2=0;$totaljumlah2=0;
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang - Rincian';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','',10);
					$this->pdf->text(10,$this->pdf->gety()+10,'Material Group');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row1['description']);
					$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." and d.addressbookid = ".$row['addressbookid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname)zz 
								group by productname order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+15);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,20,20,30,20,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['qty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['qty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;
						
					}
					$this->pdf->row(array(
							'','Total '.$row1['description'],
							Yii::app()->format->formatCurrency($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totaljumlah1 += $totalnetto;
						
					$this->pdf->checkPageBreak(20);
				}

			}
				$this->pdf->colalign = array('C','C','C','C','C');
				$this->pdf->setwidths(array(20,40,40,40,40));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'TOTAL',
						'QTY : '.Yii::app()->format->formatCurrency($totalqty1),
						'NOMINAL : '.Yii::app()->format->formatCurrency($totalnominal1),
						'DISCOUNT : '.Yii::app()->format->formatCurrency($totaldisc1),
						'JUMLAH : '.Yii::app()->format->formatCurrency($totaljumlah1),
					));
			$this->pdf->Output();
	}
	//33
	public function RekapPenjualanReturPenjualanPerSalesPerBarangTotal($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct employeeid,fullname from
			(select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%'
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Sales Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from 
							(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and e.employeeid = ".$row['employeeid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz group by barang
							union
							select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z group by barang) zz 
							group by barang order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatCurrency($row1['qty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['qty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL SALES '.$row['fullname'],
							Yii::app()->format->formatCurrency($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//34
	public function RekapPenjualanReturPenjualanPerSalesPerBarangRincian($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select distinct employeeid,fullname from
			(select distinct k.employeeid,k.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join employee k on k.employeeid = b.employeeid
				where j.recordstatus = 3 and j.invoiceno is not null 
				and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%'
				and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Sales Per Barang (Rincian)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Sales');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['fullname']);
				$this->pdf->sety($this->pdf->gety()+8);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,15,20,30,25,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zd.employeeid = ".$row['employeeid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','B',9);
					$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
					$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." and e.employeeid = ".$row['employeeid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname)zz 
								group by productname order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+7);
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['qty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['qty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;						
					}
					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatCurrency($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
										
				}
			
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL SALES '.$row['fullname'],
				Yii::app()->format->formatCurrency($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
			
			}
			
				$this->pdf->colalign = array('C','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty2),
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totaldisc2),
						Yii::app()->format->formatCurrency($totalnetto2),
					));
			$this->pdf->Output();
	}
	//35
	public function RekapPenjualanReturPenjualanPerAreaPerBarangTotal($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Area Per Barang - Total';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
									
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['areaname']);
				$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+8);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,60,20,35,30,35));
				$this->pdf->colheader = array('No','Material Group','Qty','Total','Disc','Netto');
				$this->pdf->RowHeader();
				
				$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from
							(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and f.salesareaid = ".$row['salesareaid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz group by barang
							union
							select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z group by barang) zz 
							group by barang order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$this->pdf->sety($this->pdf->gety()+2);
				$this->pdf->coldetailalign = array('L','L','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				$totalnominal = 0;$totalqty = 0;$totaldisc = 0;$totalnetto = 0;
					
				foreach($dataReader1 as $row1)
				{
						$i+=1;
						$this->pdf->row(array(
							$i,$row1['barang'],
							Yii::app()->format->formatCurrency($row1['qty']),
							Yii::app()->format->formatCurrency($row1['nominal']/$per),
							Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)),
							Yii::app()->format->formatCurrency($row1['netto']/$per),
						));
						$totalqty += $row1['qty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;						
				}
					$this->pdf->setFont('Arial','B',9);
					$this->pdf->row(array(
							'','TOTAL AREA '.$row['areaname'],
							Yii::app()->format->formatCurrency($totalqty),
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
					$this->pdf->sety($this->pdf->gety()+3);	
					$this->pdf->checkPageBreak(20);
			}
				$this->pdf->colalign = array('L','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty1),
						Yii::app()->format->formatCurrency($totalnominal1),
						Yii::app()->format->formatCurrency($totaldisc1),
						Yii::app()->format->formatCurrency($totalnetto1),
					));
					
			$this->pdf->Output();
	}
	//36
	public function RekapPenjualanReturPenjualanPerAreaPerBarangRincian($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnominal2=0;$totalqty2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Area Per Barang (Rincian)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','B',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Area');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row['areaname']);
				$this->pdf->sety($this->pdf->gety()+8);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,15,20,30,25,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Price','Total','Disc','Netto');
					$this->pdf->RowHeader();
					$totalnominal1=0;$totalqty1=0;$totaldisc1=0;$totalnetto1=0;
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','B',9);
					$this->pdf->text(10,$this->pdf->gety()+5,'Material Group');$this->pdf->text(40,$this->pdf->gety()+5,': '.$row1['description']);
					$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname)zz 
								group by productname order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+7);
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totalnominal = 0;
					$totalqty = 0;
					$totaldisc = 0;
					$totalnetto = 0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['qty']),
							Yii::app()->format->formatCurrency($row2['harga']/$per),
							Yii::app()->format->formatCurrency($row2['nominal']/$per),
							Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)),
							Yii::app()->format->formatCurrency($row2['netto']/$per),
						));
						$totalqty += $row2['qty'];
						$totalnominal += $row2['nominal']/$per;
						$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
						$totalnetto += $row2['netto']/$per;						
					}
					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
							'','TOTAL '.$row1['description'],
							Yii::app()->format->formatCurrency($totalqty),'',
							Yii::app()->format->formatCurrency($totalnominal),
							Yii::app()->format->formatCurrency($totaldisc),
							Yii::app()->format->formatCurrency($totalnetto),
						));
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldisc1 += $totaldisc;
						$totalnetto1 += $totalnetto;
										
				}
			
			$this->pdf->setFont('Arial','BI',9);
			$this->pdf->row(array(
				'','TOTAL AREA '.$row['areaname'],
				Yii::app()->format->formatCurrency($totalqty1),'',
				Yii::app()->format->formatCurrency($totalnominal1),
				Yii::app()->format->formatCurrency($totaldisc1),
				Yii::app()->format->formatCurrency($totalnetto1),
				));
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totalnetto2 += $totalnetto1;
				
			$this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->checkPageBreak(20);
			
			}
			
				$this->pdf->colalign = array('C','R','R','R','R');
				$this->pdf->setwidths(array(70,20,35,30,35));
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->row(array(
						'GRAND TOTAL',
						Yii::app()->format->formatCurrency($totalqty2),
						Yii::app()->format->formatCurrency($totalnominal2),
						Yii::app()->format->formatCurrency($totaldisc2),
						Yii::app()->format->formatCurrency($totalnetto2),
					));
			$this->pdf->Output();
	}
	//37
	public function RincianSalesOrderPerDokumen($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.soheaderid,a.sodate,a.sono,b.fullname as customer,d.fullname as sales,g.slocid,a.headernote,
			c.paydays
			from soheader a
			join addressbook b on b.addressbookid = a.addressbookid
			join paymentmethod c on c.paymentmethodid = a.paymentmethodid
			join employee d on d.employeeid = a.employeeid
			join salesarea e on e.salesareaid = b.salesareaid
			join sodetail f on f.soheaderid = a.soheaderid
			join sloc g on g.slocid = f.slocid
			where a.recordstatus = 6 and b.fullname like '%".$customer."%' and a.companyid = ".$companyid." and 
			d.fullname like '%".$employee."%' and e.areaname like '%".$salesarea."%' and 
			a.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
			'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
			and f.productid in 
			(select x.productid 
			from productplant x 
			join product xx on xx.productid = x.productid 
			join sloc xa on xa.slocid = x.slocid
			where xx.productname like '%".$product."%' and 
			xa.sloccode like '%".$sloc."%') group by soheaderid";	
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rincian Sales Order Per Dokumen';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'No SO');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['sono']);
				$this->pdf->text(10,$this->pdf->gety()+15,'Sales');$this->pdf->text(30,$this->pdf->gety()+15,': '.$row['sales']);
				$this->pdf->text(10,$this->pdf->gety()+20,'Customer');$this->pdf->text(30,$this->pdf->gety()+20,': '.$row['customer']);
				$this->pdf->text(150,$this->pdf->gety()+10,'Tgl SO');$this->pdf->text(180,$this->pdf->gety()+10,': '.date(Yii::app()->params['dateviewfromdb'], strtotime($row['sodate'])));
				$this->pdf->text(150,$this->pdf->gety()+20,'T.O.P');$this->pdf->text(180,$this->pdf->gety()+20,': '.$row['paydays'].' HARI');
				$sql1 = "select b.productname, a.qty,c.uomcode,a.price,(qty * price) + (e.taxvalue * qty * price / 100) as jumlah,
						gettotalamountdiscso(a.soheaderid) as amountafterdisc
						from sodetail a 
						inner join product b on b.productid = a.productid
						inner join unitofmeasure c on c.unitofmeasureid = a.unitofmeasureid
						left join currency d on d.currencyid = a.currencyid
						left join soheader f on f.soheaderid = a.soheaderid 
						left join tax e on e.taxid = f.taxid
						where b.productname like '%".$product."%' and a.soheaderid = '".$row['soheaderid']."'";
				
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$total = 0;$i=0;$totalqty=0;
				$this->pdf->sety($this->pdf->gety()+25);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,80,20,20,30,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Satuan','Harga','Jumlah');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','C','R','R');
				$this->pdf->setFont('Arial','',8);
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatNumber($row1['qty']),$row1['uomcode'],
						Yii::app()->format->formatCurrency($row1['price']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per),
					));
					$totalqty += $row1['qty'];
					$total += $row1['jumlah']/$per;
					$disc = ($row1['amountafterdisc']/$per) - $total;
				}
				$this->pdf->row(array(
						'','Total',
						Yii::app()->format->formatNumber($totalqty),'',
						'',
						Yii::app()->format->formatCurrency($total),
					));
				$this->pdf->row(array(
						'','',
						'',
						'',
						'Disc',
						Yii::app()->format->formatCurrency($disc),
					));
				$this->pdf->row(array(
						'','',
						'',
						'',
						'Netto',
						Yii::app()->format->formatCurrency($row1['amountafterdisc']/$per),
					));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}
	//38
	public function RincianSalesOrderOutstanding($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnetto=0;
		$sql = "select a.soheaderid,a.sodate,a.sono,b.fullname as customer,d.fullname as sales,g.slocid,a.headernote,
						c.paydays
						from soheader a
						join addressbook b on b.addressbookid = a.addressbookid
						join paymentmethod c on c.paymentmethodid = a.paymentmethodid
						join employee d on d.employeeid = a.employeeid
						join salesarea e on e.salesareaid = b.salesareaid
						join sodetail f on f.soheaderid = a.soheaderid
						join sloc g on g.slocid = f.slocid
						where a.recordstatus = 6 and f.qty > f.giqty and a.companyid = ".$companyid." and 
						d.fullname like '%".$employee."%' and b.fullname like '%".$customer."%' and e.areaname like '%".$salesarea."%' and 
						a.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
						'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and f.productid in 
						(select x.productid 
						from sodetail x 
						join product xx on xx.productid = x.productid 
						join sloc xa on xa.slocid = x.slocid
						where xx.productname like '%".$product."%' and x.giqty < x.qty and xx.isstock = 1 and 
						xa.sloccode like '%".$sloc."%') group by soheaderid";	
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rincian Sales Order Outstanding';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			
			$this->pdf->AddPage('P');
			
			foreach($dataReader as $row)
			{
				$this->pdf->sety($this->pdf->gety() + 5);
				$this->pdf->setFont('Arial','B',9);
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'No SO');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['sono']);
				$this->pdf->text(10,$this->pdf->gety()+15,'Sales');$this->pdf->text(30,$this->pdf->gety()+15,': '.$row['sales']);
				$this->pdf->text(10,$this->pdf->gety()+20,'Customer');$this->pdf->text(30,$this->pdf->gety()+20,': '.$row['customer']);
				$this->pdf->text(150,$this->pdf->gety()+10,'Tgl SO');$this->pdf->text(180,$this->pdf->gety()+10,': '.date(Yii::app()->params['dateviewfromdb'], strtotime($row['sodate'])));
				$this->pdf->text(150,$this->pdf->gety()+20,'T.O.P');$this->pdf->text(180,$this->pdf->gety()+20,': '.$row['paydays'].' HARI');
				
				$sql1 = "select productname, giqty, qty, price, uomcode, jumlah, amountafterdisc from (select b.productname, a.qty, a.giqty, c.uomcode,a.price,(qty * price) + (e.taxvalue * qty * price / 100) as jumlah, a.qty-ifnull(a.giqty,0) as sisa, gettotalamountdiscso(a.soheaderid) as amountafterdisc
										from sodetail a 
										inner join product b on b.productid = a.productid
										inner join unitofmeasure c on c.unitofmeasureid = a.unitofmeasureid
										left join currency d on d.currencyid = a.currencyid
										left join soheader f on f.soheaderid = a.soheaderid 
										left join tax e on e.taxid = f.taxid
										join product g on g.productid = a.productid
										where b.productname like '%".$product."%' and g.isstock = 1 and a.soheaderid = '".$row['soheaderid']."') z 
										where sisa > 0";
				
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$total = 0;$i=0;$totalqty=0;$totalgiqty=0;
				
				$this->pdf->sety($this->pdf->gety()+25);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,65,20,20,15,30,30));
				$this->pdf->colheader = array('No','Nama Barang','Qty','Qty Gi','Satuan','Harga','Jumlah');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','C','R','R');
				$this->pdf->setFont('Arial','',8);
				
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatNumber($row1['qty']),
						Yii::app()->format->formatNumber($row1['giqty']),
						$row1['uomcode'],
						Yii::app()->format->formatCurrency($row1['price']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per),
					));
					$totalqty += $row1['qty'];
					$totalgiqty += $row1['giqty'];
					$total += $row1['jumlah']/$per;
					$disc = ($row1['amountafterdisc']/$per) - $total;
				}
				$this->pdf->row(array(
						'','Total',
						Yii::app()->format->formatNumber($totalqty),
						Yii::app()->format->formatNumber($totalgiqty),'',
						Yii::app()->format->formatCurrency($total),
					));
				$this->pdf->row(array(
						'','',
						'',
						'',
						'Disc',
						Yii::app()->format->formatCurrency($disc),
					));
				$this->pdf->row(array(
						'','',
						'',
						'',
						'Netto',
						Yii::app()->format->formatCurrency($row1['amountafterdisc']/$per),
					));
				$totalnetto+=$row1['amountafterdisc']/$per;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->sety($this->pdf->gety()+10);
			$this->pdf->setFont('Arial','B',9);
			$this->pdf->setwidths(array(10,65,85,30));
			$this->pdf->coldetailalign = array('L','R','R','R');
			$this->pdf->row(array(
					'',
					'Netto',
					Yii::app()->format->formatCurrency($totalnetto),
					'',
				));
		
		$this->pdf->Output();
	}
	//39
	public function RekapSuratJalanBelumDibuatkanFaktur($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.gino,a.gidate,c.fullname as customer,d.fullname as sales,a.headernote
                        from giheader a
                        join soheader b on b.soheaderid = a.soheaderid
                        join addressbook c on c.addressbookid = b.addressbookid
                        join employee d on d.employeeid = b.employeeid
                        join salesarea e on e.salesareaid = c.salesareaid
                        join gidetail f on f.giheaderid = a.giheaderid
                        join sloc g on g.slocid = f.slocid
                        join product h on h.productid = f.productid
                        where a.giheaderid not in
                        (select t.giheaderid from invoice t)
                        and a.gino is not null
                        and b.companyid = ".$companyid." and g.sloccode like '%".$sloc."%' and c.fullname like '%".$customer."%' and
                         d.fullname like '%".$employee."%' and e.areaname like '%".$salesarea."%' and h.productname like '%".$product."%' and
                         a.gidate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
			and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by gino,customer,sales order by gino";
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Surat Jalan Belum Dibuatkan Faktur';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			$this->pdf->setFont('Arial','B',8);
                        $this->pdf->sety($this->pdf->gety()+5);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,20,20,60,55,25));
			$this->pdf->colheader = array('No','No Bukti','Tanggal','Customer','Sales','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','C','C','L','L','L');		
			$total = 0;$i=0;$totalqty=0;
			foreach($dataReader as $row)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',7);
				$this->pdf->row(array(
					$i,$row['gino'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row['gidate'])),
					$row['customer'],
					$row['sales'],
					$row['headernote']
				));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	} 
	//40
	public function RekapPenjualanPerCustomerPerBulanPerTahun($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null order by fullname asc) zz
					where zz.jumlah <> 0"; 
		
			$command=$this->connection->createCommand($sql);
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Customer Per Bulan';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
			$this->pdf->AddPage('P',array(400,140));
			
			$this->pdf->setFont('Arial','B',8);
            $this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');		
			
			foreach($dataReader as $row)
			{
				$this->pdf->setFont('Arial','',7);
				$i=$i+1;
				$this->pdf->row(array(
					$i,$row['fullname'],
					Yii::app()->format->formatCurrency($row['januari']/$per),
					Yii::app()->format->formatCurrency($row['februari']/$per),
					Yii::app()->format->formatCurrency($row['maret']/$per),
					Yii::app()->format->formatCurrency($row['april']/$per),
					Yii::app()->format->formatCurrency($row['mei']/$per),
					Yii::app()->format->formatCurrency($row['juni']/$per),
					Yii::app()->format->formatCurrency($row['juli']/$per),
					Yii::app()->format->formatCurrency($row['agustus']/$per),
					Yii::app()->format->formatCurrency($row['september']/$per),
					Yii::app()->format->formatCurrency($row['oktober']/$per),
					Yii::app()->format->formatCurrency($row['nopember']/$per),
					Yii::app()->format->formatCurrency($row['desember']/$per),
					Yii::app()->format->formatCurrency($row['jumlah']/$per)
				));
				$totaljanuari += $row['januari']/$per;
        $totalfebruari += $row['februari']/$per;
				$totalmaret += $row['maret']/$per;
				$totalapril += $row['april']/$per;
				$totalmei += $row['mei']/$per;
				$totaljuni += $row['juni']/$per;
				$totaljuli += $row['juli']/$per;
				$totalagustus += $row['agustus']/$per;
				$totalseptember += $row['september']/$per;
				$totaloktober += $row['oktober']/$per;
				$totalnopember += $row['nopember']/$per;
				$totaldesember += $row['desember']/$per;
				$totaljumlah += $row['jumlah']/$per;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
					'','TOTAL',
						Yii::app()->format->formatCurrency($totaljanuari),
						Yii::app()->format->formatCurrency($totalfebruari),
						Yii::app()->format->formatCurrency($totalmaret),
						Yii::app()->format->formatCurrency($totalapril),
						Yii::app()->format->formatCurrency($totalmei),
						Yii::app()->format->formatCurrency($totaljuni),
						Yii::app()->format->formatCurrency($totaljuli),
						Yii::app()->format->formatCurrency($totalagustus),
						Yii::app()->format->formatCurrency($totalseptember),
						Yii::app()->format->formatCurrency($totaloktober),
						Yii::app()->format->formatCurrency($totalnopember),
						Yii::app()->format->formatCurrency($totaldesember),
						Yii::app()->format->formatCurrency($totaljumlah),
			));
			$this->pdf->Output();
	}
	//41
	public function RekapReturPenjualanPerCustomerPerBulanPerTahun($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null order by fullname asc) zz
				where zz.jumlah <> 0"; 
		
			$command=$this->connection->createCommand($sql);
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Retur Penjualan Per Customer Per Bulan';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
			$this->pdf->AddPage('P',array(400,140));
			
			$this->pdf->setFont('Arial','B',8);
            $this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');		
			
			foreach($dataReader as $row)
			{
				$this->pdf->setFont('Arial','',7);
				$i=$i+1;
				$this->pdf->row(array(
					$i,$row['fullname'],
					Yii::app()->format->formatCurrency($row['januari']/$per),
					Yii::app()->format->formatCurrency($row['februari']/$per),
					Yii::app()->format->formatCurrency($row['maret']/$per),
					Yii::app()->format->formatCurrency($row['april']/$per),
					Yii::app()->format->formatCurrency($row['mei']/$per),
					Yii::app()->format->formatCurrency($row['juni']/$per),
					Yii::app()->format->formatCurrency($row['juli']/$per),
					Yii::app()->format->formatCurrency($row['agustus']/$per),
					Yii::app()->format->formatCurrency($row['september']/$per),
					Yii::app()->format->formatCurrency($row['oktober']/$per),
					Yii::app()->format->formatCurrency($row['nopember']/$per),
					Yii::app()->format->formatCurrency($row['desember']/$per),
					Yii::app()->format->formatCurrency($row['jumlah']/$per)
				));
				$totaljanuari += $row['januari']/$per;
        $totalfebruari += $row['februari']/$per;
				$totalmaret += $row['maret']/$per;
				$totalapril += $row['april']/$per;
				$totalmei += $row['mei']/$per;
				$totaljuni += $row['juni']/$per;
				$totaljuli += $row['juli']/$per;
				$totalagustus += $row['agustus']/$per;
				$totalseptember += $row['september']/$per;
				$totaloktober += $row['oktober']/$per;
				$totalnopember += $row['nopember']/$per;
				$totaldesember += $row['desember']/$per;
				$totaljumlah += $row['jumlah']/$per;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
					'','TOTAL',
						Yii::app()->format->formatCurrency($totaljanuari),
						Yii::app()->format->formatCurrency($totalfebruari),
						Yii::app()->format->formatCurrency($totalmaret),
						Yii::app()->format->formatCurrency($totalapril),
						Yii::app()->format->formatCurrency($totalmei),
						Yii::app()->format->formatCurrency($totaljuni),
						Yii::app()->format->formatCurrency($totaljuli),
						Yii::app()->format->formatCurrency($totalagustus),
						Yii::app()->format->formatCurrency($totalseptember),
						Yii::app()->format->formatCurrency($totaloktober),
						Yii::app()->format->formatCurrency($totalnopember),
						Yii::app()->format->formatCurrency($totaldesember),
						Yii::app()->format->formatCurrency($totaljumlah),
			));
			$this->pdf->Output();
	}
	//42
	public function RekapPenjualanReturPenjualanPerCustomerPerBulanPerTahun($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null order by fullname asc) zz
				where zz.jumlah <> 0"; 
		
			$command=$this->connection->createCommand($sql);
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Bulan';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
			$this->pdf->AddPage('P',array(400,140));
			
			$this->pdf->setFont('Arial','B',8);
            $this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');		
			
			foreach($dataReader as $row)
			{
				$this->pdf->setFont('Arial','',7);
				$i=$i+1;
				$this->pdf->row(array(
					$i,$row['fullname'],
					Yii::app()->format->formatCurrency($row['januari']/$per),
					Yii::app()->format->formatCurrency($row['februari']/$per),
					Yii::app()->format->formatCurrency($row['maret']/$per),
					Yii::app()->format->formatCurrency($row['april']/$per),
					Yii::app()->format->formatCurrency($row['mei']/$per),
					Yii::app()->format->formatCurrency($row['juni']/$per),
					Yii::app()->format->formatCurrency($row['juli']/$per),
					Yii::app()->format->formatCurrency($row['agustus']/$per),
					Yii::app()->format->formatCurrency($row['september']/$per),
					Yii::app()->format->formatCurrency($row['oktober']/$per),
					Yii::app()->format->formatCurrency($row['nopember']/$per),
					Yii::app()->format->formatCurrency($row['desember']/$per),
					Yii::app()->format->formatCurrency($row['jumlah']/$per)
				));
				$totaljanuari += $row['januari']/$per;
        $totalfebruari += $row['februari']/$per;
				$totalmaret += $row['maret']/$per;
				$totalapril += $row['april']/$per;
				$totalmei += $row['mei']/$per;
				$totaljuni += $row['juni']/$per;
				$totaljuli += $row['juli']/$per;
				$totalagustus += $row['agustus']/$per;
				$totalseptember += $row['september']/$per;
				$totaloktober += $row['oktober']/$per;
				$totalnopember += $row['nopember']/$per;
				$totaldesember += $row['desember']/$per;
				$totaljumlah += $row['jumlah']/$per;
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
					'','TOTAL',
						Yii::app()->format->formatCurrency($totaljanuari),
						Yii::app()->format->formatCurrency($totalfebruari),
						Yii::app()->format->formatCurrency($totalmaret),
						Yii::app()->format->formatCurrency($totalapril),
						Yii::app()->format->formatCurrency($totalmei),
						Yii::app()->format->formatCurrency($totaljuni),
						Yii::app()->format->formatCurrency($totaljuli),
						Yii::app()->format->formatCurrency($totalagustus),
						Yii::app()->format->formatCurrency($totalseptember),
						Yii::app()->format->formatCurrency($totaloktober),
						Yii::app()->format->formatCurrency($totalnopember),
						Yii::app()->format->formatCurrency($totaldesember),
						Yii::app()->format->formatCurrency($totaljumlah),
			));
			$this->pdf->Output();
	}
	//43
	public function RekapPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					join salesarea d on d.salesareaid=a.salesareaid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan Per Jenis Customer Per Bulan Per Tahun';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
		
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+0);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{	
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'JENIS CUSTOMER ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['jenis']);
			$this->pdf->sety($this->pdf->gety()+7);
			$sql1 = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					join addressaccount za on za.addressbookid=z.addressbookid
					join salesarea zb on zb.salesareaid=z.salesareaid
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
					and za.recordstatus =1 and za.companyid=".$companyid." and zb.areaname like '%".$salesarea."%'
					and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
					where zz.jumlah <> 0"; 
			
				$command1=$this->connection->createCommand($sql1);
				$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->setFont('Arial','',7);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['fullname'],
						Yii::app()->format->formatCurrency($row1['januari']/$per),
						Yii::app()->format->formatCurrency($row1['februari']/$per),
						Yii::app()->format->formatCurrency($row1['maret']/$per),
						Yii::app()->format->formatCurrency($row1['april']/$per),
						Yii::app()->format->formatCurrency($row1['mei']/$per),
						Yii::app()->format->formatCurrency($row1['juni']/$per),
						Yii::app()->format->formatCurrency($row1['juli']/$per),
						Yii::app()->format->formatCurrency($row1['agustus']/$per),
						Yii::app()->format->formatCurrency($row1['september']/$per),
						Yii::app()->format->formatCurrency($row1['oktober']/$per),
						Yii::app()->format->formatCurrency($row1['nopember']/$per),
						Yii::app()->format->formatCurrency($row1['desember']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per)
					));
					$totaljanuari += $row1['januari']/$per;
					$totalfebruari += $row1['februari']/$per;
					$totalmaret += $row1['maret']/$per;
					$totalapril += $row1['april']/$per;
					$totalmei += $row1['mei']/$per;
					$totaljuni += $row1['juni']/$per;
					$totaljuli += $row1['juli']/$per;
					$totalagustus += $row1['agustus']/$per;
					$totalseptember += $row1['september']/$per;
					$totaloktober += $row1['oktober']/$per;
					$totalnopember += $row1['nopember']/$per;
					$totaldesember += $row1['desember']/$per;
					$totaljumlah += $row1['jumlah']/$per;
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
				$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row['jenis'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah),
				));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	//44
	public function RekapReturPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Retur Penjualan Per Jenis Customer Per Bulan';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
		
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+0);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{	
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'JENIS CUSTOMER ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['jenis']);
			$this->pdf->sety($this->pdf->gety()+7);
			$sql1 = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
				$command1=$this->connection->createCommand($sql1);
				$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->setFont('Arial','',7);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['fullname'],
						Yii::app()->format->formatCurrency($row1['januari']/$per),
						Yii::app()->format->formatCurrency($row1['februari']/$per),
						Yii::app()->format->formatCurrency($row1['maret']/$per),
						Yii::app()->format->formatCurrency($row1['april']/$per),
						Yii::app()->format->formatCurrency($row1['mei']/$per),
						Yii::app()->format->formatCurrency($row1['juni']/$per),
						Yii::app()->format->formatCurrency($row1['juli']/$per),
						Yii::app()->format->formatCurrency($row1['agustus']/$per),
						Yii::app()->format->formatCurrency($row1['september']/$per),
						Yii::app()->format->formatCurrency($row1['oktober']/$per),
						Yii::app()->format->formatCurrency($row1['nopember']/$per),
						Yii::app()->format->formatCurrency($row1['desember']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per)
					));
					$totaljanuari += $row1['januari']/$per;
					$totalfebruari += $row1['februari']/$per;
					$totalmaret += $row1['maret']/$per;
					$totalapril += $row1['april']/$per;
					$totalmei += $row1['mei']/$per;
					$totaljuni += $row1['juni']/$per;
					$totaljuli += $row1['juli']/$per;
					$totalagustus += $row1['agustus']/$per;
					$totalseptember += $row1['september']/$per;
					$totaloktober += $row1['oktober']/$per;
					$totalnopember += $row1['nopember']/$per;
					$totaldesember += $row1['desember']/$per;
					$totaljumlah += $row1['jumlah']/$per;
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
				$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row['jenis'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah),
				));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	//45
	public function RekapPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Jenis Customer Per Bulan';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
		
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+0);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{	
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'JENIS CUSTOMER ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['jenis']);
			$this->pdf->sety($this->pdf->gety()+7);
			$sql1 = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
				$command1=$this->connection->createCommand($sql1);
				$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->setFont('Arial','',7);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['fullname'],
						Yii::app()->format->formatCurrency($row1['januari']/$per),
						Yii::app()->format->formatCurrency($row1['februari']/$per),
						Yii::app()->format->formatCurrency($row1['maret']/$per),
						Yii::app()->format->formatCurrency($row1['april']/$per),
						Yii::app()->format->formatCurrency($row1['mei']/$per),
						Yii::app()->format->formatCurrency($row1['juni']/$per),
						Yii::app()->format->formatCurrency($row1['juli']/$per),
						Yii::app()->format->formatCurrency($row1['agustus']/$per),
						Yii::app()->format->formatCurrency($row1['september']/$per),
						Yii::app()->format->formatCurrency($row1['oktober']/$per),
						Yii::app()->format->formatCurrency($row1['nopember']/$per),
						Yii::app()->format->formatCurrency($row1['desember']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per)
					));
					$totaljanuari += $row1['januari']/$per;
					$totalfebruari += $row1['februari']/$per;
					$totalmaret += $row1['maret']/$per;
					$totalapril += $row1['april']/$per;
					$totalmei += $row1['mei']/$per;
					$totaljuni += $row1['juni']/$per;
					$totaljuli += $row1['juli']/$per;
					$totalagustus += $row1['agustus']/$per;
					$totalseptember += $row1['september']/$per;
					$totaloktober += $row1['oktober']/$per;
					$totalnopember += $row1['nopember']/$per;
					$totaldesember += $row1['desember']/$per;
					$totaljumlah += $row1['jumlah']/$per;
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
				$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row['jenis'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah),
				));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	//46
	public function RekapTotalPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Total Penjualan Per Jenis Customer Per Bulan';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
		
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+0);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{	
			$sql1 = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					join addressaccount za on za.addressbookid=z.addressbookid
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
					and za.recordstatus =1 and za.companyid=".$companyid." 
					and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
					where zz.jumlah <> 0"; 
			
				$command1=$this->connection->createCommand($sql1);
				$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$totaljanuari += $row1['januari']/$per;
					$totalfebruari += $row1['februari']/$per;
					$totalmaret += $row1['maret']/$per;
					$totalapril += $row1['april']/$per;
					$totalmei += $row1['mei']/$per;
					$totaljuni += $row1['juni']/$per;
					$totaljuli += $row1['juli']/$per;
					$totalagustus += $row1['agustus']/$per;
					$totalseptember += $row1['september']/$per;
					$totaloktober += $row1['oktober']/$per;
					$totalnopember += $row1['nopember']/$per;
					$totaldesember += $row1['desember']/$per;
					$totaljumlah += $row1['jumlah']/$per;
					$this->pdf->checkPageBreak(20);
				}
				$i=$i+1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,$row['jenis'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah),
				));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	//47
	public function RekapTotalReturPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Total Retur Penjualan Per Jenis Customer Per Bulan';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
		
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+0);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{	
			$sql1 = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
				$command1=$this->connection->createCommand($sql1);
				$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$totaljanuari += $row1['januari']/$per;
					$totalfebruari += $row1['februari']/$per;
					$totalmaret += $row1['maret']/$per;
					$totalapril += $row1['april']/$per;
					$totalmei += $row1['mei']/$per;
					$totaljuni += $row1['juni']/$per;
					$totaljuli += $row1['juli']/$per;
					$totalagustus += $row1['agustus']/$per;
					$totalseptember += $row1['september']/$per;
					$totaloktober += $row1['oktober']/$per;
					$totalnopember += $row1['nopember']/$per;
					$totaldesember += $row1['desember']/$per;
					$totaljumlah += $row1['jumlah']/$per;
					$this->pdf->checkPageBreak(20);
				}
				$i=$i+1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,$row['jenis'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah),
				));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	//48
	public function RekapTotalPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahun($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
				
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Total Penjualan - Retur Per Jenis Customer Per Bulan';
		$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate));
		$this->pdf->AddPage('P',array(400,140));
		
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->sety($this->pdf->gety()+0);
		$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->colheader = array('No','Customer','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
		$this->pdf->RowHeader();
		$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{	
			$sql1 = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
				$command1=$this->connection->createCommand($sql1);
				$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$totaljanuari += $row1['januari']/$per;
					$totalfebruari += $row1['februari']/$per;
					$totalmaret += $row1['maret']/$per;
					$totalapril += $row1['april']/$per;
					$totalmei += $row1['mei']/$per;
					$totaljuni += $row1['juni']/$per;
					$totaljuli += $row1['juli']/$per;
					$totalagustus += $row1['agustus']/$per;
					$totalseptember += $row1['september']/$per;
					$totaloktober += $row1['oktober']/$per;
					$totalnopember += $row1['nopember']/$per;
					$totaldesember += $row1['desember']/$per;
					$totaljumlah += $row1['jumlah']/$per;
					$this->pdf->checkPageBreak(20);
				}
				$i=$i+1;
				$this->pdf->setFont('Arial','',8);
				$this->pdf->row(array(
					$i,$row['jenis'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah),
				));
				
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1),
		));
		
		$this->pdf->Output();
	}
	/*public function RekapPenjualanPerGrupMaterial($companyid,$sloc,$customer,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select *,nominal-netto as disc
                        from
                        (
                        select distinct a.materialgroupid,a.description,
                        (
                        select sum(a.qty)
                        from gidetail a
                        join sodetail b on b.sodetailid = a.sodetailid
                        join soheader c on c.soheaderid = b.soheaderid
                        where a.productid = b.productid and c.companyid = ".$companyid." and c.recordstatus > 3
                                and c.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                                and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        ) as qty,
                        (
                        select sum(a.qty * b.price)
                        from gidetail a
                        join sodetail b on b.sodetailid = a.sodetailid
                        join soheader c on c.soheaderid = b.soheaderid
                        where a.productid = b.productid and c.companyid = ".$companyid." and c.recordstatus > 3
                                and c.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                                and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        ) as nominal,
                        (
                        select sum(getamountinvgi(a.giheaderid,b.soheaderid))
                        from gidetail a
                        join sodetail b on b.sodetailid = a.sodetailid
                        join soheader c on c.soheaderid = b.soheaderid
                        where a.productid = b.productid and c.companyid = ".$companyid." and c.recordstatus > 3
                                and c.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                                and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        ) as netto
                        from materialgroup a
                        join productplant b on b.materialgroupid = a.materialgroupid
                        where b.productid in 
                        (
                        select distinct a.productid
                        from gidetail a
                        join sodetail b on b.sodetailid = a.sodetailid
                        join soheader c on c.soheaderid = b.soheaderid
                        where a.productid = b.productid and c.companyid = ".$companyid." and c.recordstatus > 3
                                and c.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                                and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        )
                        ) zzz";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rincian Penjualan Per Dokumen (Basis Invoice)';
			$this->pdf->text(10,$this->pdf->gety()+10,'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)));
			$this->pdf->AddPage('P');
			$total = 0;$i=0;$totalqty=0;
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,70,20,30,30,30));
			$this->pdf->colheader = array('No','Nama Grup','Qty','Nominal','Disc','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			
			foreach($dataReader as $row)

			{
				$i+=1;
				$this->pdf->row(array(
					$i,$row['description'],
					Yii::app()->format->formatNumber($row['qty']),
					Yii::app()->format->formatCurrency($row['nominal']),
					Yii::app()->format->formatCurrency($row['disc']),
					Yii::app()->format->formatCurrency($row['netto']),
				));
				$totalqty += $row['qty'];
				$total += $row['netto'];
			}
			$this->pdf->row(array(
					'',
					'Total',
					Yii::app()->format->formatNumber($row['qty']),
					Yii::app()->format->formatCurrency($row['nominal']),
					Yii::app()->format->formatCurrency($row['disc']),
					Yii::app()->format->formatCurrency($row['netto']),
				));
			$this->pdf->checkPageBreak(20);
			$this->pdf->Output();
	}
	
	public function RekapPenjualanPerSalesBarang($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.employeeid,a.fullname
		from employee a 
		where a.employeeid in (select employeeid from soheader b
		where b.companyid = ".$companyid." and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
		and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')";

		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Penjualan Per Sales - Barang (Basis Invoice)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Sales');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
			$sql1 = "select a.materialgroupid,a.description
				from materialgroup a
				where a.materialgroupid in
				(
					select c.materialgroupid
					from gidetail b 
					join sodetail d on d.sodetailid = b.sodetailid
					join soheader e on e.soheaderid = d.soheaderid
					join productplant c on c.productid = b.productid
					where e.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and e.companyid = ".$companyid."
				)";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				foreach($dataReader1 as $row1)
				{
					$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
					$sql2 = "select *,nominal-disc as netto
                                        from
                                        (
                                        select distinct a.productid,e.productname,
                                        (
                                        select sum(zzb.qty)
                                        from gidetail zzb 
                                        where zzb.productid = a.productid
                                        ) as qty,
                                        (
                                        select sum(zzb.qty * zza.price)
                                        from gidetail zzb 
                                        join sodetail zza on zza.sodetailid = zzb.sodetailid
                                        where zzb.productid = a.productid
                                        ) as nominal,
                                        (
                                        select sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                        from gidetail zzb 
                                        join sodetail zza on zza.sodetailid = zzb.sodetailid
                                        where zzb.productid = a.productid
                                        ) as disc
                                        from productplant a
                                        join product e on e.productid = a.productid
                                        join sloc b on b.slocid = a.slocid
                                        join plant c on c.plantid = b.plantid
                                        join company d on d.companyid = c.companyid
                                        where d.companyid = ".$companyid." and a.materialgroupid = ".$row1['materialgroupid']." and a.productid in
                                        (
                                        select zc.productid
                                        from soheader za 
                                        join giheader zb on zb.soheaderid = za.soheaderid
                                        join gidetail zc on zc.giheaderid = zb.giheaderid
                                        where zb.recordstatus = 3 and za.employeeid = '".$row['employeeid']."' and zc.slocid = a.slocid and za.companyid = ".$companyid." and za.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                        and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                                        ) 
                                        ) zzz order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					$totalgrupdisc = 0;$totalgrupnominal=0;$totalgrup=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+20);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,30,30,30,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Disc','Total');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					foreach($dataReader2 as $row2)
					{
                                                $i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['nominal']),
							Yii::app()->format->formatCurrency($row2['disc']),
							Yii::app()->format->formatCurrency($row2['netto']),
						));
						$totalgrupnominal += $row2['nominal'];
						$totalgrupdisc += $row2['disc'];
						$totalgrup += $row2['netto'];
					}
					$this->pdf->row(array(
							'','Total '.$row1['description'],'',
							Yii::app()->format->formatCurrency($totalgrupnominal),
							Yii::app()->format->formatCurrency($totalgrupdisc),
							Yii::app()->format->formatCurrency($totalgrup),
						));
					$this->pdf->checkPageBreak(20);
				}
		}
		$this->pdf->Output();
	}
	
	public function RekapPenjualanPerSalesGrupBarang($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.employeeid,a.fullname
		from employee a 
		where a.employeeid in (select employeeid from soheader b
		where b.companyid = ".$companyid." and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
		and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')";

		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Penjualan Per Sales - Barang (Basis Invoice)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Sales');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
			$sql1 = "select a.materialgroupid,a.description
				from materialgroup a
				where a.materialgroupid in
				(
					select c.materialgroupid
					from gidetail b 
					join sodetail d on d.sodetailid = b.sodetailid
					join soheader e on e.soheaderid = d.soheaderid
					join productplant c on c.productid = b.productid
					where e.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and e.companyid = ".$companyid."
				)";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				foreach($dataReader1 as $row1)
				{
					$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
					$sql2 = "select *, nominal-disc as netto
						from
						(
							select f.productname,sum(b.qty) as totalqty,
							sum(b.qty *d.price) as nominal,
							getamountdiscbyso(d.soheaderid) as disc
							from gidetail b 
							join sodetail d on d.sodetailid = b.sodetailid
							join soheader e on e.soheaderid = d.soheaderid
							join productplant c on c.productid = b.productid
							join product f on f.productid = b.productid
							where e.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and e.companyid = ".$companyid." and
							c.materialgroupid = 1
							group by f.productname
						) zzz";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					$totalgrupdisc = 0;$totalgrupnominal=0;$totalgrup=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+17);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,30,30,30,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Disc','Total');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					foreach($dataReader2 as $row2)
					{
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['nominal']),
							Yii::app()->format->formatCurrency($row2['disc']),
							Yii::app()->format->formatCurrency($row2['netto']),
						));
						$totalgrupnominal += $row2['nominal'];
						$totalgrupdisc += $row2['disc'];
						$totalgrup += $row2['netto'];
					}
					$this->pdf->row(array(
							'','Total '.$row1['description'],'',
							Yii::app()->format->formatCurrency($totalgrupnominal),
							Yii::app()->format->formatCurrency($totalgrupdisc),
							Yii::app()->format->formatCurrency($totalgrup),
						));
					$this->pdf->checkPageBreak(20);
				}
		}
		$this->pdf->Output();
	}
        
        public function RekapPenjualanPerCustomerBarang($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.addressbookid,a.fullname
		from addressbook a 
		where a.addressbookid in (select addressbookid from soheader b
		where b.companyid = ".$companyid." and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
		and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')";

		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rincian Penjualan Per Customer - Barang (Basis Invoice)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('P');
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',10);
			$this->pdf->text(10,$this->pdf->gety()+10,'Customer');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['fullname']);
			$sql1 = "select a.materialgroupid,a.description
				from materialgroup a
				where a.materialgroupid in
				(
					select c.materialgroupid
					from gidetail b 
					join sodetail d on d.sodetailid = b.sodetailid
					join soheader e on e.soheaderid = d.soheaderid
					join productplant c on c.productid = b.productid
					where e.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                        and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' and e.companyid = ".$companyid."
				)";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				foreach($dataReader1 as $row1)
				{
					$this->pdf->text(10,$this->pdf->gety()+15,'Grup Material');$this->pdf->text(40,$this->pdf->gety()+15,': '.$row1['description']);
					$sql2 = "select *,nominal-disc as netto
                                        from
                                        (
                                        select distinct a.productid,e.productname,
                                        (
                                        select sum(zzb.qty)
                                        from gidetail zzb 
                                        where zzb.productid = a.productid
                                        ) as qty,
                                        (
                                        select sum(zzb.qty * zza.price)
                                        from gidetail zzb 
                                        join sodetail zza on zza.sodetailid = zzb.sodetailid
                                        where zzb.productid = a.productid
                                        ) as nominal,
                                        (
                                        select sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty))
                                        from gidetail zzb 
                                        join sodetail zza on zza.sodetailid = zzb.sodetailid
                                        where zzb.productid = a.productid
                                        ) as disc
                                        from productplant a
                                        join product e on e.productid = a.productid
                                        join sloc b on b.slocid = a.slocid
                                        join plant c on c.plantid = b.plantid
                                        join company d on d.companyid = c.companyid
                                        where d.companyid = ".$companyid." and a.materialgroupid = ".$row1['materialgroupid']." and a.productid in
                                        (
                                        select zc.productid
                                        from soheader za 
                                        join giheader zb on zb.soheaderid = za.soheaderid
                                        join gidetail zc on zc.giheaderid = zb.giheaderid
                                        where zb.recordstatus = 3 and za.addressbookid = '".$row['addressbookid']."' and zc.slocid = a.slocid and za.companyid = ".$companyid." and za.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                                        and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                                        ) 
                                        ) zzz order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					$totalgrupdisc = 0;$totalgrupnominal=0;$totalgrup=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+20);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,60,30,30,30,30));
					$this->pdf->colheader = array('No','Nama Barang','Qty','Nominal','Disc','Total');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					foreach($dataReader2 as $row2)
					{
                                                $i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['nominal']),
							Yii::app()->format->formatCurrency($row2['disc']),
							Yii::app()->format->formatCurrency($row2['netto']),
						));
						$totalgrupnominal += $row2['nominal'];
						$totalgrupdisc += $row2['disc'];
						$totalgrup += $row2['netto'];
					}
					$this->pdf->row(array(
							'','Total '.$row1['description'],'',
							Yii::app()->format->formatCurrency($totalgrupnominal),
							Yii::app()->format->formatCurrency($totalgrupdisc),
							Yii::app()->format->formatCurrency($totalgrup),
						));
					$this->pdf->checkPageBreak(20);
				}
		}
		$this->pdf->Output();
	}
        
        public function RekapSuratJalanBelumDibuatkanFaktur($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.gino,a.gidate,c.fullname as customer,d.fullname as sales,a.headernote
                        from giheader a
                        join soheader b on b.soheaderid = a.soheaderid
                        join addressbook c on c.addressbookid = b.addressbookid
                        join employee d on d.employeeid = b.employeeid
                        where a.giheaderid not in
                        (select t.giheaderid from invoice t)
                        and a.gino is not null
                        and b.companyid = ".$companyid." and a.gidate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
			and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Surat Jalan Belum Dibuatkan Faktur';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P');
			
			$this->pdf->setFont('Arial','B',8);
                        $this->pdf->sety($this->pdf->gety()+10);
			$this->pdf->colalign = array('C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,20,20,60,55,25));
			$this->pdf->colheader = array('No','No Bukti','Tanggal','Customer','Sales','Keterangan');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','C','C','L','L','L');		
			$total = 0;$i=0;$totalqty=0;
			foreach($dataReader as $row)
			{
				$i+=1;
				$this->pdf->setFont('Arial','',7);
				$this->pdf->row(array(
					$i,$row['gino'],
					date(Yii::app()->params['dateviewfromdb'], strtotime($row['gidate'])),
					$row['customer'],
					$row['sales'],
					$row['headernote']
				));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}
        
        public function RekapPenjualanBarangQty($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct a.materialgroupid,a.materialgroupcode,a.description,d.slocid
                        from materialgroup a
                        join productplant b on b.materialgroupid = a.materialgroupid
                        join product c on c.productid = b.productid
                        join sloc d on d.slocid = b.slocid
                        join plant e on e.plantid = d.plantid
                        join company f on f.companyid = e.companyid
                        where f.companyid = ".$companyid." and b.productid in
                        (
                        select zc.productid
                        from soheader za 
                        join giheader zb on zb.soheaderid = za.soheaderid
                        join gidetail zc on zc.giheaderid = zb.giheaderid
                        where zb.recordstatus = 3 and zc.slocid = b.slocid and za.companyid = ".$companyid." and za.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                        and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        )";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Barang (Qty)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Divisi');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['description']);
				$sql1 = "select *,(januari+februari+maret+april+mei+juni+juli+agustus+september+oktober+november+desember) as total
                                        from
                                        (select distinct b.productname,c.uomcode,d.sloccode,
                                        (
                                            select ifnull(sum(ab.qty),0) 
                                            from productstockdet ab
                                            where year(ab.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ab.transdate) = 1 
                                            and ab.productid = a.productid
                                            and ab.unitofmeasureid = a.unitofissue
                                            and ab.slocid = a.slocid 
                                        ) as januari,
                                        (
                                            select ifnull(sum(ac.qty),0) 
                                            from productstockdet ac
                                            where year(ac.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ac.transdate) = 2
                                            and ac.productid = a.productid
                                            and ac.unitofmeasureid = a.unitofissue
                                            and ac.slocid = a.slocid 
                                        ) as februari,
                                        (
                                            select ifnull(sum(ad.qty),0) 
                                            from productstockdet ad
                                            where year(ad.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ad.transdate) = 3
                                            and ad.productid = a.productid
                                            and ad.unitofmeasureid = a.unitofissue
                                            and ad.slocid = a.slocid 
                                        ) as maret,
                                        (
                                            select ifnull(sum(ae.qty),0) 
                                            from productstockdet ae
                                            where year(ae.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ae.transdate) = 4
                                            and ae.productid = a.productid
                                            and ae.unitofmeasureid = a.unitofissue
                                            and ae.slocid = a.slocid 
                                        ) as april,
                                        (
                                            select ifnull(sum(af.qty),0) 
                                            from productstockdet af
                                            where year(af.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(af.transdate) = 5
                                            and af.productid = a.productid
                                            and af.unitofmeasureid = a.unitofissue
                                            and af.slocid = a.slocid 
                                        ) as mei,
                                        (
                                            select ifnull(sum(ag.qty),0) 
                                            from productstockdet ag
                                            where year(ag.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ag.transdate) = 6 
                                            and ag.productid = a.productid
                                            and ag.unitofmeasureid = a.unitofissue
                                            and ag.slocid = a.slocid 
                                        ) as juni,
                                        (
                                            select ifnull(sum(ah.qty),0) 
                                            from productstockdet ah
                                            where year(ah.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ah.transdate) = 7
                                            and ah.productid = a.productid
                                            and ah.unitofmeasureid = a.unitofissue
                                            and ah.slocid = a.slocid 
                                        ) as juli,
                                        (
                                            select ifnull(sum(ai.qty),0) 
                                            from productstockdet ai
                                            where year(ai.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ai.transdate) = 8
                                            and ai.productid = a.productid
                                            and ai.unitofmeasureid = a.unitofissue
                                            and ai.slocid = a.slocid 
                                        ) as agustus,
                                        (
                                            select ifnull(sum(aj.qty),0) 
                                            from productstockdet aj
                                            where year(aj.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(aj.transdate) = 9
                                            and aj.productid = a.productid
                                            and aj.unitofmeasureid = a.unitofissue
                                            and aj.slocid = a.slocid 
                                        ) as september,
                                        (
                                            select ifnull(sum(ak.qty),0) 
                                            from productstockdet ak
                                            where year(ak.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(ak.transdate) = 10
                                            and ak.productid = a.productid
                                            and ak.unitofmeasureid = a.unitofissue
                                            and ak.slocid = a.slocid 
                                        ) as oktober,
                                        (
                                            select ifnull(sum(al.qty),0) 
                                            from productstockdet al
                                            where year(al.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(al.transdate) = 11
                                            and al.productid = a.productid
                                            and al.unitofmeasureid = a.unitofissue
                                            and al.slocid = a.slocid 
                                        ) as november,
                                        (
                                            select ifnull(sum(am.qty),0) 
                                            from productstockdet am
                                            where year(am.transdate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(am.transdate) = 12
                                            and am.productid = a.productid
                                            and am.unitofmeasureid = a.unitofissue
                                            and am.slocid = a.slocid 
                                        ) as desember
                                        from productplant a
                                        join product b on b.productid=a.productid
                                        join unitofmeasure c on c.unitofmeasureid=a.unitofissue
                                        join sloc d on d.slocid=a.slocid
                                        join plant e on e.plantid=d.plantid
                                        join company f on f.companyid=e.companyid
                                        where a.materialgroupid = '".$row['materialgroupid']."' and f.companyid='".$companyid."' and a.slocid = '".$row['slocid']."')z";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$total=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C',
                                        'C','C','C','C');
				$this->pdf->setwidths(array(60,15,15,15,15,15,15,15,15,20,
                                        20,20,20,20));
				$this->pdf->colheader = array('Nama Barang','Januari','Februari','Maret','April',
                                    'Mei','Juni','Juli','Agustus','September','Oktober','November','Desember','Total');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R',
                                                'R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
                                        $row1['productname'],
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['januari']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['februari']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['maret']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['april']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['mei']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['juni']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['juli']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['agustus']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['september']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['oktober']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['november']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['desember']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['total']),
                                ));
					$total += $row1['total'];
				}
				$this->pdf->row(array(
						'','Total',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						Yii::app()->format->formatCurrency($total),
					));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}
        
        public function RekapPenjualanBarangNilai($companyid,$sloc,$employeeid,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct a.materialgroupid,a.materialgroupcode,a.description,d.slocid
                        from materialgroup a
                        join productplant b on b.materialgroupid = a.materialgroupid
                        join product c on c.productid = b.productid
                        join sloc d on d.slocid = b.slocid
                        join plant e on e.plantid = d.plantid
                        join company f on f.companyid = e.companyid
                        where f.companyid = ".$companyid." and b.productid in
                        (
                        select zc.productid
                        from soheader za 
                        join giheader zb on zb.soheaderid = za.soheaderid
                        join gidetail zc on zc.giheaderid = zb.giheaderid
                        where zb.recordstatus = 3 and zc.slocid = b.slocid and za.companyid = ".$companyid." and za.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
                        and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                        )";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Barang (Qty)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+10,'Divisi');$this->pdf->text(30,$this->pdf->gety()+10,': '.$row['description']);
				$sql1 = "select *,(januari+februari+maret+april+mei+juni+juli+agustus+september+oktober+november+desember) as total
                                        from
                                        (select distinct b.productname,c.uomcode,d.sloccode,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 1
                                            and zzb.productid = a.productid
                                        ) as januari,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 2
                                            and zzb.productid = a.productid
                                        ) as februari,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 3
                                            and zzb.productid = a.productid
                                        ) as maret,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 4
                                            and zzb.productid = a.productid
                                        ) as april,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 5
                                            and zzb.productid = a.productid 
                                        ) as mei,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 6 
                                            and zzb.productid = a.productid
                                        ) as juni,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 7
                                            and zzb.productid = a.productid
                                        ) as juli,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 8
                                            and zzb.productid = a.productid
                                        ) as agustus,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 9
                                            and zzb.productid = a.productid
                                        ) as september,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 10
                                            and zzb.productid = a.productid
                                        ) as oktober,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 11
                                            and zzb.productid = a.productid
                                        ) as november,
                                        (
                                            select ifnull(sum(zzb.qty * zza.price) -
                                            sum(getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)),0) as netto
                                            from gidetail zzb
                                            join giheader zzc on zzc.giheaderid = zzb.giheaderid
                                            join sodetail zza on zza.sodetailid = zzb.sodetailid
                                            where year(zzc.gidate) = year('".date(Yii::app()->params['datetodb'], strtotime($startdate))."') 
                                            and month(zzc.gidate) = 12
                                            and zzb.productid = a.productid
                                        ) as desember
                                        from productplant a
                                        join product b on b.productid=a.productid
                                        join unitofmeasure c on c.unitofmeasureid=a.unitofissue
                                        join sloc d on d.slocid=a.slocid
                                        join plant e on e.plantid=d.plantid
                                        join company f on f.companyid=e.companyid
                                        where a.materialgroupid = '".$row['materialgroupid']."' and f.companyid='".$companyid."' and a.slocid = '".$row['slocid']."')z";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$total=0;$i=0;
				$this->pdf->sety($this->pdf->gety()+15);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C',
                                        'C','C','C','C');
				$this->pdf->setwidths(array(50,15,15,15,15,15,20,20,15,20,
                                        20,20,20,20));
				$this->pdf->colheader = array('Nama Barang','Januari','Februari','Maret','April',
                                    'Mei','Juni','Juli','Agustus','September','Oktober','November','Desember','Total');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','R','R','R','R','R','R','R','R',
                                                'R','R','R','R','R');
				$this->pdf->setFont('Arial','',8);
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
                                        $row1['productname'],
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['januari']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['februari']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['maret']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['april']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['mei']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['juni']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['juli']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['agustus']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['september']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['oktober']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['november']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['desember']),
                                        Yii::app()->numberFormatter->format(Yii::app()->params["defaultnumberqty"],$row1['total']),
                                ));
					$total += $row1['total'];
				}
				$this->pdf->row(array(
						'','Total',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						'',
						Yii::app()->format->formatCurrency($total),
					));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}*/
	//49
	public function RekapPenjualanPerBarangPerBulanQty($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Barang Per Bulan (Qty)';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P',array(400,250));
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',8);
			$this->pdf->text(10,$this->pdf->gety()+5,'MATERIAL GROUP ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->sety($this->pdf->gety()+7);
			$sql1 = "select *
							from (select distinct v.productname,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as januari,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as februari,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as maret,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as april,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as mei,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juni,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juli,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as agustus,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as september,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as oktober,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as nopember,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as desember,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as jumlah
							from productplant z
							join product v on v.productid = z.productid
							where z.recordstatus=1
							and z.materialgroupid = ".$row['materialgroupid']." ) zz
							where januari<>0 or februari <>0 or maret <>0 or april <>0 or mei <>0 or juni <>0 or juli <>0 or
							agustus <>0 or september <>0 or oktober <>0 or nopember <>0 or desember <>0 ";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				foreach($dataReader1 as $row1)
				{
					
					$this->pdf->setFont('Arial','',7);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatCurrency($row1['januari']),
						Yii::app()->format->formatCurrency($row1['februari']),
						Yii::app()->format->formatCurrency($row1['maret']),
						Yii::app()->format->formatCurrency($row1['april']),
						Yii::app()->format->formatCurrency($row1['mei']),
						Yii::app()->format->formatCurrency($row1['juni']),
						Yii::app()->format->formatCurrency($row1['juli']),
						Yii::app()->format->formatCurrency($row1['agustus']),
						Yii::app()->format->formatCurrency($row1['september']),
						Yii::app()->format->formatCurrency($row1['oktober']),
						Yii::app()->format->formatCurrency($row1['nopember']),
						Yii::app()->format->formatCurrency($row1['desember']),
						Yii::app()->format->formatCurrency($row1['jumlah'])));					
						
					$totaljanuari += $row1['januari'];
					$totalfebruari += $row1['februari'];
					$totalmaret += $row1['maret'];
					$totalapril += $row1['april'];
					$totalmei += $row1['mei'];
					$totaljuni += $row1['juni'];
					$totaljuli += $row1['juli'];
					$totalagustus += $row1['agustus'];
					$totalseptember += $row1['september'];
					$totaloktober += $row1['oktober'];
					$totalnopember += $row1['nopember'];
					$totaldesember += $row1['desember'];
					$totaljumlah += $row1['jumlah'];
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
				$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row['description'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah)));
					
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuari1),
			Yii::app()->format->formatCurrency($totalfebruari1),
			Yii::app()->format->formatCurrency($totalmaret1),
			Yii::app()->format->formatCurrency($totalapril1),
			Yii::app()->format->formatCurrency($totalmei1),
			Yii::app()->format->formatCurrency($totaljuni1),
			Yii::app()->format->formatCurrency($totaljuli1),
			Yii::app()->format->formatCurrency($totalagustus1),
			Yii::app()->format->formatCurrency($totalseptember1),
			Yii::app()->format->formatCurrency($totaloktober1),
			Yii::app()->format->formatCurrency($totalnopember1),
			Yii::app()->format->formatCurrency($totaldesember1),
			Yii::app()->format->formatCurrency($totaljumlah1)));
		$this->pdf->Output();
	}
	/*
	public function RekapPenjualanPerBarangPerBulanNilai($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Barang Per Bulan (Nilai)';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P',array(400,250));
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',8);
			$this->pdf->text(10,$this->pdf->gety()+5,'MATERIAL GROUP ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->sety($this->pdf->gety()+7);
			
			$sql1 = "select *
							from (select distinct v.productname,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=1 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as januari
							from productplant z
							join product v on v.productid = z.productid
							where z.recordstatus=1 and z.materialgroupid = ".$row['materialgroupid'].") zz 
							where januari<>0 ";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->setFont('Arial','',7);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatCurrency($row1['januari']/$per)));
				}
		}
			
		$this->pdf->Output();
	}
	*/
	//50
	public function RekapPenjualanPerBarangPerBulanNilai($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Barang Per Bulan (Nilai)';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P',array(400,250));
			
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
			$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');
			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
		
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',8);
			$this->pdf->text(10,$this->pdf->gety()+5,'MATERIAL GROUP ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['description']);
			$this->pdf->sety($this->pdf->gety()+7);
			
			$sql1 = "select *
							from (select distinct v.productname,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=1 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as januari,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=2 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as februari,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=3 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as maret,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=4 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as april,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=5 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as mei,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=6 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as juni,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=7 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as juli,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=8 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as agustus,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=9 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as september,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=10 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as oktober,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=11 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as nopember,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=12 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as desember,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a 
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = 1 and c.recordstatus=3 and year(c.invoicedate)='2016-09-30'
							and a.productid=v.productid group by a.productid),0) as jumlah					
							from productplant z
							join product v on v.productid = z.productid
							where z.recordstatus=1 and z.materialgroupid = ".$row['materialgroupid'].") zz 
							where januari<>0 or februari<>0 or maret<>0 or april<>0 or mei<>0 or juni<>0 or juli<>0 or agustus<>0 
							or september<>0 or oktober<>0 or nopember<>0 or desember<>0 ";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
				
				foreach($dataReader1 as $row1)
				{
					$this->pdf->setFont('Arial','',7);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatCurrency($row1['januari']/$per),
						Yii::app()->format->formatCurrency($row1['februari']/$per),
						Yii::app()->format->formatCurrency($row1['maret']/$per),
						Yii::app()->format->formatCurrency($row1['april']/$per),
						Yii::app()->format->formatCurrency($row1['mei']/$per),
						Yii::app()->format->formatCurrency($row1['juni']/$per),
						Yii::app()->format->formatCurrency($row1['juli']/$per),
						Yii::app()->format->formatCurrency($row1['agustus']/$per),
						Yii::app()->format->formatCurrency($row1['september']/$per),
						Yii::app()->format->formatCurrency($row1['oktober']/$per),
						Yii::app()->format->formatCurrency($row1['nopember']/$per),
						Yii::app()->format->formatCurrency($row1['desember']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per)
						));
						
						$totaljanuari += $row1['januari'];
						$totalfebruari += $row1['februari'];
						$totalmaret += $row1['maret'];
						$totalapril += $row1['april'];
						$totalmei += $row1['mei'];
						$totaljuni += $row1['juni'];
						$totaljuli += $row1['juli'];
						$totalagustus += $row1['agustus'];
						$totalseptember += $row1['september'];
						$totaloktober += $row1['oktober'];
						$totalnopember += $row1['nopember'];
						$totaldesember += $row1['desember'];
						$totaljumlah += $row1['jumlah'];
				}
				$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
				$this->pdf->setwidths(array(10,40,25,25,25,25,25,25,25,25,25,25,25,25,30));
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->row(array(
					'','TOTAL '.$row['description'],
					Yii::app()->format->formatCurrency($totaljanuari),
					Yii::app()->format->formatCurrency($totalfebruari),
					Yii::app()->format->formatCurrency($totalmaret),
					Yii::app()->format->formatCurrency($totalapril),
					Yii::app()->format->formatCurrency($totalmei),
					Yii::app()->format->formatCurrency($totaljuni),
					Yii::app()->format->formatCurrency($totaljuli),
					Yii::app()->format->formatCurrency($totalagustus),
					Yii::app()->format->formatCurrency($totalseptember),
					Yii::app()->format->formatCurrency($totaloktober),
					Yii::app()->format->formatCurrency($totalnopember),
					Yii::app()->format->formatCurrency($totaldesember),
					Yii::app()->format->formatCurrency($totaljumlah)
					));
		}
//		var_dump($sql1);
			
		$this->pdf->Output();
	}
	//51
	public function RekapPenjualanPerBarangPerBulanQtydanNilai($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$i=0;$totaljanuariqty1=0;$totaljanuarinil1=0;$totalfebruariqty1=0;$totalfebruarinil1=0;$totalmaretqty1=0;$totalmaretnil1=0;$totalaprilqty1=0;$totalaprilnil1=0;$totalmeiqty1=0;$totalmeinil1=0;$totaljuniqty1=0;$totaljuninil1=0;$totaljuliqty1=0;$totaljulinil1=0;$totalagustusqty1=0;$totalagustusnil1=0;$totalseptemberqty1=0;$totalseptembernil1=0;$totaloktoberqty1=0;$totaloktobernil1=0;$totalnopemberqty1=0;$totalnopembernil1=0;$totaldesemberqty1=0;$totaldesembernil1=0;$totaljumlahqty1=0;$totaljumlahnil1=0;
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan Per Barang Per Bulan (Qty) dan (Nilai)';
			$this->pdf->subtitle='Per Tahun '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('P',array(400,250));
			
			$this->pdf->setFont('Arial','B',9	);
			$this->pdf->sety($this->pdf->gety()+0);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,35,25,25,25,25,25,25,25,25,25,25,25,30,35));
			$this->pdf->colheader = array('No','Nama Barang','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Total');	

			$this->pdf->RowHeader();
			$this->pdf->coldetailalign = array('R','L','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R','R');
			
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','',8);
			$this->pdf->setwidths(array(10,35,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,19));
			$this->pdf->text(10,$this->pdf->gety()+5,'MATERIAL GROUP ');$this->pdf->text(45,$this->pdf->gety()+5,': '.$row['description']);

			$this->pdf->sety($this->pdf->gety()+7);
			$this->pdf->SetFont('Arial','B',7);
			$this->pdf->setwidths(array(10,35,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,8,18,15,15));	
		$this->pdf->row(array('','','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Qty','Nilai','Total Qty','Total Nilai'));
			$sql1 = "select *
from (select distinct v.productname,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as januariqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=1 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as januarinil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as februariqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=2 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as februarinil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as maretqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=3 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as maretnil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as aprilqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=4 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as aprilnil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as meiqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=5 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as meinil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juniqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=6 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as juninil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juliqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=7 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as julinil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as agustusqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=8 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as agustusnil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as septemberqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=9 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as septembernil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as oktoberqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=10 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as oktobernil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as nopemberqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=11 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as nopembernil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as desemberqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=12 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as desembernil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as jumlahqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a 
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."'
and a.productid=v.productid group by a.productid),0) as jumlahnil	
from productplant z
join product v on v.productid = z.productid
where z.recordstatus=1 and v.productname like '%".$product."%'
and z.materialgroupid = ".$row['materialgroupid']." ) zz
where januarinil<>0 or januariqty  or februariqty <>0 or februarinil <>0 or maretqty <>0 or maretnil <>0 or aprilqty <>0  or aprilnil <>0 or meiqty <>0 or meinil <>0 or juniqty <>0 or juninil <>0 or juliqty <>0 or julinil <>0 or
agustusqty <>0 or agustusnil <>0 or septemberqty <>0 or septemberqty <>0 or  oktoberqty <>0 or oktobernil <>0 or nopemberqty <>0 or nopembernil <>0 or desemberqty <>0 or desembernil <>0";

				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$i=0;$totaljanuariqty=0;$totaljanuarinil=0;$totalfebruariqty=0;$totalfebruarinil=0;$totalmaretqty=0;$totalmaretnil=0;$totalaprilqty=0;$totalaprilnil=0;$totalmeiqty=0;$totalmeinil=0;$totaljuniqty=0;$totaljuninil=0;$totaljuliqty=0;$totaljulinil=0;$totalagustusqty=0;$totalagustusnil=0;$totalseptemberqty=0;$totalseptembernil=0; $totaloktoberqty=0;$totaloktobernil=0;$totalnopemberqty=0;$totalnopembernil=0;$totaldesemberqty=0;$totaldesembernil=0;$totaljumlahqty=0;$totaljumlahnil=0;
				foreach($dataReader1 as $row1)
				{
					
					$this->pdf->setFont('Arial','',8);
					$i=$i+1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						Yii::app()->format->formatCurrency($row1['januariqty']),
						Yii::app()->format->formatCurrency($row1['januarinil']/$per),
						Yii::app()->format->formatCurrency($row1['februariqty']),
						Yii::app()->format->formatCurrency($row1['februarinil']/$per),
						Yii::app()->format->formatCurrency($row1['maretqty']),
						Yii::app()->format->formatCurrency($row1['maretnil']/$per),
						Yii::app()->format->formatCurrency($row1['aprilqty']),
						Yii::app()->format->formatCurrency($row1['aprilnil']/$per),
						Yii::app()->format->formatCurrency($row1['meiqty']),
						Yii::app()->format->formatCurrency($row1['meinil']/$per),
						Yii::app()->format->formatCurrency($row1['juniqty']),
						Yii::app()->format->formatCurrency($row1['juninil']/$per),
						Yii::app()->format->formatCurrency($row1['juliqty']),
						Yii::app()->format->formatCurrency($row1['julinil']/$per),
						Yii::app()->format->formatCurrency($row1['agustusqty']),
						Yii::app()->format->formatCurrency($row1['agustusnil']/$per),
						Yii::app()->format->formatCurrency($row1['septemberqty']),
						Yii::app()->format->formatCurrency($row1['septembernil']/$per),
						Yii::app()->format->formatCurrency($row1['oktoberqty']),
						Yii::app()->format->formatCurrency($row1['oktobernil']/$per),
						Yii::app()->format->formatCurrency($row1['nopemberqty']),
						Yii::app()->format->formatCurrency($row1['nopembernil']/$per),
						Yii::app()->format->formatCurrency($row1['desemberqty']),
						Yii::app()->format->formatCurrency($row1['desembernil']/$per),
						Yii::app()->format->formatCurrency($row1['jumlahqty']),
						Yii::app()->format->formatCurrency($row1['jumlahnil']/$per)));					
						
					$totaljanuariqty += $row1['januariqty'];
					$totaljanuarinil += $row1['januarinil'];
					$totalfebruariqty += $row1['februariqty'];
					$totalfebruarinil += $row1['februarinil'];
					$totalmaretqty += $row1['maretqty'];
					$totalmaretnil += $row1['maretnil'];
					$totalaprilqty += $row1['aprilqty'];
					$totalaprilnil += $row1['aprilnil'];
					$totalmeiqty += $row1['meiqty'];
					$totalmeinil += $row1['meinil'];
					$totaljuniqty += $row1['juniqty'];
					$totaljuninil += $row1['juninil'];
					$totaljuliqty += $row1['juliqty'];
					$totaljulinil += $row1['julinil'];
					$totalagustusqty += $row1['agustusqty'];
					$totalagustusnil += $row1['agustusnil'];
					$totalseptemberqty += $row1['septemberqty'];
					$totalseptembernil += $row1['septembernil'];
					$totaloktoberqty += $row1['oktoberqty'];
					$totaloktobernil += $row1['oktobernil'];
					$totalnopemberqty += $row1['nopemberqty'];
					$totalnopembernil += $row1['nopembernil'];
					$totaldesemberqty += $row1['desemberqty'];
					$totaldesembernil += $row1['desembernil'];
					$totaljumlahqty += $row1['jumlahqty'];
					$totaljumlahnil += $row1['jumlahnil'];
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R','L','L','R','R','R','R','R','R','R','R','R','R','R');
				$this->pdf->setwidths(array(10,35,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,15));
				$this->pdf->setFont('Arial','B',7);
				$this->pdf->row(array(
					'','TOTAL '.$row['description'],
					Yii::app()->format->formatCurrency($totaljanuariqty),
					Yii::app()->format->formatCurrency($totaljanuarinil),
					Yii::app()->format->formatCurrency($totalfebruariqty),
					Yii::app()->format->formatCurrency($totalfebruarinil),
					Yii::app()->format->formatCurrency($totalmaretqty),
					Yii::app()->format->formatCurrency($totalmaretnil),
					Yii::app()->format->formatCurrency($totalaprilqty),
					Yii::app()->format->formatCurrency($totalaprilnil),
					Yii::app()->format->formatCurrency($totalmeiqty),
					Yii::app()->format->formatCurrency($totalmeinil),
					Yii::app()->format->formatCurrency($totaljuniqty),
					Yii::app()->format->formatCurrency($totaljuninil),
					Yii::app()->format->formatCurrency($totaljuliqty),
					Yii::app()->format->formatCurrency($totaljulinil),
					Yii::app()->format->formatCurrency($totalagustusqty),
					Yii::app()->format->formatCurrency($totalagustusnil),
					Yii::app()->format->formatCurrency($totalseptemberqty),
					Yii::app()->format->formatCurrency($totalseptembernil),
					Yii::app()->format->formatCurrency($totaloktoberqty),
					Yii::app()->format->formatCurrency($totaloktobernil),
					Yii::app()->format->formatCurrency($totalnopemberqty),
					Yii::app()->format->formatCurrency($totalnopembernil),
					Yii::app()->format->formatCurrency($totaldesemberqty),
					Yii::app()->format->formatCurrency($totaldesembernil),
					Yii::app()->format->formatCurrency($totaljumlahqty),
					Yii::app()->format->formatCurrency($totaljumlahnil)));
					
			$totaljanuariqty1 += $totaljanuariqty;
			$totaljanuarinil1 += $totaljanuarinil;
			$totalfebruariqty1 += $totalfebruariqty;
			$totalfebruarinil1 += $totalfebruarinil;
			$totalmaretqty1 += $totalmaretqty;
			$totalmaretnil1 += $totalmaretnil;
			$totalaprilqty1 += $totalaprilqty;
			$totalaprilnil1 += $totalaprilnil;
			$totalmeiqty1 += $totalmeiqty;
			$totalmeinil1 += $totalmeinil;
			$totaljuniqty1 += $totaljuniqty;
			$totaljuninil1 += $totaljuninil;
			$totaljuliqty1 += $totaljuliqty;
			$totaljulinil1 += $totaljulinil;
			$totalagustusqty1 += $totalagustusqty;
			$totalagustusnil1 += $totalagustusnil;
			$totalseptemberqty1 += $totalseptemberqty;
			$totalseptembernil1 += $totalseptembernil;
			$totaloktoberqty1 += $totaloktoberqty;
			$totaloktobernil1 += $totaloktobernil;
			$totalnopemberqty1 += $totalnopemberqty;
			$totalnopembernil1 += $totalnopembernil;
			$totaldesemberqty1 += $totaldesemberqty;
			$totaldesembernil1 += $totaldesembernil;
			$totaljumlahqty1 += $totaljumlahqty;
			$totaljumlahnil1 += $totaljumlahnil;
		}
		$this->pdf->colalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R','L','L','R','R','R','R','R','R','R','R','R','R','R');
		$this->pdf->setwidths(array(10,35,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,15,15));
		$this->pdf->setFont('Arial','B',7);
		$this->pdf->row(array(
			'','GRAND TOTAL',
			Yii::app()->format->formatCurrency($totaljanuariqty1),
			Yii::app()->format->formatCurrency($totaljanuarinil1),
			Yii::app()->format->formatCurrency($totalfebruariqty1),
			Yii::app()->format->formatCurrency($totalfebruarinil1),
			Yii::app()->format->formatCurrency($totalmaretqty1),
			Yii::app()->format->formatCurrency($totalmaretnil1),
			Yii::app()->format->formatCurrency($totalaprilqty1),
			Yii::app()->format->formatCurrency($totalaprilnil1),
			Yii::app()->format->formatCurrency($totalmeiqty1),
			Yii::app()->format->formatCurrency($totalmeinil1),
			Yii::app()->format->formatCurrency($totaljuniqty1),
			Yii::app()->format->formatCurrency($totaljuninil1),
			Yii::app()->format->formatCurrency($totaljuliqty1),
			Yii::app()->format->formatCurrency($totaljulinil1),
			Yii::app()->format->formatCurrency($totalagustusqty1),
			Yii::app()->format->formatCurrency($totalagustusnil1),
			Yii::app()->format->formatCurrency($totalseptemberqty1),
			Yii::app()->format->formatCurrency($totalseptembernil1),
			Yii::app()->format->formatCurrency($totaloktoberqty1),
			Yii::app()->format->formatCurrency($totaloktobernil1),
			Yii::app()->format->formatCurrency($totalnopemberqty1),
			Yii::app()->format->formatCurrency($totalnopembernil1),
			Yii::app()->format->formatCurrency($totaldesemberqty1),
			Yii::app()->format->formatCurrency($totaldesembernil1),
			Yii::app()->format->formatCurrency($totaljumlahqty1),
			Yii::app()->format->formatCurrency($totaljumlahnil1)));
		$this->pdf->Output();
	}
	//52
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalNilai($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	            join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang Per Bulan - Total (Nilai)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','F4');
								
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,35,20,20,20,20,20,20,20,20,20,20,20,20,25));
			$this->pdf->colheader = array('No','Material Group','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
			$this->pdf->RowHeader();
			
			$sql1 = "select * from (select xxx.description as barang,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as januari,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as februari,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as maret,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as april,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as mei,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juni,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juli,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as agustus,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as september,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 10 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as oktober,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as nopember,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 12 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as desember,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as jumlah
							from materialgroup xxx) xxxx where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <>0 
							or juli <>0 or agustus <> 0 or september <>0 or oktober <> 0 or nopember <> 0 or desember <> 0";
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
			foreach($dataReader1 as $row1)
			{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['barang'],
						Yii::app()->format->formatCurrency($row1['januari']/$per),
						Yii::app()->format->formatCurrency($row1['februari']/$per),
						Yii::app()->format->formatCurrency($row1['maret']/$per),
						Yii::app()->format->formatCurrency($row1['april']/$per),
						Yii::app()->format->formatCurrency($row1['mei']/$per),
						Yii::app()->format->formatCurrency($row1['juni']/$per),
						Yii::app()->format->formatCurrency($row1['juli']/$per),
						Yii::app()->format->formatCurrency($row1['agustus']/$per),
						Yii::app()->format->formatCurrency($row1['september']/$per),
						Yii::app()->format->formatCurrency($row1['oktober']/$per),
						Yii::app()->format->formatCurrency($row1['nopember']/$per),
						Yii::app()->format->formatCurrency($row1['desember']/$per),
						Yii::app()->format->formatCurrency($row1['jumlah']/$per)
					));
				$totaljanuari += $row1['januari']/$per;
		    $totalfebruari += $row1['februari']/$per;
		    $totalmaret += $row1['maret']/$per;
		    $totalapril += $row1['april']/$per;
		    $totalmei += $row1['mei']/$per;
		    $totaljuni += $row1['juni']/$per;
		    $totaljuli += $row1['juli']/$per;
		    $totalagustus += $row1['agustus']/$per;
		    $totalseptember += $row1['september']/$per;
		    $totaloktober += $row1['oktober']/$per;
		    $totalnopember += $row1['nopember']/$per;
		    $totaldesember += $row1['desember']/$per;
		    $totaljumlah += $row1['jumlah']/$per;
			}
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
        '',
        'TOTAL ' . $row['fullname'],
        Yii::app()->format->formatCurrency($totaljanuari),
        Yii::app()->format->formatCurrency($totalfebruari),
        Yii::app()->format->formatCurrency($totalmaret),
        Yii::app()->format->formatCurrency($totalapril),
        Yii::app()->format->formatCurrency($totalmei),
        Yii::app()->format->formatCurrency($totaljuni),
        Yii::app()->format->formatCurrency($totaljuli),
        Yii::app()->format->formatCurrency($totalagustus),
        Yii::app()->format->formatCurrency($totalseptember),
        Yii::app()->format->formatCurrency($totaloktober),
        Yii::app()->format->formatCurrency($totalnopember),
        Yii::app()->format->formatCurrency($totaldesember),
        Yii::app()->format->formatCurrency($totaljumlah),
      ));
			$totaljanuari1 += $totaljanuari;
	    $totalfebruari1 += $totalfebruari;
	    $totalmaret1 += $totalmaret;
	    $totalapril1 += $totalapril;
	    $totalmei1 += $totalmei;
	    $totaljuni1 += $totaljuni;
	    $totaljuli1 += $totaljuli;
	    $totalagustus1 += $totalagustus;
	    $totalseptember1 += $totalseptember;
	    $totaloktober1 += $totaloktober;
	    $totalnopember1 += $totalnopember;
	    $totaldesember1 += $totaldesember;
	    $totaljumlah1 += $totaljumlah;

			$this->pdf->sety($this->pdf->gety()+3);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatCurrency($totaljanuari1),
      Yii::app()->format->formatCurrency($totalfebruari1),
      Yii::app()->format->formatCurrency($totalmaret1),
      Yii::app()->format->formatCurrency($totalapril1),
      Yii::app()->format->formatCurrency($totalmei1),
      Yii::app()->format->formatCurrency($totaljuni1),
      Yii::app()->format->formatCurrency($totaljuli1),
      Yii::app()->format->formatCurrency($totalagustus1),
      Yii::app()->format->formatCurrency($totalseptember1),
      Yii::app()->format->formatCurrency($totaloktober1),
      Yii::app()->format->formatCurrency($totalnopember1),
      Yii::app()->format->formatCurrency($totaldesember1),
      Yii::app()->format->formatCurrency($totaljumlah1),
    ));
		$this->pdf->Output();
	}
	//53
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianNilai($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and year(j.invoicedate) =	year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang Per Bulan - Rincian (Nilai)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L','F4');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')					
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','',10);
					$this->pdf->text(10,$this->pdf->gety()+10,'Material Group');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row1['description']);
					$sql2 = "select *
								from (select o.productname,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 1
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 1
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as januari,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 2
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 2
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as februari,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 3
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 3
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as maret,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 4
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 4
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as april,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 5
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 5
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as mei,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 6
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 6
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juni,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 7
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 7
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juli,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 8
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 8
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as agustus,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 9
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 9
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as september,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 10
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 10
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as oktober,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 11
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 11
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as nopember,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 12
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 12
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as desember,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']."
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']."
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as jumlah
								from product o 
								order by productname) zzz
								where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
								";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+15);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,35,20,20,20,20,20,20,20,20,20,20,20,20,25));
					$this->pdf->colheader = array('No','Material Group','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
								
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['januari']/$per),
							Yii::app()->format->formatCurrency($row2['februari']/$per),
							Yii::app()->format->formatCurrency($row2['maret']/$per),
							Yii::app()->format->formatCurrency($row2['april']/$per),
							Yii::app()->format->formatCurrency($row2['mei']/$per),
							Yii::app()->format->formatCurrency($row2['juni']/$per),
							Yii::app()->format->formatCurrency($row2['juli']/$per),
							Yii::app()->format->formatCurrency($row2['agustus']/$per),
							Yii::app()->format->formatCurrency($row2['september']/$per),
							Yii::app()->format->formatCurrency($row2['oktober']/$per),
							Yii::app()->format->formatCurrency($row2['nopember']/$per),
							Yii::app()->format->formatCurrency($row2['desember']/$per),
							Yii::app()->format->formatCurrency($row2['jumlah']/$per),
						));
						$totaljanuari += $row2['januari']/$per;
						$totalfebruari += $row2['februari']/$per;
						$totalmaret += $row2['maret']/$per;
						$totalapril += $row2['april']/$per;
						$totalmei += $row2['mei']/$per;
						$totaljuni += $row2['juni']/$per;
						$totaljuli += $row2['juli']/$per;
						$totalagustus += $row2['agustus']/$per;
						$totalseptember += $row2['september']/$per;
						$totaloktober += $row2['oktober']/$per;
						$totalnopember += $row2['nopember']/$per;
						$totaldesember += $row2['desember']/$per;
						$totaljumlah += $row2['jumlah']/$per;
						
					}					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
						'','JUMLAH '.$row1['description'],
						Yii::app()->format->formatCurrency($totaljanuari),
						Yii::app()->format->formatCurrency($totalfebruari),
						Yii::app()->format->formatCurrency($totalmaret),
						Yii::app()->format->formatCurrency($totalapril),
						Yii::app()->format->formatCurrency($totalmei),
						Yii::app()->format->formatCurrency($totaljuni),
						Yii::app()->format->formatCurrency($totaljuli),
						Yii::app()->format->formatCurrency($totalagustus),
						Yii::app()->format->formatCurrency($totalseptember),
						Yii::app()->format->formatCurrency($totaloktober),
						Yii::app()->format->formatCurrency($totalnopember),
						Yii::app()->format->formatCurrency($totaldesember),
						Yii::app()->format->formatCurrency($totaljumlah),
					));
						$totaljanuari1 += $totaljanuari;
						$totalfebruari1 += $totalfebruari;
						$totalmaret1 += $totalmaret;
						$totalapril1 += $totalapril;
						$totalmei1 += $totalmei;
						$totaljuni1 += $totaljuni;
						$totaljuli1 += $totaljuli;
						$totalagustus1 += $totalagustus;
						$totalseptember1 += $totalseptember;
						$totaloktober1 += $totaloktober;
						$totalnopember1 += $totalnopember;
						$totaldesember1 += $totaldesember;
						$totaljumlah1 += $totaljumlah;
						
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'TOTAL '.$row['fullname'],
      Yii::app()->format->formatCurrency($totaljanuari1),
      Yii::app()->format->formatCurrency($totalfebruari1),
      Yii::app()->format->formatCurrency($totalmaret1),
      Yii::app()->format->formatCurrency($totalapril1),
      Yii::app()->format->formatCurrency($totalmei1),
      Yii::app()->format->formatCurrency($totaljuni1),
      Yii::app()->format->formatCurrency($totaljuli1),
      Yii::app()->format->formatCurrency($totalagustus1),
      Yii::app()->format->formatCurrency($totalseptember1),
      Yii::app()->format->formatCurrency($totaloktober1),
      Yii::app()->format->formatCurrency($totalnopember1),
      Yii::app()->format->formatCurrency($totaldesember1),
      Yii::app()->format->formatCurrency($totaljumlah1),
    ));
		
			$totaljanuari2 += $totaljanuari1;
			$totalfebruari2 += $totalfebruari1;
			$totalmaret2 += $totalmaret1;
			$totalapril2 += $totalapril1;
			$totalmei2 += $totalmei1;
			$totaljuni2 += $totaljuni1;
			$totaljuli2 += $totaljuli1;
			$totalagustus2 += $totalagustus1;
			$totalseptember2 += $totalseptember1;
			$totaloktober2 += $totaloktober1;
			$totalnopember2 += $totalnopember1;
			$totaldesember2 += $totaldesember1;
			$totaljumlah2 += $totaljumlah1;

			}
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatCurrency($totaljanuari2),
      Yii::app()->format->formatCurrency($totalfebruari2),
      Yii::app()->format->formatCurrency($totalmaret2),
      Yii::app()->format->formatCurrency($totalapril2),
      Yii::app()->format->formatCurrency($totalmei2),
      Yii::app()->format->formatCurrency($totaljuni2),
      Yii::app()->format->formatCurrency($totaljuli2),
      Yii::app()->format->formatCurrency($totalagustus2),
      Yii::app()->format->formatCurrency($totalseptember2),
      Yii::app()->format->formatCurrency($totaloktober2),
      Yii::app()->format->formatCurrency($totalnopember2),
      Yii::app()->format->formatCurrency($totaldesember2),
      Yii::app()->format->formatCurrency($totaljumlah2),
    ));
			$this->pdf->Output();
	}
	//54
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalQty($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		{
			$this->pdf->companyid = $companyid;
		}
		$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang Per Bulan - Total (Qty)';
		$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
		$this->pdf->AddPage('L','F4');
								
		foreach($dataReader as $row)
		{
			$this->pdf->SetFont('Arial','B',10);
			$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
			$i=0;
			$this->pdf->sety($this->pdf->gety()+8);
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
			$this->pdf->setwidths(array(10,35,20,20,20,20,20,20,20,20,20,20,20,20,25));
			$this->pdf->colheader = array('No','Material Group','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
			$this->pdf->RowHeader();
			
			$sql1 = "select * from (select xxx.description as barang,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as januari,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as februari,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as maret,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as april,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as mei,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juni,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juli,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as agustus,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as september,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 10 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as oktober,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as nopember,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 12 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as desember,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as jumlah
							from materialgroup xxx) xxxx where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <>0 
							or juli <>0 or agustus <> 0 or september <>0 or oktober <> 0 or nopember <> 0 or desember <> 0";
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			
			$this->pdf->sety($this->pdf->gety()+2);
			$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
			$this->pdf->setFont('Arial','',8);
			$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
			foreach($dataReader1 as $row1)
			{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['barang'],
						Yii::app()->format->formatCurrency($row1['januari']),
						Yii::app()->format->formatCurrency($row1['februari']),
						Yii::app()->format->formatCurrency($row1['maret']),
						Yii::app()->format->formatCurrency($row1['april']),
						Yii::app()->format->formatCurrency($row1['mei']),
						Yii::app()->format->formatCurrency($row1['juni']),
						Yii::app()->format->formatCurrency($row1['juli']),
						Yii::app()->format->formatCurrency($row1['agustus']),
						Yii::app()->format->formatCurrency($row1['september']),
						Yii::app()->format->formatCurrency($row1['oktober']),
						Yii::app()->format->formatCurrency($row1['nopember']),
						Yii::app()->format->formatCurrency($row1['desember']),
						Yii::app()->format->formatCurrency($row1['jumlah'])
					));
				$totaljanuari += $row1['januari'];
		    $totalfebruari += $row1['februari'];
		    $totalmaret += $row1['maret'];
		    $totalapril += $row1['april'];
		    $totalmei += $row1['mei'];
		    $totaljuni += $row1['juni'];
		    $totaljuli += $row1['juli'];
		    $totalagustus += $row1['agustus'];
		    $totalseptember += $row1['september'];
		    $totaloktober += $row1['oktober'];
		    $totalnopember += $row1['nopember'];
		    $totaldesember += $row1['desember'];
		    $totaljumlah += $row1['jumlah'];
			}
			$this->pdf->setFont('Arial','B',8);
			$this->pdf->row(array(
        '',
        'TOTAL ' . $row['fullname'],
        Yii::app()->format->formatCurrency($totaljanuari),
        Yii::app()->format->formatCurrency($totalfebruari),
        Yii::app()->format->formatCurrency($totalmaret),
        Yii::app()->format->formatCurrency($totalapril),
        Yii::app()->format->formatCurrency($totalmei),
        Yii::app()->format->formatCurrency($totaljuni),
        Yii::app()->format->formatCurrency($totaljuli),
        Yii::app()->format->formatCurrency($totalagustus),
        Yii::app()->format->formatCurrency($totalseptember),
        Yii::app()->format->formatCurrency($totaloktober),
        Yii::app()->format->formatCurrency($totalnopember),
        Yii::app()->format->formatCurrency($totaldesember),
        Yii::app()->format->formatCurrency($totaljumlah),
      ));
			$totaljanuari1 += $totaljanuari;
	    $totalfebruari1 += $totalfebruari;
	    $totalmaret1 += $totalmaret;
	    $totalapril1 += $totalapril;
	    $totalmei1 += $totalmei;
	    $totaljuni1 += $totaljuni;
	    $totaljuli1 += $totaljuli;
	    $totalagustus1 += $totalagustus;
	    $totalseptember1 += $totalseptember;
	    $totaloktober1 += $totaloktober;
	    $totalnopember1 += $totalnopember;
	    $totaldesember1 += $totaldesember;
	    $totaljumlah1 += $totaljumlah;

			$this->pdf->sety($this->pdf->gety()+3);	
			$this->pdf->checkPageBreak(20);
		}
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatCurrency($totaljanuari1),
      Yii::app()->format->formatCurrency($totalfebruari1),
      Yii::app()->format->formatCurrency($totalmaret1),
      Yii::app()->format->formatCurrency($totalapril1),
      Yii::app()->format->formatCurrency($totalmei1),
      Yii::app()->format->formatCurrency($totaljuni1),
      Yii::app()->format->formatCurrency($totaljuli1),
      Yii::app()->format->formatCurrency($totalagustus1),
      Yii::app()->format->formatCurrency($totalseptember1),
      Yii::app()->format->formatCurrency($totaloktober1),
      Yii::app()->format->formatCurrency($totalnopember1),
      Yii::app()->format->formatCurrency($totaldesember1),
      Yii::app()->format->formatCurrency($totaljumlah1),
    ));
		$this->pdf->Output();
	}
	//55
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianQty($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and year(j.invoicedate) =	year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rekap Penjualan - Retur Per Customer Per Barang Per Bulan - Rincian (Qty)';
			$this->pdf->subtitle = 'Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			$this->pdf->AddPage('L','F4');
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+5,'Customer');$this->pdf->text(30,$this->pdf->gety()+5,': '.$row['fullname']);
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		
				foreach($dataReader1 as $row1)
				{
					$this->pdf->SetFont('Arial','',10);
					$this->pdf->text(10,$this->pdf->gety()+10,'Material Group');$this->pdf->text(40,$this->pdf->gety()+10,': '.$row1['description']);
					$sql2 = "select *
								from (select o.productname,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 1
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 1
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as januari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 2
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 2
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as februari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 3
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 3
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as maret,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 4
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 4
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as april,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 5
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 5
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as mei,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 6
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 6
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juni,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 7
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 7
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juli,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 8
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 8
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as agustus,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 9
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 9
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as september,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 10
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 10
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as oktober,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 11
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 11
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as nopember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 12
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 12
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as desember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']."
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']."
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as jumlah
								from product o 
								order by productname) zzz
								where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
								";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					$this->pdf->sety($this->pdf->gety()+15);
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->colalign = array('C','C','C','C','C','C','C','C','C','C','C','C','C','C','C');
					$this->pdf->setwidths(array(10,35,20,20,20,20,20,20,20,20,20,20,20,20,25));
					$this->pdf->colheader = array('No','Material Group','Januari','Februari','Maret','April','Mei','Juni','Juli','Agustus','September','Oktober','Nopember','Desember','Jumlah');
					$this->pdf->RowHeader();
					$this->pdf->coldetailalign = array('L','L','R','R','R','R','R','R','R','R','R','R','R','R','R');
					$this->pdf->setFont('Arial','',8);
					$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
								
					foreach($dataReader2 as $row2)
					{
						$i+=1;
						$this->pdf->row(array(
							$i,$row2['productname'],
							Yii::app()->format->formatCurrency($row2['januari']),
							Yii::app()->format->formatCurrency($row2['februari']),
							Yii::app()->format->formatCurrency($row2['maret']),
							Yii::app()->format->formatCurrency($row2['april']),
							Yii::app()->format->formatCurrency($row2['mei']),
							Yii::app()->format->formatCurrency($row2['juni']),
							Yii::app()->format->formatCurrency($row2['juli']),
							Yii::app()->format->formatCurrency($row2['agustus']),
							Yii::app()->format->formatCurrency($row2['september']),
							Yii::app()->format->formatCurrency($row2['oktober']),
							Yii::app()->format->formatCurrency($row2['nopember']),
							Yii::app()->format->formatCurrency($row2['desember']),
							Yii::app()->format->formatCurrency($row2['jumlah']),
						));
						$totaljanuari += $row2['januari'];
						$totalfebruari += $row2['februari'];
						$totalmaret += $row2['maret'];
						$totalapril += $row2['april'];
						$totalmei += $row2['mei'];
						$totaljuni += $row2['juni'];
						$totaljuli += $row2['juli'];
						$totalagustus += $row2['agustus'];
						$totalseptember += $row2['september'];
						$totaloktober += $row2['oktober'];
						$totalnopember += $row2['nopember'];
						$totaldesember += $row2['desember'];
						$totaljumlah += $row2['jumlah'];
						
					}					
					$this->pdf->setFont('Arial','B',8);
					$this->pdf->row(array(
						'','JUMLAH '.$row1['description'],
						Yii::app()->format->formatCurrency($totaljanuari),
						Yii::app()->format->formatCurrency($totalfebruari),
						Yii::app()->format->formatCurrency($totalmaret),
						Yii::app()->format->formatCurrency($totalapril),
						Yii::app()->format->formatCurrency($totalmei),
						Yii::app()->format->formatCurrency($totaljuni),
						Yii::app()->format->formatCurrency($totaljuli),
						Yii::app()->format->formatCurrency($totalagustus),
						Yii::app()->format->formatCurrency($totalseptember),
						Yii::app()->format->formatCurrency($totaloktober),
						Yii::app()->format->formatCurrency($totalnopember),
						Yii::app()->format->formatCurrency($totaldesember),
						Yii::app()->format->formatCurrency($totaljumlah),
					));
						$totaljanuari1 += $totaljanuari;
						$totalfebruari1 += $totalfebruari;
						$totalmaret1 += $totalmaret;
						$totalapril1 += $totalapril;
						$totalmei1 += $totalmei;
						$totaljuni1 += $totaljuni;
						$totaljuli1 += $totaljuli;
						$totalagustus1 += $totalagustus;
						$totalseptember1 += $totalseptember;
						$totaloktober1 += $totaloktober;
						$totalnopember1 += $totalnopember;
						$totaldesember1 += $totaldesember;
						$totaljumlah1 += $totaljumlah;
						
					$this->pdf->checkPageBreak(20);
				}
				$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'TOTAL '.$row['fullname'],
      Yii::app()->format->formatCurrency($totaljanuari1),
      Yii::app()->format->formatCurrency($totalfebruari1),
      Yii::app()->format->formatCurrency($totalmaret1),
      Yii::app()->format->formatCurrency($totalapril1),
      Yii::app()->format->formatCurrency($totalmei1),
      Yii::app()->format->formatCurrency($totaljuni1),
      Yii::app()->format->formatCurrency($totaljuli1),
      Yii::app()->format->formatCurrency($totalagustus1),
      Yii::app()->format->formatCurrency($totalseptember1),
      Yii::app()->format->formatCurrency($totaloktober1),
      Yii::app()->format->formatCurrency($totalnopember1),
      Yii::app()->format->formatCurrency($totaldesember1),
      Yii::app()->format->formatCurrency($totaljumlah1),
    ));
		
			$totaljanuari2 += $totaljanuari1;
			$totalfebruari2 += $totalfebruari1;
			$totalmaret2 += $totalmaret1;
			$totalapril2 += $totalapril1;
			$totalmei2 += $totalmei1;
			$totaljuni2 += $totaljuni1;
			$totaljuli2 += $totaljuli1;
			$totalagustus2 += $totalagustus1;
			$totalseptember2 += $totalseptember1;
			$totaloktober2 += $totaloktober1;
			$totalnopember2 += $totalnopember1;
			$totaldesember2 += $totaldesember1;
			$totaljumlah2 += $totaljumlah1;

			}
		$this->pdf->setFont('Arial','B',8);
		$this->pdf->row(array(
      '',
      'GRAND TOTAL ',
      Yii::app()->format->formatCurrency($totaljanuari2),
      Yii::app()->format->formatCurrency($totalfebruari2),
      Yii::app()->format->formatCurrency($totalmaret2),
      Yii::app()->format->formatCurrency($totalapril2),
      Yii::app()->format->formatCurrency($totalmei2),
      Yii::app()->format->formatCurrency($totaljuni2),
      Yii::app()->format->formatCurrency($totaljuli2),
      Yii::app()->format->formatCurrency($totalagustus2),
      Yii::app()->format->formatCurrency($totalseptember2),
      Yii::app()->format->formatCurrency($totaloktober2),
      Yii::app()->format->formatCurrency($totalnopember2),
      Yii::app()->format->formatCurrency($totaldesember2),
      Yii::app()->format->formatCurrency($totaljumlah2),
    ));
			$this->pdf->Output();
	}
	//56
	public function RekapSalesOrderOutstandingPerBarang($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$totalnetto=0;
		$sql = "select distinct f.materialgroupid, f.description
						from sodetail a 
						join soheader b on b.soheaderid=a.soheaderid
						join product c on c.productid=a.productid
						join unitofmeasure d on d.unitofmeasureid=a.unitofmeasureid
						join productplant e on e.productid=a.productid and e.slocid=a.slocid
						join materialgroup f on f.materialgroupid=e.materialgroupid
						join sloc g on g.slocid=a.slocid
						join addressbook h on h.addressbookid=b.addressbookid
						join employee i on i.employeeid=b.employeeid
						join salesarea j on j.salesareaid=h.salesareaid
						where b.recordstatus = 6 and c.isstock = 1
						and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and a.qty <> a.giqty and g.sloccode like '%".$sloc."%'	and h.fullname like '%".$customer."%' 
						and i.fullname like '%".$employee."%'	and c.productname like '%".$product."%'
						and j.areaname like '%".$salesarea."%' group by productname";	
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			{
				$this->pdf->companyid = $companyid;
			}
			$this->pdf->title='Rincian Sales Order Outstanding';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			
			$this->pdf->AddPage('P');
			
			if ($customer == '') {$cust = 'ALL';} else {$cust = $customer;}
			$this->pdf->text(10,$this->pdf->gety()+2,'Customer');
			$this->pdf->text(30,$this->pdf->gety()+2,': '.$cust);
			
			foreach($dataReader as $row)
			{
				$this->pdf->SetFont('Arial','',10);
				$this->pdf->text(10,$this->pdf->gety()+7,'Material Group');$this->pdf->text(40,$this->pdf->gety()+7,': '.$row['description']);
				
				$sql1 = "select c.productname, d.uomcode, sum(a.qty) as qty, sum(a.giqty) as giqty, sum(a.qty-a.giqty) as sisa
						from sodetail a 
						join soheader b on b.soheaderid=a.soheaderid
						join product c on c.productid=a.productid
						join unitofmeasure d on d.unitofmeasureid=a.unitofmeasureid
						join productplant e on e.productid=a.productid and e.slocid=a.slocid
						join materialgroup f on f.materialgroupid=e.materialgroupid
						join sloc g on g.slocid=a.slocid
						join addressbook h on h.addressbookid=b.addressbookid
						join employee i on i.employeeid=b.employeeid
						join salesarea j on j.salesareaid=h.salesareaid
						where b.recordstatus = 6 and c.isstock = 1 and f.materialgroupid = '".$row['materialgroupid']."'
						and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and a.qty <> a.giqty and g.sloccode like '%".$sloc."%'	and h.fullname like '%".$customer."%' 
						and i.fullname like '%".$employee."%'	and c.productname like '%".$product."%'
						and j.areaname like '%".$salesarea."%' group by productname";
				
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totalsisa=0;$i=0;$totalqty=0;$totalgiqty=0;
				$this->pdf->sety($this->pdf->gety()+10);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,80,12,30,30,30));
				$this->pdf->colheader = array('No','Nama Barang','Satuan','Qty SO','Qty Kirim','Qty Belum Kirim');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','C','R');
				$this->pdf->setFont('Arial','',8);
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->pdf->row(array(
						$i,$row1['productname'],
						$row1['uomcode'],
						Yii::app()->format->formatCurrency($row1['qty']),
						Yii::app()->format->formatCurrency($row1['giqty']),
						Yii::app()->format->formatCurrency($row1['sisa'])
					));
					$totalqty += $row1['qty'];
					$totalgiqty += $row1['giqty'];
					$totalsisa += $row1['sisa'];

				}
				$this->pdf->row(array(
						'','Total','',
						Yii::app()->format->formatCurrency($totalqty),
						Yii::app()->format->formatCurrency($totalgiqty),
						Yii::app()->format->formatCurrency($totalsisa),
					));
				$this->pdf->checkPageBreak(20);
			}
			$this->pdf->Output();
	}
	//57
	public function LaporanStatusBelumMax($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		parent::actionDownload();
		$sql = "select a.soheaderid, a.sono, a.sodate, a.companyid, a.addressbookid, a.recordstatus, a.statusname, b.companyname, c.fullname
		from soheader a
        join company b on b.companyid = a.companyid
        join addressbook c on c.addressbookid = a.addressbookid
        join employee e on e.employeeid = a.employeeid
        where a.recordstatus < 6 and a.recordstatus <> 0
        and a.companyid=".$companyid."
        and c.fullname like '%".$customer."%'
        and e.fullname like '%".$employee."%'";
        
            $cmd=$this->connection->createCommand($sql);
            $dataReader=$cmd->queryAll();

       
			$this->pdf->title='Laporan SO Status Belum Max';
			$this->pdf->subtitle='Dari Tgl :'.date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)).' s/d '.date(Yii::app()->params['dateviewfromdb'], strtotime($enddate));
			    $this->pdf->AddPage('P');
				$this->pdf->sety($this->pdf->gety()+10);
				$this->pdf->setFont('Arial','B',8);
				$this->pdf->colalign = array('C','C','C','C','C','C');
				$this->pdf->setwidths(array(10,20,20,50,45,45));
				$this->pdf->colheader = array('No','NO SO','Tgl SO','Perusahaan','Customer','Status');
				$this->pdf->RowHeader();
				$this->pdf->coldetailalign = array('L','L','R','R','C','R');
				$this->pdf->setFont('Arial','',8);	
        $i=0;
        foreach($dataReader as $row){
            $i+=1;
            $this->pdf->setFont('Arial','',8);
            $this->pdf->row(array(
                $i,
                $row['sono'],
               date(Yii::app()->params['dateviewfromdb'],strtotime($row['sodate'])),
                $row['companyname'],
                $row['fullname'],
                $row['statusname']));
                                  
        }
		$this->pdf->Output();	
	}
	
	
	
	
	public function actionDownXLS()
	{
	  parent::actionDownload();
		if (isset($_GET['lro']) && isset($_GET['company']) && isset($_GET['sloc']) && isset($_GET['customer']) && isset($_GET['sales']) && isset($_GET['product']) && isset($_GET['salesarea']) && isset($_GET['startdate']) && isset($_GET['enddate']) && isset($_GET['per']))
		{
			if ($_GET['lro'] == 1)
			{
				$this->RincianPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 2)
			{
				$this->RekapPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 3)
			{
				$this->RekapPenjualanPerCustomerXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 4)
			{
				$this->RekapPenjualanPerSalesXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 5)
			{
				$this->RekapPenjualanPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 6)
			{
				$this->RekapPenjualanPerAreaXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 7)
			{
				$this->RekapPenjualanPerCustomerPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 8)
			{
				$this->RekapPenjualanPerCustomerPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 9)
			{
				$this->RekapPenjualanPerSalesPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 10)
			{
				$this->RekapPenjualanPerSalesPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 11)
			{
				$this->RekapPenjualanPerAreaPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 12)
			{
				$this->RekapPenjualanPerAreaPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 13)
			{
				$this->RincianReturPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 14)
			{
				$this->RekapReturPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 15)
			{
				$this->RekapReturPenjualanPerCustomerXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 16)
			{
				$this->RekapReturPenjualanPerSalesXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 17)
			{
				$this->RekapReturPenjualanPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 18)
			{
				$this->RekapReturPenjualanPerAreaXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 19)
			{
				$this->RekapReturPenjualanPerCustomerPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 20)
			{
				$this->RekapReturPenjualanPerCustomerPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 21)
			{
				$this->RekapReturPenjualanPerSalesPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 22)
			{
				$this->RekapReturPenjualanPerSalesPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 23)
			{
				$this->RekapReturPenjualanPerAreaPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 24)
			{
				$this->RekapReturPenjualanPerAreaPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 25)
			{
				$this->RincianPenjualanReturPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 26)
			{
				$this->RekapPenjualanReturPenjualanPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 27)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 28)
			{
				$this->RekapPenjualanReturPenjualanPerSalesXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 29)
			{
				$this->RekapPenjualanReturPenjualanPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 30)
			{
				$this->RekapPenjualanReturPenjualanPerAreaXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 31)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 32)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 33)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 34)
			{
				$this->RekapPenjualanReturPenjualanPerSalesPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 35)
			{
				$this->RekapPenjualanReturPenjualanPerAreaPerBarangTotalXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 36)
			{
				$this->RekapPenjualanReturPenjualanPerAreaPerBarangRincianXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 37)
			{
				$this->RincianSalesOrderPerDokumenXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
            else
			if ($_GET['lro'] == 38)
			{
				$this->RincianSalesOrderOutstandingXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
            else
			if ($_GET['lro'] == 39)
			{
				$this->RekapSuratJalanBelumDibuatkanFakturXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 40)
			{
				$this->RekapPenjualanPerCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 41)
			{
				$this->RekapReturPenjualanPerCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 42)
			{
				$this->RekapPenjualanReturPenjualanPerCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 43)
			{
				$this->RekapPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 44)
			{
				$this->RekapReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 45)
			{
				$this->RekapPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 46)
			{
				$this->RekapTotalPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 47)
			{
				$this->RekapTotalReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 48)
			{
				$this->RekapTotalPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 49)
			{
				$this->RekapPenjualanPerBarangPerBulanQtyXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 50)
			{
				$this->RekapPenjualanPerBarangPerBulanNilaiXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 51)
			{
				$this->RekapPenjualanPerBarangPerBulanQtydanNilaiXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 52)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalNilaiXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 53)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianNilaiXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 54)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalQtyXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 55)
			{
				$this->RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianQtyXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
			else
			if ($_GET['lro'] == 56)
			{
				$this->RekapSalesOrderOutstandingPerBarangXLS($_GET['company'],$_GET['sloc'],$_GET['customer'],$_GET['sales'],$_GET['product'],$_GET['salesarea'],$_GET['startdate'],$_GET['enddate'],$_GET['per']);
			}
		}
	}
	//1
	public function RincianPenjualanPerDokumenXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rincianpenjualanperdokumen';
		parent::actionDownxls();	
		$total1=0;$totaldisc1=0;$totalnetto1=0;					
		$sql = "select a.invoiceid,a.invoiceno, b.gino, a.invoicedate, d.fullname as customer,h.fullname as sales, e.paydays, c.shipto, a.headernote
								from invoice a
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join paymentmethod e on e.paymentmethodid = c.paymentmethodid
								join gidetail f on f.giheaderid = b.giheaderid
								join sloc g on g.slocid = f.slocid
								join employee h on h.employeeid = c.employeeid
								join product i on i.productid = f.productid
								join salesarea j on j.salesareaid = d.salesareaid
								where a.recordstatus = 3 and c.companyid = ".$companyid." and g.sloccode like '%".$sloc."%'
								and d.fullname like '%".$customer."%' and h.fullname like '%".$employee."%' and i.productname like '%".$product."%'
								and j.areaname like '%".$salesarea."%' and b.gino is not null
								and a.invoicedate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
								'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by invoiceno order by invoicedate";
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
				->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
				->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
			$line=4;				
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No. Bukti')
					->setCellValueByColumnAndRow(1,$line,': '.$row['invoiceno'])
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,$row['invoicedate']);
					
				$line++;
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Sales')
					->setCellValueByColumnAndRow(1,$line,': '.$row['sales'])
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,'Kepada Yth,');
					
				$line++;
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No. SJ')
					->setCellValueByColumnAndRow(1,$line,': '.$row['gino'])
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,$row['customer']);
					
				$line++;
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'T.O.P')
					->setCellValueByColumnAndRow(1,$line,': '.$row['paydays'].' HARI')
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,$row['shipto']);				
				
				$line++;						
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Barang')
					->setCellValueByColumnAndRow(2,$line,'Qty')
					->setCellValueByColumnAndRow(3,$line,'Unit')
					->setCellValueByColumnAndRow(4,$line,'Price')
					->setCellValueByColumnAndRow(5,$line,'Total');
				$line++;
				$sql1 = "select distinct ss.gidetailid,a.invoiceno,i.productname,k.uomcode,ss.qty,
										(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
										(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nominal,
										(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
										from gidetail zzb 
										join sodetail zza on zza.sodetailid = zzb.sodetailid
										where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
										from invoice a 
										join giheader b on b.giheaderid = a.giheaderid
										join soheader c on c.soheaderid = b.soheaderid
										join addressbook d on d.addressbookid = c.addressbookid
										join employee e on e.employeeid = c.employeeid
										join salesarea f on f.salesareaid = d.salesareaid
										join sodetail g on g.soheaderid = b.soheaderid
										join gidetail ss on ss.giheaderid = b.giheaderid
										join sloc h on h.slocid = ss.slocid
										join product i on i.productid = ss.productid
										join productplant j on j.productid = i.productid
										join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
										where a.recordstatus = 3 and c.companyid = ".$companyid." 
										and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' 
										and e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' 
										and i.productname like '%".$product."%' and a.invoiceid = ".$row['invoiceid']." 
										and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
										and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'";
			
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totalqty=0;$i=0;$total=0;$diskon=0;$netto=0;
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row1['productname'])
							->setCellValueByColumnAndRow(2,$line,$row1['qty'])
							->setCellValueByColumnAndRow(3,$line,$row1['uomcode'])
							->setCellValueByColumnAndRow(4,$line,$row1['price']/$per)
							->setCellValueByColumnAndRow(5,$line,$row1['nominal']/$per);
							$line++;						
							$totalqty += $row1['qty'];
							$total += $row1['nominal']/$per;							
							$netto += $row1['nett']/$per;
							$diskon += ($row1['nominal']/$per) - ($row1['nett']/$per);
							$bilangan = explode(".",$netto);
				}
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,'')
							->setCellValueByColumnAndRow(1,$line,'Total')
							->setCellValueByColumnAndRow(2,$line,$totalqty)
							->setCellValueByColumnAndRow(3,$line,'')
							->setCellValueByColumnAndRow(4,$line,'Nominal')
							->setCellValueByColumnAndRow(5,$line,$total);
							$line+= 1;
							
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,'')
							->setCellValueByColumnAndRow(1,$line,'')
							->setCellValueByColumnAndRow(2,$line,'')
							->setCellValueByColumnAndRow(3,$line,'')
							->setCellValueByColumnAndRow(4,$line,'Diskon')
							->setCellValueByColumnAndRow(5,$line,$diskon);
				
				$line++;	
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'')
					->setCellValueByColumnAndRow(1,$line,'Terbilang : '.$this->eja($bilangan[0]))
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,'Netto')
					->setCellValueByColumnAndRow(5,$line,$netto);		
					
					
				$line++;	
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'')
					->setCellValueByColumnAndRow(1,$line,'Note : '.$row['headernote']);
					
					$line+= 2;
					$total1 += $total;
					$totaldisc1 += $diskon;
					$totalnetto1 += $netto;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')	
				->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'TOTAL DISCOUNT')				
				->setCellValueByColumnAndRow(4,$line,'')
				->setCellValueByColumnAndRow(5,$line,'TOTAL NETTO');
				
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,$total1)
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,$totaldisc1)
				->setCellValueByColumnAndRow(4,$line,'')
				->setCellValueByColumnAndRow(5,$line,$totalnetto1);
				
				
	$this->getFooterXLS($this->phpExcel);	
	
	
	}
	//2
	public function RekapPenjualanPerDokumenXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperdokumen';
		parent::actionDownxls();
		$sql = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						  from gidetail zzb 
						  join sodetail zza on zza.sodetailid = zzb.sodetailid
						  where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
              c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
              e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
              a.invoiceno is not null and a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by invoiceno
              )z group by invoiceno"; 
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
				->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
				->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
			$line=4;
			$i=0;$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'No. Bukti')
					->setCellValueByColumnAndRow(2,$line,'Tanggal')
					->setCellValueByColumnAndRow(3,$line,'Customer')
					->setCellValueByColumnAndRow(4,$line,'Nominal')
					->setCellValueByColumnAndRow(5,$line,'Disc')
					->setCellValueByColumnAndRow(6,$line,'Netto')
					->setCellValueByColumnAndRow(7,$line,'Keterangan');					
					$line++;
			foreach($dataReader as $row)
			{												
						$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row['invoiceno'])
							->setCellValueByColumnAndRow(2,$line,$row['invoicedate'])
							->setCellValueByColumnAndRow(3,$line,$row['fullname'])
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row['nominal']/$per))
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row['disc']/$per))
							->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row['netto']/$per))
							->setCellValueByColumnAndRow(7,$line,$row['headernote']);
							$line++;
					
					$line+= 0;
					$totalnominal1 += $row['nominal']/$per;
          $totaldisc1 += $row['disc']/$per;
          $totaljumlah1 += $row['netto']/$per;				
							
			}
				$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')	
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'TOTAL')				
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal1))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc1))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totaljumlah1));
		
		$this->getFooterXLS($this->phpExcel);
	}
	//3
	public function RekapPenjualanPerCustomerXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpercustomer';
		parent::actionDownxls();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
		$sql = "select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and k.areaname like '%".$salesarea."%'
				and j.invoiceno is not null and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$sql1 = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						  from gidetail zzb 
						  join sodetail zza on zza.sodetailid = zzb.sodetailid
						  where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							left join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%'  and i.productname like '%".$product."%' and a.invoiceno is not null and 
							a.invoiceno is not null and a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
							and d.addressbookid = ".$row['addressbookid']." order by invoiceno)z group by invoiceno"; 
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'No Dokumen')
				->setCellValueByColumnAndRow(2,$line,'Tanggal')
				->setCellValueByColumnAndRow(3,$line,'Nominal')
				->setCellValueByColumnAndRow(4,$line,'Disc')
				->setCellValueByColumnAndRow(5,$line,'Netto')
				->setCellValueByColumnAndRow(6,$line,'Keterangan')
				;
			foreach($dataReader1 as $row1)
			{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['invoiceno'])
				->setCellValueByColumnAndRow(2,$line,date(Yii::app()->params['dateviewfromdb'], strtotime($row1['invoicedate'])))
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($row1['nominal']))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($row1['disc']))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($row1['netto']))
				->setCellValueByColumnAndRow(6,$line,$row1['headernote']);
				$totalnominal += $row1['nominal'];
				$totaldisc += $row1['disc'];
				$total += $row1['netto'];
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Customer '. $row['fullname'])
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($totalnominal))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totaldisc))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($total));
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totaljumlah1 += $total;
			$line += 2;
		}
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total ')
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($totalnominal1))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totaldisc1))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaljumlah1));
		$this->getFooterXLS($this->phpExcel);
	}
	//4
	public function RekapPenjualanPerSalesXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpersales';
		parent::actionDownxls();
		$totalnominal1=0;$totaldisc1=0;$total1=0;				
		$sql = "select a.employeeid,a.fullname
							from employee a 
							where a.fullname like '%".$employee."%' and 
							a.employeeid in 
							(select employeeid from soheader b
							join sodetail c on c.soheaderid = b.soheaderid
							join gidetail d on d.sodetailid = c.sodetailid
							join product e on e.productid = d.productid
							join addressbook f on f.addressbookid = b.addressbookid
							join salesarea g on g.salesareaid = f.salesareaid
							join giheader h on h.giheaderid = d.giheaderid
							join sloc i on i.slocid = d.slocid
							join invoice j on j.giheaderid = h.giheaderid
							where j.recordstatus = 3 and b.companyid = ".$companyid." and f.fullname like '%".$customer."%' and i.sloccode like '%".$sloc."%' and e.productname like '%".$product."%' and
							g.areaname like '%".$salesarea."%' and j.invoiceno is not null and j.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."')";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(4,1,GetCompanyCode($companyid));
			$line=4;				
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Sales')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname'])
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,'');
					
				$line++;						
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Customer')
					->setCellValueByColumnAndRow(2,$line,'Nominal')
					->setCellValueByColumnAndRow(3,$line,'Disc')
					->setCellValueByColumnAndRow(4,$line,'Netto');
				$line++;				
				$sql1 = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
										(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
										(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
										(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
										(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
										from gidetail zzb 
										join sodetail zza on zza.sodetailid = zzb.sodetailid
										where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
										from invoice a 
										join giheader b on b.giheaderid = a.giheaderid
										join soheader c on c.soheaderid = b.soheaderid
										join addressbook d on d.addressbookid = c.addressbookid
										join employee e on e.employeeid = c.employeeid
										join salesarea f on f.salesareaid = d.salesareaid
										join sodetail g on g.soheaderid = b.soheaderid
										join gidetail ss on ss.giheaderid = b.giheaderid
										join sloc h on h.slocid = ss.slocid
										join product i on i.productid = ss.productid
										join productplant j on j.productid = i.productid
										join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
										where a.recordstatus = 3 and a.invoiceno is not null and
										c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
										e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
										a.invoiceno is not null and a.invoicedate between 
										'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
										'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
										and e.employeeid = ".$row['employeeid']." order by fullname
										)z group by fullname";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
				
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row1['fullname'])
							->setCellValueByColumnAndRow(2,$line,$row1['nominal']/$per)
							->setCellValueByColumnAndRow(3,$line,$row1['disc']/$per)
							->setCellValueByColumnAndRow(4,$line,$row1['netto']/$per);
							$line++;						
							$totalnominal += $row1['nominal']/$per;
							$totaldisc += $row1['disc']/$per;							
							$total += $row1['netto']/$per;							
				}
				$this->phpExcel->setActiveSheetIndex(0)							
							->setCellValueByColumnAndRow(1,$line,'Total Sales')
							->setCellValueByColumnAndRow(2,$line,$totalnominal)
							->setCellValueByColumnAndRow(3,$line,$totaldisc)
							->setCellValueByColumnAndRow(4,$line,$total);
							$line+= 2;
							$totalnominal1 += $totalnominal;
							$totaldisc1 += $totaldisc;
							$total1 += $total;
			}
			$this->phpExcel->setActiveSheetIndex(0)							
							->setCellValueByColumnAndRow(1,$line,'TOTAL')
							->setCellValueByColumnAndRow(2,$line,$totalnominal1)
							->setCellValueByColumnAndRow(3,$line,$totaldisc1)
							->setCellValueByColumnAndRow(4,$line,$total1);
		$this->getFooterXLS($this->phpExcel);
	}
	//5
	public function RekapPenjualanPerBarangXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperbarang';
		parent::actionDownxls();
		$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;						
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
			$line=4;				
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Divisi')
					->setCellValueByColumnAndRow(1,$line,': '.$row['description'])
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,'');
					
				$line++;						
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Barang')
					->setCellValueByColumnAndRow(2,$line,'Qty')
					->setCellValueByColumnAndRow(3,$line,'Price')
					->setCellValueByColumnAndRow(4,$line,'Total')
					->setCellValueByColumnAndRow(5,$line,'Disc')
					->setCellValueByColumnAndRow(6,$line,'Netto');
				$line++;
				$sql1 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
									(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
									(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
									(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
									(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
									from gidetail zzb 
									join sodetail zza on zza.sodetailid = zzb.sodetailid
									where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
									from invoice a 
									join giheader b on b.giheaderid = a.giheaderid
									join soheader c on c.soheaderid = b.soheaderid
									join addressbook d on d.addressbookid = c.addressbookid
									join employee e on e.employeeid = c.employeeid
									join salesarea f on f.salesareaid = d.salesareaid
									join sodetail g on g.soheaderid = b.soheaderid
									join gidetail ss on ss.giheaderid = b.giheaderid
									join sloc h on h.slocid = ss.slocid
									join product i on i.productid = ss.productid
									join productplant j on j.productid = i.productid and j.slocid=g.slocid
									join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
									where a.recordstatus = 3 and a.invoiceno is not null and
									c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
									e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
									and a.invoiceno is not null and j.materialgroupid = ".$row['materialgroupid']."
									and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
									and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
									)zz group by productid order by productname";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totalqty=0;$totalnetto=0;$totaldisc=0;$totalnominal=0;$i=0;
				
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row1['productname'])
							->setCellValueByColumnAndRow(2,$line,$row1['giqty'])
							->setCellValueByColumnAndRow(3,$line,$row1['harga']/$per)
							->setCellValueByColumnAndRow(4,$line,$row1['nominal']/$per)
							->setCellValueByColumnAndRow(5,$line,($row1['nominal']/$per) - ($row1['netto']/$per))
							->setCellValueByColumnAndRow(6,$line,$row1['netto']/$per);
							$line++;						
							$totalqty += $row1['giqty'];
							$totalnominal += $row1['nominal']/$per;
							$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
							$totalnetto += $row1['netto']/$per;
				}
				$this->phpExcel->setActiveSheetIndex(0)							
							->setCellValueByColumnAndRow(1,$line,'Total '.$row['description'])
							->setCellValueByColumnAndRow(2,$line,$totalqty)
							->setCellValueByColumnAndRow(4,$line,$totalnominal)
							->setCellValueByColumnAndRow(5,$line,$totaldisc)
							->setCellValueByColumnAndRow(6,$line,$totalnetto);
							$line+= 2;
							$totalnominal1 += $totalnominal;
							$totaldisc1 += $totaldisc;
							$totalnetto1 += $totalnetto;
			}
			$this->phpExcel->setActiveSheetIndex(0)							
							->setCellValueByColumnAndRow(1,$line,'TOTAL')
							->setCellValueByColumnAndRow(4,$line,$totalnominal1)
							->setCellValueByColumnAndRow(5,$line,$totaldisc1)
							->setCellValueByColumnAndRow(6,$line,$totalnetto1);
							$line+= 2;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//6
	public function RekapPenjualanPerAreaXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperarea';
		parent::actionDownxls();
		$totalnominal2=0;$totaldisc2=0;$totaljumlah2=0;$totalqty2=0;						
		$sql = "select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
          group by zg.areaname order by areaname";
				
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
		
		
		foreach($dataReader as $row)
		{		
				$sql1 = "select distinct a.materialgroupid,a.description,b.productid
								from materialgroup a
								join productplant b on b.materialgroupid = a.materialgroupid
								join product c on c.productid = b.productid
								join sloc d on d.slocid = b.slocid
								join gidetail e on e.productid = c.productid
								join giheader f on f.giheaderid = e.giheaderid
								join soheader g on g.soheaderid = f.soheaderid
								join addressbook h on h.addressbookid = g.addressbookid
								join salesarea i on i.salesareaid = h.salesareaid
								join invoice j on j.giheaderid = f.giheaderid
								join employee k on k.employeeid = g.employeeid
								where j.recordstatus = 3 and g.companyid = ".$companyid." and i.salesareaid = ".$row['salesareaid']." and k.fullname like '%".$employee."%' 
								and c.productname like '%".$product."%' and d.sloccode like '%".$sloc."%' and h.fullname like '%".$customer."%' 
								and j.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by a.description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Area')
						->setCellValueByColumnAndRow(1,$line,': '.$row['areaname'])
						->setCellValueByColumnAndRow(2,$line,'')
						->setCellValueByColumnAndRow(3,$line,'')
						->setCellValueByColumnAndRow(4,$line,'');						
				$line++;
				$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
				
				foreach($dataReader1 as $row1)
				{							
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Grup Material')
						->setCellValueByColumnAndRow(1,$line,': '.$row1['description'])
						->setCellValueByColumnAndRow(2,$line,'')
						->setCellValueByColumnAndRow(3,$line,'')
						->setCellValueByColumnAndRow(4,$line,'');			
			
					$line++;						
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')					
						->setCellValueByColumnAndRow(3,$line,'Nominal')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
					$line++;
					$sql2 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								 from gidetail zzb 
								 join sodetail zza on zza.sodetailid = zzb.sodetailid
								 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
									c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
									e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
									a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and
											 '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
									and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']."
								) zz group by productid";
					
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totalgrupdisc = 0;$totalgrupnominal=0;$totalgrup=0;$i=0;$totalgrupqty=0;
					
					foreach($dataReader2 as $row2)
					{
						$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row2['productname'])
							->setCellValueByColumnAndRow(2,$line,$row2['giqty'])							
							->setCellValueByColumnAndRow(3,$line,$row2['nominal']/$per)
							->setCellValueByColumnAndRow(4,$line,($row2['nominal']/$per) - ($row2['netto']/$per))
							->setCellValueByColumnAndRow(5,$line,$row2['netto']/$per);
							$line++;
						$totalgrupqty += $row2['giqty'];
						$totalgrupnominal += $row2['nominal']/$per;
						$totalgrupdisc += (($row2['nominal']/$per) - ($row2['netto']/$per));
						$totalgrup += $row2['netto']/$per;
					}
					$this->phpExcel->setActiveSheetIndex(0)							
							->setCellValueByColumnAndRow(1,$line,'Total '.$row1['description'])
							->setCellValueByColumnAndRow(2,$line,$totalgrupqty)
							->setCellValueByColumnAndRow(3,$line,$totalgrupnominal)
							->setCellValueByColumnAndRow(4,$line,$totalgrupdisc)
							->setCellValueByColumnAndRow(5,$line,$totalgrup);
					$line+= 1;
					$totalqty1 += $totalgrupqty;
					$totalnominal1 += $totalgrupnominal;
					$totaldisc1 += $totalgrupdisc;
					$totaljumlah1 += $totalgrup;
							
				}
				$this->phpExcel->setActiveSheetIndex(0)							
							->setCellValueByColumnAndRow(1,$line,'Total '.$row['areaname'])
							->setCellValueByColumnAndRow(2,$line,$totalqty1)
							->setCellValueByColumnAndRow(3,$line,$totalnominal1)
							->setCellValueByColumnAndRow(4,$line,$totaldisc1)
							->setCellValueByColumnAndRow(5,$line,$totaljumlah1);
				$line+= 2;		
				
				$totalqty2 += $totalqty1;
				$totalnominal2 += $totalnominal1;
				$totaldisc2 += $totaldisc1;
				$totaljumlah2 += $totaljumlah1;
		}
		$this->phpExcel->setActiveSheetIndex(0)							
				->setCellValueByColumnAndRow(1,$line,'TOTAL')
				->setCellValueByColumnAndRow(3,$line,$totalnominal2)
				->setCellValueByColumnAndRow(4,$line,$totaldisc2)
				->setCellValueByColumnAndRow(5,$line,$totaljumlah2);
		$line+= 2;
							
	$this->getFooterXLS($this->phpExcel);
	}
	//7
	public function RekapPenjualanPerCustomerPerBarangTotalXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpercustomerperbarangtotal';
		parent::actionDownxls();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
		$sql = "select a.addressbookid, a.fullname
				from addressbook a 
				where a.fullname like '%".$customer."%' and 
				a.addressbookid in 
				(select b.addressbookid from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	         join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
            join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and f.fullname like '%".$employee."%' and i.sloccode like '%".$sloc."%' and e.productname like '%".$product."%' and
				k.areaname like '%".$salesarea."%' and j.invoiceno is not null and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."') order by fullname";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$sql1 = "select productid,productname,description as barang,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,l.description,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)zz group by barang"; 
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Material Group')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Total')
				->setCellValueByColumnAndRow(4,$line,'Disc')
				->setCellValueByColumnAndRow(5,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['barang'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($row1['giqty']))
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($row1['nominal']/$per))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($row1['netto']/$per));
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$total += $row1['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Customer '. $row['fullname'])
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($totalnominal))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totaldisc))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($total));
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totaljumlah1 += $total;
			$line += 2;
		}
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total ')
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($totalnominal1))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totaldisc1))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaljumlah1));
		$this->getFooterXLS($this->phpExcel);
	}
	//8
	public function RekapPenjualanPerCustomerPerBarangRincianXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpercustomerperbarangrincian';
		parent::actionDownxls();
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select a.addressbookid, a.fullname
				from addressbook a 
				where a.fullname like '%".$customer."%' and 
				a.addressbookid in 
				(select b.addressbookid from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
			  join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and f.fullname like '%".$employee."%' and i.sloccode like '%".$sloc."%' and e.productname like '%".$product."%' and
				k.areaname like '%".$salesarea."%' and j.invoiceno is not null and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."') order by fullname";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
			$sql1 = "select distinct a.materialgroupid,a.materialgroupcode,a.description
						from materialgroup a
						join productplant b on b.materialgroupid = a.materialgroupid
						join product c on c.productid = b.productid
						join sloc d on d.slocid = b.slocid
						join plant e on e.plantid = d.plantid
						join company f on f.companyid = e.companyid
						where f.companyid = ".$companyid." and b.productid in
						(
						select zc.productid
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						where zi.recordstatus = 3 and zc.slocid = b.slocid and zi.invoiceno is not null and za.companyid = ".$companyid." and
						zf.addressbookid = ".$row['addressbookid']." and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') order by description asc"; 
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
						$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Price')
				->setCellValueByColumnAndRow(4,$line,'Total')
				->setCellValueByColumnAndRow(5,$line,'Disc')
				->setCellValueByColumnAndRow(6,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Material Group')
				->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
				$totalqty = 0;$totaldisc = 0;$totalnominal=0;$totalnetto=0;$i=0;
				$sql2 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
				$command2=$this->connection->createCommand($sql2);
				$dataReader2=$command2->queryAll();
				
				foreach($dataReader2 as $row2)
				{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row2['productname'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($row2['giqty']))
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($row2['harga']/$per))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($row2['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($row2['netto']/$per));
				$totalqty += $row2['giqty'];
				$totalnominal += $row2['nominal']/$per;
				$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
				$totalnetto += $row2['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Material Group '. $row1['description'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($totalqty))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totalnominal))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaldisc))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($totalnetto));
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Customer '. $row['fullname'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($totalqty1))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totalnominal1))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaldisc1))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($totalnetto1));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			$line+= 2;
		}
		$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Grand Total')
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($totalqty2))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totalnominal2))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaldisc2))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($totalnetto2));
		$line += 1;
		$this->getFooterXLS($this->phpExcel);
	}
	//9
	public function RekapPenjualanPerSalesPerBarangTotalXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpersalesperbarangtotal';
		parent::actionDownxls();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
		$sql = "select a.employeeid,a.fullname
				from employee a 
				where a.fullname like '%".$employee."%' and 
				a.employeeid in 
				(select employeeid from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and f.fullname like '%".$customer."%' and i.sloccode like '%".$sloc."%' and e.productname like '%".$product."%' and
				g.areaname like '%".$salesarea."%' and j.invoiceno is not null and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."') order by fullname";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$sql1 = "select productid,productname,description as barang,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,l.description,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and 
						  e.employeeid = ".$row['employeeid']." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)zz group by barang"; 
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Material Group')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Total')
				->setCellValueByColumnAndRow(4,$line,'Disc')
				->setCellValueByColumnAndRow(5,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['barang'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($row1['giqty']))
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($row1['nominal']/$per))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($row1['netto']/$per));
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$total += $row1['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Sales '. $row['fullname'])
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($totalnominal))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totaldisc))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($total));
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totaljumlah1 += $total;
			$line += 2;
		}
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total ')
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($totalnominal1))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totaldisc1))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaljumlah1));
		$this->getFooterXLS($this->phpExcel);
	}
	//10
	public function RekapPenjualanPerSalesPerBarangRincianXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpersalesperbarangrincian';
		parent::actionDownxls();
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select a.employeeid,a.fullname
				from employee a 
				where a.fullname like '%".$employee."%' and 
				a.employeeid in 
				(select employeeid from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join addressbook f on f.addressbookid = b.addressbookid
				join salesarea g on g.salesareaid = f.salesareaid
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and f.fullname like '%".$customer."%' and i.sloccode like '%".$sloc."%' and e.productname like '%".$product."%' and
				g.areaname like '%".$salesarea."%' and j.invoiceno is not null and j.invoicedate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
				'".date(Yii::app()->params['datetodb'], strtotime($enddate))."') order by fullname asc";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
			$sql1 = "select distinct a.materialgroupid,a.materialgroupcode,a.description
						from materialgroup a
						join productplant b on b.materialgroupid = a.materialgroupid
						join product c on c.productid = b.productid
						join sloc d on d.slocid = b.slocid
						join plant e on e.plantid = d.plantid
						join company f on f.companyid = e.companyid
						where f.companyid = ".$companyid." and b.productid in
						(
						select zc.productid
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						where zi.recordstatus = 3 and zc.slocid = b.slocid and zi.invoiceno is not null and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%'  and zd.employeeid = ".$row['employeeid']." and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') order by description asc"; 
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
						$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Price')
				->setCellValueByColumnAndRow(4,$line,'Total')
				->setCellValueByColumnAndRow(5,$line,'Disc')
				->setCellValueByColumnAndRow(6,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Material Group')
				->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
				$totalqty = 0;$totaldisc = 0;$totalnominal=0;$totalnetto=0;$i=0;
				$sql2 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.employeeid = ".$row['employeeid']." and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
				$command2=$this->connection->createCommand($sql2);
				$dataReader2=$command2->queryAll();
				
				foreach($dataReader2 as $row2)
				{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row2['productname'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($row2['giqty']))
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($row2['harga']/$per))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($row2['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($row2['netto']/$per));
				$totalqty += $row2['giqty'];
				$totalnominal += $row2['nominal']/$per;
				$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
				$totalnetto += $row2['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Material Group '. $row1['description'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($totalqty))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totalnominal))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaldisc))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($totalnetto));
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Sales '. $row['fullname'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($totalqty1))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totalnominal1))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaldisc1))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($totalnetto1));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			$line+= 2;
		}
		$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Grand Total')
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($totalqty2))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totalnominal2))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaldisc2))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($totalnetto2));
		$line += 1;
		$this->getFooterXLS($this->phpExcel);
	}
	//11
	public function RekapPenjualanPerAreaPerBarangTotalXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperareaperbarangtotal';
		parent::actionDownxls();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
		$sql = "select distinct zg.salesareaid,zg.areaname
				   from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				   join addressbook zf on zf.addressbookid = za.addressbookid
				   left join salesarea zg on zg.salesareaid = zf.salesareaid
				   join product zh on zh.productid = zc.productid
				   join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                group by zg.areaname order by zg.areaname";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Area')
				->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
			$sql1 = "select productid,productname,description as barang,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,l.description,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and 
						  e.fullname like '%".$employee."%' and f.salesareaid = ".$row['salesareaid']." and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						)zz group by barang"; 
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Material Group')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Total')
				->setCellValueByColumnAndRow(4,$line,'Disc')
				->setCellValueByColumnAndRow(5,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['barang'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($row1['giqty']))
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($row1['nominal']/$per))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency(($row1['nominal']/$per) - ($row1['netto']/$per)))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($row1['netto']/$per));
				$totalnominal += $row1['nominal']/$per;
				$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$total += $row1['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Area '. $row['areaname'])
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($totalnominal))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totaldisc))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($total));
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totaljumlah1 += $total;
			$line += 2;
		}
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total ')
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($totalnominal1))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totaldisc1))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaljumlah1));
		$this->getFooterXLS($this->phpExcel);
	}
	//12
	public function RekapPenjualanPerAreaPerBarangRincianXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperareaperbarangrincian';
		parent::actionDownxls();
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select distinct zg.salesareaid,zg.areaname
				   from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				   join addressbook zf on zf.addressbookid = za.addressbookid
				   left join salesarea zg on zg.salesareaid = zf.salesareaid
				   join product zh on zh.productid = zc.productid
				   join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
                group by zg.areaname order by zg.areaname";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Area')
				->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
			$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
			$sql1 = "select distinct a.materialgroupid,a.materialgroupcode,a.description
						from materialgroup a
						join productplant b on b.materialgroupid = a.materialgroupid
						join product c on c.productid = b.productid
						join sloc d on d.slocid = b.slocid
						join plant e on e.plantid = d.plantid
						join company f on f.companyid = e.companyid
						where f.companyid = ".$companyid." and b.productid in
						(
						select zc.productid
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						where zi.recordstatus = 3 and zc.slocid = b.slocid and zi.invoiceno is not null and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%'  and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.salesareaid = ".$row['salesareaid']." and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') order by description asc"; 
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
						$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Price')
				->setCellValueByColumnAndRow(4,$line,'Total')
				->setCellValueByColumnAndRow(5,$line,'Disc')
				->setCellValueByColumnAndRow(6,$line,'Netto')
				;
			foreach($dataReader1 as $row1)
			{
				$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Material Group')
				->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
				$totalqty = 0;$totaldisc = 0;$totalnominal=0;$totalnetto=0;$i=0;
				$sql2 = "select productid,productname,sum(qty) as giqty,harga,sum(nom) as nominal,sum(nett) as netto from
						(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as harga,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.salesareaid = ".$row['salesareaid']." and i.productname like '%".$product."%' 
							and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']."
							and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)zz group by productid order by productname";
				$command2=$this->connection->createCommand($sql2);
				$dataReader2=$command2->queryAll();
				
				foreach($dataReader2 as $row2)
				{
				$i+=1;$line++;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row2['productname'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($row2['giqty']))
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($row2['harga']/$per))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($row2['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency(($row2['nominal']/$per) - ($row2['netto']/$per)))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($row2['netto']/$per));
				$totalqty += $row2['giqty'];
				$totalnominal += $row2['nominal']/$per;
				$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
				$totalnetto += $row2['netto']/$per;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Material Group '. $row1['description'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($totalqty))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totalnominal))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaldisc))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($totalnetto));
			$totalqty1 += $totalqty;
			$totalnominal1 += $totalnominal;
			$totaldisc1 += $totaldisc;
			$totalnetto1 += $totalnetto;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total Area '. $row['areaname'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($totalqty1))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totalnominal1))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaldisc1))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($totalnetto1));
			$totalqty2 += $totalqty1;
			$totalnominal2 += $totalnominal1;
			$totaldisc2 += $totaldisc1;
			$totalnetto2 += $totalnetto1;
			$line+= 2;
		}
		$line++;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Grand Total')
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($totalqty2))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($totalnominal2))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency($totaldisc2))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency($totalnetto2));
		$line += 1;
		$this->getFooterXLS($this->phpExcel);
	}
	//13
	public function RincianReturPenjualanPerDokumenXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rincianreturpenjualanperdokumen';
		parent::actionDownxls();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;		
		$sql = "select distinct b.notagirid,b.notagirno,i.fullname as customer,d.gireturdate,j.paycode,h.taxid,b.headernote
						from notagirpro a
						left join notagir b on b.notagirid=a.notagirid
						left join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						left join giretur d on d.gireturid=b.gireturid
						left join product e on e.productid=a.productid
						left join gidetail f on f.gidetailid=c.gidetailid
						left join giheader g on g.giheaderid=d.giheaderid
						left join soheader h on h.soheaderid=g.soheaderid
						left join addressbook i on i.addressbookid=h.addressbookid
						left join paymentmethod j on j.paymentmethodid=h.paymentmethodid
						left join sloc k on k.slocid=a.slocid
						left join employee l on l.employeeid = h.employeeid
						where k.sloccode like '%".$sloc."%' and b.recordstatus = 3 and i.fullname like '%".$customer."%' and 
						h.companyid = ".$companyid." and e.productname like '%".$product."%' and l.fullname like '%".$employee."%' and
						d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;				
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Dokumen')
				->setCellValueByColumnAndRow(1,$line,': '.$row['notagirno'])
				->setCellValueByColumnAndRow(4,$line,'Tanggal')
				->setCellValueByColumnAndRow(5,$line,': '.$row['gireturdate']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['customer'])
				->setCellValueByColumnAndRow(4,$line,'T.O.P')
				->setCellValueByColumnAndRow(5,$line,': '.$row['paycode'].' HARI');
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Harga')
				->setCellValueByColumnAndRow(4,$line,'Jumlah')
				->setCellValueByColumnAndRow(5,$line,'Keterangan');
			$line++;
			$sql1 = "select *,(nominal-netto) as disc from
							(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and b.notagirid = ".$row['notagirid']." 
							and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)z order by notagirno,notagirproid";
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$i=0;$totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['productname'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($row1['qty']))
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($row1['price']/$per))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($row1['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,$row['headernote']);
				$line++;
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total')
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Keterangan : '.$row1['headernote'])
				->setCellValueByColumnAndRow(4,$line,'Nominal')
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnominal));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(4,$line,'Diskon')
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldiskon));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(4,$line,'Netto')
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
			$line++;
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$line+=1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
				->setCellValueByColumnAndRow(1,$line,Yii::app()->format->formatCurrency ($totalnominal1))
				->setCellValueByColumnAndRow(2,$line,'TOTAL DISCOUNT')
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totaldiskon1))
				->setCellValueByColumnAndRow(4,$line,'TOTAL NETTO')
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
			$line++;
			
			
			
		
		$this->getFooterXLS($this->phpExcel);
	}
	//14
	public function RekapReturPenjualanPerDokumenXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperdokumen';
		parent::actionDownxls();
		$nominal=0;$diskon=0;$netto=0;		
		$sql = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		$i=0;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Dokumen')
				->setCellValueByColumnAndRow(2,$line,'Tanggal')
				->setCellValueByColumnAndRow(3,$line,'Customer')
				->setCellValueByColumnAndRow(4,$line,'Nominal')
				->setCellValueByColumnAndRow(5,$line,'Diskon')
				->setCellValueByColumnAndRow(6,$line,'Netto');
		$line++;
		foreach($dataReader as $row)
		{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row['notagirno'])
					->setCellValueByColumnAndRow(2,$line,$row['gireturdate'])
					->setCellValueByColumnAndRow(3,$line,$row['fullname'])
					->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row['nominal']/$per))
					->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency (($row['nominal']/$per) - ($row['netto']/$per)))
					->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row['netto']/$per));
				$line++;
				$nominal += $row['nominal']/$per;
				$diskon += ($row['nominal']/$per) - ($row['netto']/$per);
				$netto += $row['netto']/$per;
		}
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'GRAND TOTAL')
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($nominal))				
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($diskon))				
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($netto));
			$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//15
	public function RekapReturPenjualanPerCustomerXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomer';
		parent::actionDownxls();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;							
		$sql = "select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
				
            $command=$this->connection->createCommand($sql);
            $dataReader=$command->queryAll();
            
            foreach($dataReader as $row)
						$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
						foreach($dataReader as $row)	
						{
							$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'Customer')
								->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
							$line++;
							
							$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'No')
								->setCellValueByColumnAndRow(1,$line,'No. Dokumen')
								->setCellValueByColumnAndRow(2,$line,'Tanggal')
								->setCellValueByColumnAndRow(3,$line,'Nominal')
								->setCellValueByColumnAndRow(4,$line,'Diskon')
								->setCellValueByColumnAndRow(5,$line,'Netto')
								->setCellValueByColumnAndRow(6,$line,'Keterangan');
							$line++;
							$sql1 = "select *, sum(nom) as nominal, sum(nett) as netto from
												(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
												g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
												from notagirpro a
												join notagir b on b.notagirid=a.notagirid
												join gireturdetail c on c.gireturdetailid=a.gireturdetailid
												join giretur d on d.gireturid=b.gireturid
												join gidetail e on e.gidetailid=c.gidetailid
												join giheader f on f.giheaderid=d.giheaderid
												join sodetail g on g.sodetailid=e.sodetailid
												join soheader h on h.soheaderid=f.soheaderid
												join product i on i.productid = a.productid
												join sloc j on j.slocid = a.slocid
												join addressbook k on k.addressbookid = h.addressbookid
												join employee l on l.employeeid = h.employeeid
												join salesarea m on m.salesareaid = k.salesareaid
												where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
												and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
												and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
												'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
												and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
												)z group by notagirno";
				
										$command1=$this->connection->createCommand($sql1);
										$dataReader1=$command1->queryAll();
										$totaldiskon= 0;$totalnominal=0;$totalnetto=0;$i=0;
				
							foreach($dataReader1 as $row1)
							{
								$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['notagirno'])
									->setCellValueByColumnAndRow(2,$line,$row1['gireturdate'])									
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency (($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per))
									->setCellValueByColumnAndRow(6,$line,$row1['headernote']);
								$line++;
								$totalnominal += $row1['nominal']/$per;
								$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;
								
							}
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'Total')
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldiskon))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalnominal1 += $totalnominal;
								$totaldiskon1 += $totaldiskon;
								$totalnetto1 += $totalnetto;
								
								$line+=1;
						}
						$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,'TOTAL')
									->setCellValueByColumnAndRow(1,$line,'NOMINAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalnominal1))
									->setCellValueByColumnAndRow(3,$line,'DISKON')
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldiskon1))
									->setCellValueByColumnAndRow(5,$line,'NETTO')
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//16
	public function RekapReturPenjualanPerSalesXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpersales';
		parent::actionDownxls();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;							
		$sql = "select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(4,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'Sales')
								->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
							$line++;
							
				$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'No')
								->setCellValueByColumnAndRow(1,$line,'Nama Customer')
								->setCellValueByColumnAndRow(2,$line,'Nominal')
								->setCellValueByColumnAndRow(3,$line,'Diskon')
								->setCellValueByColumnAndRow(4,$line,'Netto');
							$line++;
							$sql1 = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
				
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totaldiskon = 0;$totalnominal=0;$totalnetto=0;$i=0;
				
				foreach($dataReader1 as $row1)
				{
					$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['fullname'])																	
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency (($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per));
								$line++;
								$totalnominal += $row1['nominal']/$per;
								$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;
				}	
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'Total Sales')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totaldiskon))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalnominal1 += $totalnominal;
								$totaldiskon1 += $totaldiskon;
								$totalnetto1 += $totalnetto;
								$line+=1;
								
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalnominal1))									
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totaldiskon1))									
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
			
		$this->getFooterXLS($this->phpExcel);
	}
	//17
	public function RekapReturPenjualanPerBarangXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperbarang';
		parent::actionDownxls();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;							
		$sql = "select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
			
            $command=$this->connection->createCommand($sql);
            $dataReader=$command->queryAll();
            
            foreach($dataReader as $row)
						$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
						foreach($dataReader as $row)
						{
							$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'Divisi')
								->setCellValueByColumnAndRow(1,$line,': '.$row['description']);
							$line++;
							
							$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,'No')
								->setCellValueByColumnAndRow(1,$line,'Nama Barang')
								->setCellValueByColumnAndRow(2,$line,'Qty')
								->setCellValueByColumnAndRow(3,$line,'Price')
								->setCellValueByColumnAndRow(4,$line,'Total')
								->setCellValueByColumnAndRow(5,$line,'Disc')
								->setCellValueByColumnAndRow(6,$line,'Netto');
							$line++;
							$sql1 = "select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and n.materialgroupid = ".$row['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by productname";
                $command1=$this->connection->createCommand($sql1);
                $dataReader1=$command1->queryAll();
                $totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;$i=0;
								
							foreach($dataReader1 as $row1)
							{
								$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['productname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row1['qty']))							
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row1['price']/$per))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency (($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per));
								$line++;
								$totalqty += $row1['qty'];
                $totalnominal += $row1['nominal']/$per;
								$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
                $totalnetto += $row1['netto']/$per;
								
							}	
							$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'Total : '.$row['description'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldiskon))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalnominal1 += $totalnominal;
								$totaldiskon1 += $totaldiskon;
								$totalnetto1 += $totalnetto;
								$line+=1;
						}
						$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')								
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldiskon1))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//18
	public function RekapReturPenjualanPerAreaXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperarea';
		parent::actionDownxls();
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;								
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";

		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Area')
					->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
					$line++;
			$sql1 = "select distinct a.materialgroupid,a.description,f.productid
					from materialgroup a
					join productplant b on b.materialgroupid = a.materialgroupid
					join gireturdetail e on e.productid = b.productid
					join gidetail c on c.gidetailid = e.gidetailid
					join product f on f.productid = e.productid
					join giheader g on g.giheaderid = c.giheaderid
					join soheader h on h.soheaderid = g.soheaderid
					join addressbook i on i.addressbookid = h.addressbookid
					join salesarea j on j.salesareaid = i.salesareaid
					join giretur k on k.gireturid = e.gireturid
					where k.recordstatus = 3 and h.companyid = ".$companyid." and f.productname like '%".$product."%'
					and j.salesareaid = ".$row['salesareaid']."
					and k.gireturdate between '".date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					group by description";
			
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Grup Material')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
					$line++;
					
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Nominal')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
					$line++;
					$sql2 = "select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
							and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid";
					
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					$totalnetto = 0;$totalnominal=0;$totaldiskon=0;$i=0;$totalqty=0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row2['productname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row2['qty']))							
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row2['nominal']/$per))									
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency (($row2['nominal']/$per) - ($row2['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row2['netto']/$per));
								$line++;
								$totalqty += $row2['qty'];
								$totalnominal += $row2['nominal']/$per;
								$totaldiskon += ($row2['nominal']/$per) - ($row2['netto']/$per);
								$totalnetto += $row2['netto']/$per;
								
					}
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'Total '.$row1['description'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldiskon))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalnominal1 += $totalnominal;
								$totaldiskon1 += $totaldiskon;
								$totalnetto1 += $totalnetto;
								
								$line+=1;
				}
				
		}
		$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL')								
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldiskon1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//19
	public function RekapReturPenjualanPerCustomerPerBarangTotalXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangtotal';
		parent::actionDownxls();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;								
		$sql = "select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
					$line++;
					
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Material Group')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Total')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
					$line++;
					$sql1 = "select *,sum(nom) as nominal,sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,
							k.fullname,d.gireturdate,n.materialgroupid,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by materialgroupid order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;								
								
				foreach($dataReader1 as $row1)
				{
					$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['barang'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row1['qty']))							
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))									
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency (($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per));
								$line++;
								$totalqty += $row1['qty'];
								$totalnominal += $row1['nominal']/$per;
								$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL CUSTOMER '.$row1['fullname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
								
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')	
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//20
	public function RekapReturPenjualanPerCustomerPerBarangRincianXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangrincian';
		parent::actionDownxls();
		$totaldisc2=0;$totalqty2=0;$totalnominal2=0;$totalnetto2=0;
		$sql = "select distinct k.addressbookid,k.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
					$line++;
					$totaldisc1=0;$totalqty1=0;$totalnominal1=0;$totalnetto1=0;
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Price')
						->setCellValueByColumnAndRow(4,$line,'Total')
						->setCellValueByColumnAndRow(5,$line,'Disc')
						->setCellValueByColumnAndRow(6,$line,'Netto');
					$line++;
					$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
							and m.areaname like '%".$salesarea."%' and k.addressbookid = ".$row['addressbookid']."
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
					$line++;
					
					$sql2 = "select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']."
							and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row2['productname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row2['qty']))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row2['harga']/$per))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row2['nominal']/$per))									
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency (($row2['nominal']/$per) - ($row2['netto']/$per)))
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row2['netto']/$per));
								$line++;
								
								$totalqty += $row2['qty'];
								$totalnominal += $row2['nominal']/$per;
								$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
								$totalnetto += $row2['netto']/$per;	
					}
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row1['description'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
								$totalqty2 += $totalqty1;
								$totalnominal2 += $totalnominal1;
								$totaldisc2 += $totaldisc1;
								$totalnetto2 += $totalnetto1;
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty2))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal2))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc2))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto2));
								$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//21
	public function RekapReturPenjualanPerSalesPerBarangTotalXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpersalesperbarangtotal';
		parent::actionDownxls();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;	
		$sql = "select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Sales')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
				$line++;
					
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Material Group')
						->setCellValueByColumnAndRow(2,$line,'Qty')						
						->setCellValueByColumnAndRow(3,$line,'Total')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
				$line++;
				$sql1 = "select *,sum(nom) as nominal,sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,
							k.fullname,d.gireturdate,n.materialgroupid,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by materialgroupid order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;							
								
				foreach($dataReader1 as $row1)
				{
					$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['barang'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row1['qty']))									
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))									
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency (($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per));
								$line++;
								$totalqty += $row1['qty'];
								$totalnominal += $row1['nominal']/$per;
								$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;	
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL SALES '.$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//22
	public function RekapReturPenjualanPerSalesPerBarangRincianXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpersalesperbarangrincian';
		parent::actionDownxls();
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totalnetto2=0;	
				
		$sql = "select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Sales')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Price')
						->setCellValueByColumnAndRow(4,$line,'Total')
						->setCellValueByColumnAndRow(5,$line,'Disc')
						->setCellValueByColumnAndRow(6,$line,'Netto');
					$line++;
					$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
							and m.areaname like '%".$salesarea."%' and l.employeeid = ".$row['employeeid']."
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;						
								
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
					$line++;
					$sql2 = "select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']."
							and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row2['productname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row2['qty']))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row2['harga']/$per))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row2['nominal']/$per))									
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency (($row2['nominal']/$per) - ($row2['netto']/$per)))
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row2['netto']/$per));
								$line++;
								$totalqty += $row2['qty'];
								$totalnominal += $row2['nominal']/$per;
								$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
								$totalnetto += $row2['netto']/$per;
					}
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row1['description'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL SALES '.$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
								$totalqty2 += $totalqty1;
								$totalnominal2 += $totalnominal1;
								$totaldisc2 += $totaldisc1;
								$totalnetto2 += $totalnetto1;
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty2))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal2))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc2))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto2));
								$line++;
			
		$this->getFooterXLS($this->phpExcel);
	}
	//23
	public function RekapReturPenjualanPerAreaPerBarangTotalXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperareaperbarangtotal';
		parent::actionDownxls();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Area')
					->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Material Group')
						->setCellValueByColumnAndRow(2,$line,'Qty')						
						->setCellValueByColumnAndRow(3,$line,'Total')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
				$line++;
				$sql1 = "select *,sum(nom) as nominal,sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,
							k.fullname,d.gireturdate,n.materialgroupid,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z
							group by materialgroupid order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;
				foreach($dataReader1 as $row1)
				{
					$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['barang'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row1['qty']))									
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))									
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency (($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per));
								$line++;
								$totalqty += $row1['qty'];
								$totalnominal += $row1['nominal']/$per;
								$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;	
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL AREA '.$row['areaname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
		
		
		$this->getFooterXLS($this->phpExcel);
	}
	//24
	public function RekapReturPenjualanPerAreaPerBarangRincianXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperareaperbarangrincian';
		parent::actionDownxls();
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totalnetto2=0;	
		$sql = "select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by areaname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Area')
					->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Price')
						->setCellValueByColumnAndRow(4,$line,'Total')
						->setCellValueByColumnAndRow(5,$line,'Disc')
						->setCellValueByColumnAndRow(6,$line,'Netto');
				$line++;
				$sql1 = "select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' 
							and m.areaname like '%".$salesarea."%' and m.salesareaid = ".$row['salesareaid']."
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;	
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
					$line++;
					$sql2 = "select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']."
							and n.materialgroupid = ".$row1['materialgroupid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaldisc=0;$totalqty=0;$totalnominal=0;$totalnetto=0;$i=0;
					
					foreach($dataReader2 as $row2)
					{
						$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row2['productname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row2['qty']))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row2['harga']/$per))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row2['nominal']/$per))									
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency (($row2['nominal']/$per) - ($row2['netto']/$per)))
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row2['netto']/$per));
								$line++;
								$totalqty += $row2['qty'];
								$totalnominal += $row2['nominal']/$per;
								$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
								$totalnetto += $row2['netto']/$per;
					}
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row1['description'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL AREA '.$row['areaname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
								$totalqty2 += $totalqty1;
								$totalnominal2 += $totalnominal1;
								$totaldisc2 += $totaldisc1;
								$totalnetto2 += $totalnetto1;
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty2))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal2))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc2))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto2));
								$line++;	
			
		$this->getFooterXLS($this->phpExcel);		
	}
	//25
	public function RincianPenjualanReturPenjualanPerDokumenXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rincianpenjualanperdokumen';
		parent::actionDownxls();
		$sql = "select a.invoiceid,a.invoiceno, b.gino, a.invoicedate, d.fullname as customer,h.fullname as sales, e.paydays, c.shipto, a.headernote
				from invoice a
				join giheader b on b.giheaderid = a.giheaderid
				join soheader c on c.soheaderid = b.soheaderid
				join addressbook d on d.addressbookid = c.addressbookid
				join paymentmethod e on e.paymentmethodid = c.paymentmethodid
				join gidetail f on f.giheaderid = b.giheaderid
				join sloc g on g.slocid = f.slocid
				join employee h on h.employeeid = c.employeeid
				join product i on i.productid = f.productid
				join salesarea j on j.salesareaid = d.salesareaid
				where a.recordstatus = 3 and c.companyid = ".$companyid." and g.sloccode like '%".$sloc."%'
				and d.fullname like '%".$customer."%' and h.fullname like '%".$employee."%' and i.productname like '%".$product."%'
				and j.areaname like '%".$salesarea."%' and b.gino is not null
				and a.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by invoiceno order by invoicedate";
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
			$totalqty1=0;$total1=0;$totaldisc1=0;$totalnetto1=0;				
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No. Bukti')
					->setCellValueByColumnAndRow(1,$line,': '.$row['invoiceno'])
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,$row['invoicedate']);
					
				$line++;
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Sales')
					->setCellValueByColumnAndRow(1,$line,': '.$row['sales'])
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,'Kepada Yth,');
					
				$line++;
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No. SJ')
					->setCellValueByColumnAndRow(1,$line,': '.$row['gino'])
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,$row['customer']);
					
				$line++;
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'T.O.P')
					->setCellValueByColumnAndRow(1,$line,': '.$row['paydays'].' HARI')
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,$row['shipto']);				
				
				$line++;						
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Barang')
					->setCellValueByColumnAndRow(2,$line,'Qty')
					->setCellValueByColumnAndRow(3,$line,'Unit')
					->setCellValueByColumnAndRow(4,$line,'Price')
					->setCellValueByColumnAndRow(5,$line,'Total');
				$line++;
				$sql1 = "select distinct ss.gidetailid,a.invoiceno,i.productname,k.uomcode,ss.qty,
										(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
										(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nominal,
										(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
										from gidetail zzb 
										join sodetail zza on zza.sodetailid = zzb.sodetailid
										where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
										from invoice a 
										join giheader b on b.giheaderid = a.giheaderid
										join soheader c on c.soheaderid = b.soheaderid
										join addressbook d on d.addressbookid = c.addressbookid
										join employee e on e.employeeid = c.employeeid
										join salesarea f on f.salesareaid = d.salesareaid
										join sodetail g on g.soheaderid = b.soheaderid
										join gidetail ss on ss.giheaderid = b.giheaderid
										join sloc h on h.slocid = ss.slocid
										join product i on i.productid = ss.productid
										join productplant j on j.productid = i.productid
										join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
										where a.recordstatus = 3 and c.companyid = ".$companyid." 
										and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' 
										and e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' 
										and i.productname like '%".$product."%' and a.invoiceid = ".$row['invoiceid']." 
										and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
										and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'";
			
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totalqty=0;$i=0;$total=0;$diskon=0;$netto=0;
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row1['productname'])
							->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row1['qty']))
							->setCellValueByColumnAndRow(3,$line,$row1['uomcode'])
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row1['price']/$per))
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per));
							$line++;						
							$totalqty += $row1['qty'];
							$total += $row1['nominal']/$per;							
							$netto += $row1['nett']/$per;
							$diskon += ($row1['nominal']/$per) - ($row1['nett']/$per);
							$bilangan = explode(".",$netto);
				}
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,'')
							->setCellValueByColumnAndRow(1,$line,'Total')
							->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
							->setCellValueByColumnAndRow(3,$line,'')
							->setCellValueByColumnAndRow(4,$line,'Nominal')
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($total));
							$line+= 1;
							
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,'')
							->setCellValueByColumnAndRow(1,$line,'')
							->setCellValueByColumnAndRow(2,$line,'')
							->setCellValueByColumnAndRow(3,$line,'')
							->setCellValueByColumnAndRow(4,$line,'Diskon')
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($diskon));
				
				$line++;	
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'')
					->setCellValueByColumnAndRow(1,$line,'Terbilang : '.$this->eja($bilangan[0]))
					->setCellValueByColumnAndRow(2,$line,'')
					->setCellValueByColumnAndRow(3,$line,'')
					->setCellValueByColumnAndRow(4,$line,'Netto')
					->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($netto));		
					
					
				$line++;	
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'')
					->setCellValueByColumnAndRow(1,$line,'Note : '.$row['headernote']);
					
					$line+= 2;
					$total1 += $total;
					$totaldisc1 += $diskon;
					$totalnetto1 += $netto;
					$totalqty1 += $totalqty;
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)					
				->setCellValueByColumnAndRow(0,$line,'TOTAL PENJUALAN')				
				->setCellValueByColumnAndRow(2,$line,'QTY : '.Yii::app()->format->formatCurrency ($totalqty1))			
				->setCellValueByColumnAndRow(3,$line,'NOMINAL : '.Yii::app()->format->formatCurrency ($total1))
				->setCellValueByColumnAndRow(4,$line,'DISKON : '.Yii::app()->format->formatCurrency ($totaldisc1))
				->setCellValueByColumnAndRow(5,$line,'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1));
				
				
				
				
				
			$line++;			
			$totalnom1=0;$totaldisk1=0;$totalnett1=0;$totqty1=0;
			$sql = "select distinct b.notagirid,b.notagirno,i.fullname as customer,d.gireturdate,j.paycode,h.taxid,b.headernote
						from notagirpro a
						left join notagir b on b.notagirid=a.notagirid
						left join gireturdetail c on c.gireturdetailid=a.gireturdetailid
						left join giretur d on d.gireturid=b.gireturid
						left join product e on e.productid=a.productid
						left join gidetail f on f.gidetailid=c.gidetailid
						left join giheader g on g.giheaderid=d.giheaderid
						left join soheader h on h.soheaderid=g.soheaderid
						left join addressbook i on i.addressbookid=h.addressbookid
						left join paymentmethod j on j.paymentmethodid=h.paymentmethodid
						left join sloc k on k.slocid=a.slocid
						left join employee l on l.employeeid = h.employeeid
						where k.sloccode like '%".$sloc."%' and b.recordstatus = 3 and i.fullname like '%".$customer."%' and 
						h.companyid = ".$companyid." and e.productname like '%".$product."%' and l.fullname like '%".$employee."%' and
						d.gireturdate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
			$line++;
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Dokumen')
				->setCellValueByColumnAndRow(1,$line,': '.$row['notagirno'])
				->setCellValueByColumnAndRow(4,$line,'Tanggal')
				->setCellValueByColumnAndRow(5,$line,': '.$row['gireturdate']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['customer'])
				->setCellValueByColumnAndRow(4,$line,'T.O.P')
				->setCellValueByColumnAndRow(5,$line,': '.$row['paycode'].' HARI');
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Harga')
				->setCellValueByColumnAndRow(4,$line,'Jumlah')
				->setCellValueByColumnAndRow(5,$line,'Keterangan');
			$line++;
			$sql1 = "select *,(nominal-netto) as disc from
							(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nominal,a.price as harga,(a.qty*a.price) as netto,b.headernote
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and b.notagirid = ".$row['notagirid']." 
							and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							)z order by notagirno,notagirproid";
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$i=0;$totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row1['productname'])
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency($row1['qty']))
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency($row1['price']/$per))
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency($row1['nominal']/$per))
				->setCellValueByColumnAndRow(5,$line,$row['headernote']);
				$line++;
				$totalqty += $row1['qty'];
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
				$totalnetto += $row1['netto']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Total')
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'Keterangan : '.$row1['headernote'])
				->setCellValueByColumnAndRow(4,$line,'Nominal')
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnominal));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(4,$line,'Diskon')
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldiskon));
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(4,$line,'Netto')
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
			$line++;
			$totqty1 += $totalqty;
			$totalnom1 += $totalnominal;
			$totaldisk1 += $totaldiskon;
			$totalnett1 += $totalnetto;
			$line+=1;
			
		}
		$this->phpExcel->setActiveSheetIndex(0)					
				->setCellValueByColumnAndRow(0,$line,'TOTAL RETUR PENJUALAN')				
				->setCellValueByColumnAndRow(2,$line,'QTY : '.Yii::app()->format->formatCurrency ($totqty1))			
				->setCellValueByColumnAndRow(3,$line,'NOMINAL : '.Yii::app()->format->formatCurrency ($totalnom1))
				->setCellValueByColumnAndRow(4,$line,'DISKON : '.Yii::app()->format->formatCurrency ($totaldisk1))
				->setCellValueByColumnAndRow(5,$line,'NETTO : '.Yii::app()->format->formatCurrency($totalnett1));				
			$line++;
			
			$line+=1;			
			$this->phpExcel->setActiveSheetIndex(0)					
				->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')				
				->setCellValueByColumnAndRow(2,$line,'QTY : '.Yii::app()->format->formatCurrency ($totalqty1 - $totqty1))			
				->setCellValueByColumnAndRow(3,$line,'NOMINAL : '.Yii::app()->format->formatCurrency ($total1 - $totalnom1))
				->setCellValueByColumnAndRow(4,$line,'DISKON : '.Yii::app()->format->formatCurrency ($totaldisc1 - $totaldisk1))
				->setCellValueByColumnAndRow(5,$line,'NETTO : '.Yii::app()->format->formatCurrency($totalnetto1 - $totalnett1));
		
		$this->getFooterXLS($this->phpExcel);
	}
	//26
	public function RekapPenjualanReturPenjualanPerDokumenXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturperdokumen';
		parent::actionDownxls();
		$sql = "select invoiceno,invoicedate,fullname,headernote,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
							(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						  from gidetail zzb 
						  join sodetail zza on zza.sodetailid = zzb.sodetailid
						  where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
              c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
              e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
              a.invoiceno is not null and a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by invoiceno
              )z group by invoiceno"; 
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
				->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
				->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
			$line=4;
			$i=0;$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'No. Bukti')
					->setCellValueByColumnAndRow(2,$line,'Tanggal')
					->setCellValueByColumnAndRow(3,$line,'Customer')
					->setCellValueByColumnAndRow(4,$line,'Nominal')
					->setCellValueByColumnAndRow(5,$line,'Disc')
					->setCellValueByColumnAndRow(6,$line,'Netto')
					->setCellValueByColumnAndRow(7,$line,'Keterangan');					
					$line++;
			foreach($dataReader as $row)
			{												
						$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row['invoiceno'])
							->setCellValueByColumnAndRow(2,$line,$row['invoicedate'])
							->setCellValueByColumnAndRow(3,$line,$row['fullname'])
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row['nominal']/$per))
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row['disc']/$per))
							->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row['netto']/$per))
							->setCellValueByColumnAndRow(7,$line,$row['headernote']);
							$line++;				
					
					$totalnominal1 += $row['nominal']/$per;
          $totaldisc1 += $row['disc']/$per;
          $totaljumlah1 += $row['netto']/$per;				
							
			}
			$line++;
			$this->phpExcel->setActiveSheetIndex(0)				
				->setCellValueByColumnAndRow(3,$line,'TOTAL PENJUALAN')				
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal1))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc1))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totaljumlah1));

			
			
		$line++;
		$nominal=0;$diskon=0;$netto=0;		
		$sql = "select *, sum(nom) as nominal, sum(nett) as netto from
							(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
							g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)		
		$line++;
		$i=0;
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Dokumen')
				->setCellValueByColumnAndRow(2,$line,'Tanggal')
				->setCellValueByColumnAndRow(3,$line,'Customer')
				->setCellValueByColumnAndRow(4,$line,'Nominal')
				->setCellValueByColumnAndRow(5,$line,'Diskon')
				->setCellValueByColumnAndRow(6,$line,'Netto');
		$line++;
		foreach($dataReader as $row)
		{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row['notagirno'])
					->setCellValueByColumnAndRow(2,$line,$row['gireturdate'])
					->setCellValueByColumnAndRow(3,$line,$row['fullname'])
					->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row['nominal']/$per))
					->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency (($row['nominal']/$per) - ($row['netto']/$per)))
					->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row['netto']/$per));
				$line++;
				$nominal += $row['nominal']/$per;
				$diskon += ($row['nominal']/$per) - ($row['netto']/$per);
				$netto += $row['netto']/$per;
		}
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(3,$line,'TOTAL RETUR')
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($nominal))				
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($diskon))				
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($netto));
			$line++;
		
		
		$line++;
			$this->phpExcel->setActiveSheetIndex(0)				
				->setCellValueByColumnAndRow(3,$line,'GRAND TOTAL')				
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal1 - $nominal))
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc1 - $diskon))
				->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totaljumlah1 - $netto));
		$this->getFooterXLS($this->phpExcel);
	}
	//27
	public function RekapPenjualanReturPenjualanPerCustomerXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpercustomer';
		parent::actionDownxls();
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";

		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
            
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
				->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
				->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
			$line=4;
		
		$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;
			
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'No. Dokumen')
						->setCellValueByColumnAndRow(2,$line,'Tanggal')
						->setCellValueByColumnAndRow(3,$line,'Nominal')
						->setCellValueByColumnAndRow(4,$line,'Diskon')
						->setCellValueByColumnAndRow(5,$line,'Netto')
						->setCellValueByColumnAndRow(6,$line,'Keterangan');
					$line++;
					$sql1 = "select * from
							(select invoiceno as dokumen,invoicedate as tanggal,sum(nom) as nominal,(sum(nom)-sum(nett)) as diskon,sum(nett) as netto,headernote from
							(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
							(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						  from gidetail zzb 
						  join sodetail zza on zza.sodetailid = zzb.sodetailid
						  where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
							a.invoiceno is not null and a.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
							and d.addressbookid = ".$row['addressbookid']." order by invoiceno)z group by invoiceno
							union
							select notagirno as dokumen,gireturdate as tanggal,sum(nom) as nominal,sum(disc) as diskon,sum(nett) as netto,headernote from
							(select distinct a.notagirproid,b.notagirno,(-1*a.qty*g.price) as nom,(-1*a.qty*g.price)-(-1*a.qty*a.price) as disc,
							(-1*a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
							)z group by notagirno)zz order by dokumen";
					
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$totaldiskon = 0;$totalnominal=0;$totalnetto=0;$i=0;
			
			foreach($dataReader1 as $row1)
			{
				$i+=1;
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i)
							->setCellValueByColumnAndRow(1,$line,$row1['dokumen'])
							->setCellValueByColumnAndRow(2,$line,$row1['tanggal'])									
							->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row1['diskon']/$per))
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per))
							->setCellValueByColumnAndRow(6,$line,$row1['headernote']);
				$line++;
				$totalnominal += $row1['nominal']/$per;
				$totaldiskon += $row1['diskon']/$per;
				$totalnetto += $row1['netto']/$per;
				
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL')
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal))				
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldiskon))				
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
			$line++;
			$totalnominal1 += $totalnominal;
			$totaldiskon1 += $totaldiskon;
			$totalnetto1 += $totalnetto;
			$line+=1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL')
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldiskon1))				
				->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
			$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//28
	public function RekapPenjualanReturPenjualanPerSalesXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpersales';
		parent::actionDownxls();
		$totalnominal1=0;$totaldisc1=0;$totaljumlah1=0;		
		$sql = "select distinct employeeid,fullname from
							(select distinct k.employeeid,k.fullname
							from soheader b
							join sodetail c on c.soheaderid = b.soheaderid
							join gidetail d on d.sodetailid = c.sodetailid
							join product e on e.productid = d.productid
							join addressbook f on f.addressbookid = b.addressbookid
							join salesarea g on g.salesareaid = f.salesareaid
							join giheader h on h.giheaderid = d.giheaderid
							join sloc i on i.slocid = d.slocid
							join invoice j on j.giheaderid = h.giheaderid
							join employee k on k.employeeid = b.employeeid
							where j.recordstatus = 3 and j.invoiceno is not null 
							and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
							and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%'
							and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
							union
							select distinct l.employeeid,l.fullname
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";

			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(4,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Sales')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Customer')
						->setCellValueByColumnAndRow(2,$line,'Nominal')
						->setCellValueByColumnAndRow(3,$line,'Disc')
						->setCellValueByColumnAndRow(4,$line,'Netto');
				$line++;
				$sql1 = "select fullname,sum(nominal) as nominal,sum(disc) as disc,sum(netto) as netto from
								(select fullname,sum(nom) as nominal,(sum(nom)-sum(nett)) as disc,sum(nett) as netto from
								(select distinct ss.gidetailid,a.invoiceno,a.invoicedate,d.fullname,i.productname,k.uomcode,ss.qty,a.headernote,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
                c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
                e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' and a.invoiceno is not null and 
                a.invoiceno is not null and a.invoicedate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
								'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
								and e.employeeid = ".$row['employeeid'].")z group by fullname
								union
								select fullname, -1*sum(nom) as nominal, -1*(sum(nom)-sum(nett)) as disc, -1*sum(nett) as netto from
								(select distinct a.notagirproid,b.notagirno,replace(f.gino,'SJ','INV') as invoiceno,i.productname,a.qty,
								g.price,(a.qty*g.price) as nom,a.price as harga,(a.qty*a.price) as nett,b.headernote,k.fullname,d.gireturdate
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' order by notagirno,notagirproid
								)z group by fullname) zz group by fullname order by fullname";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totaldisc = 0;$totalnominal=0;$total=0;$i=0;
				
				foreach($dataReader1 as $row1)
				{
					$i+=1;
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i)
							->setCellValueByColumnAndRow(1,$line,$row1['fullname'])															
							->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))
							->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row1['disc']/$per))
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per));
					$line++;
					$totalnominal += $row1['nominal']/$per;
					$totaldisc += $row1['disc']/$per;
					$total += $row1['netto']/$per;
				}
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL SALES')
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalnominal))				
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totaldisc))				
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($total));
				$line++;
				$totalnominal1 += $totalnominal;
				$totaldisc1 += $totaldisc;
				$totaljumlah1 += $total;
				$line += 1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,$line,'TOTAL')
				->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
				->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
				->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaljumlah1));
				$line++;
		
		
		$this->getFooterXLS($this->phpExcel);
	}
	//29
	public function RekapPenjualanReturPenjualanPerBarangXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturperbarang';
		parent::actionDownxls();
		$totalqty1=0;$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;
		$sql = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description";
			
        $command=$this->connection->createCommand($sql);
        $dataReader=$command->queryAll();
            
        foreach($dataReader as $row)
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
				foreach($dataReader as $row)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Divisi')
					->setCellValueByColumnAndRow(1,$line,': '.$row['description']);
					$line++;
					
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Barang')
					->setCellValueByColumnAndRow(2,$line,'Qty')
					->setCellValueByColumnAndRow(3,$line,'Price')
					->setCellValueByColumnAndRow(4,$line,'Total')
					->setCellValueByColumnAndRow(5,$line,'Disc')
					->setCellValueByColumnAndRow(6,$line,'Netto');					
					$line++;
					$sql1 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row['materialgroupid']."
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row['materialgroupid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname)zz 
								group by productname order by productname";
                
						$command1=$this->connection->createCommand($sql1);
            $dataReader1=$command1->queryAll();
            $totalqty=0;$totalnominal=0;$totaldiskon=0;$totalnetto=0;$i=0;
								
						foreach($dataReader1 as $row1)
						{
							$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row1['productname'])
							->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row1['qty']))
							->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row1['harga']))
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per - $row1['netto']/$per))
							->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per));
							$line++;
							
							$totalqty += $row1['qty'];
              $totalnominal += $row1['nominal']/$per;
							$totaldiskon += ($row1['nominal']/$per) - ($row1['netto']/$per);
              $totalnetto += $row1['netto']/$per;
						}
						$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,$line,'TOTAL : '.$row['description'])
							->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))	
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal))				
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldiskon))				
							->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto));
						$line++;
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldiskon1 += $totaldiskon;
						$totalnetto1 += $totalnetto;
						$line += 1;
				}
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
							->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))	
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldiskon1))				
							->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto1));
						$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//30
	public function RekapPenjualanReturPenjualanPerAreaXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturperarea';
		parent::actionDownxls();
		$totalqty2=0;$totalnominal2=0;$totaldiskon2=0;$totalnetto2=0;	
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname";

		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		foreach($dataReader as $row)
		$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
							
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Area')
					->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
					$line++;
					$sql1 = "select materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description";
			
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$totalqty1=0;$totalnominal1=0;$totaldiskon1=0;$totalnetto1=0;				
						
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Group Material')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
					$line++;
					
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'No')
					->setCellValueByColumnAndRow(1,$line,'Nama Barang')
					->setCellValueByColumnAndRow(2,$line,'Qty')					
					->setCellValueByColumnAndRow(3,$line,'Nominal')
					->setCellValueByColumnAndRow(4,$line,'Disc')
					->setCellValueByColumnAndRow(5,$line,'Netto');					
					$line++;
					$sql2 = "select productname,sum(qty) as qty,sum(harga)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								)z group by productname
								union
								select productname,-1*sum(qty),-1*sum(price)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,a.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname)zz 
								group by productname order by productname";
					
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					$totalnetto = 0;$totalnominal=0;$totaldiskon=0;$i=0;$totalqty=0;
					
					foreach($dataReader2 as $row2)
					{
						$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row2['productname'])
							->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row2['qty']))							
							->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row2['nominal']/$per))
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row2['nominal']/$per - $row2['netto']/$per))
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row2['netto']/$per));
							$line++;
							$totalqty += $row2['qty'];
							$totalnominal += $row2['nominal']/$per;
							$totaldiskon += ($row2['nominal']/$per) - ($row2['netto']/$per);
							$totalnetto += $row2['netto']/$per;
					}
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,$line,'Total '.$row1['description'])
							->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))	
							->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal))				
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldiskon))				
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
						$line++;
						$totalqty1 += $totalqty;
						$totalnominal1 += $totalnominal;
						$totaldiskon1 += $totaldiskon;
						$totalnetto1 += $totalnetto;
						
				}
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['areaname'])
							->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))	
							->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldiskon1))				
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
						$line++;
						$totalqty2 += $totalqty1;
						$totalnominal2 += $totalnominal1;
						$totaldiskon2 += $totaldiskon1;
						$totalnetto2 += $totalnetto1;
						
						$line += 1;
		}
		$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
							->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty2))	
							->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal2))				
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldiskon2))				
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto2));
						$line++;
						
		$this->getFooterXLS($this->phpExcel);
	}
	//31
	public function RekapPenjualanReturPenjualanPerCustomerPerBarangTotalXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpercustomerperbarangtotal';
		parent::actionDownxls();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;					
								
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Material Group')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Total')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
				$line++;
				$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from
							(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz group by barang
							union
							select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z group by barang) zz 
							group by barang order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;							
								
				foreach($dataReader1 as $row1)
				{
					$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['barang'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row1['qty']))									
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))									
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency (($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per));
								$line++;
								$totalqty += $row1['qty'];
								$totalnominal += $row1['nominal']/$per;
								$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;	
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL CUSTOMER '.$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;					
								
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
								
		$this->getFooterXLS($this->phpExcel);
	}
	//32
	public function RekapPenjualanReturPenjualanPerCustomerPerBarangRincianXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpercustomerperbarangrincian';
		parent::actionDownxls();
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totalnetto2=0;				
								
		$sql = "select distinct addressbookid,fullname from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	      join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
        join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and j.invoicedate between	'". date(Yii::app()->params['datetodb'], strtotime($startdate))."'
				and	'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and d.gireturdate between 
				'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
				and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
				$line++;
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;							
								
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
					$line++;
				
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Price')
						->setCellValueByColumnAndRow(4,$line,'Total')
						->setCellValueByColumnAndRow(5,$line,'Disc')
						->setCellValueByColumnAndRow(6,$line,'Netto');
					$line++;
					
					$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." and d.addressbookid = ".$row['addressbookid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname)zz 
								group by productname order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;						
								
					foreach($dataReader2 as $row2)
					{
						$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row2['productname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row2['qty']))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row2['harga']/$per))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row2['nominal']/$per))									
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency (($row2['nominal']/$per) - ($row2['netto']/$per)))
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row2['netto']/$per));
								$line++;
								$totalqty += $row2['qty'];
								$totalnominal += $row2['nominal']/$per;
								$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
								$totalnetto += $row2['netto']/$per;
					}
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'Total '.$row1['description'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL CUSTOMER '.$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
								$totalqty2 += $totalqty1;
								$totalnominal2 += $totalnominal1;
								$totaldisc2 += $totaldisc1;
								$totalnetto2 += $totalnetto1;
								$line+=1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty2))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal2))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc2))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto2));
								$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//33
	public function RekapPenjualanReturPenjualanPerSalesPerBarangTotalXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpersalesperbarangtotal';
		parent::actionDownxls();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;
		$sql = "select distinct employeeid,fullname from
					(select distinct k.employeeid,k.fullname
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join addressbook f on f.addressbookid = b.addressbookid
					join salesarea g on g.salesareaid = f.salesareaid
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
					join invoice j on j.giheaderid = h.giheaderid
					join employee k on k.employeeid = b.employeeid
					where j.recordstatus = 3 and j.invoiceno is not null 
					and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
					and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%'
					and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct l.employeeid,l.fullname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
					and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
					and i.productname like '%".$product."%' and d.gireturdate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Sales')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Material Group')
						->setCellValueByColumnAndRow(2,$line,'Qty')						
						->setCellValueByColumnAndRow(3,$line,'Total')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
					$line++;
					$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from
							(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and e.employeeid = ".$row['employeeid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz group by barang
							union
							select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z group by barang) zz 
							group by barang order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;					
						
				foreach($dataReader1 as $row1)
				{
					$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row1['barang'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row1['qty']))									
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))									
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency (($row1['nominal']/$per) - ($row1['netto']/$per)))
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per));
								$line++;
								$totalqty += $row1['qty'];
								$totalnominal += $row1['nominal']/$per;
								$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
								$totalnetto += $row1['netto']/$per;
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL SALES  '.$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
								$line += 1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//34
	public function RekapPenjualanReturPenjualanPerSalesPerBarangRincianXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpersalesperbarangrincian';
		parent::actionDownxls();
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totalnetto2=0;						
								
		$sql = "select distinct employeeid,fullname from
					(select distinct k.employeeid,k.fullname
					from soheader b
					join sodetail c on c.soheaderid = b.soheaderid
					join gidetail d on d.sodetailid = c.sodetailid
					join product e on e.productid = d.productid
					join addressbook f on f.addressbookid = b.addressbookid
					join salesarea g on g.salesareaid = f.salesareaid
					join giheader h on h.giheaderid = d.giheaderid
					join sloc i on i.slocid = d.slocid
					join invoice j on j.giheaderid = h.giheaderid
					join employee k on k.employeeid = b.employeeid
					where j.recordstatus = 3 and j.invoiceno is not null 
					and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
					and f.fullname like '%".$customer."%' and k.fullname like '%".$employee."%'
					and e.productname like '%".$product."%' and g.areaname like '%".$salesarea."%' and j.invoicedate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
					'".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct l.employeeid,l.fullname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
					and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
					and i.productname like '%".$product."%' and d.gireturdate between 
					'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Sales')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Price')
						->setCellValueByColumnAndRow(4,$line,'Total')
						->setCellValueByColumnAndRow(5,$line,'Disc')
						->setCellValueByColumnAndRow(6,$line,'Netto');
				$line++;
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zd.employeeid = ".$row['employeeid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;						
						
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
				$line++;
				$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." and e.employeeid = ".$row['employeeid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and l.employeeid = ".$row['employeeid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname)zz 
								group by productname order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;				
						
					foreach($dataReader2 as $row2)
					{
						$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row2['productname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row2['qty']))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row2['harga']/$per))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row2['nominal']/$per))									
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency (($row2['nominal']/$per) - ($row2['netto']/$per)))
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row2['netto']/$per));
								$line++;
								$totalqty += $row2['qty'];
								$totalnominal += $row2['nominal']/$per;
								$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
								$totalnetto += $row2['netto']/$per;	
								
					}
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row1['description'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
								
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL SALES '.$row['fullname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
								$totalqty2 += $totalqty1;
								$totalnominal2 += $totalnominal1;
								$totaldisc2 += $totaldisc1;
								$totalnetto2 += $totalnetto1;
								$line += 1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty2))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal2))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc2))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto2));
								$line++;
		$this->getFooterXLS($this->phpExcel);
	}
	//35
	public function RekapPenjualanReturPenjualanPerAreaPerBarangTotalXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturperareaperbarangtotal';
		parent::actionDownxls();
		$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;	
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Area')
					->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Material Group')
						->setCellValueByColumnAndRow(2,$line,'Qty')						
						->setCellValueByColumnAndRow(3,$line,'Total')
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,'Netto');
				$line++;
				$sql1 = "select barang,sum(qty) as qty,sum(nominal) as nominal,sum(netto) as netto from
							(select barang,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.description as barang,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
						   from gidetail zzb 
						   join sodetail zza on zza.sodetailid = zzb.sodetailid
						   where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
						  c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and f.salesareaid = ".$row['salesareaid']." and
						  e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
						  and a.invoiceno is not null
						  and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						  and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz group by barang
							union
							select barang,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.description as barang
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."') z group by barang) zz 
							group by barang order by barang";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;									
						
				foreach($dataReader1 as $row1)
				{
					$i+=1;
						$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i)
							->setCellValueByColumnAndRow(1,$line,$row1['barang'])
							->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row1['qty']))									
							->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row1['nominal']/$per))									
							->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency (($row1['nominal']/$per) - ($row1['netto']/$per)))
							->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row1['netto']/$per));
						$line++;
						
						$totalqty += $row1['qty'];
						$totalnominal += $row1['nominal']/$per;
						$totaldisc += ($row1['nominal']/$per) - ($row1['netto']/$per);
						$totalnetto += $row1['netto']/$per;	
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL AREA '.$row['areaname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
								
								$line += 1;
								
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
		
		
		$this->getFooterXLS($this->phpExcel);
	}
	//36
	public function RekapPenjualanReturPenjualanPerAreaPerBarangRincianXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturperareaperbarangrincian';
		parent::actionDownxls();
		$totalqty2=0;$totalnominal2=0;$totaldisc2=0;$totalnetto2=0;
		$sql = "select distinct salesareaid,areaname from
					(select distinct zg.salesareaid,zg.areaname
				  from soheader za 
					join giheader zb on zb.soheaderid = za.soheaderid
					join gidetail zc on zc.giheaderid = zb.giheaderid
					join employee zd on zd.employeeid = za.employeeid
					join invoice ze on ze.giheaderid = zc.giheaderid
				  join addressbook zf on zf.addressbookid = za.addressbookid
				  left join salesarea zg on zg.salesareaid = zf.salesareaid
				  join product zh on zh.productid = zc.productid
				  join sloc zi on zi.slocid = zc.slocid
					where ze.recordstatus = 3 and za.companyid = ".$companyid." and zi.sloccode like '%".$sloc."%' 
					and zd.fullname like '%".$employee."%' and zh.productname like '%".$product."%' 
					and zg.areaname like '%".$salesarea."%' and zf.fullname like '%".$customer."%'
					and ze.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
					union
					select distinct m.salesareaid,m.areaname
					from notagirpro a
					join notagir b on b.notagirid=a.notagirid
					join gireturdetail c on c.gireturdetailid=a.gireturdetailid
					join giretur d on d.gireturid=b.gireturid
					join gidetail e on e.gidetailid=c.gidetailid
					join giheader f on f.giheaderid=d.giheaderid
					join sodetail g on g.sodetailid=e.sodetailid
					join soheader h on h.soheaderid=f.soheaderid
					join product i on i.productid = a.productid
					join sloc j on j.slocid = a.slocid
					join addressbook k on k.addressbookid = h.addressbookid
					join employee l on l.employeeid = h.employeeid
					join salesarea m on m.salesareaid = k.salesareaid
					join productplant n on n.productid=a.productid and n.slocid=a.slocid
					where b.recordstatus = 3 and h.companyid = ".$companyid." and k.fullname like '%".$customer."%' 
					and j.sloccode like '%".$sloc."%' and i.productname like '%".$product."%' 
					and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%' and d.gireturdate 
					between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
					and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')zz order by areaname";
			
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
							->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
							->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
							$line=4;
							
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Area')
					->setCellValueByColumnAndRow(1,$line,': '.$row['areaname']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')
						->setCellValueByColumnAndRow(3,$line,'Price')
						->setCellValueByColumnAndRow(4,$line,'Total')
						->setCellValueByColumnAndRow(5,$line,'Disc')
						->setCellValueByColumnAndRow(6,$line,'Netto');
				$line++;
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zg.salesareaid = ".$row['salesareaid']." and
							zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'						
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
							'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
							and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totalqty1=0;$totalnominal1=0;$totaldisc1=0;$totalnetto1=0;	
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);
					$line++;
					$sql2 = "select productname,sum(qty) as qty,sum(harga*qty)/sum(qty) as harga,sum(nominal) as nominal,sum(netto) as netto from 
								(select productname,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." and f.salesareaid = ".$row['salesareaid']." 
								and a.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
								)z group by productname
								union
								select productname,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and m.salesareaid = ".$row['salesareaid']." and d.gireturdate between 
								'". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
								and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."')z group by productname)zz 
								group by productname order by productname";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					$i=0;$totalqty=0;$totalnominal=0;$totaldisc=0;$totalnetto=0;					
								
					foreach($dataReader2 as $row2)
					{
						$i+=1;
								$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(0,$line,$i)
									->setCellValueByColumnAndRow(1,$line,$row2['productname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($row2['qty']))
									->setCellValueByColumnAndRow(3,$line,Yii::app()->format->formatCurrency ($row2['harga']/$per))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($row2['nominal']/$per))									
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency (($row2['nominal']/$per) - ($row2['netto']/$per)))
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($row2['netto']/$per));
								$line++;
								$totalqty += $row2['qty'];
								$totalnominal += $row2['nominal']/$per;
								$totaldisc += ($row2['nominal']/$per) - ($row2['netto']/$per);
								$totalnetto += $row2['netto']/$per;	
					}
					$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row1['description'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto));
								$line++;
								$totalqty1 += $totalqty;
								$totalnominal1 += $totalnominal;
								$totaldisc1 += $totaldisc;
								$totalnetto1 += $totalnetto;
				}
				$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'TOTAL AREA '.$row['areaname'])
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty1))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal1))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc1))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto1));
								$line++;
								$totalqty2 += $totalqty1;
								$totalnominal2 += $totalnominal1;
								$totaldisc2 += $totaldisc1;
								$totalnetto2 += $totalnetto1;
								$line += 1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
									->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL')
									->setCellValueByColumnAndRow(2,$line,Yii::app()->format->formatCurrency ($totalqty2))
									->setCellValueByColumnAndRow(4,$line,Yii::app()->format->formatCurrency ($totalnominal2))				
									->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($totaldisc2))				
									->setCellValueByColumnAndRow(6,$line,Yii::app()->format->formatCurrency ($totalnetto2));
								$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//37
	public function RincianSalesOrderPerDokumenXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rinciansalesorderperdokumen';
		parent::actionDownxls();
		$sql = "select a.soheaderid,a.sodate,a.sono,b.fullname as customer,d.fullname as sales,g.slocid,a.headernote,
						c.paydays
						from soheader a
						join addressbook b on b.addressbookid = a.addressbookid
						join paymentmethod c on c.paymentmethodid = a.paymentmethodid
						join employee d on d.employeeid = a.employeeid
						join salesarea e on e.salesareaid = b.salesareaid
						join sodetail f on f.soheaderid = a.soheaderid
						join sloc g on g.slocid = f.slocid
						where a.recordstatus = 6 and b.fullname like '%".$customer."%' and a.companyid = ".$companyid." and 
						d.fullname like '%".$employee."%' and e.areaname like '%".$salesarea."%' and 
						a.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
						'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and f.productid in 
						(select x.productid 
						from productplant x 
						join product xx on xx.productid = x.productid 
						join sloc xa on xa.slocid = x.slocid
						where xx.productname like '%".$product."%' and 
						xa.sloccode like '%".$sloc."%') group by soheaderid";	
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
					->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
					->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
			$line=4;
			
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No. SO')
						->setCellValueByColumnAndRow(1,$line,': '.$row['sono'])								
						->setCellValueByColumnAndRow(4,$line,'Tgl. SO')
						->setCellValueByColumnAndRow(5,$line,': '.$row['sodate']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Sales')
						->setCellValueByColumnAndRow(1,$line,': '.$row['sales'])							
						->setCellValueByColumnAndRow(4,$line,'T.O.P')
						->setCellValueByColumnAndRow(5,$line,': '.$row['paydays']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Customer')
						->setCellValueByColumnAndRow(1,$line,': '.$row['customer']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Qty')				
						->setCellValueByColumnAndRow(3,$line,'Satuan')
						->setCellValueByColumnAndRow(4,$line,'Harga')
						->setCellValueByColumnAndRow(5,$line,'Jumlah');
				$line++;
				
				$sql1 = "select b.productname, a.qty,c.uomcode,a.price,(qty * price) + (e.taxvalue * qty * price / 100) as jumlah,
						gettotalamountdiscso(a.soheaderid) as amountafterdisc
						from sodetail a 
						inner join product b on b.productid = a.productid
						inner join unitofmeasure c on c.unitofmeasureid = a.unitofmeasureid
						left join currency d on d.currencyid = a.currencyid
						left join soheader f on f.soheaderid = a.soheaderid 
						left join tax e on e.taxid = f.taxid
						where b.productname like '%".$product."%' and a.soheaderid = '".$row['soheaderid']."'";
				
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$i=0;$totalqty=0;$total=0;$disc=0;
				
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row1['productname'])
							->setCellValueByColumnAndRow(2,$line,$row1['qty'])							
							->setCellValueByColumnAndRow(3,$line,$row1['uomcode'])
							->setCellValueByColumnAndRow(4,$line,$row1['price']/$per)
							->setCellValueByColumnAndRow(5,$line,$row1['jumlah']/$per);
					$line++;
					
					$totalqty += $row1['qty'];
					$total += $row1['jumlah']/$per;
					$disc = ($row1['amountafterdisc']/$per) - $total;
				}
				$this->phpExcel->setActiveSheetIndex(0)														
						->setCellValueByColumnAndRow(1,$line,'Total')
						->setCellValueByColumnAndRow(2,$line,$totalqty)						
						->setCellValueByColumnAndRow(5,$line,$total);
				$line++;
											
				$this->phpExcel->setActiveSheetIndex(0)														
						->setCellValueByColumnAndRow(4,$line,'Disc')
						->setCellValueByColumnAndRow(5,$line,$disc);
				$line++;	
				
				$this->phpExcel->setActiveSheetIndex(0)														
						->setCellValueByColumnAndRow(4,$line,'Netto')
						->setCellValueByColumnAndRow(5,$line,$row1['amountafterdisc']/$per);				
				$line+=2;
				
			}
		
		$this->getFooterXLS($this->phpExcel);
	}
	//38
	public function RincianSalesOrderOutstandingXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rinciansalesorderoutstanding';
		parent::actionDownxls();
		$sql = "select a.soheaderid,a.sodate,a.sono,b.fullname as customer,d.fullname as sales,g.slocid,a.headernote,
							c.paydays
							from soheader a
							join addressbook b on b.addressbookid = a.addressbookid
							join paymentmethod c on c.paymentmethodid = a.paymentmethodid
							join employee d on d.employeeid = a.employeeid
							join salesarea e on e.salesareaid = b.salesareaid
							join sodetail f on f.soheaderid = a.soheaderid
							join sloc g on g.slocid = f.slocid
							where a.recordstatus > 2 and f.qty > f.giqty and a.companyid = ".$companyid." and 
							d.fullname like '%".$employee."%' and b.fullname like '%".$customer."%' and e.areaname like '%".$salesarea."%' and 
							a.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' and 
							'".date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
							and f.productid in 
							(select x.productid 
							from sodetail x 
							join product xx on xx.productid = x.productid 
							join sloc xa on xa.slocid = x.slocid
							where xx.productname like '%".$product."%' and x.giqty < x.qty and xx.isstock = 1 and 
							xa.sloccode like '%".$sloc."%') group by soheaderid";	
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
			$line=4;
			
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No. SO')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sono'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'')
				->setCellValueByColumnAndRow(5,$line,'Tgl. SO')
				->setCellValueByColumnAndRow(6,$line,': '.$row['sodate']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Sales')
				->setCellValueByColumnAndRow(1,$line,': '.$row['sales'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'')
				->setCellValueByColumnAndRow(5,$line,'T.O.P')
				->setCellValueByColumnAndRow(6,$line,': '.$row['paydays']);
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Customer')
				->setCellValueByColumnAndRow(1,$line,': '.$row['customer'])
				->setCellValueByColumnAndRow(2,$line,'')
				->setCellValueByColumnAndRow(3,$line,'')
				->setCellValueByColumnAndRow(4,$line,'')
				->setCellValueByColumnAndRow(5,$line,'')
				->setCellValueByColumnAndRow(6,$line,'');
				$line++;
				
				$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'Nama Barang')
				->setCellValueByColumnAndRow(2,$line,'Qty')
				->setCellValueByColumnAndRow(3,$line,'Qty Gi')
				->setCellValueByColumnAndRow(4,$line,'Satuan')
				->setCellValueByColumnAndRow(5,$line,'Harga')
				->setCellValueByColumnAndRow(6,$line,'Jumlah');
				$line++;
				$sql1 = "select productname, giqty, qty, price, uomcode, jumlah, amountafterdisc from (select b.productname, a.qty, a.giqty, c.uomcode,a.price,(qty * price) + (e.taxvalue * qty * price / 100) as jumlah, a.qty-ifnull(a.giqty,0) as sisa, gettotalamountdiscso(a.soheaderid) as amountafterdisc
										from sodetail a 
										inner join product b on b.productid = a.productid
										inner join unitofmeasure c on c.unitofmeasureid = a.unitofmeasureid
										left join currency d on d.currencyid = a.currencyid
										left join soheader f on f.soheaderid = a.soheaderid 
										left join tax e on e.taxid = f.taxid
										join product g on g.productid = a.productid
										where b.productname like '%".$product."%' and g.isstock = 1 and a.soheaderid = '".$row['soheaderid']."') z 
										where sisa > 0";
				
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$total = 0;$i=0;$totalqty=0;$totalgiqty=0;
				
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row1['productname'])
							->setCellValueByColumnAndRow(2,$line,$row1['qty'])
							->setCellValueByColumnAndRow(3,$line,$row1['giqty'])
							->setCellValueByColumnAndRow(4,$line,$row1['uomcode'])
							->setCellValueByColumnAndRow(5,$line,$row1['price']/$per)
							->setCellValueByColumnAndRow(6,$line,$row1['jumlah']/$per);
							$line++;
					$totalqty += $row1['qty'];
					$totalgiqty += $row1['giqty'];
					$total += $row1['jumlah']/$per;
					$disc = ($row1['amountafterdisc']/$per) - $total;
				}
				$this->phpExcel->setActiveSheetIndex(0)														
											->setCellValueByColumnAndRow(1,$line,'Total')
											->setCellValueByColumnAndRow(2,$line,$totalqty)
											->setCellValueByColumnAndRow(3,$line,$totalgiqty)
											->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($total));
											$line++;
											
				$this->phpExcel->setActiveSheetIndex(0)														
											->setCellValueByColumnAndRow(4,$line,'Disc')
											->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($disc));
											$line++;							
				$this->phpExcel->setActiveSheetIndex(0)														
											->setCellValueByColumnAndRow(4,$line,'Netto')
											->setCellValueByColumnAndRow(5,$line,Yii::app()->format->formatCurrency ($row1['amountafterdisc']/$per));
											$line++;	
											$line+= 1;
			}
			
			
		$this->getFooterXLS($this->phpExcel);
	}
	//39
	public function RekapSuratJalanBelumDibuatkanFakturXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapsuratjalanbelumdibuatkanfaktur';
		parent::actionDownxls();
		$sql = "select a.gino,a.gidate,c.fullname as customer,d.fullname as sales,a.headernote
                        from giheader a
                        join soheader b on b.soheaderid = a.soheaderid
                        join addressbook c on c.addressbookid = b.addressbookid
                        join employee d on d.employeeid = b.employeeid
                        join salesarea e on e.salesareaid = c.salesareaid
                        join gidetail f on f.giheaderid = a.giheaderid
                        join sloc g on g.slocid = f.slocid
                        join product h on h.productid = f.productid
                        where a.giheaderid not in
                        (select t.giheaderid from invoice t)
                        and a.gino is not null
                        and b.companyid = ".$companyid." and g.sloccode like '%".$sloc."%' and c.fullname like '%".$customer."%' and
                         d.fullname like '%".$employee."%' and e.areaname like '%".$salesarea."%' and h.productname like '%".$product."%' and
                         a.gidate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
			and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."' group by gino,customer,sales order by gino";
		
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			$i=0;
			foreach($dataReader as $row)
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
			$line=4;
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No')
				->setCellValueByColumnAndRow(1,$line,'No. Bukti')
				->setCellValueByColumnAndRow(2,$line,'Tanggal')
				->setCellValueByColumnAndRow(3,$line,'Customer')
				->setCellValueByColumnAndRow(4,$line,'Sales')
				->setCellValueByColumnAndRow(5,$line,'Keterangan');
				$line++;
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row['gino'])
							->setCellValueByColumnAndRow(2,$line,$row['gidate'])
							->setCellValueByColumnAndRow(3,$line,$row['customer'])
							->setCellValueByColumnAndRow(4,$line,$row['sales'])
							->setCellValueByColumnAndRow(5,$line,$row['headernote']);
							$line++;
			}
		
		$this->getFooterXLS($this->phpExcel);
	}
	//40
	public function RekapPenjualanPerCustomerPerBulanPerTahunXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanpercustomerperbulanpertahun';
		parent::actionDownxls();
		$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
		$sql = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
          join employee f on f.employeeid=aaa.employeeid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null order by fullname asc) zz
					where zz.jumlah <> 0";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;
			
		foreach($dataReader as $row)
		{
			$i=$i+1;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$row['januari']/$per)
				->setCellValueByColumnAndRow(3,$line,$row['februari']/$per)
				->setCellValueByColumnAndRow(4,$line,$row['maret']/$per)
				->setCellValueByColumnAndRow(5,$line,$row['april']/$per)
				->setCellValueByColumnAndRow(6,$line,$row['mei']/$per)
				->setCellValueByColumnAndRow(7,$line,$row['juni']/$per)
				->setCellValueByColumnAndRow(8,$line,$row['juli']/$per)
				->setCellValueByColumnAndRow(9,$line,$row['agustus']/$per)
				->setCellValueByColumnAndRow(10,$line,$row['september']/$per)
				->setCellValueByColumnAndRow(11,$line,$row['oktober']/$per)
				->setCellValueByColumnAndRow(12,$line,$row['nopember']/$per)
				->setCellValueByColumnAndRow(13,$line,$row['desember']/$per)
				->setCellValueByColumnAndRow(14,$line,$row['jumlah']/$per);
			$line++;
			
			$totaljanuari += $row['januari']/$per;
			$totalfebruari += $row['februari']/$per;
			$totalmaret += $row['maret']/$per;
			$totalapril += $row['april']/$per;
			$totalmei += $row['mei']/$per;
			$totaljuni += $row['juni']/$per;
			$totaljuli += $row['juli']/$per;
			$totalagustus += $row['agustus']/$per;
			$totalseptember += $row['september']/$per;
			$totaloktober += $row['oktober']/$per;
			$totalnopember += $row['nopember']/$per;
			$totaldesember += $row['desember']/$per;
			$totaljumlah += $row['jumlah']/$per;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari)
			->setCellValueByColumnAndRow(4,$line,$totalmaret)
			->setCellValueByColumnAndRow(5,$line,$totalapril)
			->setCellValueByColumnAndRow(6,$line,$totalmei)
			->setCellValueByColumnAndRow(7,$line,$totaljuni)
			->setCellValueByColumnAndRow(8,$line,$totaljuli)
			->setCellValueByColumnAndRow(9,$line,$totalagustus)
			->setCellValueByColumnAndRow(10,$line,$totalseptember)
			->setCellValueByColumnAndRow(11,$line,$totaloktober)
			->setCellValueByColumnAndRow(12,$line,$totalnopember)
			->setCellValueByColumnAndRow(13,$line,$totaldesember)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah);
		$line+=2;
		
			
		$this->getFooterXLS($this->phpExcel);
	}
	//41
	public function RekapReturPenjualanPerCustomerPerBulanPerTahunXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbulanpertahun';
		parent::actionDownxls();
		$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
		$sql = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null order by fullname asc) zz
				where zz.jumlah <> 0";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;
			
		foreach($dataReader as $row)
		{
			$i=$i+1;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$row['januari']/$per)
				->setCellValueByColumnAndRow(3,$line,$row['februari']/$per)
				->setCellValueByColumnAndRow(4,$line,$row['maret']/$per)
				->setCellValueByColumnAndRow(5,$line,$row['april']/$per)
				->setCellValueByColumnAndRow(6,$line,$row['mei']/$per)
				->setCellValueByColumnAndRow(7,$line,$row['juni']/$per)
				->setCellValueByColumnAndRow(8,$line,$row['juli']/$per)
				->setCellValueByColumnAndRow(9,$line,$row['agustus']/$per)
				->setCellValueByColumnAndRow(10,$line,$row['september']/$per)
				->setCellValueByColumnAndRow(11,$line,$row['oktober']/$per)
				->setCellValueByColumnAndRow(12,$line,$row['nopember']/$per)
				->setCellValueByColumnAndRow(13,$line,$row['desember']/$per)
				->setCellValueByColumnAndRow(14,$line,$row['jumlah']/$per);
			$line++;
			
			$totaljanuari += $row['januari']/$per;
			$totalfebruari += $row['februari']/$per;
			$totalmaret += $row['maret']/$per;
			$totalapril += $row['april']/$per;
			$totalmei += $row['mei']/$per;
			$totaljuni += $row['juni']/$per;
			$totaljuli += $row['juli']/$per;
			$totalagustus += $row['agustus']/$per;
			$totalseptember += $row['september']/$per;
			$totaloktober += $row['oktober']/$per;
			$totalnopember += $row['nopember']/$per;
			$totaldesember += $row['desember']/$per;
			$totaljumlah += $row['jumlah']/$per;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari)
			->setCellValueByColumnAndRow(4,$line,$totalmaret)
			->setCellValueByColumnAndRow(5,$line,$totalapril)
			->setCellValueByColumnAndRow(6,$line,$totalmei)
			->setCellValueByColumnAndRow(7,$line,$totaljuni)
			->setCellValueByColumnAndRow(8,$line,$totaljuli)
			->setCellValueByColumnAndRow(9,$line,$totalagustus)
			->setCellValueByColumnAndRow(10,$line,$totalseptember)
			->setCellValueByColumnAndRow(11,$line,$totaloktober)
			->setCellValueByColumnAndRow(12,$line,$totalnopember)
			->setCellValueByColumnAndRow(13,$line,$totaldesember)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah);
		$line+=2;
		
			
		$this->getFooterXLS($this->phpExcel);
	}
	//42
	public function RekapPenjualanReturPenjualanPerCustomerPerBulanPerTahunXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpenjualanpercustomerperbulanpertahun';
		parent::actionDownxls();
		$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
		$sql = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
        join employee f on f.employeeid=aaa.employeeid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
        join employee f on f.employeeid=e.employeeid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and f.fullname like '%".$employee."%' and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null order by fullname asc) zz
				where zz.jumlah <> 0";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;
			
		foreach($dataReader as $row)
		{
			$i=$i+1;
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$i)
				->setCellValueByColumnAndRow(1,$line,$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$row['januari']/$per)
				->setCellValueByColumnAndRow(3,$line,$row['februari']/$per)
				->setCellValueByColumnAndRow(4,$line,$row['maret']/$per)
				->setCellValueByColumnAndRow(5,$line,$row['april']/$per)
				->setCellValueByColumnAndRow(6,$line,$row['mei']/$per)
				->setCellValueByColumnAndRow(7,$line,$row['juni']/$per)
				->setCellValueByColumnAndRow(8,$line,$row['juli']/$per)
				->setCellValueByColumnAndRow(9,$line,$row['agustus']/$per)
				->setCellValueByColumnAndRow(10,$line,$row['september']/$per)
				->setCellValueByColumnAndRow(11,$line,$row['oktober']/$per)
				->setCellValueByColumnAndRow(12,$line,$row['nopember']/$per)
				->setCellValueByColumnAndRow(13,$line,$row['desember']/$per)
				->setCellValueByColumnAndRow(14,$line,$row['jumlah']/$per);
			$line++;
			
			$totaljanuari += $row['januari']/$per;
			$totalfebruari += $row['februari']/$per;
			$totalmaret += $row['maret']/$per;
			$totalapril += $row['april']/$per;
			$totalmei += $row['mei']/$per;
			$totaljuni += $row['juni']/$per;
			$totaljuli += $row['juli']/$per;
			$totalagustus += $row['agustus']/$per;
			$totalseptember += $row['september']/$per;
			$totaloktober += $row['oktober']/$per;
			$totalnopember += $row['nopember']/$per;
			$totaldesember += $row['desember']/$per;
			$totaljumlah += $row['jumlah']/$per;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari)
			->setCellValueByColumnAndRow(4,$line,$totalmaret)
			->setCellValueByColumnAndRow(5,$line,$totalapril)
			->setCellValueByColumnAndRow(6,$line,$totalmei)
			->setCellValueByColumnAndRow(7,$line,$totaljuni)
			->setCellValueByColumnAndRow(8,$line,$totaljuli)
			->setCellValueByColumnAndRow(9,$line,$totalagustus)
			->setCellValueByColumnAndRow(10,$line,$totalseptember)
			->setCellValueByColumnAndRow(11,$line,$totaloktober)
			->setCellValueByColumnAndRow(12,$line,$totalnopember)
			->setCellValueByColumnAndRow(13,$line,$totaldesember)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah);
		$line+=2;
		
			
		$this->getFooterXLS($this->phpExcel);
	}
	//43
	public function RekapPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownxls();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					join salesarea d on d.salesareaid=a.salesareaid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'JENIS CUSTOMER')
				->setCellValueByColumnAndRow(2,$line,': '.$row['jenis']);
			$line++;
			$sql1 = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					join addressaccount za on za.addressbookid=z.addressbookid
					join salesarea zb on zb.salesareaid=z.salesareaid
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
					and za.recordstatus =1 and za.companyid=".$companyid." and zb.areaname like '%".$salesarea."%'
					and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
					where zz.jumlah <> 0"; 
			
			$command1=$this->connection->createCommand($sql1);
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$dataReader1=$command1->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No.')
				->setCellValueByColumnAndRow(1,$line,'Customer')
				->setCellValueByColumnAndRow(2,$line,'Januari')
				->setCellValueByColumnAndRow(3,$line,'Februari')
				->setCellValueByColumnAndRow(4,$line,'Maret')
				->setCellValueByColumnAndRow(5,$line,'April')
				->setCellValueByColumnAndRow(6,$line,'Mei')
				->setCellValueByColumnAndRow(7,$line,'Juni')
				->setCellValueByColumnAndRow(8,$line,'Juli')
				->setCellValueByColumnAndRow(9,$line,'Agustus')
				->setCellValueByColumnAndRow(10,$line,'September')
				->setCellValueByColumnAndRow(11,$line,'Oktober')
				->setCellValueByColumnAndRow(12,$line,'Nopember')
				->setCellValueByColumnAndRow(13,$line,'Desember')
				->setCellValueByColumnAndRow(14,$line,'Total');
				$line++;
			
			foreach($dataReader1 as $row1)
			{
				$i=$i+1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['fullname'])
					->setCellValueByColumnAndRow(2,$line,$row1['januari']/$per)
					->setCellValueByColumnAndRow(3,$line,$row1['februari']/$per)
					->setCellValueByColumnAndRow(4,$line,$row1['maret']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['april']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['mei']/$per)
					->setCellValueByColumnAndRow(7,$line,$row1['juni']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['juli']/$per)
					->setCellValueByColumnAndRow(9,$line,$row1['agustus']/$per)
					->setCellValueByColumnAndRow(10,$line,$row1['september']/$per)
					->setCellValueByColumnAndRow(11,$line,$row1['oktober']/$per)
					->setCellValueByColumnAndRow(12,$line,$row1['nopember']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['desember']/$per)
					->setCellValueByColumnAndRow(14,$line,$row1['jumlah']/$per);
				$line++;
				
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line+=2;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//44
	public function RekapReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownxls();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'JENIS CUSTOMER')
				->setCellValueByColumnAndRow(2,$line,': '.$row['jenis']);
			$line++;
			$sql1 = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
			$command1=$this->connection->createCommand($sql1);
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$dataReader1=$command1->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No.')
				->setCellValueByColumnAndRow(1,$line,'Customer')
				->setCellValueByColumnAndRow(2,$line,'Januari')
				->setCellValueByColumnAndRow(3,$line,'Februari')
				->setCellValueByColumnAndRow(4,$line,'Maret')
				->setCellValueByColumnAndRow(5,$line,'April')
				->setCellValueByColumnAndRow(6,$line,'Mei')
				->setCellValueByColumnAndRow(7,$line,'Juni')
				->setCellValueByColumnAndRow(8,$line,'Juli')
				->setCellValueByColumnAndRow(9,$line,'Agustus')
				->setCellValueByColumnAndRow(10,$line,'September')
				->setCellValueByColumnAndRow(11,$line,'Oktober')
				->setCellValueByColumnAndRow(12,$line,'Nopember')
				->setCellValueByColumnAndRow(13,$line,'Desember')
				->setCellValueByColumnAndRow(14,$line,'Total');
				$line++;
			
			foreach($dataReader1 as $row1)
			{
				$i=$i+1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['fullname'])
					->setCellValueByColumnAndRow(2,$line,$row1['januari']/$per)
					->setCellValueByColumnAndRow(3,$line,$row1['februari']/$per)
					->setCellValueByColumnAndRow(4,$line,$row1['maret']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['april']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['mei']/$per)
					->setCellValueByColumnAndRow(7,$line,$row1['juni']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['juli']/$per)
					->setCellValueByColumnAndRow(9,$line,$row1['agustus']/$per)
					->setCellValueByColumnAndRow(10,$line,$row1['september']/$per)
					->setCellValueByColumnAndRow(11,$line,$row1['oktober']/$per)
					->setCellValueByColumnAndRow(12,$line,$row1['nopember']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['desember']/$per)
					->setCellValueByColumnAndRow(14,$line,$row1['jumlah']/$per);
				$line++;
				
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line+=2;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//45
	public function RekapPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanreturpenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownxls();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'JENIS CUSTOMER')
				->setCellValueByColumnAndRow(2,$line,': '.$row['jenis']);
			$line++;
			$sql1 = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
			$command1=$this->connection->createCommand($sql1);
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$dataReader1=$command1->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'No.')
				->setCellValueByColumnAndRow(1,$line,'Customer')
				->setCellValueByColumnAndRow(2,$line,'Januari')
				->setCellValueByColumnAndRow(3,$line,'Februari')
				->setCellValueByColumnAndRow(4,$line,'Maret')
				->setCellValueByColumnAndRow(5,$line,'April')
				->setCellValueByColumnAndRow(6,$line,'Mei')
				->setCellValueByColumnAndRow(7,$line,'Juni')
				->setCellValueByColumnAndRow(8,$line,'Juli')
				->setCellValueByColumnAndRow(9,$line,'Agustus')
				->setCellValueByColumnAndRow(10,$line,'September')
				->setCellValueByColumnAndRow(11,$line,'Oktober')
				->setCellValueByColumnAndRow(12,$line,'Nopember')
				->setCellValueByColumnAndRow(13,$line,'Desember')
				->setCellValueByColumnAndRow(14,$line,'Total');
				$line++;
			
			foreach($dataReader1 as $row1)
			{
				$i=$i+1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['fullname'])
					->setCellValueByColumnAndRow(2,$line,$row1['januari']/$per)
					->setCellValueByColumnAndRow(3,$line,$row1['februari']/$per)
					->setCellValueByColumnAndRow(4,$line,$row1['maret']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['april']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['mei']/$per)
					->setCellValueByColumnAndRow(7,$line,$row1['juni']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['juli']/$per)
					->setCellValueByColumnAndRow(9,$line,$row1['agustus']/$per)
					->setCellValueByColumnAndRow(10,$line,$row1['september']/$per)
					->setCellValueByColumnAndRow(11,$line,$row1['oktober']/$per)
					->setCellValueByColumnAndRow(12,$line,$row1['nopember']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['desember']/$per)
					->setCellValueByColumnAndRow(14,$line,$row1['jumlah']/$per);
				$line++;
				
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'TOTAL '.$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line+=2;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//46
	public function RekapTotalPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekaptotalpenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownxls();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;		
		
		foreach($dataReader as $row)
		{
			$sql1 = "select * from
					(select z.fullname,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
					(select ifnull(sum(ifnull(a.amount,0)),0)
					from invoice a 
					join giheader aa on aa.giheaderid=a.giheaderid
					join soheader aaa on aaa.soheaderid=aa.soheaderid
					where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
					from addressbook z
					join addressaccount za on za.addressbookid=z.addressbookid
					where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
					and za.recordstatus =1 and za.companyid=".$companyid." 
					and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
					where zz.jumlah <> 0"; 
			
			$command1=$this->connection->createCommand($sql1);
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$dataReader1=$command1->queryAll();
					
			foreach($dataReader1 as $row1)
			{
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line++;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//47
	public function RekapTotalReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekaptotalreturpenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownxls();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;		
		
		foreach($dataReader as $row)
		{
			$sql1 = "select * from
				(select z.fullname,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as januari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as februari,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as maret,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as april,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as mei,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juni,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as juli,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as agustus,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as september,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as oktober,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as nopember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as desember,
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."')) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
			$command1=$this->connection->createCommand($sql1);
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$dataReader1=$command1->queryAll();
					
			foreach($dataReader1 as $row1)
			{
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line++;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//48
	public function RekapTotalPenjualanReturPenjualanPerJenisCustomerPerBulanPerTahunXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekaptotalpenjualanreturpenjualanperjeniscustomerperbulanpertahun';
		parent::actionDownxls();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct c.accountid,replace(c.accountname,'PIUTANG DAGANG ','') as jenis
					from addressbook a
					join addressaccount b on b.addressbookid=a.addressbookid
					join account c on c.accountid=b.accpiutangid
					where c.companyid=".$companyid." ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Customer')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;		
		
		foreach($dataReader as $row)
		{
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$sql1 = "select * from
				(select z.fullname,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=1 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as januari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=2 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as februari,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=3 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as maret,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=4 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as april,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=5 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as mei,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=6 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juni,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=7 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as juli,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=8 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as agustus,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=9 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as september,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=10 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as oktober,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=11 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as nopember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and month(d.gidate)=12 and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as desember,
				((select ifnull(sum(ifnull(a.amount,0)),0)
				from invoice a 
				join giheader aa on aa.giheaderid=a.giheaderid
				join soheader aaa on aaa.soheaderid=aa.soheaderid
				where a.recordstatus=3 and aaa.companyid = ".$companyid." and aaa.addressbookid=z.addressbookid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))
				-
				(select ifnull(sum(ifnull(a.qty,0)*ifnull(a.price,0)),0)
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join giretur c on c.gireturid=b.gireturid
				join giheader d on d.giheaderid=c.giheaderid
				join soheader e on e.soheaderid=d.soheaderid
				where b.recordstatus=3 and e.companyid = ".$companyid." and e.addressbookid=z.addressbookid and year(d.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($startdate))."'))) as jumlah
				from addressbook z
				join addressaccount za on za.addressbookid=z.addressbookid
				where z.recordstatus=1 and z.iscustomer=1 and z.fullname is not null 
				and za.recordstatus =1 and za.companyid=".$companyid." 
				and za.accpiutangid = ".$row['accountid']." order by fullname asc) zz
				where zz.jumlah <> 0"; 
			
			$command1=$this->connection->createCommand($sql1);			
			$dataReader1=$command1->queryAll();
					
			foreach($dataReader1 as $row1)
			{
				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$row['jenis'])
				->setCellValueByColumnAndRow(1,$line,'')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line++;
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//49
	public function RekapPenjualanPerBarangPerBulanQtyXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperbarangperbulanqty';
		parent::actionDownxls();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Nama Barang')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;		
		

		foreach($dataReader as $row)
		{		
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'MATERIAL GROUP')
			->setCellValueByColumnAndRow(1,$line,$row['description']);
				$line++;

			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$sql1 = "select *
							from (select distinct v.productname,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as januari,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as februari,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as maret,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as april,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as mei,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juni,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juli,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as agustus,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as september,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as oktober,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as nopember,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
							and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as desember,
							ifnull((select sum(a.qty) 
							from gidetail a 
							join giheader aa on aa.giheaderid = a.giheaderid
							join soheader aaa on aaa.soheaderid=aa.soheaderid
							where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as jumlah
							from productplant z
							join product v on v.productid = z.productid
							where z.recordstatus=1
							and z.materialgroupid = ".$row['materialgroupid']." ) zz
							where januari<>0 or februari <>0 or maret <>0 or april <>0 or mei <>0 or juni <>0 or juli <>0 or
							agustus <>0 or september <>0 or oktober <>0 or nopember <>0 or desember <>0 "; 
			
			$command1=$this->connection->createCommand($sql1);			
			$dataReader1=$command1->queryAll();
					$no=0;
			foreach($dataReader1 as $row1)
			{
				$no=$no+1;

				$totaljanuari += $row1['januari'];
				$totalfebruari += $row1['februari'];
				$totalmaret += $row1['maret'];
				$totalapril += $row1['april'];
				$totalmei += $row1['mei'];
				$totaljuni += $row1['juni'];
				$totaljuli += $row1['juli'];
				$totalagustus += $row1['agustus'];
				$totalseptember += $row1['september'];
				$totaloktober += $row1['oktober'];
				$totalnopember += $row1['nopember'];
				$totaldesember += $row1['desember'];
				$totaljumlah += $row1['jumlah'];


$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$no)
				->setCellValueByColumnAndRow(1,$line,$row1['productname'])
				->setCellValueByColumnAndRow(2,$line,$row1['januari'])
				->setCellValueByColumnAndRow(3,$line,$row1['februari'])
				->setCellValueByColumnAndRow(4,$line,$row1['maret'])
				->setCellValueByColumnAndRow(5,$line,$row1['april'])
				->setCellValueByColumnAndRow(6,$line,$row1['mei'])
				->setCellValueByColumnAndRow(7,$line,$row1['juni'])
				->setCellValueByColumnAndRow(8,$line,$row1['juli'])
				->setCellValueByColumnAndRow(9,$line,$row1['agustus'])
				->setCellValueByColumnAndRow(10,$line,$row1['september'])
				->setCellValueByColumnAndRow(11,$line,$row1['oktober'])
				->setCellValueByColumnAndRow(12,$line,$row1['nopember'])
				->setCellValueByColumnAndRow(13,$line,$row1['desember'])
				->setCellValueByColumnAndRow(14,$line,$row1['jumlah']);
			$line++;
			

			}

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Total :')
				->setCellValueByColumnAndRow(1,$line,$row['description'])
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line++;
			
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}	
	//50
	public function RekapPenjualanPerBarangPerBulanNilaiXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperbarangperbulannilai';
		parent::actionDownxls();
		$i=0;$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Nama Barang')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Total');
		$line++;		
		

		foreach($dataReader as $row)
		{		
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'MATERIAL GROUP')
			->setCellValueByColumnAndRow(1,$line,$row['description']);
				$line++;

			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
			$sql1 = "select *
							from (select distinct v.productname,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=1 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as januari,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=2 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as februari,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=3 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as maret,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=4 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as april,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=5 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as mei,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=6 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as juni,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=7 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as juli,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=8 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as agustus,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=9 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as september,
							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=10 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as oktober,

							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=11 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as nopember,

							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=12 
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as desember,

							ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
							from gidetail a
							left join giheader b on b.giheaderid=a.giheaderid
							left join invoice c on c.giheaderid=a.giheaderid
							left join soheader d on d.soheaderid=b.soheaderid
							left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
							where d.companyid = ".$companyid." and c.recordstatus=3  
							and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
							group by a.productid),0) as jumlah
							
							from productplant z
							join product v on v.productid = z.productid
							where z.recordstatus=1 and z.materialgroupid = ".$row['materialgroupid'].") zz 
							where januari<>0 or februari<>0 or maret<>0 or april<>0 or mei<>0 or juni<>0 or juli<>0 or agustus<>0 
							or september<>0 or oktober<>0 or nopember<>0 "; 
			
			$command1=$this->connection->createCommand($sql1);			
			$dataReader1=$command1->queryAll();
					$no=0;
			foreach($dataReader1 as $row1)
			{
				$no=$no+1;

				$totaljanuari += $row1['januari']/$per;
				$totalfebruari += $row1['februari']/$per;
				$totalmaret += $row1['maret']/$per;
				$totalapril += $row1['april']/$per;
				$totalmei += $row1['mei']/$per;
				$totaljuni += $row1['juni']/$per;
				$totaljuli += $row1['juli']/$per;
				$totalagustus += $row1['agustus']/$per;
				$totalseptember += $row1['september']/$per;
				$totaloktober += $row1['oktober']/$per;
				$totalnopember += $row1['nopember']/$per;
				$totaldesember += $row1['desember']/$per;
				$totaljumlah += $row1['jumlah']/$per;


$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$no)
				->setCellValueByColumnAndRow(1,$line,$row1['productname'])
				->setCellValueByColumnAndRow(2,$line,$row1['januari']/$per)
				->setCellValueByColumnAndRow(3,$line,$row1['februari']/$per)
				->setCellValueByColumnAndRow(4,$line,$row1['maret']/$per)
				->setCellValueByColumnAndRow(5,$line,$row1['april']/$per)
				->setCellValueByColumnAndRow(6,$line,$row1['mei']/$per)
				->setCellValueByColumnAndRow(7,$line,$row1['juni']/$per)
				->setCellValueByColumnAndRow(8,$line,$row1['juli']/$per)
				->setCellValueByColumnAndRow(9,$line,$row1['agustus']/$per)
				->setCellValueByColumnAndRow(10,$line,$row1['september']/$per)
				->setCellValueByColumnAndRow(11,$line,$row1['oktober']/$per)
				->setCellValueByColumnAndRow(12,$line,$row1['nopember']/$per)
				->setCellValueByColumnAndRow(13,$line,$row1['desember']/$per)
				->setCellValueByColumnAndRow(14,$line,$row1['jumlah']/$per);
			$line++;
			

			}

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Total :')
				->setCellValueByColumnAndRow(1,$line,$row['description'])
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line++;
			
			
			$totaljanuari1 += $totaljanuari;
			$totalfebruari1 += $totalfebruari;
			$totalmaret1 += $totalmaret;
			$totalapril1 += $totalapril;
			$totalmei1 += $totalmei;
			$totaljuni1 += $totaljuni;
			$totaljuli1 += $totaljuli;
			$totalagustus1 += $totalagustus;
			$totalseptember1 += $totalseptember;
			$totaloktober1 += $totaloktober;
			$totalnopember1 += $totalnopember;
			$totaldesember1 += $totaldesember;
			$totaljumlah1 += $totaljumlah;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
			->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
			->setCellValueByColumnAndRow(4,$line,$totalmaret1)
			->setCellValueByColumnAndRow(5,$line,$totalapril1)
			->setCellValueByColumnAndRow(6,$line,$totalmei1)
			->setCellValueByColumnAndRow(7,$line,$totaljuni1)
			->setCellValueByColumnAndRow(8,$line,$totaljuli1)
			->setCellValueByColumnAndRow(9,$line,$totalagustus1)
			->setCellValueByColumnAndRow(10,$line,$totalseptember1)
			->setCellValueByColumnAndRow(11,$line,$totaloktober1)
			->setCellValueByColumnAndRow(12,$line,$totalnopember1)
			->setCellValueByColumnAndRow(13,$line,$totaldesember1)
			->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//51
	public function RekapPenjualanPerBarangPerBulanQtydanNilaiXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekappenjualanperbarangperbulanqtydannilai';
		parent::actionDownxls();
		$i=0;$totaljanuariqty1=0;$totaljanuarinil1=0;$totalfebruariqty1=0;$totalfebruarinil1=0;$totalmaretqty1=0;$totalmaretnil1=0;$totalaprilqty1=0;$totalaprilnil1=0;$totalmeiqty1=0;$totalmeinil1=0;$totaljuniqty1=0;$totaljuninil1=0;$totaljuliqty1=0;$totaljulinil1=0;$totalagustusqty1=0;$totalagustusnil1=0;$totalseptemberqty1=0;$totalseptembernil1=0;$totaloktoberqty1=0;$totaloktobernil1=0;$totalnopemberqty1=0;$totalnopembernil1=0;$totaldesemberqty1=0;$totaldesembernil1=0;$totaljumlahqty1=0;$totaljumlahnil1=0;
		$sql = "select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
						from soheader za 
						join giheader zb on zb.soheaderid = za.soheaderid
						join gidetail zc on zc.giheaderid = zb.giheaderid
						join sodetail zs on zs.sodetailid = zc.sodetailid
						left join employee zd on zd.employeeid = za.employeeid
						join product ze on ze.productid = zs.productid
						left join addressbook zf on zf.addressbookid = za.addressbookid
						left join salesarea zg on zg.salesareaid = zf.salesareaid
						join sloc zh on zh.slocid = zc.slocid
						join invoice zi on zi.giheaderid = zc.giheaderid
						join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
						join materialgroup zk on zk.materialgroupid=zj.materialgroupid
						where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
						zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
						zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and
						zi.invoicedate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '".date(Yii::app()->params['datetodb'], strtotime($enddate))."'
						order by description ";
					
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(6,1,GetCompanyCode($companyid));
		$line=4;
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Nama Barang')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(4,$line,'Februari')
			->setCellValueByColumnAndRow(6,$line,'Maret')
			->setCellValueByColumnAndRow(8,$line,'April')
			->setCellValueByColumnAndRow(10,$line,'Mei')
			->setCellValueByColumnAndRow(12,$line,'Juni')
			->setCellValueByColumnAndRow(14,$line,'Juli')
			->setCellValueByColumnAndRow(16,$line,'Agustus')
			->setCellValueByColumnAndRow(18,$line,'September')
			->setCellValueByColumnAndRow(20,$line,'Oktober')
			->setCellValueByColumnAndRow(22,$line,'November')
			->setCellValueByColumnAndRow(24,$line,'Desember')
			->setCellValueByColumnAndRow(26,$line,'Total');
		$line++;
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,'Qty')
			->setCellValueByColumnAndRow(3,$line,'Nilai')
			->setCellValueByColumnAndRow(4,$line,'Qty')
			->setCellValueByColumnAndRow(5,$line,'Nilai')
			->setCellValueByColumnAndRow(6,$line,'Qty')
			->setCellValueByColumnAndRow(7,$line,'Nilai')
			->setCellValueByColumnAndRow(8,$line,'Qty')
			->setCellValueByColumnAndRow(9,$line,'Nilai')
			->setCellValueByColumnAndRow(10,$line,'Qty')
			->setCellValueByColumnAndRow(11,$line,'Nilai')
			->setCellValueByColumnAndRow(12,$line,'Qty')
			->setCellValueByColumnAndRow(13,$line,'Nilai')
			->setCellValueByColumnAndRow(14,$line,'Qty')
			->setCellValueByColumnAndRow(15,$line,'Nilai')
			->setCellValueByColumnAndRow(16,$line,'Qty')
			->setCellValueByColumnAndRow(17,$line,'Nilai')
			->setCellValueByColumnAndRow(18,$line,'Qty')
			->setCellValueByColumnAndRow(19,$line,'Nilai')
			->setCellValueByColumnAndRow(20,$line,'Qty')
			->setCellValueByColumnAndRow(21,$line,'Nilai')
			->setCellValueByColumnAndRow(22,$line,'Qty')
			->setCellValueByColumnAndRow(23,$line,'Nilai')
			->setCellValueByColumnAndRow(24,$line,'Qty')
			->setCellValueByColumnAndRow(25,$line,'Nilai')
			->setCellValueByColumnAndRow(26,$line,'Total Qty')
			->setCellValueByColumnAndRow(27,$line,'Total Nilai');
			
		$line++;			
		

		foreach($dataReader as $row)
		{		
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'MATERIAL GROUP')
			->setCellValueByColumnAndRow(1,$line,$row['description']);
				$line++;

			$i=0;$totaljanuariqty=0;$totaljanuarinil=0;$totalfebruariqty=0;$totalfebruarinil=0;$totalmaretqty=0;$totalmaretnil=0;$totalaprilqty=0;$totalaprilnil=0;$totalmeiqty=0;$totalmeinil=0;$totaljuniqty=0;$totaljuninil=0;$totaljuliqty=0;$totaljulinil=0;$totalagustusqty=0;$totalagustusnil=0;$totalseptemberqty=0;$totalseptembernil=0; $totaloktoberqty=0;$totaloktobernil=0;$totalnopemberqty=0;$totalnopembernil=0;$totaldesemberqty=0;$totaldesembernil=0;$totaljumlahqty=0;$totaljumlahnil=0;
			$sql1 = "select *
from (select distinct v.productname,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=1 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as januariqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=1 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as januarinil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=2 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as februariqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=2 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as februarinil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=3 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as maretqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=3 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as maretnil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=4 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as aprilqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=4 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as aprilnil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=5 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as meiqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=5 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as meinil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=6 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juniqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=6 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as juninil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=7 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as juliqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=7 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as julinil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=8 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as agustusqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=8 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as agustusnil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=9 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as septemberqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=9 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as septembernil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=10 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as oktoberqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=10 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as oktobernil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=11 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as nopemberqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=11 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as nopembernil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid
and month(aa.gidate)=12 and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as desemberqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and month(c.invoicedate)=12 
and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."' and a.productid=v.productid 
group by a.productid),0) as desembernil,
ifnull((select sum(a.qty) 
from gidetail a 
join giheader aa on aa.giheaderid = a.giheaderid
join soheader aaa on aaa.soheaderid=aa.soheaderid
where aaa.companyid = ".$companyid." and aa.recordstatus=3 and a.productid=v.productid and year(aa.gidate)=year('". date(Yii::app()->params['datetodb'], strtotime($enddate))."')),0) as jumlahqty,
ifnull((select sum(getamountdiscso(d.soheaderid,e.sodetailid,a.qty))
from gidetail a 
left join giheader b on b.giheaderid=a.giheaderid
left join invoice c on c.giheaderid=a.giheaderid
left join soheader d on d.soheaderid=b.soheaderid
left join sodetail e on e.sodetailid=a.sodetailid and e.soheaderid=d.soheaderid
where d.companyid = ".$companyid." and c.recordstatus=3 and year(c.invoicedate)='". date(Yii::app()->params['datetodb'], strtotime($enddate))."'
and a.productid=v.productid group by a.productid),0) as jumlahnil	
from productplant z
join product v on v.productid = z.productid
where z.recordstatus=1 and v.productname like '%".$product."%'
and z.materialgroupid = ".$row['materialgroupid']." ) zz
where januarinil<>0 or januariqty  or februariqty <>0 or februarinil <>0 or maretqty <>0 or maretnil <>0 or aprilqty <>0  or aprilnil <>0 or meiqty <>0 or meinil <>0 or juniqty <>0 or juninil <>0 or juliqty <>0 or julinil <>0 or
agustusqty <>0 or agustusnil <>0 or septemberqty <>0 or septemberqty <>0 or  oktoberqty <>0 or oktobernil <>0 or nopemberqty <>0 or nopembernil <>0 or desemberqty <>0 or desembernil <>0"; 
			
			$command1=$this->connection->createCommand($sql1);			
			$dataReader1=$command1->queryAll();
					$no=0;
			foreach($dataReader1 as $row1)
			{
				$no=$no+1;

					$totaljanuariqty += $row1['januariqty'];
					$totaljanuarinil += $row1['januarinil'];
					$totalfebruariqty += $row1['februariqty'];
					$totalfebruarinil += $row1['februarinil'];
					$totalmaretqty += $row1['maretqty'];
					$totalmaretnil += $row1['maretnil'];
					$totalaprilqty += $row1['aprilqty'];
					$totalaprilnil += $row1['aprilnil'];
					$totalmeiqty += $row1['meiqty'];
					$totalmeinil += $row1['meinil'];
					$totaljuniqty += $row1['juniqty'];
					$totaljuninil += $row1['juninil'];
					$totaljuliqty += $row1['juliqty'];
					$totaljulinil += $row1['julinil'];
					$totalagustusqty += $row1['agustusqty'];
					$totalagustusnil += $row1['agustusnil'];
					$totalseptemberqty += $row1['septemberqty'];
					$totalseptembernil += $row1['septembernil'];
					$totaloktoberqty += $row1['oktoberqty'];
					$totaloktobernil += $row1['oktobernil'];
					$totalnopemberqty += $row1['nopemberqty'];
					$totalnopembernil += $row1['nopembernil'];
					$totaldesemberqty += $row1['desemberqty'];
					$totaldesembernil += $row1['desembernil'];
					$totaljumlahqty += $row1['jumlahqty'];
					$totaljumlahnil += $row1['jumlahnil'];


$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,$no)
				->setCellValueByColumnAndRow(1,$line,$row1['productname'])
				->setCellValueByColumnAndRow(2,$line,$row1['januariqty'])
				->setCellValueByColumnAndRow(3,$line,$row1['januarinil'])
				->setCellValueByColumnAndRow(4,$line,$row1['februariqty'])
				->setCellValueByColumnAndRow(5,$line,$row1['februarinil'])
				->setCellValueByColumnAndRow(6,$line,$row1['maretqty'])
				->setCellValueByColumnAndRow(7,$line,$row1['maretnil'])
				->setCellValueByColumnAndRow(8,$line,$row1['aprilqty'])
				->setCellValueByColumnAndRow(9,$line,$row1['aprilnil'])
				->setCellValueByColumnAndRow(10,$line,$row1['meiqty'])
				->setCellValueByColumnAndRow(11,$line,$row1['meinil'])
				->setCellValueByColumnAndRow(12,$line,$row1['juniqty'])
				->setCellValueByColumnAndRow(13,$line,$row1['juninil'])
				->setCellValueByColumnAndRow(14,$line,$row1['juliqty'])
				->setCellValueByColumnAndRow(15,$line,$row1['julinil'])
				->setCellValueByColumnAndRow(16,$line,$row1['agustusqty'])
				->setCellValueByColumnAndRow(17,$line,$row1['agustusnil'])
				->setCellValueByColumnAndRow(18,$line,$row1['septemberqty'])
				->setCellValueByColumnAndRow(19,$line,$row1['septembernil'])
				->setCellValueByColumnAndRow(20,$line,$row1['oktoberqty'])
				->setCellValueByColumnAndRow(21,$line,$row1['oktobernil'])
				->setCellValueByColumnAndRow(22,$line,$row1['nopemberqty'])
				->setCellValueByColumnAndRow(23,$line,$row1['nopembernil'])
				->setCellValueByColumnAndRow(24,$line,$row1['desemberqty'])
				->setCellValueByColumnAndRow(25,$line,$row1['desembernil'])
				->setCellValueByColumnAndRow(26,$line,$row1['jumlahqty'])
				->setCellValueByColumnAndRow(27,$line,$row1['jumlahnil']);
			$line++;
			

			}

			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'Total :')
				->setCellValueByColumnAndRow(1,$line,$row['description'])
				->setCellValueByColumnAndRow(2,$line,$totaljanuariqty)
				->setCellValueByColumnAndRow(3,$line,$totaljanuarinil)
				->setCellValueByColumnAndRow(4,$line,$totalfebruariqty)
				->setCellValueByColumnAndRow(5,$line,$totalfebruarinil)
				->setCellValueByColumnAndRow(6,$line,$totalmaretqty)
				->setCellValueByColumnAndRow(7,$line,$totalmaretnil)
				->setCellValueByColumnAndRow(8,$line,$totalaprilqty)
				->setCellValueByColumnAndRow(9,$line,$totalaprilnil)
				->setCellValueByColumnAndRow(10,$line,$totalmeiqty)
				->setCellValueByColumnAndRow(11,$line,$totalmeinil)
				->setCellValueByColumnAndRow(12,$line,$totaljuniqty)
				->setCellValueByColumnAndRow(13,$line,$totaljuninil)
				->setCellValueByColumnAndRow(14,$line,$totaljuliqty)
				->setCellValueByColumnAndRow(15,$line,$totaljulinil)
				->setCellValueByColumnAndRow(16,$line,$totalagustusqty)
				->setCellValueByColumnAndRow(17,$line,$totalagustusnil)
				->setCellValueByColumnAndRow(18,$line,$totalseptemberqty)
				->setCellValueByColumnAndRow(19,$line,$totalseptembernil)
				->setCellValueByColumnAndRow(20,$line,$totaloktoberqty)
				->setCellValueByColumnAndRow(21,$line,$totaloktobernil)
				->setCellValueByColumnAndRow(22,$line,$totalnopemberqty)
				->setCellValueByColumnAndRow(23,$line,$totalnopembernil)
				->setCellValueByColumnAndRow(24,$line,$totaldesemberqty)
				->setCellValueByColumnAndRow(25,$line,$totaldesembernil)
				->setCellValueByColumnAndRow(26,$line,$totaljumlahqty)
				->setCellValueByColumnAndRow(27,$line,$totaljumlahnil);
			$line++;
			
			
			$totaljanuariqty1 += $totaljanuariqty;
			$totaljanuarinil1 += $totaljanuarinil;
			$totalfebruariqty1 += $totalfebruariqty;
			$totalfebruarinil1 += $totalfebruarinil;
			$totalmaretqty1 += $totalmaretqty;
			$totalmaretnil1 += $totalmaretnil;
			$totalaprilqty1 += $totalaprilqty;
			$totalaprilnil1 += $totalaprilnil;
			$totalmeiqty1 += $totalmeiqty;
			$totalmeinil1 += $totalmeinil;
			$totaljuniqty1 += $totaljuniqty;
			$totaljuninil1 += $totaljuninil;
			$totaljuliqty1 += $totaljuliqty;
			$totaljulinil1 += $totaljulinil;
			$totalagustusqty1 += $totalagustusqty;
			$totalagustusnil1 += $totalagustusnil;
			$totalseptemberqty1 += $totalseptemberqty;
			$totalseptembernil1 += $totalseptembernil;
			$totaloktoberqty1 += $totaloktoberqty;
			$totaloktobernil1 += $totaloktobernil;
			$totalnopemberqty1 += $totalnopemberqty;
			$totalnopembernil1 += $totalnopembernil;
			$totaldesemberqty1 += $totaldesemberqty;
			$totaldesembernil1 += $totaldesembernil;
			$totaljumlahqty1 += $totaljumlahqty;
			$totaljumlahnil1 += $totaljumlahnil;
		}
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'GRAND TOTAL ')
			->setCellValueByColumnAndRow(1,$line,'')
			->setCellValueByColumnAndRow(2,$line,$totaljanuariqty1)
			->setCellValueByColumnAndRow(3,$line,$totaljanuarinil1)
			->setCellValueByColumnAndRow(4,$line,$totalfebruariqty1)
			->setCellValueByColumnAndRow(5,$line,$totalfebruarinil1)
			->setCellValueByColumnAndRow(6,$line,$totalmaretqty1)
			->setCellValueByColumnAndRow(7,$line,$totalmaretnil1)
			->setCellValueByColumnAndRow(8,$line,$totalaprilqty1)
			->setCellValueByColumnAndRow(9,$line,$totalaprilnil1)
			->setCellValueByColumnAndRow(10,$line,$totalmeiqty1)
			->setCellValueByColumnAndRow(11,$line,$totalmeinil1)
			->setCellValueByColumnAndRow(12,$line,$totaljuniqty1)
			->setCellValueByColumnAndRow(13,$line,$totaljuninil1)
			->setCellValueByColumnAndRow(14,$line,$totaljuliqty1)
			->setCellValueByColumnAndRow(15,$line,$totaljulinil1)
			->setCellValueByColumnAndRow(16,$line,$totalagustusqty1)
			->setCellValueByColumnAndRow(17,$line,$totalagustusnil1)
			->setCellValueByColumnAndRow(18,$line,$totalseptemberqty1)
			->setCellValueByColumnAndRow(19,$line,$totalseptembernil1)
			->setCellValueByColumnAndRow(20,$line,$totaloktoberqty1)
			->setCellValueByColumnAndRow(21,$line,$totaloktobernil1)
			->setCellValueByColumnAndRow(22,$line,$totalnopemberqty1)
			->setCellValueByColumnAndRow(23,$line,$totalnopembernil1)
			->setCellValueByColumnAndRow(24,$line,$totaldesemberqty1)
			->setCellValueByColumnAndRow(25,$line,$totaldesembernil1)
			->setCellValueByColumnAndRow(26,$line,$totaljumlahqty1)
			->setCellValueByColumnAndRow(27,$line,$totaljumlahnil1);
		
		$this->getFooterXLS($this->phpExcel);
	}
	//52
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalNilaiXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangperbulanpertahuntotalnilai';
		parent::actionDownxls();
		$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;
		$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	            join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(14,1,GetCompanyCode($companyid));
		$line=4;				
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Material Group')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Jumlah');
		$line++;
		
		$sql1 = "select * from (select xxx.description as barang,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as januari,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as februari,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as maret,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as april,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as mei,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juni,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juli,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as agustus,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as september,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 10 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as oktober,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as nopember,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 12 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as desember,
					ifnull((select sum(netto) as netto from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as jumlah
							from materialgroup xxx) xxxx where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <>0 
							or juli <>0 or agustus <> 0 or september <>0 or oktober <> 0 or nopember <> 0 or desember <> 0";
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;
			$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
			foreach($dataReader1 as $row1)
			{
				$i=$i+1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['barang'])
					->setCellValueByColumnAndRow(2,$line,$row1['januari']/$per)
					->setCellValueByColumnAndRow(3,$line,$row1['februari']/$per)
					->setCellValueByColumnAndRow(4,$line,$row1['maret']/$per)
					->setCellValueByColumnAndRow(5,$line,$row1['april']/$per)
					->setCellValueByColumnAndRow(6,$line,$row1['mei']/$per)
					->setCellValueByColumnAndRow(7,$line,$row1['juni']/$per)
					->setCellValueByColumnAndRow(8,$line,$row1['juli']/$per)
					->setCellValueByColumnAndRow(9,$line,$row1['agustus']/$per)
					->setCellValueByColumnAndRow(10,$line,$row1['september']/$per)
					->setCellValueByColumnAndRow(11,$line,$row1['oktober']/$per)
					->setCellValueByColumnAndRow(12,$line,$row1['nopember']/$per)
					->setCellValueByColumnAndRow(13,$line,$row1['desember']/$per)
					->setCellValueByColumnAndRow(14,$line,$row1['jumlah']/$per);
				$line++;
				
				$totaljanuari += $row1['januari']/$per;
		    $totalfebruari += $row1['februari']/$per;
		    $totalmaret += $row1['maret']/$per;
		    $totalapril += $row1['april']/$per;
		    $totalmei += $row1['mei']/$per;
		    $totaljuni += $row1['juni']/$per;
		    $totaljuli += $row1['juli']/$per;
		    $totalagustus += $row1['agustus']/$per;
		    $totalseptember += $row1['september']/$per;
		    $totaloktober += $row1['oktober']/$per;
		    $totalnopember += $row1['nopember']/$per;
		    $totaldesember += $row1['desember']/$per;
		    $totaljumlah += $row1['jumlah']/$per;
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line+=2;
			
			$totaljanuari1 += $totaljanuari;
	    $totalfebruari1 += $totalfebruari;
	    $totalmaret1 += $totalmaret;
	    $totalapril1 += $totalapril;
	    $totalmei1 += $totalmei;
	    $totaljuni1 += $totaljuni;
	    $totaljuli1 += $totaljuli;
	    $totalagustus1 += $totalagustus;
	    $totalseptember1 += $totalseptember;
	    $totaloktober1 += $totaloktober;
	    $totalnopember1 += $totalnopember;
	    $totaldesember1 += $totaldesember;
	    $totaljumlah1 += $totaljumlah;
		
		}
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
				->setCellValueByColumnAndRow(4,$line,$totalmaret1)
				->setCellValueByColumnAndRow(5,$line,$totalapril1)
				->setCellValueByColumnAndRow(6,$line,$totalmei1)
				->setCellValueByColumnAndRow(7,$line,$totaljuni1)
				->setCellValueByColumnAndRow(8,$line,$totaljuli1)
				->setCellValueByColumnAndRow(9,$line,$totalagustus1)
				->setCellValueByColumnAndRow(10,$line,$totalseptember1)
				->setCellValueByColumnAndRow(11,$line,$totaloktober1)
				->setCellValueByColumnAndRow(12,$line,$totalnopember1)
				->setCellValueByColumnAndRow(13,$line,$totaldesember1)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
			$line+=2;
		
		
		
		$this->getFooterXLS($this->phpExcel);
	}
    //53
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianNilaiXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangperbulanpertahunrinciannilai';
		parent::actionDownxls();
		$totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	            join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
					->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
					->setCellValueByColumnAndRow(14,1,GetCompanyCode($companyid));
			$line=4;
			
			
			
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Customer')
						->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);				
				$line++;
				
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')					
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				
				$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;			$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
				
				
				
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Material Group')
						->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);				
					$line++;
					
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,'No.')
							->setCellValueByColumnAndRow(1,$line,'Material Group')
							->setCellValueByColumnAndRow(2,$line,'Januari')
							->setCellValueByColumnAndRow(3,$line,'Februari')
							->setCellValueByColumnAndRow(4,$line,'Maret')
							->setCellValueByColumnAndRow(5,$line,'April')
							->setCellValueByColumnAndRow(6,$line,'Mei')
							->setCellValueByColumnAndRow(7,$line,'Juni')
							->setCellValueByColumnAndRow(8,$line,'Juli')
							->setCellValueByColumnAndRow(9,$line,'Agustus')
							->setCellValueByColumnAndRow(10,$line,'September')
							->setCellValueByColumnAndRow(11,$line,'Oktober')
							->setCellValueByColumnAndRow(12,$line,'November')
							->setCellValueByColumnAndRow(13,$line,'Desember')
							->setCellValueByColumnAndRow(14,$line,'Jumlah');
					$line++;
					
					$sql2 = "select *
								from (select o.productname,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 1
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 1
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as januari,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 2
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 2
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as februari,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 3
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 3
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as maret,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 4
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 4
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as april,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 5
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 5
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as mei,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 6
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 6
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juni,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 7
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 7
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juli,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 8
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 8
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as agustus,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 9
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 9
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as september,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 10
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 10
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as oktober,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 11
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 11
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as nopember,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 12
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 12
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as desember,
							ifnull((select sum(netto) as netto from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']."
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']."
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as jumlah
								from product o 
								order by productname) zzz
								where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
								";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();					
					$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;			$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;					
					
					$i=0;
					foreach($dataReader2 as $row2)
					{
						$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,$i+=1)
								->setCellValueByColumnAndRow(1,$line,$row2['productname'])
								->setCellValueByColumnAndRow(2,$line,$row2['januari']/$per)
								->setCellValueByColumnAndRow(3,$line,$row2['februari']/$per)
								->setCellValueByColumnAndRow(4,$line,$row2['maret']/$per)
								->setCellValueByColumnAndRow(5,$line,$row2['april']/$per)
								->setCellValueByColumnAndRow(6,$line,$row2['mei']/$per)
								->setCellValueByColumnAndRow(7,$line,$row2['juni']/$per)
								->setCellValueByColumnAndRow(8,$line,$row2['juli']/$per)
								->setCellValueByColumnAndRow(9,$line,$row2['agustus']/$per)
								->setCellValueByColumnAndRow(10,$line,$row2['september']/$per)
								->setCellValueByColumnAndRow(11,$line,$row2['oktober']/$per)
								->setCellValueByColumnAndRow(12,$line,$row2['nopember']/$per)
								->setCellValueByColumnAndRow(13,$line,$row2['desember']/$per)
								->setCellValueByColumnAndRow(14,$line,$row2['jumlah']/$per) ;
						$line++;
						
						$totaljanuari += $row2['januari']/$per;
						$totalfebruari += $row2['februari']/$per;
						$totalmaret += $row2['maret']/$per;
						$totalapril += $row2['april']/$per;
						$totalmei += $row2['mei']/$per;
						$totaljuni += $row2['juni']/$per;
						$totaljuli += $row2['juli']/$per;
						$totalagustus += $row2['agustus']/$per;
						$totalseptember += $row2['september']/$per;
						$totaloktober += $row2['oktober']/$per;
						$totalnopember += $row2['nopember']/$per;
						$totaldesember += $row2['desember']/$per;
						$totaljumlah += $row2['jumlah']/$per;
					}
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,$line,'JUMLAH '.$row1['description'])
							->setCellValueByColumnAndRow(2,$line,$totaljanuari)
							->setCellValueByColumnAndRow(3,$line,$totalfebruari)
							->setCellValueByColumnAndRow(4,$line,$totalmaret)
							->setCellValueByColumnAndRow(5,$line,$totalapril)
							->setCellValueByColumnAndRow(6,$line,$totalmei)
							->setCellValueByColumnAndRow(7,$line,$totaljuni)
							->setCellValueByColumnAndRow(8,$line,$totaljuli)
							->setCellValueByColumnAndRow(9,$line,$totalagustus)
							->setCellValueByColumnAndRow(10,$line,$totalseptember)
							->setCellValueByColumnAndRow(11,$line,$totaloktober)
							->setCellValueByColumnAndRow(12,$line,$totalnopember)
							->setCellValueByColumnAndRow(13,$line,$totaldesember)
							->setCellValueByColumnAndRow(14,$line,$totaljumlah) ;
						$line+=2;
						
						$totaljanuari1 += $totaljanuari;
						$totalfebruari1 += $totalfebruari;
						$totalmaret1 += $totalmaret;
						$totalapril1 += $totalapril;
						$totalmei1 += $totalmei;
						$totaljuni1 += $totaljuni;
						$totaljuli1 += $totaljuli;
						$totalagustus1 += $totalagustus;
						$totalseptember1 += $totalseptember;
						$totaloktober1 += $totaloktober;
						$totalnopember1 += $totalnopember;
						$totaldesember1 += $totaldesember;
						$totaljumlah1 += $totaljumlah;
					
				}
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'])
						->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
						->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
						->setCellValueByColumnAndRow(4,$line,$totalmaret1)
						->setCellValueByColumnAndRow(5,$line,$totalapril1)
						->setCellValueByColumnAndRow(6,$line,$totalmei1)
						->setCellValueByColumnAndRow(7,$line,$totaljuni1)
						->setCellValueByColumnAndRow(8,$line,$totaljuli1)
						->setCellValueByColumnAndRow(9,$line,$totalagustus1)
						->setCellValueByColumnAndRow(10,$line,$totalseptember1)
						->setCellValueByColumnAndRow(11,$line,$totaloktober1)
						->setCellValueByColumnAndRow(12,$line,$totalnopember1)
						->setCellValueByColumnAndRow(13,$line,$totaldesember1)
						->setCellValueByColumnAndRow(14,$line,$totaljumlah1) ;
				$line++;
				
				$totaljanuari2 += $totaljanuari1;
				$totalfebruari2 += $totalfebruari1;
				$totalmaret2 += $totalmaret1;
				$totalapril2 += $totalapril1;
				$totalmei2 += $totalmei1;
				$totaljuni2 += $totaljuni1;
				$totaljuli2 += $totaljuli1;
				$totalagustus2 += $totalagustus1;
				$totalseptember2 += $totalseptember1;
				$totaloktober2 += $totaloktober1;
				$totalnopember2 += $totalnopember1;
				$totaldesember2 += $totaldesember1;
				$totaljumlah2 += $totaljumlah1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
					->setCellValueByColumnAndRow(2,$line,$totaljanuari2)
					->setCellValueByColumnAndRow(3,$line,$totalfebruari2)
					->setCellValueByColumnAndRow(4,$line,$totalmaret2)
					->setCellValueByColumnAndRow(5,$line,$totalapril2)
					->setCellValueByColumnAndRow(6,$line,$totalmei2)
					->setCellValueByColumnAndRow(7,$line,$totaljuni2)
					->setCellValueByColumnAndRow(8,$line,$totaljuli2)
					->setCellValueByColumnAndRow(9,$line,$totalagustus2)
					->setCellValueByColumnAndRow(10,$line,$totalseptember2)
					->setCellValueByColumnAndRow(11,$line,$totaloktober2)
					->setCellValueByColumnAndRow(12,$line,$totalnopember2)
					->setCellValueByColumnAndRow(13,$line,$totaldesember2)
					->setCellValueByColumnAndRow(14,$line,$totaljumlah2) ;
				$line++;		
		
		$this->getFooterXLS($this->phpExcel);
	}
	//54
	public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunTotalQtyXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangperbulanpertahuntotalqty';
		parent::actionDownxls();
		$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;
		$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	            join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();
		
		$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
			->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
			->setCellValueByColumnAndRow(14,1,GetCompanyCode($companyid));
		$line=4;				
		
		foreach($dataReader as $row)
		{
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer')
					->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);
			$line++;
				
			$this->phpExcel->setActiveSheetIndex(0)
			->setCellValueByColumnAndRow(0,$line,'No.')
			->setCellValueByColumnAndRow(1,$line,'Material Group')
			->setCellValueByColumnAndRow(2,$line,'Januari')
			->setCellValueByColumnAndRow(3,$line,'Februari')
			->setCellValueByColumnAndRow(4,$line,'Maret')
			->setCellValueByColumnAndRow(5,$line,'April')
			->setCellValueByColumnAndRow(6,$line,'Mei')
			->setCellValueByColumnAndRow(7,$line,'Juni')
			->setCellValueByColumnAndRow(8,$line,'Juli')
			->setCellValueByColumnAndRow(9,$line,'Agustus')
			->setCellValueByColumnAndRow(10,$line,'September')
			->setCellValueByColumnAndRow(11,$line,'Oktober')
			->setCellValueByColumnAndRow(12,$line,'Nopember')
			->setCellValueByColumnAndRow(13,$line,'Desember')
			->setCellValueByColumnAndRow(14,$line,'Jumlah');
		$line++;
		
		$sql1 = "select * from (select xxx.description as barang,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 1 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 1
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as januari,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 2 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 2
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as februari,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 3 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 3
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as maret,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 4 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 4
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as april,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 5
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 5
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as mei,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 6 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 6
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juni,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 7 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 7
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as juli,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 8 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 8
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as agustus,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 9 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 9
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as september,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 10 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 10
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as oktober,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 11
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 11
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as nopember,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and month (a.invoicedate) = 12 
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and month(d.gireturdate) = 12
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as desember,
					ifnull((select sum(qty) as qty from
							(select materialgroupid,sum(qty) as qty,sum(nom) as nominal,sum(nett) as netto from
							(select distinct ss.gidetailid,ss.qty,l.materialgroupid,
							(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
							(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
							 from gidetail zzb 
							 join sodetail zza on zza.sodetailid = zzb.sodetailid
							 where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
							from invoice a 
							join giheader b on b.giheaderid = a.giheaderid
							join soheader c on c.soheaderid = b.soheaderid
							join addressbook d on d.addressbookid = c.addressbookid
							join employee e on e.employeeid = c.employeeid
							join salesarea f on f.salesareaid = d.salesareaid
							join sodetail g on g.soheaderid = b.soheaderid
							join gidetail ss on ss.giheaderid = b.giheaderid
							join sloc h on h.slocid = ss.slocid
							join product i on i.productid = ss.productid
							join productplant j on j.productid = i.productid and j.slocid=g.slocid
							join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
							join materialgroup l on l.materialgroupid = j.materialgroupid
							where a.recordstatus = 3 and a.invoiceno is not null and
							c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.addressbookid = ".$row['addressbookid']." and
							e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
							and a.invoiceno is not null
							and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))zz group by materialgroupid
						union
							select materialgroupid,-1*sum(qty) as qty,-1*sum(nom) as nominal,-1*sum(nett) as netto from 
							(select distinct a.notagirproid,a.qty,(a.qty*g.price) as nom,(a.qty*a.price) as nett,o.materialgroupid
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." 
							and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')) z
							group by materialgroupid) zz where zz.materialgroupid = xxx.materialgroupid group by materialgroupid),0) as jumlah
							from materialgroup xxx) xxxx where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <>0 
							or juli <>0 or agustus <> 0 or september <>0 or oktober <> 0 or nopember <> 0 or desember <> 0";
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			
			$i=0;$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;$totalagustus=0;
			$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;
				
			foreach($dataReader1 as $row1)
			{
				$i=$i+1;
				$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,$i)
					->setCellValueByColumnAndRow(1,$line,$row1['barang'])
					->setCellValueByColumnAndRow(2,$line,$row1['januari'])
					->setCellValueByColumnAndRow(3,$line,$row1['februari'])
					->setCellValueByColumnAndRow(4,$line,$row1['maret'])
					->setCellValueByColumnAndRow(5,$line,$row1['april'])
					->setCellValueByColumnAndRow(6,$line,$row1['mei'])
					->setCellValueByColumnAndRow(7,$line,$row1['juni'])
					->setCellValueByColumnAndRow(8,$line,$row1['juli'])
					->setCellValueByColumnAndRow(9,$line,$row1['agustus'])
					->setCellValueByColumnAndRow(10,$line,$row1['september'])
					->setCellValueByColumnAndRow(11,$line,$row1['oktober'])
					->setCellValueByColumnAndRow(12,$line,$row1['nopember'])
					->setCellValueByColumnAndRow(13,$line,$row1['desember'])
					->setCellValueByColumnAndRow(14,$line,$row1['jumlah']);
				$line++;
				
				$totaljanuari += $row1['januari'];
		    $totalfebruari += $row1['februari'];
		    $totalmaret += $row1['maret'];
		    $totalapril += $row1['april'];
		    $totalmei += $row1['mei'];
		    $totaljuni += $row1['juni'];
		    $totaljuli += $row1['juli'];
		    $totalagustus += $row1['agustus'];
		    $totalseptember += $row1['september'];
		    $totaloktober += $row1['oktober'];
		    $totalnopember += $row1['nopember'];
		    $totaldesember += $row1['desember'];
		    $totaljumlah += $row1['jumlah'];
			}
			$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'])
				->setCellValueByColumnAndRow(2,$line,$totaljanuari)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari)
				->setCellValueByColumnAndRow(4,$line,$totalmaret)
				->setCellValueByColumnAndRow(5,$line,$totalapril)
				->setCellValueByColumnAndRow(6,$line,$totalmei)
				->setCellValueByColumnAndRow(7,$line,$totaljuni)
				->setCellValueByColumnAndRow(8,$line,$totaljuli)
				->setCellValueByColumnAndRow(9,$line,$totalagustus)
				->setCellValueByColumnAndRow(10,$line,$totalseptember)
				->setCellValueByColumnAndRow(11,$line,$totaloktober)
				->setCellValueByColumnAndRow(12,$line,$totalnopember)
				->setCellValueByColumnAndRow(13,$line,$totaldesember)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah);
			$line+=2;
			
			$totaljanuari1 += $totaljanuari;
	    $totalfebruari1 += $totalfebruari;
	    $totalmaret1 += $totalmaret;
	    $totalapril1 += $totalapril;
	    $totalmei1 += $totalmei;
	    $totaljuni1 += $totaljuni;
	    $totaljuli1 += $totaljuli;
	    $totalagustus1 += $totalagustus;
	    $totalseptember1 += $totalseptember;
	    $totaloktober1 += $totaloktober;
	    $totalnopember1 += $totalnopember;
	    $totaldesember1 += $totaldesember;
	    $totaljumlah1 += $totaljumlah;
		
		}
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(0,$line,'')
				->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
				->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
				->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
				->setCellValueByColumnAndRow(4,$line,$totalmaret1)
				->setCellValueByColumnAndRow(5,$line,$totalapril1)
				->setCellValueByColumnAndRow(6,$line,$totalmei1)
				->setCellValueByColumnAndRow(7,$line,$totaljuni1)
				->setCellValueByColumnAndRow(8,$line,$totaljuli1)
				->setCellValueByColumnAndRow(9,$line,$totalagustus1)
				->setCellValueByColumnAndRow(10,$line,$totalseptember1)
				->setCellValueByColumnAndRow(11,$line,$totaloktober1)
				->setCellValueByColumnAndRow(12,$line,$totalnopember1)
				->setCellValueByColumnAndRow(13,$line,$totaldesember1)
				->setCellValueByColumnAndRow(14,$line,$totaljumlah1);
			$line+=2;
		
		
		
		$this->getFooterXLS($this->phpExcel);
	}
    //55
    public function RekapPenjualanReturPerCustomerPerBarangPerBulanPerTahunRincianQtyXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapreturpenjualanpercustomerperbarangperbulanpertahunrincianqty';
		parent::actionDownxls();
		$totaljanuari2=0;$totalfebruari2=0;$totalmaret2=0;$totalapril2=0;$totalmei2=0;$totaljuni2=0;$totaljuli2=0;$totalagustus2=0;$totalseptember2=0;$totaloktober2=0;$totalnopember2=0;$totaldesember2=0;$totaljumlah2=0;
		$sql = "select * from 
				(select distinct g.addressbookid,g.fullname
				from soheader b
				join sodetail c on c.soheaderid = b.soheaderid
				join gidetail d on d.sodetailid = c.sodetailid
				join product e on e.productid = d.productid
				join employee f on f.employeeid = b.employeeid
	            join addressbook g on g.addressbookid = b.addressbookid  
				join giheader h on h.giheaderid = d.giheaderid
				join sloc i on i.slocid = d.slocid
				join invoice j on j.giheaderid = h.giheaderid
                join salesarea k on k.salesareaid = g.salesareaid
				where j.recordstatus = 3 and b.companyid = ".$companyid." and i.sloccode like '%".$sloc."%' 
				and g.fullname like '%".$customer."%' and f.fullname like '%".$employee."%' 
				and e.productname like '%".$product."%' and	k.areaname like '%".$salesarea."%' 
				and j.invoiceno is not null and year(j.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')
				union
				select distinct k.addressbookid,k.fullname
				from notagirpro a
				join notagir b on b.notagirid=a.notagirid
				join gireturdetail c on c.gireturdetailid=a.gireturdetailid
				join giretur d on d.gireturid=b.gireturid
				join gidetail e on e.gidetailid=c.gidetailid
				join giheader f on f.giheaderid=d.giheaderid
				join sodetail g on g.sodetailid=e.sodetailid
				join soheader h on h.soheaderid=f.soheaderid
				join product i on i.productid = a.productid
				join sloc j on j.slocid = a.slocid
				join addressbook k on k.addressbookid = h.addressbookid
				join employee l on l.employeeid = h.employeeid
				join salesarea m on m.salesareaid = k.salesareaid
				where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
				and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
				and i.productname like '%".$product."%' and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by fullname";
			$command=$this->connection->createCommand($sql);
			$dataReader=$command->queryAll();
			
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
					->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
					->setCellValueByColumnAndRow(14,1,GetCompanyCode($companyid));
			$line=4;
			
			foreach($dataReader as $row)
			{
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Customer')
						->setCellValueByColumnAndRow(1,$line,': '.$row['fullname']);				
				$line++;
				
				$sql1 = "select distinct materialgroupid,materialgroupcode,description from 
							(select distinct zk.materialgroupid,zk.materialgroupcode,zk.description
							from soheader za 
							join giheader zb on zb.soheaderid = za.soheaderid
							join gidetail zc on zc.giheaderid = zb.giheaderid
							join sodetail zs on zs.sodetailid = zc.sodetailid
							left join employee zd on zd.employeeid = za.employeeid
							join product ze on ze.productid = zs.productid
							left join addressbook zf on zf.addressbookid = za.addressbookid
							left join salesarea zg on zg.salesareaid = zf.salesareaid
							join sloc zh on zh.slocid = zc.slocid
							join invoice zi on zi.giheaderid = zc.giheaderid
							join productplant zj on zj.productid=zc.productid and zj.slocid=zc.slocid
							join materialgroup zk on zk.materialgroupid=zj.materialgroupid
							where zi.recordstatus = 3 and zi.invoiceno is not null and za.companyid = ".$companyid." and
							zf.fullname like '%".$customer."%' and zd.fullname like '%".$employee."%' and ze.productname like '%".$product."%' and
							zg.areaname like '%".$salesarea."%' and zh.sloccode like '%".$sloc."%' and zf.addressbookid = ".$row['addressbookid']." and	year(zi.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."')					
							union
							select distinct o.materialgroupid,o.materialgroupcode,o.description
							from notagirpro a
							join notagir b on b.notagirid=a.notagirid
							join gireturdetail c on c.gireturdetailid=a.gireturdetailid
							join giretur d on d.gireturid=b.gireturid
							join gidetail e on e.gidetailid=c.gidetailid
							join giheader f on f.giheaderid=d.giheaderid
							join sodetail g on g.sodetailid=e.sodetailid
							join soheader h on h.soheaderid=f.soheaderid
							join product i on i.productid = a.productid
							join sloc j on j.slocid = a.slocid
							join addressbook k on k.addressbookid = h.addressbookid
							join employee l on l.employeeid = h.employeeid
							join salesarea m on m.salesareaid = k.salesareaid
							join productplant n on n.productid=a.productid and n.slocid=a.slocid
							join materialgroup o on o.materialgroupid=n.materialgroupid
							where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
							and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
							and i.productname like '%".$product."%' and k.addressbookid = ".$row['addressbookid']." and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z order by description";
				$command1=$this->connection->createCommand($sql1);
				$dataReader1=$command1->queryAll();
				$totaljanuari1=0;$totalfebruari1=0;$totalmaret1=0;$totalapril1=0;$totalmei1=0;$totaljuni1=0;$totaljuli1=0;$totalagustus1=0;$totalseptember1=0;$totaloktober1=0;$totalnopember1=0;$totaldesember1=0;$totaljumlah1=0;
		
				foreach($dataReader1 as $row1)
				{
					$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'Material Group')
						->setCellValueByColumnAndRow(1,$line,': '.$row1['description']);				
					$line++;
					
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,'No.')
							->setCellValueByColumnAndRow(1,$line,'Material Group')
							->setCellValueByColumnAndRow(2,$line,'Januari')
							->setCellValueByColumnAndRow(3,$line,'Februari')
							->setCellValueByColumnAndRow(4,$line,'Maret')
							->setCellValueByColumnAndRow(5,$line,'April')
							->setCellValueByColumnAndRow(6,$line,'Mei')
							->setCellValueByColumnAndRow(7,$line,'Juni')
							->setCellValueByColumnAndRow(8,$line,'Juli')
							->setCellValueByColumnAndRow(9,$line,'Agustus')
							->setCellValueByColumnAndRow(10,$line,'September')
							->setCellValueByColumnAndRow(11,$line,'Oktober')
							->setCellValueByColumnAndRow(12,$line,'November')
							->setCellValueByColumnAndRow(13,$line,'Desember')
							->setCellValueByColumnAndRow(14,$line,'Jumlah');
					$line++;
					
					$sql2 = "select *
								from (select o.productname,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 1
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 1
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as januari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 2
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 2
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as februari,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 3
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 3
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as maret,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 4
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 4
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as april,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 5
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 5
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as mei,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 6
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 6
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juni,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 7
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 7
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as juli,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 8
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 8
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as agustus,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 9
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 9
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as september,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 10
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 10
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as oktober,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 11
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 11
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as nopember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']." and month(a.invoicedate) = 12
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']." and month(d.gireturdate) = 12
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as desember,
							ifnull((select sum(qty) as qty from 
								(select productid,sum(qty) as qty,sum(price*qty)/sum(qty) as harga,sum(nom) as nominal,sum(nett) as netto from
								(select distinct ss.gidetailid,d.fullname,i.productid,i.productname,k.uomcode,ss.qty,
								(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid) as price,
								(ss.qty*(select xx.price from sodetail xx where xx.sodetailid=ss.sodetailid)) as nom,
								(select getamountdiscso(zza.soheaderid,zza.sodetailid,zzb.qty)
								from gidetail zzb 
								join sodetail zza on zza.sodetailid = zzb.sodetailid
								where zzb.giheaderid = b.giheaderid and zzb.productid = i.productid and zzb.gidetailid=ss.gidetailid) as nett
								from invoice a 
								join giheader b on b.giheaderid = a.giheaderid
								join soheader c on c.soheaderid = b.soheaderid
								join addressbook d on d.addressbookid = c.addressbookid
								join employee e on e.employeeid = c.employeeid
								join salesarea f on f.salesareaid = d.salesareaid
								join sodetail g on g.soheaderid = b.soheaderid
								join gidetail ss on ss.giheaderid = b.giheaderid
								join sloc h on h.slocid = ss.slocid
								join product i on i.productid = ss.productid
								join productplant j on j.productid = i.productid and j.slocid=g.slocid
								join unitofmeasure k on k.unitofmeasureid = ss.unitofmeasureid
								where a.recordstatus = 3 and a.invoiceno is not null and
								c.companyid = ".$companyid." and h.sloccode like '%".$sloc."%' and d.fullname like '%".$customer."%' and
								e.fullname like '%".$employee."%' and f.areaname like '%".$salesarea."%' and i.productname like '%".$product."%' 
								and a.invoiceno is not null and j.materialgroupid = ".$row1['materialgroupid']." 
								and d.addressbookid = ".$row['addressbookid']."
								and year(a.invoicedate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid
								union
								select productid,-1*sum(qty) as qty,-1*sum(price*qty)/sum(qty) as harga,-1*sum(nom) as nominal,-1*sum(nett) as netto from
								(select distinct a.notagirproid,i.productid,i.productname,a.qty,(a.qty*g.price) as nom,g.price,(a.qty*a.price) as nett
								from notagirpro a
								join notagir b on b.notagirid=a.notagirid
								join gireturdetail c on c.gireturdetailid=a.gireturdetailid
								join giretur d on d.gireturid=b.gireturid
								join gidetail e on e.gidetailid=c.gidetailid
								join giheader f on f.giheaderid=d.giheaderid
								join sodetail g on g.sodetailid=e.sodetailid
								join soheader h on h.soheaderid=f.soheaderid
								join product i on i.productid = a.productid
								join sloc j on j.slocid = a.slocid
								join addressbook k on k.addressbookid = h.addressbookid
								join employee l on l.employeeid = h.employeeid
								join salesarea m on m.salesareaid = k.salesareaid
								join productplant n on n.productid=a.productid and n.slocid=a.slocid
								where h.companyid = ".$companyid." and b.recordstatus = 3 and j.sloccode like '%".$sloc."%' 
								and k.fullname like '%".$customer."%' and l.fullname like '%".$employee."%' and m.areaname like '%".$salesarea."%'
								and i.productname like '%".$product."%' and n.materialgroupid = ".$row1['materialgroupid']." 
								and k.addressbookid = ".$row['addressbookid']."
								and year(d.gireturdate) = year('".date(Yii::app()->params['datetodb'], strtotime($enddate))."'))z group by productid) zz
								where zz.productid = o.productid),0) as jumlah
								from product o 
								order by productname) zzz
								where januari <> 0 or februari <> 0 or maret <> 0 or april <> 0 or mei <> 0 or juni <> 0 or juli <> 0 or agustus <> 0 or september <> 0 or oktober <> 0 or nopember <> 0 or desember <> 0
								";
					$command2=$this->connection->createCommand($sql2);
					$dataReader2=$command2->queryAll();
					
					$totaljanuari=0;$totalfebruari=0;$totalmaret=0;$totalapril=0;$totalmei=0;$totaljuni=0;$totaljuli=0;			$totalagustus=0;$totalseptember=0;$totaloktober=0;$totalnopember=0;$totaldesember=0;$totaljumlah=0;	
					
					$i=0;
					foreach($dataReader2 as $row2)
					{
						$this->phpExcel->setActiveSheetIndex(0)
								->setCellValueByColumnAndRow(0,$line,$i+=1)
								->setCellValueByColumnAndRow(1,$line,$row2['productname'])
								->setCellValueByColumnAndRow(2,$line,$row2['januari'])
								->setCellValueByColumnAndRow(3,$line,$row2['februari'])
								->setCellValueByColumnAndRow(4,$line,$row2['maret'])
								->setCellValueByColumnAndRow(5,$line,$row2['april'])
								->setCellValueByColumnAndRow(6,$line,$row2['mei'])
								->setCellValueByColumnAndRow(7,$line,$row2['juni'])
								->setCellValueByColumnAndRow(8,$line,$row2['juli'])
								->setCellValueByColumnAndRow(9,$line,$row2['agustus'])
								->setCellValueByColumnAndRow(10,$line,$row2['september'])
								->setCellValueByColumnAndRow(11,$line,$row2['oktober'])
								->setCellValueByColumnAndRow(12,$line,$row2['nopember'])
								->setCellValueByColumnAndRow(13,$line,$row2['desember'])
								->setCellValueByColumnAndRow(14,$line,$row2['jumlah']) ;
						$line++;
						
						$totaljanuari += $row2['januari'];
						$totalfebruari += $row2['februari'];
						$totalmaret += $row2['maret'];
						$totalapril += $row2['april'];
						$totalmei += $row2['mei'];
						$totaljuni += $row2['juni'];
						$totaljuli += $row2['juli'];
						$totalagustus += $row2['agustus'];
						$totalseptember += $row2['september'];
						$totaloktober += $row2['oktober'];
						$totalnopember += $row2['nopember'];
						$totaldesember += $row2['desember'];
						$totaljumlah += $row2['jumlah'];
					}
					$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(1,$line,'JUMLAH '.$row1['description'])
							->setCellValueByColumnAndRow(2,$line,$totaljanuari)
							->setCellValueByColumnAndRow(3,$line,$totalfebruari)
							->setCellValueByColumnAndRow(4,$line,$totalmaret)
							->setCellValueByColumnAndRow(5,$line,$totalapril)
							->setCellValueByColumnAndRow(6,$line,$totalmei)
							->setCellValueByColumnAndRow(7,$line,$totaljuni)
							->setCellValueByColumnAndRow(8,$line,$totaljuli)
							->setCellValueByColumnAndRow(9,$line,$totalagustus)
							->setCellValueByColumnAndRow(10,$line,$totalseptember)
							->setCellValueByColumnAndRow(11,$line,$totaloktober)
							->setCellValueByColumnAndRow(12,$line,$totalnopember)
							->setCellValueByColumnAndRow(13,$line,$totaldesember)
							->setCellValueByColumnAndRow(14,$line,$totaljumlah) ;
						$line+=2;
						
						$totaljanuari1 += $totaljanuari;
						$totalfebruari1 += $totalfebruari;
						$totalmaret1 += $totalmaret;
						$totalapril1 += $totalapril;
						$totalmei1 += $totalmei;
						$totaljuni1 += $totaljuni;
						$totaljuli1 += $totaljuli;
						$totalagustus1 += $totalagustus;
						$totalseptember1 += $totalseptember;
						$totaloktober1 += $totaloktober;
						$totalnopember1 += $totalnopember;
						$totaldesember1 += $totaldesember;
						$totaljumlah1 += $totaljumlah;
				}
				$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(1,$line,'TOTAL '.$row['fullname'])
						->setCellValueByColumnAndRow(2,$line,$totaljanuari1)
						->setCellValueByColumnAndRow(3,$line,$totalfebruari1)
						->setCellValueByColumnAndRow(4,$line,$totalmaret1)
						->setCellValueByColumnAndRow(5,$line,$totalapril1)
						->setCellValueByColumnAndRow(6,$line,$totalmei1)
						->setCellValueByColumnAndRow(7,$line,$totaljuni1)
						->setCellValueByColumnAndRow(8,$line,$totaljuli1)
						->setCellValueByColumnAndRow(9,$line,$totalagustus1)
						->setCellValueByColumnAndRow(10,$line,$totalseptember1)
						->setCellValueByColumnAndRow(11,$line,$totaloktober1)
						->setCellValueByColumnAndRow(12,$line,$totalnopember1)
						->setCellValueByColumnAndRow(13,$line,$totaldesember1)
						->setCellValueByColumnAndRow(14,$line,$totaljumlah1) ;
				$line++;
				
				$totaljanuari2 += $totaljanuari1;
				$totalfebruari2 += $totalfebruari1;
				$totalmaret2 += $totalmaret1;
				$totalapril2 += $totalapril1;
				$totalmei2 += $totalmei1;
				$totaljuni2 += $totaljuni1;
				$totaljuli2 += $totaljuli1;
				$totalagustus2 += $totalagustus1;
				$totalseptember2 += $totalseptember1;
				$totaloktober2 += $totaloktober1;
				$totalnopember2 += $totalnopember1;
				$totaldesember2 += $totaldesember1;
				$totaljumlah2 += $totaljumlah1;
			}
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(1,$line,'GRAND TOTAL ')
					->setCellValueByColumnAndRow(2,$line,$totaljanuari2)
					->setCellValueByColumnAndRow(3,$line,$totalfebruari2)
					->setCellValueByColumnAndRow(4,$line,$totalmaret2)
					->setCellValueByColumnAndRow(5,$line,$totalapril2)
					->setCellValueByColumnAndRow(6,$line,$totalmei2)
					->setCellValueByColumnAndRow(7,$line,$totaljuni2)
					->setCellValueByColumnAndRow(8,$line,$totaljuli2)
					->setCellValueByColumnAndRow(9,$line,$totalagustus2)
					->setCellValueByColumnAndRow(10,$line,$totalseptember2)
					->setCellValueByColumnAndRow(11,$line,$totaloktober2)
					->setCellValueByColumnAndRow(12,$line,$totalnopember2)
					->setCellValueByColumnAndRow(13,$line,$totaldesember2)
					->setCellValueByColumnAndRow(14,$line,$totaljumlah2) ;
			$line++;
		
		$this->getFooterXLS($this->phpExcel);
	}
	//56
	public function RekapSalesOrderOutstandingPerBarangXLS($companyid,$sloc,$customer,$employee,$product,$salesarea,$startdate,$enddate,$per)
	{
		$this->menuname='rekapsalesorderoutstandingperbarang';
		parent::actionDownxls();
		$totalqty1=0;$totalgiqty1=0;$totalsisa1=0;		
		$sql = "select distinct f.materialgroupid, f.description
						from sodetail a 
						join soheader b on b.soheaderid=a.soheaderid
						join product c on c.productid=a.productid
						join unitofmeasure d on d.unitofmeasureid=a.unitofmeasureid
						join productplant e on e.productid=a.productid and e.slocid=a.slocid
						join materialgroup f on f.materialgroupid=e.materialgroupid
						join sloc g on g.slocid=a.slocid
						join addressbook h on h.addressbookid=b.addressbookid
						join employee i on i.employeeid=b.employeeid
						join salesarea j on j.salesareaid=h.salesareaid
						where b.recordstatus = 6 and c.isstock = 1
						and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and a.qty <> a.giqty and g.sloccode like '%".$sloc."%'	and h.fullname like '%".$customer."%' 
						and i.fullname like '%".$employee."%'	and c.productname like '%".$product."%'
						and j.areaname like '%".$salesarea."%' group by productname";	
		$command=$this->connection->createCommand($sql);
		$dataReader=$command->queryAll();		
		
		$this->phpExcel->setActiveSheetIndex(0)
				->setCellValueByColumnAndRow(1,2,date(Yii::app()->params['dateviewfromdb'], strtotime($startdate)))
				->setCellValueByColumnAndRow(3,2,date(Yii::app()->params['dateviewfromdb'], strtotime($enddate)))
				->setCellValueByColumnAndRow(5,1,GetCompanyCode($companyid));
		$line=4;
		
		if ($customer == '') {$cust = 'ALL';} else {$cust = $customer;}
		
		$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Customer : ')
					->setCellValueByColumnAndRow(1,$line,$cust);
		$line++;
		foreach($dataReader as $row)
		{		
			$this->phpExcel->setActiveSheetIndex(0)
					->setCellValueByColumnAndRow(0,$line,'Material Group')
					->setCellValueByColumnAndRow(1,$line,': '.$row['description']);
			$line++;
			
			$this->phpExcel->setActiveSheetIndex(0)
						->setCellValueByColumnAndRow(0,$line,'No')
						->setCellValueByColumnAndRow(1,$line,'Nama Barang')
						->setCellValueByColumnAndRow(2,$line,'Satuan')				
						->setCellValueByColumnAndRow(3,$line,'Qty SO')
						->setCellValueByColumnAndRow(4,$line,'Qty Kirim')
						->setCellValueByColumnAndRow(5,$line,'Qty Belum Kirim');
			$line++;
			
			$sql1 = "select c.productname, d.uomcode, sum(a.qty) as qty, sum(a.giqty) as giqty, sum(a.qty-a.giqty) as sisa
						from sodetail a 
						join soheader b on b.soheaderid=a.soheaderid
						join product c on c.productid=a.productid
						join unitofmeasure d on d.unitofmeasureid=a.unitofmeasureid
						join productplant e on e.productid=a.productid and e.slocid=a.slocid
						join materialgroup f on f.materialgroupid=e.materialgroupid
						join sloc g on g.slocid=a.slocid
						join addressbook h on h.addressbookid=b.addressbookid
						join employee i on i.employeeid=b.employeeid
						join salesarea j on j.salesareaid=h.salesareaid
						where b.recordstatus = 6 and c.isstock = 1 and f.materialgroupid = '".$row['materialgroupid']."'
						and b.sodate between '". date(Yii::app()->params['datetodb'], strtotime($startdate))."' 
						and '". date(Yii::app()->params['datetodb'], strtotime($enddate))."' 
						and a.qty <> a.giqty and g.sloccode like '%".$sloc."%'	and h.fullname like '%".$customer."%' 
						and i.fullname like '%".$employee."%'	and c.productname like '%".$product."%'
						and j.areaname like '%".$salesarea."%' group by productname";
				
			$command1=$this->connection->createCommand($sql1);
			$dataReader1=$command1->queryAll();
			$i=0;$totalqty=0;$totalgiqty=0;$totalsisa=0;
			
			foreach($dataReader1 as $row1)
			{
				$this->phpExcel->setActiveSheetIndex(0)
							->setCellValueByColumnAndRow(0,$line,$i+=1)
							->setCellValueByColumnAndRow(1,$line,$row1['productname'])
							->setCellValueByColumnAndRow(2,$line,$row1['uomcode'])							
							->setCellValueByColumnAndRow(3,$line,$row1['qty'])
							->setCellValueByColumnAndRow(4,$line,$row1['giqty'])
							->setCellValueByColumnAndRow(5,$line,$row1['sisa']);
				$line++;
				
				$totalqty += $row1['qty'];
				$totalgiqty += $row1['giqty'];
				$totalsisa += $row1['sisa'];
			}
			$this->phpExcel->setActiveSheetIndex(0)		
					->setCellValueByColumnAndRow(1,$line,'Total '.$row['description'])
					->setCellValueByColumnAndRow(3,$line,$totalqty)
					->setCellValueByColumnAndRow(4,$line,$totalgiqty)						
					->setCellValueByColumnAndRow(5,$line,$totalsisa);
			$line+=2;
			
			$totalqty1 += $totalqty;
			$totalgiqty1 += $totalgiqty;
			$totalsisa1 += $totalsisa;
		}		
		$this->phpExcel->setActiveSheetIndex(0)		
					->setCellValueByColumnAndRow(1,$line,'TOTAL')
					->setCellValueByColumnAndRow(3,$line,$totalqty1)
					->setCellValueByColumnAndRow(4,$line,$totalgiqty1)						
					->setCellValueByColumnAndRow(5,$line,$totalsisa1);
		$line+=2;
		
		$this->getFooterXLS($this->phpExcel);
	}
	
}

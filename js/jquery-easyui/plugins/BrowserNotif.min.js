!function(i,t){if("function"==typeof define&&define.amd)define(["exports"],t);else if("undefined"!=typeof exports)t(exports);else{var o={exports:{}};t(o.exports),i.BrowserNotif=o.exports}}(this,function(i){"use strict";function t(i,t){if(!(i instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(i,"__esModule",{value:!0});var o=Object.assign||function(i){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var n in o)Object.prototype.hasOwnProperty.call(o,n)&&(i[n]=o[n])}return i},n=function(){function i(i,t){for(var o=0;o<t.length;o++){var n=t[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(i,n.key,n)}}return function(t,o,n){return o&&i(t.prototype,o),n&&i(t,n),t}}(),e=function(){function i(n){t(this,i),this.options={},this.notifOptions={},this.data={},this.timeout=0,this.Permission={Default:"default",Granted:"granted",Denied:"denied"},n&&o(this.options,n),this._setOptions(this.options),n.timeout&&(this.timeout=n.timeout),i.isSupported()||console.warn("This browser does not support system notifications")}return n(i,[{key:"_setOptions",value:function(i){for(var t in i)["timeout","serviceWorkerPath"].indexOf(t)==-1&&(this.notifOptions[t]=i[t])}},{key:"_registerServiceWorker",value:function(){"serviceWorker"in navigator&&navigator.serviceWorker.register(this.options.serviceWorkerPath||"sw.js").then(function(i){console.log("Service Worker is ready :",i)}).catch(function(i){return console.warn("BrowserNotif: ",i)})}},{key:"_showNotifServiceWorker",value:function(i){var t=this;"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(o){t.notifOptions.tag||(t.notifOptions.tag="browserNotif_"+Math.random().toString().substr(3,10)),Object.keys(t.data).length>0&&(t.notifOptions.data=JSON.stringify(t.data)),o.showNotification(t.title,t.notifOptions).then(function(){i.call(t)})}).catch(function(i){return console.error("BrowserNotif: ",i)})}},{key:"_getNotifServiceWorker",value:function(i){var t=this;"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(o){o.getNotifications({tag:t.notifOptions.tag}).then(function(o){o.length>0&&i.call(t,o[0])})}).catch(function(i){return console.error("BrowserNotif: ",i)})}},{key:"notify",value:function(t,o,n){var e=this;return i.isSupported()?(this._validateTitle(t),this.title=t,this.notifOptions.body=o,this.Permission.Granted===Notification.permission?this._notify(n):this.Permission.Denied!==Notification.permission?i.requestPermission(function(i){e.Permission.Granted===i&&e._notify(n)}):console.warn("User denied the notification permission"),this):(alert(t+"\n\n"+o),this)}},{key:"_validateTitle",value:function(i){if("string"!=typeof i)throw new Error("BrowserNotif: Title of notification must be a string");if(""==i.trim())throw new Error("BrowserNotif: Title of notification could not be empty")}},{key:"_notify",value:function(i){var t=this;this.isMobile()?(this._registerServiceWorker(),this._showNotifServiceWorker(function(){t._getNotifServiceWorker(function(o){t.notification=o,"function"==typeof i&&i.call(t,t.notification)})})):(this.notification instanceof Notification&&this.notification.close(),this.notification=new Notification(this.title,this.notifOptions),this._closeNotification(),"function"==typeof i&&i.call(this,this.notification))}},{key:"_closeNotification",value:function(){this.timeout>0&&this.notification instanceof Notification&&setTimeout(this.notification.close.bind(this.notification),1e3*this.timeout)}},{key:"click",value:function(i){var t=this;return"function"==typeof i&&this.notification instanceof Notification&&(this.notification.onclick=function(){t.notification.close(),i.call(t)}),this}},{key:"clickOnServiceWorker",value:function(i){return"function"==typeof i&&(this.data.clickOnServiceWorker=i.toString()),this}},{key:"close",value:function(){this.notification instanceof Notification&&this.notification.close()}},{key:"error",value:function(i){var t=this;return"function"==typeof i&&this.notification instanceof Notification&&(this.notification.onerror=function(){i.call(t)}),this}},{key:"isMobile",value:function(){var i=new RegExp("\n                                    Android|webOS|iPhone|iPad|\n                                    BlackBerry|Windows Phone|\n                                    Opera Mini|IEMobile|Mobile","i");return i.test(navigator.userAgent)}}],[{key:"isSupported",value:function(){return"Notification"in i.Win}},{key:"requestPermission",value:function(i){var t=this;Notification.requestPermission(function(o){"function"==typeof i&&i.call(t,o)})}}]),i}();i.default=e,e.Win=window});
//# sourceMappingURL=BrowserNotif.min.js.map
